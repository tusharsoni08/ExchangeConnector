/* soapStub.h
   Generated by gSOAP 2.8.23 from services.h

Copyright(C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#include <vector>
#define SOAP_NAMESPACE_OF_ews	"http://schemas.microsoft.com/exchange/services/2006/messages"
#define SOAP_NAMESPACE_OF_ns1	"http://schemas.microsoft.com/exchange/services/2006/types"
#include "stdsoap2.h"
#if GSOAP_VERSION != 20823
# error "GSOAP VERSION 20823 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_ns1__GroupMailboxConfigurationActionType
#define SOAP_TYPE_ns1__GroupMailboxConfigurationActionType (1085)
/* Bitmask ns1:GroupMailboxConfigurationActionType */
enum ns1__GroupMailboxConfigurationActionType { ns1__GroupMailboxConfigurationActionType__SetRegionalSettings = 1, ns1__GroupMailboxConfigurationActionType__CreateDefaultFolders = 2, ns1__GroupMailboxConfigurationActionType__SetInitialFolderPermissions = 4, ns1__GroupMailboxConfigurationActionType__SetAllFolderPermissions = 8, ns1__GroupMailboxConfigurationActionType__ConfigureCalendar = 16, ns1__GroupMailboxConfigurationActionType__SendWelcomeMessage = 32, ns1__GroupMailboxConfigurationActionType__GenerateGroupPhoto = 64 };
#endif

#ifndef SOAP_TYPE_ns1__InstantSearchItemType
#define SOAP_TYPE_ns1__InstantSearchItemType (1086)
/* Bitmask ns1:InstantSearchItemType */
enum ns1__InstantSearchItemType { ns1__InstantSearchItemType__None = 1, ns1__InstantSearchItemType__MailItem = 2, ns1__InstantSearchItemType__MailConversation = 4, ns1__InstantSearchItemType__CalendarItem = 8, ns1__InstantSearchItemType__Persona = 16 };
#endif

#ifndef SOAP_TYPE_ns1__InstantSearchResultType
#define SOAP_TYPE_ns1__InstantSearchResultType (1087)
/* Bitmask ns1:InstantSearchResultType */
enum ns1__InstantSearchResultType { ns1__InstantSearchResultType__None = 1, ns1__InstantSearchResultType__Suggestions = 2, ns1__InstantSearchResultType__ItemResults = 4, ns1__InstantSearchResultType__ConversationResults = 8, ns1__InstantSearchResultType__Refiners = 16, ns1__InstantSearchResultType__SearchTerms = 32, ns1__InstantSearchResultType__Errors = 64, ns1__InstantSearchResultType__QueryStatistics = 128, ns1__InstantSearchResultType__CalendarItemResults = 256, ns1__InstantSearchResultType__PersonaResults = 512, ns1__InstantSearchResultType__SuggestionsPrimer = 1024 };
#endif

#ifndef SOAP_TYPE_ns1__QueryOptionsType
#define SOAP_TYPE_ns1__QueryOptionsType (1088)
/* Bitmask ns1:QueryOptionsType */
enum ns1__QueryOptionsType { ns1__QueryOptionsType__None = 1, ns1__QueryOptionsType__Suggestions = 2, ns1__QueryOptionsType__Results = 4, ns1__QueryOptionsType__Refiners = 8, ns1__QueryOptionsType__SearchTerms = 16, ns1__QueryOptionsType__ExplicitSearch = 32, ns1__QueryOptionsType__SuggestionsPrimer = 64, ns1__QueryOptionsType__AllowFuzzing = 128 };
#endif

#ifndef SOAP_TYPE_ns1__OneDriveViewType
#define SOAP_TYPE_ns1__OneDriveViewType (1089)
/* Bitmask ns1:OneDriveViewType */
enum ns1__OneDriveViewType { ns1__OneDriveViewType__None = 1, ns1__OneDriveViewType__SharedWithMe = 2, ns1__OneDriveViewType__MyDocuments = 4, ns1__OneDriveViewType__RecycleBin = 8 };
#endif

#ifndef SOAP_TYPE_ns1__DaysOfWeekType
#define SOAP_TYPE_ns1__DaysOfWeekType (1091)
/* Bitmask ns1:DaysOfWeekType */
enum ns1__DaysOfWeekType { ns1__DaysOfWeekType__Sunday = 1, ns1__DaysOfWeekType__Monday = 2, ns1__DaysOfWeekType__Tuesday = 4, ns1__DaysOfWeekType__Wednesday = 8, ns1__DaysOfWeekType__Thursday = 16, ns1__DaysOfWeekType__Friday = 32, ns1__DaysOfWeekType__Saturday = 64, ns1__DaysOfWeekType__Day = 128, ns1__DaysOfWeekType__Weekday = 256, ns1__DaysOfWeekType__WeekendDay = 512 };
#endif

#ifndef SOAP_TYPE_ns1__FreeBusyViewType
#define SOAP_TYPE_ns1__FreeBusyViewType (1092)
/* Bitmask ns1:FreeBusyViewType */
enum ns1__FreeBusyViewType { ns1__FreeBusyViewType__None = 1, ns1__FreeBusyViewType__MergedOnly = 2, ns1__FreeBusyViewType__FreeBusy = 4, ns1__FreeBusyViewType__FreeBusyMerged = 8, ns1__FreeBusyViewType__Detailed = 16, ns1__FreeBusyViewType__DetailedMerged = 32 };
#endif

#ifndef SOAP_TYPE_ns1__MailTipTypes
#define SOAP_TYPE_ns1__MailTipTypes (1093)
/* Bitmask ns1:MailTipTypes */
enum ns1__MailTipTypes { ns1__MailTipTypes__All = 1, ns1__MailTipTypes__OutOfOfficeMessage = 2, ns1__MailTipTypes__MailboxFullStatus = 4, ns1__MailTipTypes__CustomMailTip = 8, ns1__MailTipTypes__ExternalMemberCount = 16, ns1__MailTipTypes__TotalMemberCount = 32, ns1__MailTipTypes__MaxMessageSize = 64, ns1__MailTipTypes__DeliveryRestriction = 128, ns1__MailTipTypes__ModerationStatus = 256, ns1__MailTipTypes__InvalidRecipient = 512, ns1__MailTipTypes__Scope = 1024 };
#endif

#ifndef SOAP_TYPE_ns1__ServiceConfigurationType
#define SOAP_TYPE_ns1__ServiceConfigurationType (1094)
/* Bitmask ns1:ServiceConfigurationType */
enum ns1__ServiceConfigurationType { ns1__ServiceConfigurationType__MailTips = 1, ns1__ServiceConfigurationType__UnifiedMessagingConfiguration = 2, ns1__ServiceConfigurationType__ProtectionRules = 4, ns1__ServiceConfigurationType__PolicyNudges = 8 };
#endif

#ifndef SOAP_TYPE_ns1__UserConfigurationPropertyType
#define SOAP_TYPE_ns1__UserConfigurationPropertyType (1095)
/* Bitmask ns1:UserConfigurationPropertyType */
enum ns1__UserConfigurationPropertyType { ns1__UserConfigurationPropertyType__Id = 1, ns1__UserConfigurationPropertyType__Dictionary = 2, ns1__UserConfigurationPropertyType__XmlData = 4, ns1__UserConfigurationPropertyType__BinaryData = 8, ns1__UserConfigurationPropertyType__All = 16 };
#endif

#ifndef SOAP_TYPE_ns1__WarmupOptionsType
#define SOAP_TYPE_ns1__WarmupOptionsType (1096)
/* Bitmask ns1:WarmupOptionsType */
enum ns1__WarmupOptionsType { ns1__WarmupOptionsType__None = 1, ns1__WarmupOptionsType__Suggestions = 2, ns1__WarmupOptionsType__Results = 4, ns1__WarmupOptionsType__All = 8 };
#endif

#ifndef SOAP_TYPE_ns1__ItemTypesFilterType
#define SOAP_TYPE_ns1__ItemTypesFilterType (1097)
/* Bitmask ns1:ItemTypesFilterType */
enum ns1__ItemTypesFilterType { ns1__ItemTypesFilterType__None = 1, ns1__ItemTypesFilterType__MailItems = 2, ns1__ItemTypesFilterType__MailConversations = 4, ns1__ItemTypesFilterType__CalendarItems = 8, ns1__ItemTypesFilterType__People = 16, ns1__ItemTypesFilterType__OneDriveItems = 32 };
#endif

#ifndef SOAP_TYPE_ns1__SuggestionKindType
#define SOAP_TYPE_ns1__SuggestionKindType (1098)
/* Bitmask ns1:SuggestionKindType */
enum ns1__SuggestionKindType { ns1__SuggestionKindType__None = 1, ns1__SuggestionKindType__Keywords = 2, ns1__SuggestionKindType__People = 4, ns1__SuggestionKindType__All = 8 };
#endif

#ifndef SOAP_TYPE_ns1__SearchScopeGroupsType
#define SOAP_TYPE_ns1__SearchScopeGroupsType (1099)
/* Bitmask ns1:SearchScopeGroupsType */
enum ns1__SearchScopeGroupsType { ns1__SearchScopeGroupsType__None = 1, ns1__SearchScopeGroupsType__FavoriteGroups = 2, ns1__SearchScopeGroupsType__PinnedGroups = 4, ns1__SearchScopeGroupsType__All = 8 };
#endif

#ifndef SOAP_TYPE_ews__ResponseCodeType
#define SOAP_TYPE_ews__ResponseCodeType (1100)
/* ews:ResponseCodeType */
enum ews__ResponseCodeType { ews__ResponseCodeType__NoError = 0, ews__ResponseCodeType__ErrorAccessDenied = 1, ews__ResponseCodeType__ErrorAccessModeSpecified = 2, ews__ResponseCodeType__ErrorAccountDisabled = 3, ews__ResponseCodeType__ErrorAddDelegatesFailed = 4, ews__ResponseCodeType__ErrorAddressSpaceNotFound = 5, ews__ResponseCodeType__ErrorADOperation = 6, ews__ResponseCodeType__ErrorADSessionFilter = 7, ews__ResponseCodeType__ErrorADUnavailable = 8, ews__ResponseCodeType__ErrorAutoDiscoverFailed = 9, ews__ResponseCodeType__ErrorAffectedTaskOccurrencesRequired = 10, ews__ResponseCodeType__ErrorAttachmentNestLevelLimitExceeded = 11, ews__ResponseCodeType__ErrorAttachmentSizeLimitExceeded = 12, ews__ResponseCodeType__ErrorArchiveFolderPathCreation = 13, ews__ResponseCodeType__ErrorArchiveMailboxNotEnabled = 14, ews__ResponseCodeType__ErrorArchiveMailboxServiceDiscoveryFailed = 15, ews__ResponseCodeType__ErrorAvailabilityConfigNotFound = 16, ews__ResponseCodeType__ErrorBatchProcessingStopped = 17, ews__ResponseCodeType__ErrorCalendarCannotMoveOrCopyOccurrence = 18, ews__ResponseCodeType__ErrorCalendarCannotUpdateDeletedItem = 19, ews__ResponseCodeType__ErrorCalendarCannotUseIdForOccurrenceId = 20, ews__ResponseCodeType__ErrorCalendarCannotUseIdForRecurringMasterId = 21, ews__ResponseCodeType__ErrorCalendarDurationIsTooLong = 22, ews__ResponseCodeType__ErrorCalendarEndDateIsEarlierThanStartDate = 23, ews__ResponseCodeType__ErrorCalendarFolderIsInvalidForCalendarView = 24, ews__ResponseCodeType__ErrorCalendarInvalidAttributeValue = 25, ews__ResponseCodeType__ErrorCalendarInvalidDayForTimeChangePattern = 26, ews__ResponseCodeType__ErrorCalendarInvalidDayForWeeklyRecurrence = 27, ews__ResponseCodeType__ErrorCalendarInvalidPropertyState = 28, ews__ResponseCodeType__ErrorCalendarInvalidPropertyValue = 29, ews__ResponseCodeType__ErrorCalendarInvalidRecurrence = 30, ews__ResponseCodeType__ErrorCalendarInvalidTimeZone = 31, ews__ResponseCodeType__ErrorCalendarIsCancelledForAccept = 32, ews__ResponseCodeType__ErrorCalendarIsCancelledForDecline = 33, ews__ResponseCodeType__ErrorCalendarIsCancelledForRemove = 34, ews__ResponseCodeType__ErrorCalendarIsCancelledForTentative = 35, ews__ResponseCodeType__ErrorCalendarIsDelegatedForAccept = 36, ews__ResponseCodeType__ErrorCalendarIsDelegatedForDecline = 37, ews__ResponseCodeType__ErrorCalendarIsDelegatedForRemove = 38, ews__ResponseCodeType__ErrorCalendarIsDelegatedForTentative = 39, ews__ResponseCodeType__ErrorCalendarIsNotOrganizer = 40, ews__ResponseCodeType__ErrorCalendarIsOrganizerForAccept = 41, ews__ResponseCodeType__ErrorCalendarIsOrganizerForDecline = 42, ews__ResponseCodeType__ErrorCalendarIsOrganizerForRemove = 43, ews__ResponseCodeType__ErrorCalendarIsOrganizerForTentative = 44, ews__ResponseCodeType__ErrorCalendarOccurrenceIndexIsOutOfRecurrenceRange = 45, ews__ResponseCodeType__ErrorCalendarOccurrenceIsDeletedFromRecurrence = 46, ews__ResponseCodeType__ErrorCalendarOutOfRange = 47, ews__ResponseCodeType__ErrorCalendarMeetingRequestIsOutOfDate = 48, ews__ResponseCodeType__ErrorCalendarViewRangeTooBig = 49, ews__ResponseCodeType__ErrorCallerIsInvalidADAccount = 50, ews__ResponseCodeType__ErrorCannotArchiveCalendarContactTaskFolderException = 51, ews__ResponseCodeType__ErrorCannotArchiveItemsInPublicFolders = 52, ews__ResponseCodeType__ErrorCannotArchiveItemsInArchiveMailbox = 53, ews__ResponseCodeType__ErrorCannotCreateCalendarItemInNonCalendarFolder = 54, ews__ResponseCodeType__ErrorCannotCreateContactInNonContactFolder = 55, ews__ResponseCodeType__ErrorCannotCreatePostItemInNonMailFolder = 56, ews__ResponseCodeType__ErrorCannotCreateTaskInNonTaskFolder = 57, ews__ResponseCodeType__ErrorCannotDeleteObject = 58, ews__ResponseCodeType__ErrorCannotDisableMandatoryExtension = 59, ews__ResponseCodeType__ErrorCannotGetSourceFolderPath = 60, ews__ResponseCodeType__ErrorCannotGetExternalEcpUrl = 61, ews__ResponseCodeType__ErrorCannotOpenFileAttachment = 62, ews__ResponseCodeType__ErrorCannotDeleteTaskOccurrence = 63, ews__ResponseCodeType__ErrorCannotEmptyFolder = 64, ews__ResponseCodeType__ErrorCannotSetCalendarPermissionOnNonCalendarFolder = 65, ews__ResponseCodeType__ErrorCannotSetNonCalendarPermissionOnCalendarFolder = 66, ews__ResponseCodeType__ErrorCannotSetPermissionUnknownEntries = 67, ews__ResponseCodeType__ErrorCannotSpecifySearchFolderAsSourceFolder = 68, ews__ResponseCodeType__ErrorCannotUseFolderIdForItemId = 69, ews__ResponseCodeType__ErrorCannotUseItemIdForFolderId = 70, ews__ResponseCodeType__ErrorChangeKeyRequired = 71, ews__ResponseCodeType__ErrorChangeKeyRequiredForWriteOperations = 72, ews__ResponseCodeType__ErrorChannelSubscriptionAlreadyExists = 73, ews__ResponseCodeType__ErrorChannelSubscriptionNotFound = 74, ews__ResponseCodeType__ErrorClientDisconnected = 75, ews__ResponseCodeType__ErrorClientIntentInvalidStateDefinition = 76, ews__ResponseCodeType__ErrorClientIntentNotFound = 77, ews__ResponseCodeType__ErrorConnectionFailed = 78, ews__ResponseCodeType__ErrorContainsFilterWrongType = 79, ews__ResponseCodeType__ErrorContentConversionFailed = 80, ews__ResponseCodeType__ErrorContentIndexingNotEnabled = 81, ews__ResponseCodeType__ErrorCorruptData = 82, ews__ResponseCodeType__ErrorCreateItemAccessDenied = 83, ews__ResponseCodeType__ErrorCreateManagedFolderPartialCompletion = 84, ews__ResponseCodeType__ErrorCreateSubfolderAccessDenied = 85, ews__ResponseCodeType__ErrorCrossMailboxMoveCopy = 86, ews__ResponseCodeType__ErrorCrossSiteRequest = 87, ews__ResponseCodeType__ErrorDataSizeLimitExceeded = 88, ews__ResponseCodeType__ErrorDataSourceOperation = 89, ews__ResponseCodeType__ErrorDelegateAlreadyExists = 90, ews__ResponseCodeType__ErrorDelegateCannotAddOwner = 91, ews__ResponseCodeType__ErrorDelegateMissingConfiguration = 92, ews__ResponseCodeType__ErrorDelegateNoUser = 93, ews__ResponseCodeType__ErrorDelegateValidationFailed = 94, ews__ResponseCodeType__ErrorDeleteDistinguishedFolder = 95, ews__ResponseCodeType__ErrorDeleteItemsFailed = 96, ews__ResponseCodeType__ErrorDeleteUnifiedMessagingPromptFailed = 97, ews__ResponseCodeType__ErrorDistinguishedUserNotSupported = 98, ews__ResponseCodeType__ErrorDistributionListMemberNotExist = 99, ews__ResponseCodeType__ErrorDuplicateInputFolderNames = 100, ews__ResponseCodeType__ErrorDuplicateUserIdsSpecified = 101, ews__ResponseCodeType__ErrorEmailAddressMismatch = 102, ews__ResponseCodeType__ErrorEventNotFound = 103, ews__ResponseCodeType__ErrorExceededChannelSubscriptionCount = 104, ews__ResponseCodeType__ErrorExceededConnectionCount = 105, ews__ResponseCodeType__ErrorExceededSubscriptionCount = 106, ews__ResponseCodeType__ErrorExceededFindCountLimit = 107, ews__ResponseCodeType__ErrorExpiredSubscription = 108, ews__ResponseCodeType__ErrorExtensionNotFound = 109, ews__ResponseCodeType__ErrorFolderCorrupt = 110, ews__ResponseCodeType__ErrorFolderNotFound = 111, ews__ResponseCodeType__ErrorFolderPropertRequestFailed = 112, ews__ResponseCodeType__ErrorFolderSave = 113, ews__ResponseCodeType__ErrorFolderSaveFailed = 114, ews__ResponseCodeType__ErrorFolderSavePropertyError = 115, ews__ResponseCodeType__ErrorFolderExists = 116, ews__ResponseCodeType__ErrorFreeBusyGenerationFailed = 117, ews__ResponseCodeType__ErrorGetServerSecurityDescriptorFailed = 118, ews__ResponseCodeType__ErrorImContactLimitReached = 119, ews__ResponseCodeType__ErrorImGroupDisplayNameAlreadyExists = 120, ews__ResponseCodeType__ErrorImGroupLimitReached = 121, ews__ResponseCodeType__ErrorImpersonateUserDenied = 122, ews__ResponseCodeType__ErrorImpersonationDenied = 123, ews__ResponseCodeType__ErrorImpersonationFailed = 124, ews__ResponseCodeType__ErrorIncorrectSchemaVersion = 125, ews__ResponseCodeType__ErrorIncorrectUpdatePropertyCount = 126, ews__ResponseCodeType__ErrorIndividualMailboxLimitReached = 127, ews__ResponseCodeType__ErrorInsufficientResources = 128, ews__ResponseCodeType__ErrorInternalServerError = 129, ews__ResponseCodeType__ErrorInternalServerTransientError = 130, ews__ResponseCodeType__ErrorInvalidAccessLevel = 131, ews__ResponseCodeType__ErrorInvalidArgument = 132, ews__ResponseCodeType__ErrorInvalidAttachmentId = 133, ews__ResponseCodeType__ErrorInvalidAttachmentSubfilter = 134, ews__ResponseCodeType__ErrorInvalidAttachmentSubfilterTextFilter = 135, ews__ResponseCodeType__ErrorInvalidAuthorizationContext = 136, ews__ResponseCodeType__ErrorInvalidChangeKey = 137, ews__ResponseCodeType__ErrorInvalidChannelId = 138, ews__ResponseCodeType__ErrorInvalidChannelSubscriptionId = 139, ews__ResponseCodeType__ErrorInvalidClientSecurityContext = 140, ews__ResponseCodeType__ErrorInvalidCompleteDate = 141, ews__ResponseCodeType__ErrorInvalidContactEmailAddress = 142, ews__ResponseCodeType__ErrorInvalidContactEmailIndex = 143, ews__ResponseCodeType__ErrorInvalidCrossForestCredentials = 144, ews__ResponseCodeType__ErrorInvalidDelegatePermission = 145, ews__ResponseCodeType__ErrorInvalidDelegateUserId = 146, ews__ResponseCodeType__ErrorInvalidExcludesRestriction = 147, ews__ResponseCodeType__ErrorInvalidExpressionTypeForSubFilter = 148, ews__ResponseCodeType__ErrorInvalidExtendedProperty = 149, ews__ResponseCodeType__ErrorInvalidExtendedPropertyValue = 150, ews__ResponseCodeType__ErrorInvalidFolderId = 151, ews__ResponseCodeType__ErrorInvalidFolderTypeForOperation = 152, ews__ResponseCodeType__ErrorInvalidFractionalPagingParameters = 153, ews__ResponseCodeType__ErrorInvalidFreeBusyViewType = 154, ews__ResponseCodeType__ErrorInvalidId = 155, ews__ResponseCodeType__ErrorInvalidIdEmpty = 156, ews__ResponseCodeType__ErrorInvalidIdMalformed = 157, ews__ResponseCodeType__ErrorInvalidIdMalformedEwsLegacyIdFormat = 158, ews__ResponseCodeType__ErrorInvalidIdMonikerTooLong = 159, ews__ResponseCodeType__ErrorInvalidIdNotAnItemAttachmentId = 160, ews__ResponseCodeType__ErrorInvalidIdReturnedByResolveNames = 161, ews__ResponseCodeType__ErrorInvalidIdStoreObjectIdTooLong = 162, ews__ResponseCodeType__ErrorInvalidIdTooManyAttachmentLevels = 163, ews__ResponseCodeType__ErrorInvalidIdXml = 164, ews__ResponseCodeType__ErrorInvalidImContactId = 165, ews__ResponseCodeType__ErrorInvalidImDistributionGroupSmtpAddress = 166, ews__ResponseCodeType__ErrorInvalidImGroupId = 167, ews__ResponseCodeType__ErrorInvalidIndexedPagingParameters = 168, ews__ResponseCodeType__ErrorInvalidInternetHeaderChildNodes = 169, ews__ResponseCodeType__ErrorInvalidItemForOperationArchiveItem = 170, ews__ResponseCodeType__ErrorInvalidItemForOperationCreateItemAttachment = 171, ews__ResponseCodeType__ErrorInvalidItemForOperationCreateItem = 172, ews__ResponseCodeType__ErrorInvalidItemForOperationAcceptItem = 173, ews__ResponseCodeType__ErrorInvalidItemForOperationDeclineItem = 174, ews__ResponseCodeType__ErrorInvalidItemForOperationCancelItem = 175, ews__ResponseCodeType__ErrorInvalidItemForOperationExpandDL = 176, ews__ResponseCodeType__ErrorInvalidItemForOperationRemoveItem = 177, ews__ResponseCodeType__ErrorInvalidItemForOperationSendItem = 178, ews__ResponseCodeType__ErrorInvalidItemForOperationTentative = 179, ews__ResponseCodeType__ErrorInvalidLogonType = 180, ews__ResponseCodeType__ErrorInvalidLikeRequest = 181, ews__ResponseCodeType__ErrorInvalidMailbox = 182, ews__ResponseCodeType__ErrorInvalidManagedFolderProperty = 183, ews__ResponseCodeType__ErrorInvalidManagedFolderQuota = 184, ews__ResponseCodeType__ErrorInvalidManagedFolderSize = 185, ews__ResponseCodeType__ErrorInvalidMergedFreeBusyInterval = 186, ews__ResponseCodeType__ErrorInvalidNameForNameResolution = 187, ews__ResponseCodeType__ErrorInvalidOperation = 188, ews__ResponseCodeType__ErrorInvalidNetworkServiceContext = 189, ews__ResponseCodeType__ErrorInvalidOofParameter = 190, ews__ResponseCodeType__ErrorInvalidPagingMaxRows = 191, ews__ResponseCodeType__ErrorInvalidParentFolder = 192, ews__ResponseCodeType__ErrorInvalidPercentCompleteValue = 193, ews__ResponseCodeType__ErrorInvalidPermissionSettings = 194, ews__ResponseCodeType__ErrorInvalidPhoneCallId = 195, ews__ResponseCodeType__ErrorInvalidPhoneNumber = 196, ews__ResponseCodeType__ErrorInvalidUserInfo = 197, ews__ResponseCodeType__ErrorInvalidPropertyAppend = 198, ews__ResponseCodeType__ErrorInvalidPropertyDelete = 199, ews__ResponseCodeType__ErrorInvalidPropertyForExists = 200, ews__ResponseCodeType__ErrorInvalidPropertyForOperation = 201, ews__ResponseCodeType__ErrorInvalidPropertyRequest = 202, ews__ResponseCodeType__ErrorInvalidPropertySet = 203, ews__ResponseCodeType__ErrorInvalidPropertyUpdateSentMessage = 204, ews__ResponseCodeType__ErrorInvalidProxySecurityContext = 205, ews__ResponseCodeType__ErrorInvalidPullSubscriptionId = 206, ews__ResponseCodeType__ErrorInvalidPushSubscriptionUrl = 207, ews__ResponseCodeType__ErrorInvalidRecipients = 208, ews__ResponseCodeType__ErrorInvalidRecipientSubfilter = 209, ews__ResponseCodeType__ErrorInvalidRecipientSubfilterComparison = 210, ews__ResponseCodeType__ErrorInvalidRecipientSubfilterOrder = 211, ews__ResponseCodeType__ErrorInvalidRecipientSubfilterTextFilter = 212, ews__ResponseCodeType__ErrorInvalidReferenceItem = 213, ews__ResponseCodeType__ErrorInvalidRequest = 214, ews__ResponseCodeType__ErrorInvalidRestriction = 215, ews__ResponseCodeType__ErrorInvalidRetentionTagTypeMismatch = 216, ews__ResponseCodeType__ErrorInvalidRetentionTagInvisible = 217, ews__ResponseCodeType__ErrorInvalidRetentionTagInheritance = 218, ews__ResponseCodeType__ErrorInvalidRetentionTagIdGuid = 219, ews__ResponseCodeType__ErrorInvalidRoutingType = 220, ews__ResponseCodeType__ErrorInvalidScheduledOofDuration = 221, ews__ResponseCodeType__ErrorInvalidSchemaVersionForMailboxVersion = 222, ews__ResponseCodeType__ErrorInvalidSecurityDescriptor = 223, ews__ResponseCodeType__ErrorInvalidSendItemSaveSettings = 224, ews__ResponseCodeType__ErrorInvalidSerializedAccessToken = 225, ews__ResponseCodeType__ErrorInvalidServerVersion = 226, ews__ResponseCodeType__ErrorInvalidSid = 227, ews__ResponseCodeType__ErrorInvalidSIPUri = 228, ews__ResponseCodeType__ErrorInvalidSmtpAddress = 229, ews__ResponseCodeType__ErrorInvalidSubfilterType = 230, ews__ResponseCodeType__ErrorInvalidSubfilterTypeNotAttendeeType = 231, ews__ResponseCodeType__ErrorInvalidSubfilterTypeNotRecipientType = 232, ews__ResponseCodeType__ErrorInvalidSubscription = 233, ews__ResponseCodeType__ErrorInvalidSubscriptionRequest = 234, ews__ResponseCodeType__ErrorInvalidSyncStateData = 235, ews__ResponseCodeType__ErrorInvalidTimeInterval = 236, ews__ResponseCodeType__ErrorInvalidUserOofSettings = 237, ews__ResponseCodeType__ErrorInvalidUserPrincipalName = 238, ews__ResponseCodeType__ErrorInvalidUserSid = 239, ews__ResponseCodeType__ErrorInvalidUserSidMissingUPN = 240, ews__ResponseCodeType__ErrorInvalidValueForProperty = 241, ews__ResponseCodeType__ErrorInvalidWatermark = 242, ews__ResponseCodeType__ErrorIPGatewayNotFound = 243, ews__ResponseCodeType__ErrorIrresolvableConflict = 244, ews__ResponseCodeType__ErrorItemCorrupt = 245, ews__ResponseCodeType__ErrorItemNotFound = 246, ews__ResponseCodeType__ErrorItemPropertyRequestFailed = 247, ews__ResponseCodeType__ErrorItemSave = 248, ews__ResponseCodeType__ErrorItemSavePropertyError = 249, ews__ResponseCodeType__ErrorLegacyMailboxFreeBusyViewTypeNotMerged = 250, ews__ResponseCodeType__ErrorLocalServerObjectNotFound = 251, ews__ResponseCodeType__ErrorLogonAsNetworkServiceFailed = 252, ews__ResponseCodeType__ErrorMailboxConfiguration = 253, ews__ResponseCodeType__ErrorMailboxDataArrayEmpty = 254, ews__ResponseCodeType__ErrorMailboxDataArrayTooBig = 255, ews__ResponseCodeType__ErrorMailboxHoldNotFound = 256, ews__ResponseCodeType__ErrorMailboxLogonFailed = 257, ews__ResponseCodeType__ErrorMailboxMoveInProgress = 258, ews__ResponseCodeType__ErrorMailboxStoreUnavailable = 259, ews__ResponseCodeType__ErrorMailRecipientNotFound = 260, ews__ResponseCodeType__ErrorMailTipsDisabled = 261, ews__ResponseCodeType__ErrorManagedFolderAlreadyExists = 262, ews__ResponseCodeType__ErrorManagedFolderNotFound = 263, ews__ResponseCodeType__ErrorManagedFoldersRootFailure = 264, ews__ResponseCodeType__ErrorMeetingSuggestionGenerationFailed = 265, ews__ResponseCodeType__ErrorMessageDispositionRequired = 266, ews__ResponseCodeType__ErrorMessageSizeExceeded = 267, ews__ResponseCodeType__ErrorMimeContentConversionFailed = 268, ews__ResponseCodeType__ErrorMimeContentInvalid = 269, ews__ResponseCodeType__ErrorMimeContentInvalidBase64String = 270, ews__ResponseCodeType__ErrorMissingArgument = 271, ews__ResponseCodeType__ErrorMissingEmailAddress = 272, ews__ResponseCodeType__ErrorMissingEmailAddressForManagedFolder = 273, ews__ResponseCodeType__ErrorMissingInformationEmailAddress = 274, ews__ResponseCodeType__ErrorMissingInformationReferenceItemId = 275, ews__ResponseCodeType__ErrorMissingItemForCreateItemAttachment = 276, ews__ResponseCodeType__ErrorMissingManagedFolderId = 277, ews__ResponseCodeType__ErrorMissingRecipients = 278, ews__ResponseCodeType__ErrorMissingUserIdInformation = 279, ews__ResponseCodeType__ErrorMoreThanOneAccessModeSpecified = 280, ews__ResponseCodeType__ErrorMoveCopyFailed = 281, ews__ResponseCodeType__ErrorMoveDistinguishedFolder = 282, ews__ResponseCodeType__ErrorMultiLegacyMailboxAccess = 283, ews__ResponseCodeType__ErrorNameResolutionMultipleResults = 284, ews__ResponseCodeType__ErrorNameResolutionNoMailbox = 285, ews__ResponseCodeType__ErrorNameResolutionNoResults = 286, ews__ResponseCodeType__ErrorNewChannelConnectionOpened = 287, ews__ResponseCodeType__ErrorNoApplicableProxyCASServersAvailable = 288, ews__ResponseCodeType__ErrorNoCalendar = 289, ews__ResponseCodeType__ErrorNoDestinationCASDueToKerberosRequirements = 290, ews__ResponseCodeType__ErrorNoDestinationCASDueToSSLRequirements = 291, ews__ResponseCodeType__ErrorNoDestinationCASDueToVersionMismatch = 292, ews__ResponseCodeType__ErrorNoFolderClassOverride = 293, ews__ResponseCodeType__ErrorNoFreeBusyAccess = 294, ews__ResponseCodeType__ErrorNonExistentMailbox = 295, ews__ResponseCodeType__ErrorNonPrimarySmtpAddress = 296, ews__ResponseCodeType__ErrorNoPropertyTagForCustomProperties = 297, ews__ResponseCodeType__ErrorNoPublicFolderReplicaAvailable = 298, ews__ResponseCodeType__ErrorNoPublicFolderServerAvailable = 299, ews__ResponseCodeType__ErrorNoRespondingCASInDestinationSite = 300, ews__ResponseCodeType__ErrorNotDelegate = 301, ews__ResponseCodeType__ErrorNotEnoughMemory = 302, ews__ResponseCodeType__ErrorObjectTypeChanged = 303, ews__ResponseCodeType__ErrorOccurrenceCrossingBoundary = 304, ews__ResponseCodeType__ErrorOccurrenceTimeSpanTooBig = 305, ews__ResponseCodeType__ErrorOperationNotAllowedWithPublicFolderRoot = 306, ews__ResponseCodeType__ErrorParentFolderIdRequired = 307, ews__ResponseCodeType__ErrorParentFolderNotFound = 308, ews__ResponseCodeType__ErrorPasswordChangeRequired = 309, ews__ResponseCodeType__ErrorPasswordExpired = 310, ews__ResponseCodeType__ErrorPhoneNumberNotDialable = 311, ews__ResponseCodeType__ErrorPropertyUpdate = 312, ews__ResponseCodeType__ErrorPromptPublishingOperationFailed = 313, ews__ResponseCodeType__ErrorPropertyValidationFailure = 314, ews__ResponseCodeType__ErrorProxiedSubscriptionCallFailure = 315, ews__ResponseCodeType__ErrorProxyCallFailed = 316, ews__ResponseCodeType__ErrorProxyGroupSidLimitExceeded = 317, ews__ResponseCodeType__ErrorProxyRequestNotAllowed = 318, ews__ResponseCodeType__ErrorProxyRequestProcessingFailed = 319, ews__ResponseCodeType__ErrorProxyServiceDiscoveryFailed = 320, ews__ResponseCodeType__ErrorProxyTokenExpired = 321, ews__ResponseCodeType__ErrorPublicFolderMailboxDiscoveryFailed = 322, ews__ResponseCodeType__ErrorPublicFolderOperationFailed = 323, ews__ResponseCodeType__ErrorPublicFolderRequestProcessingFailed = 324, ews__ResponseCodeType__ErrorPublicFolderServerNotFound = 325, ews__ResponseCodeType__ErrorPublicFolderSyncException = 326, ews__ResponseCodeType__ErrorQueryFilterTooLong = 327, ews__ResponseCodeType__ErrorQuotaExceeded = 328, ews__ResponseCodeType__ErrorReadEventsFailed = 329, ews__ResponseCodeType__ErrorReadReceiptNotPending = 330, ews__ResponseCodeType__ErrorRecurrenceEndDateTooBig = 331, ews__ResponseCodeType__ErrorRecurrenceHasNoOccurrence = 332, ews__ResponseCodeType__ErrorRemoveDelegatesFailed = 333, ews__ResponseCodeType__ErrorRequestAborted = 334, ews__ResponseCodeType__ErrorRequestStreamTooBig = 335, ews__ResponseCodeType__ErrorRequiredPropertyMissing = 336, ews__ResponseCodeType__ErrorResolveNamesInvalidFolderType = 337, ews__ResponseCodeType__ErrorResolveNamesOnlyOneContactsFolderAllowed = 338, ews__ResponseCodeType__ErrorResponseSchemaValidation = 339, ews__ResponseCodeType__ErrorRestrictionTooLong = 340, ews__ResponseCodeType__ErrorRestrictionTooComplex = 341, ews__ResponseCodeType__ErrorResultSetTooBig = 342, ews__ResponseCodeType__ErrorInvalidExchangeImpersonationHeaderData = 343, ews__ResponseCodeType__ErrorSavedItemFolderNotFound = 344, ews__ResponseCodeType__ErrorSchemaValidation = 345, ews__ResponseCodeType__ErrorSearchFolderNotInitialized = 346, ews__ResponseCodeType__ErrorSendAsDenied = 347, ews__ResponseCodeType__ErrorSendMeetingCancellationsRequired = 348, ews__ResponseCodeType__ErrorSendMeetingInvitationsOrCancellationsRequired = 349, ews__ResponseCodeType__ErrorSendMeetingInvitationsRequired = 350, ews__ResponseCodeType__ErrorSentMeetingRequestUpdate = 351, ews__ResponseCodeType__ErrorSentTaskRequestUpdate = 352, ews__ResponseCodeType__ErrorServerBusy = 353, ews__ResponseCodeType__ErrorServiceDiscoveryFailed = 354, ews__ResponseCodeType__ErrorStaleObject = 355, ews__ResponseCodeType__ErrorSubmissionQuotaExceeded = 356, ews__ResponseCodeType__ErrorSubscriptionAccessDenied = 357, ews__ResponseCodeType__ErrorSubscriptionDelegateAccessNotSupported = 358, ews__ResponseCodeType__ErrorSubscriptionNotFound = 359, ews__ResponseCodeType__ErrorSubscriptionUnsubscribed = 360, ews__ResponseCodeType__ErrorSyncFolderNotFound = 361, ews__ResponseCodeType__ErrorTeamMailboxNotFound = 362, ews__ResponseCodeType__ErrorTeamMailboxNotLinkedToSharePoint = 363, ews__ResponseCodeType__ErrorTeamMailboxUrlValidationFailed = 364, ews__ResponseCodeType__ErrorTeamMailboxNotAuthorizedOwner = 365, ews__ResponseCodeType__ErrorTeamMailboxActiveToPendingDelete = 366, ews__ResponseCodeType__ErrorTeamMailboxFailedSendingNotifications = 367, ews__ResponseCodeType__ErrorTeamMailboxErrorUnknown = 368, ews__ResponseCodeType__ErrorTimeIntervalTooBig = 369, ews__ResponseCodeType__ErrorTimeoutExpired = 370, ews__ResponseCodeType__ErrorTimeZone = 371, ews__ResponseCodeType__ErrorToFolderNotFound = 372, ews__ResponseCodeType__ErrorTokenSerializationDenied = 373, ews__ResponseCodeType__ErrorTooManyObjectsOpened = 374, ews__ResponseCodeType__ErrorUpdatePropertyMismatch = 375, ews__ResponseCodeType__ErrorUnifiedGroupMailboxAADCreationFailed = 376, ews__ResponseCodeType__ErrorUnifiedGroupMailboxAADDeleteFailed = 377, ews__ResponseCodeType__ErrorUnifiedGroupMailboxNamingPolicy = 378, ews__ResponseCodeType__ErrorUnifiedGroupMailboxDeleteFailed = 379, ews__ResponseCodeType__ErrorUnifiedGroupMailboxNotFound = 380, ews__ResponseCodeType__ErrorUnifiedGroupMailboxUpdateDelayed = 381, ews__ResponseCodeType__ErrorUnifiedGroupMailboxUpdatedPartialProperties = 382, ews__ResponseCodeType__ErrorUnifiedGroupMailboxUpdateFailed = 383, ews__ResponseCodeType__ErrorUnifiedGroupMailboxProvisionFailed = 384, ews__ResponseCodeType__ErrorUnifiedMessagingDialPlanNotFound = 385, ews__ResponseCodeType__ErrorUnifiedMessagingReportDataNotFound = 386, ews__ResponseCodeType__ErrorUnifiedMessagingPromptNotFound = 387, ews__ResponseCodeType__ErrorUnifiedMessagingRequestFailed = 388, ews__ResponseCodeType__ErrorUnifiedMessagingServerNotFound = 389, ews__ResponseCodeType__ErrorUnableToGetUserOofSettings = 390, ews__ResponseCodeType__ErrorUnableToRemoveImContactFromGroup = 391, ews__ResponseCodeType__ErrorUnsupportedSubFilter = 392, ews__ResponseCodeType__ErrorUnsupportedCulture = 393, ews__ResponseCodeType__ErrorUnsupportedMapiPropertyType = 394, ews__ResponseCodeType__ErrorUnsupportedMimeConversion = 395, ews__ResponseCodeType__ErrorUnsupportedPathForQuery = 396, ews__ResponseCodeType__ErrorUnsupportedPathForSortGroup = 397, ews__ResponseCodeType__ErrorUnsupportedPropertyDefinition = 398, ews__ResponseCodeType__ErrorUnsupportedQueryFilter = 399, ews__ResponseCodeType__ErrorUnsupportedRecurrence = 400, ews__ResponseCodeType__ErrorUnsupportedTypeForConversion = 401, ews__ResponseCodeType__ErrorUpdateDelegatesFailed = 402, ews__ResponseCodeType__ErrorUserNotUnifiedMessagingEnabled = 403, ews__ResponseCodeType__ErrorVoiceMailNotImplemented = 404, ews__ResponseCodeType__ErrorValueOutOfRange = 405, ews__ResponseCodeType__ErrorVirusDetected = 406, ews__ResponseCodeType__ErrorVirusMessageDeleted = 407, ews__ResponseCodeType__ErrorWebRequestInInvalidState = 408, ews__ResponseCodeType__ErrorWin32InteropError = 409, ews__ResponseCodeType__ErrorWorkingHoursSaveFailed = 410, ews__ResponseCodeType__ErrorWorkingHoursXmlMalformed = 411, ews__ResponseCodeType__ErrorWrongServerVersion = 412, ews__ResponseCodeType__ErrorWrongServerVersionDelegate = 413, ews__ResponseCodeType__ErrorMissingInformationSharingFolderId = 414, ews__ResponseCodeType__ErrorDuplicateSOAPHeader = 415, ews__ResponseCodeType__ErrorSharingSynchronizationFailed = 416, ews__ResponseCodeType__ErrorSharingNoExternalEwsAvailable = 417, ews__ResponseCodeType__ErrorFreeBusyDLLimitReached = 418, ews__ResponseCodeType__ErrorInvalidGetSharingFolderRequest = 419, ews__ResponseCodeType__ErrorNotAllowedExternalSharingByPolicy = 420, ews__ResponseCodeType__ErrorUserNotAllowedByPolicy = 421, ews__ResponseCodeType__ErrorPermissionNotAllowedByPolicy = 422, ews__ResponseCodeType__ErrorOrganizationNotFederated = 423, ews__ResponseCodeType__ErrorMailboxFailover = 424, ews__ResponseCodeType__ErrorInvalidExternalSharingInitiator = 425, ews__ResponseCodeType__ErrorMessageTrackingPermanentError = 426, ews__ResponseCodeType__ErrorMessageTrackingTransientError = 427, ews__ResponseCodeType__ErrorMessageTrackingNoSuchDomain = 428, ews__ResponseCodeType__ErrorUserWithoutFederatedProxyAddress = 429, ews__ResponseCodeType__ErrorInvalidOrganizationRelationshipForFreeBusy = 430, ews__ResponseCodeType__ErrorInvalidFederatedOrganizationId = 431, ews__ResponseCodeType__ErrorInvalidExternalSharingSubscriber = 432, ews__ResponseCodeType__ErrorInvalidSharingData = 433, ews__ResponseCodeType__ErrorInvalidSharingMessage = 434, ews__ResponseCodeType__ErrorNotSupportedSharingMessage = 435, ews__ResponseCodeType__ErrorApplyConversationActionFailed = 436, ews__ResponseCodeType__ErrorInboxRulesValidationError = 437, ews__ResponseCodeType__ErrorOutlookRuleBlobExists = 438, ews__ResponseCodeType__ErrorRulesOverQuota = 439, ews__ResponseCodeType__ErrorNewEventStreamConnectionOpened = 440, ews__ResponseCodeType__ErrorMissedNotificationEvents = 441, ews__ResponseCodeType__ErrorDuplicateLegacyDistinguishedName = 442, ews__ResponseCodeType__ErrorInvalidClientAccessTokenRequest = 443, ews__ResponseCodeType__ErrorNoSpeechDetected = 444, ews__ResponseCodeType__ErrorUMServerUnavailable = 445, ews__ResponseCodeType__ErrorRecipientNotFound = 446, ews__ResponseCodeType__ErrorRecognizerNotInstalled = 447, ews__ResponseCodeType__ErrorSpeechGrammarError = 448, ews__ResponseCodeType__ErrorInvalidManagementRoleHeader = 449, ews__ResponseCodeType__ErrorLocationServicesDisabled = 450, ews__ResponseCodeType__ErrorLocationServicesRequestTimedOut = 451, ews__ResponseCodeType__ErrorLocationServicesRequestFailed = 452, ews__ResponseCodeType__ErrorLocationServicesInvalidRequest = 453, ews__ResponseCodeType__ErrorWeatherServiceDisabled = 454, ews__ResponseCodeType__ErrorMailboxScopeNotAllowedWithoutQueryString = 455, ews__ResponseCodeType__ErrorArchiveMailboxSearchFailed = 456, ews__ResponseCodeType__ErrorGetRemoteArchiveFolderFailed = 457, ews__ResponseCodeType__ErrorFindRemoteArchiveFolderFailed = 458, ews__ResponseCodeType__ErrorGetRemoteArchiveItemFailed = 459, ews__ResponseCodeType__ErrorExportRemoteArchiveItemsFailed = 460, ews__ResponseCodeType__ErrorInvalidPhotoSize = 461, ews__ResponseCodeType__ErrorSearchQueryHasTooManyKeywords = 462, ews__ResponseCodeType__ErrorSearchTooManyMailboxes = 463, ews__ResponseCodeType__ErrorInvalidRetentionTagNone = 464, ews__ResponseCodeType__ErrorDiscoverySearchesDisabled = 465, ews__ResponseCodeType__ErrorCalendarSeekToConditionNotSupported = 466, ews__ResponseCodeType__ErrorCalendarIsGroupMailboxForAccept = 467, ews__ResponseCodeType__ErrorCalendarIsGroupMailboxForDecline = 468, ews__ResponseCodeType__ErrorCalendarIsGroupMailboxForTentative = 469, ews__ResponseCodeType__ErrorCalendarIsGroupMailboxForSuppressReadReceipt = 470, ews__ResponseCodeType__ErrorOrganizationAccessBlocked = 471, ews__ResponseCodeType__ErrorInvalidLicense = 472, ews__ResponseCodeType__ErrorMessagePerFolderCountReceiveQuotaExceeded = 473, ews__ResponseCodeType__ErrorInvalidBulkActionType = 474, ews__ResponseCodeType__ErrorInvalidKeepNCount = 475, ews__ResponseCodeType__ErrorInvalidKeepNType = 476, ews__ResponseCodeType__ErrorNoOAuthServerAvailableForRequest = 477, ews__ResponseCodeType__ErrorInstantSearchSessionExpired = 478, ews__ResponseCodeType__ErrorInstantSearchTimeout = 479, ews__ResponseCodeType__ErrorInstantSearchFailed = 480, ews__ResponseCodeType__ErrorUnsupportedUserForExecuteSearch = 481, ews__ResponseCodeType__ErrorMissingExchangePrincipal = 482, ews__ResponseCodeType__ErrorUnexpectedUnifiedGroupsCount = 483, ews__ResponseCodeType__ErrorParsingXMLResponse = 484, ews__ResponseCodeType__ErrorInvalidFederationOrganizationIdentifier = 485, ews__ResponseCodeType__ErrorInvalidSweepRule = 486, ews__ResponseCodeType__ErrorInvalidSweepRuleOperationType = 487, ews__ResponseCodeType__ErrorTargetDomainNotSupported = 488, ews__ResponseCodeType__ErrorInvalidInternetWebProxyOnLocalServer = 489 };
#endif

#ifndef SOAP_TYPE_ns1__SpecialLogonTypeType
#define SOAP_TYPE_ns1__SpecialLogonTypeType (1101)
/* ns1:SpecialLogonTypeType */
enum ns1__SpecialLogonTypeType { ns1__SpecialLogonTypeType__Admin = 0, ns1__SpecialLogonTypeType__SystemService = 1 };
#endif

#ifndef SOAP_TYPE_ns1__ExchangeVersionType
#define SOAP_TYPE_ns1__ExchangeVersionType (1102)
/* ns1:ExchangeVersionType */
enum ns1__ExchangeVersionType { ns1__ExchangeVersionType__Exchange2007 = 0, ns1__ExchangeVersionType__Exchange2007_USCORESP1 = 1, ns1__ExchangeVersionType__Exchange2010 = 2, ns1__ExchangeVersionType__Exchange2010_USCORESP1 = 3, ns1__ExchangeVersionType__Exchange2010_USCORESP2 = 4, ns1__ExchangeVersionType__Exchange2013 = 5, ns1__ExchangeVersionType__Exchange2013_USCORESP1 = 6, ns1__ExchangeVersionType__Exchange2015 = 7 };
#endif

#ifndef SOAP_TYPE_ns1__DateTimePrecisionType
#define SOAP_TYPE_ns1__DateTimePrecisionType (1103)
/* ns1:DateTimePrecisionType */
enum ns1__DateTimePrecisionType { ns1__DateTimePrecisionType__Seconds = 0, ns1__DateTimePrecisionType__Milliseconds = 1 };
#endif

#ifndef SOAP_TYPE_ns1__MailboxTypeType
#define SOAP_TYPE_ns1__MailboxTypeType (1105)
/* ns1:MailboxTypeType */
enum ns1__MailboxTypeType { ns1__MailboxTypeType__Unknown = 0, ns1__MailboxTypeType__OneOff = 1, ns1__MailboxTypeType__Mailbox = 2, ns1__MailboxTypeType__PublicDL = 3, ns1__MailboxTypeType__PrivateDL = 4, ns1__MailboxTypeType__Contact = 5, ns1__MailboxTypeType__PublicFolder = 6, ns1__MailboxTypeType__GroupMailbox = 7 };
#endif

#ifndef SOAP_TYPE_ns1__ActivityDomainType
#define SOAP_TYPE_ns1__ActivityDomainType (1106)
/* ns1:ActivityDomainType */
enum ns1__ActivityDomainType { ns1__ActivityDomainType__Unknown = 0, ns1__ActivityDomainType__Personal = 1, ns1__ActivityDomainType__Work = 2 };
#endif

#ifndef SOAP_TYPE_ns1__ReminderGroupType
#define SOAP_TYPE_ns1__ReminderGroupType (1107)
/* ns1:ReminderGroupType */
enum ns1__ReminderGroupType { ns1__ReminderGroupType__Calendar = 0, ns1__ReminderGroupType__Task = 1 };
#endif

#ifndef SOAP_TYPE_ns1__UnindexedFieldURIType
#define SOAP_TYPE_ns1__UnindexedFieldURIType (1108)
/* ns1:UnindexedFieldURIType */
enum ns1__UnindexedFieldURIType { ns1__UnindexedFieldURIType__folder_x003aFolderId = 0, ns1__UnindexedFieldURIType__folder_x003aParentFolderId = 1, ns1__UnindexedFieldURIType__folder_x003aDisplayName = 2, ns1__UnindexedFieldURIType__folder_x003aUnreadCount = 3, ns1__UnindexedFieldURIType__folder_x003aTotalCount = 4, ns1__UnindexedFieldURIType__folder_x003aChildFolderCount = 5, ns1__UnindexedFieldURIType__folder_x003aFolderClass = 6, ns1__UnindexedFieldURIType__folder_x003aSearchParameters = 7, ns1__UnindexedFieldURIType__folder_x003aManagedFolderInformation = 8, ns1__UnindexedFieldURIType__folder_x003aPermissionSet = 9, ns1__UnindexedFieldURIType__folder_x003aEffectiveRights = 10, ns1__UnindexedFieldURIType__folder_x003aSharingEffectiveRights = 11, ns1__UnindexedFieldURIType__folder_x003aDistinguishedFolderId = 12, ns1__UnindexedFieldURIType__folder_x003aPolicyTag = 13, ns1__UnindexedFieldURIType__folder_x003aArchiveTag = 14, ns1__UnindexedFieldURIType__folder_x003aReplicaList = 15, ns1__UnindexedFieldURIType__item_x003aItemId = 16, ns1__UnindexedFieldURIType__item_x003aParentFolderId = 17, ns1__UnindexedFieldURIType__item_x003aItemClass = 18, ns1__UnindexedFieldURIType__item_x003aMimeContent = 19, ns1__UnindexedFieldURIType__item_x003aAttachments = 20, ns1__UnindexedFieldURIType__item_x003aSubject = 21, ns1__UnindexedFieldURIType__item_x003aDateTimeReceived = 22, ns1__UnindexedFieldURIType__item_x003aSize = 23, ns1__UnindexedFieldURIType__item_x003aCategories = 24, ns1__UnindexedFieldURIType__item_x003aHasAttachments = 25, ns1__UnindexedFieldURIType__item_x003aImportance = 26, ns1__UnindexedFieldURIType__item_x003aInReplyTo = 27, ns1__UnindexedFieldURIType__item_x003aInternetMessageHeaders = 28, ns1__UnindexedFieldURIType__item_x003aIsAssociated = 29, ns1__UnindexedFieldURIType__item_x003aIsDraft = 30, ns1__UnindexedFieldURIType__item_x003aIsFromMe = 31, ns1__UnindexedFieldURIType__item_x003aIsResend = 32, ns1__UnindexedFieldURIType__item_x003aIsSubmitted = 33, ns1__UnindexedFieldURIType__item_x003aIsUnmodified = 34, ns1__UnindexedFieldURIType__item_x003aDateTimeSent = 35, ns1__UnindexedFieldURIType__item_x003aDateTimeCreated = 36, ns1__UnindexedFieldURIType__item_x003aBody = 37, ns1__UnindexedFieldURIType__item_x003aResponseObjects = 38, ns1__UnindexedFieldURIType__item_x003aSensitivity = 39, ns1__UnindexedFieldURIType__item_x003aReminderDueBy = 40, ns1__UnindexedFieldURIType__item_x003aReminderIsSet = 41, ns1__UnindexedFieldURIType__item_x003aReminderNextTime = 42, ns1__UnindexedFieldURIType__item_x003aReminderMinutesBeforeStart = 43, ns1__UnindexedFieldURIType__item_x003aDisplayTo = 44, ns1__UnindexedFieldURIType__item_x003aDisplayCc = 45, ns1__UnindexedFieldURIType__item_x003aCulture = 46, ns1__UnindexedFieldURIType__item_x003aEffectiveRights = 47, ns1__UnindexedFieldURIType__item_x003aLastModifiedName = 48, ns1__UnindexedFieldURIType__item_x003aLastModifiedTime = 49, ns1__UnindexedFieldURIType__item_x003aConversationId = 50, ns1__UnindexedFieldURIType__item_x003aUniqueBody = 51, ns1__UnindexedFieldURIType__item_x003aFlag = 52, ns1__UnindexedFieldURIType__item_x003aStoreEntryId = 53, ns1__UnindexedFieldURIType__item_x003aInstanceKey = 54, ns1__UnindexedFieldURIType__item_x003aNormalizedBody = 55, ns1__UnindexedFieldURIType__item_x003aEntityExtractionResult = 56, ns1__UnindexedFieldURIType__item_x003aPolicyTag = 57, ns1__UnindexedFieldURIType__item_x003aArchiveTag = 58, ns1__UnindexedFieldURIType__item_x003aRetentionDate = 59, ns1__UnindexedFieldURIType__item_x003aPreview = 60, ns1__UnindexedFieldURIType__item_x003aPredictedActionReasons = 61, ns1__UnindexedFieldURIType__item_x003aIsClutter = 62, ns1__UnindexedFieldURIType__item_x003aRightsManagementLicenseData = 63, ns1__UnindexedFieldURIType__item_x003aBlockStatus = 64, ns1__UnindexedFieldURIType__item_x003aHasBlockedImages = 65, ns1__UnindexedFieldURIType__item_x003aWebClientReadFormQueryString = 66, ns1__UnindexedFieldURIType__item_x003aWebClientEditFormQueryString = 67, ns1__UnindexedFieldURIType__item_x003aTextBody = 68, ns1__UnindexedFieldURIType__item_x003aIconIndex = 69, ns1__UnindexedFieldURIType__item_x003aMimeContentUTF8 = 70, ns1__UnindexedFieldURIType__message_x003aConversationIndex = 71, ns1__UnindexedFieldURIType__message_x003aConversationTopic = 72, ns1__UnindexedFieldURIType__message_x003aInternetMessageId = 73, ns1__UnindexedFieldURIType__message_x003aIsRead = 74, ns1__UnindexedFieldURIType__message_x003aIsResponseRequested = 75, ns1__UnindexedFieldURIType__message_x003aIsReadReceiptRequested = 76, ns1__UnindexedFieldURIType__message_x003aIsDeliveryReceiptRequested = 77, ns1__UnindexedFieldURIType__message_x003aReceivedBy = 78, ns1__UnindexedFieldURIType__message_x003aReceivedRepresenting = 79, ns1__UnindexedFieldURIType__message_x003aReferences = 80, ns1__UnindexedFieldURIType__message_x003aReplyTo = 81, ns1__UnindexedFieldURIType__message_x003aFrom = 82, ns1__UnindexedFieldURIType__message_x003aSender = 83, ns1__UnindexedFieldURIType__message_x003aToRecipients = 84, ns1__UnindexedFieldURIType__message_x003aCcRecipients = 85, ns1__UnindexedFieldURIType__message_x003aBccRecipients = 86, ns1__UnindexedFieldURIType__message_x003aApprovalRequestData = 87, ns1__UnindexedFieldURIType__message_x003aVotingInformation = 88, ns1__UnindexedFieldURIType__message_x003aReminderMessageData = 89, ns1__UnindexedFieldURIType__meeting_x003aAssociatedCalendarItemId = 90, ns1__UnindexedFieldURIType__meeting_x003aIsDelegated = 91, ns1__UnindexedFieldURIType__meeting_x003aIsOutOfDate = 92, ns1__UnindexedFieldURIType__meeting_x003aHasBeenProcessed = 93, ns1__UnindexedFieldURIType__meeting_x003aResponseType = 94, ns1__UnindexedFieldURIType__meeting_x003aProposedStart = 95, ns1__UnindexedFieldURIType__meeting_x003aProposedEnd = 96, ns1__UnindexedFieldURIType__meetingRequest_x003aMeetingRequestType = 97, ns1__UnindexedFieldURIType__meetingRequest_x003aIntendedFreeBusyStatus = 98, ns1__UnindexedFieldURIType__meetingRequest_x003aChangeHighlights = 99, ns1__UnindexedFieldURIType__calendar_x003aStart = 100, ns1__UnindexedFieldURIType__calendar_x003aEnd = 101, ns1__UnindexedFieldURIType__calendar_x003aOriginalStart = 102, ns1__UnindexedFieldURIType__calendar_x003aStartWallClock = 103, ns1__UnindexedFieldURIType__calendar_x003aEndWallClock = 104, ns1__UnindexedFieldURIType__calendar_x003aStartTimeZoneId = 105, ns1__UnindexedFieldURIType__calendar_x003aEndTimeZoneId = 106, ns1__UnindexedFieldURIType__calendar_x003aIsAllDayEvent = 107, ns1__UnindexedFieldURIType__calendar_x003aLegacyFreeBusyStatus = 108, ns1__UnindexedFieldURIType__calendar_x003aLocation = 109, ns1__UnindexedFieldURIType__calendar_x003aEnhancedLocation = 110, ns1__UnindexedFieldURIType__calendar_x003aWhen = 111, ns1__UnindexedFieldURIType__calendar_x003aIsMeeting = 112, ns1__UnindexedFieldURIType__calendar_x003aIsCancelled = 113, ns1__UnindexedFieldURIType__calendar_x003aIsRecurring = 114, ns1__UnindexedFieldURIType__calendar_x003aMeetingRequestWasSent = 115, ns1__UnindexedFieldURIType__calendar_x003aIsResponseRequested = 116, ns1__UnindexedFieldURIType__calendar_x003aCalendarItemType = 117, ns1__UnindexedFieldURIType__calendar_x003aMyResponseType = 118, ns1__UnindexedFieldURIType__calendar_x003aOrganizer = 119, ns1__UnindexedFieldURIType__calendar_x003aRequiredAttendees = 120, ns1__UnindexedFieldURIType__calendar_x003aOptionalAttendees = 121, ns1__UnindexedFieldURIType__calendar_x003aResources = 122, ns1__UnindexedFieldURIType__calendar_x003aConflictingMeetingCount = 123, ns1__UnindexedFieldURIType__calendar_x003aAdjacentMeetingCount = 124, ns1__UnindexedFieldURIType__calendar_x003aConflictingMeetings = 125, ns1__UnindexedFieldURIType__calendar_x003aAdjacentMeetings = 126, ns1__UnindexedFieldURIType__calendar_x003aDuration = 127, ns1__UnindexedFieldURIType__calendar_x003aTimeZone = 128, ns1__UnindexedFieldURIType__calendar_x003aAppointmentReplyTime = 129, ns1__UnindexedFieldURIType__calendar_x003aAppointmentSequenceNumber = 130, ns1__UnindexedFieldURIType__calendar_x003aAppointmentState = 131, ns1__UnindexedFieldURIType__calendar_x003aRecurrence = 132, ns1__UnindexedFieldURIType__calendar_x003aFirstOccurrence = 133, ns1__UnindexedFieldURIType__calendar_x003aLastOccurrence = 134, ns1__UnindexedFieldURIType__calendar_x003aModifiedOccurrences = 135, ns1__UnindexedFieldURIType__calendar_x003aDeletedOccurrences = 136, ns1__UnindexedFieldURIType__calendar_x003aMeetingTimeZone = 137, ns1__UnindexedFieldURIType__calendar_x003aConferenceType = 138, ns1__UnindexedFieldURIType__calendar_x003aAllowNewTimeProposal = 139, ns1__UnindexedFieldURIType__calendar_x003aIsOnlineMeeting = 140, ns1__UnindexedFieldURIType__calendar_x003aMeetingWorkspaceUrl = 141, ns1__UnindexedFieldURIType__calendar_x003aNetShowUrl = 142, ns1__UnindexedFieldURIType__calendar_x003aUID = 143, ns1__UnindexedFieldURIType__calendar_x003aRecurrenceId = 144, ns1__UnindexedFieldURIType__calendar_x003aDateTimeStamp = 145, ns1__UnindexedFieldURIType__calendar_x003aStartTimeZone = 146, ns1__UnindexedFieldURIType__calendar_x003aEndTimeZone = 147, ns1__UnindexedFieldURIType__calendar_x003aJoinOnlineMeetingUrl = 148, ns1__UnindexedFieldURIType__calendar_x003aOnlineMeetingSettings = 149, ns1__UnindexedFieldURIType__calendar_x003aIsOrganizer = 150, ns1__UnindexedFieldURIType__task_x003aActualWork = 151, ns1__UnindexedFieldURIType__task_x003aAssignedTime = 152, ns1__UnindexedFieldURIType__task_x003aBillingInformation = 153, ns1__UnindexedFieldURIType__task_x003aChangeCount = 154, ns1__UnindexedFieldURIType__task_x003aCompanies = 155, ns1__UnindexedFieldURIType__task_x003aCompleteDate = 156, ns1__UnindexedFieldURIType__task_x003aContacts = 157, ns1__UnindexedFieldURIType__task_x003aDelegationState = 158, ns1__UnindexedFieldURIType__task_x003aDelegator = 159, ns1__UnindexedFieldURIType__task_x003aDueDate = 160, ns1__UnindexedFieldURIType__task_x003aIsAssignmentEditable = 161, ns1__UnindexedFieldURIType__task_x003aIsComplete = 162, ns1__UnindexedFieldURIType__task_x003aIsRecurring = 163, ns1__UnindexedFieldURIType__task_x003aIsTeamTask = 164, ns1__UnindexedFieldURIType__task_x003aMileage = 165, ns1__UnindexedFieldURIType__task_x003aOwner = 166, ns1__UnindexedFieldURIType__task_x003aPercentComplete = 167, ns1__UnindexedFieldURIType__task_x003aRecurrence = 168, ns1__UnindexedFieldURIType__task_x003aStartDate = 169, ns1__UnindexedFieldURIType__task_x003aStatus = 170, ns1__UnindexedFieldURIType__task_x003aStatusDescription = 171, ns1__UnindexedFieldURIType__task_x003aTotalWork = 172, ns1__UnindexedFieldURIType__contacts_x003aAlias = 173, ns1__UnindexedFieldURIType__contacts_x003aAssistantName = 174, ns1__UnindexedFieldURIType__contacts_x003aBirthday = 175, ns1__UnindexedFieldURIType__contacts_x003aBusinessHomePage = 176, ns1__UnindexedFieldURIType__contacts_x003aChildren = 177, ns1__UnindexedFieldURIType__contacts_x003aCompanies = 178, ns1__UnindexedFieldURIType__contacts_x003aCompanyName = 179, ns1__UnindexedFieldURIType__contacts_x003aCompleteName = 180, ns1__UnindexedFieldURIType__contacts_x003aContactSource = 181, ns1__UnindexedFieldURIType__contacts_x003aCulture = 182, ns1__UnindexedFieldURIType__contacts_x003aDepartment = 183, ns1__UnindexedFieldURIType__contacts_x003aDisplayName = 184, ns1__UnindexedFieldURIType__contacts_x003aDirectoryId = 185, ns1__UnindexedFieldURIType__contacts_x003aDirectReports = 186, ns1__UnindexedFieldURIType__contacts_x003aEmailAddresses = 187, ns1__UnindexedFieldURIType__contacts_x003aAbchEmailAddresses = 188, ns1__UnindexedFieldURIType__contacts_x003aFileAs = 189, ns1__UnindexedFieldURIType__contacts_x003aFileAsMapping = 190, ns1__UnindexedFieldURIType__contacts_x003aGeneration = 191, ns1__UnindexedFieldURIType__contacts_x003aGivenName = 192, ns1__UnindexedFieldURIType__contacts_x003aImAddresses = 193, ns1__UnindexedFieldURIType__contacts_x003aInitials = 194, ns1__UnindexedFieldURIType__contacts_x003aJobTitle = 195, ns1__UnindexedFieldURIType__contacts_x003aManager = 196, ns1__UnindexedFieldURIType__contacts_x003aManagerMailbox = 197, ns1__UnindexedFieldURIType__contacts_x003aMiddleName = 198, ns1__UnindexedFieldURIType__contacts_x003aMileage = 199, ns1__UnindexedFieldURIType__contacts_x003aMSExchangeCertificate = 200, ns1__UnindexedFieldURIType__contacts_x003aNickname = 201, ns1__UnindexedFieldURIType__contacts_x003aNotes = 202, ns1__UnindexedFieldURIType__contacts_x003aOfficeLocation = 203, ns1__UnindexedFieldURIType__contacts_x003aPhoneNumbers = 204, ns1__UnindexedFieldURIType__contacts_x003aPhoneticFullName = 205, ns1__UnindexedFieldURIType__contacts_x003aPhoneticFirstName = 206, ns1__UnindexedFieldURIType__contacts_x003aPhoneticLastName = 207, ns1__UnindexedFieldURIType__contacts_x003aPhoto = 208, ns1__UnindexedFieldURIType__contacts_x003aPhysicalAddresses = 209, ns1__UnindexedFieldURIType__contacts_x003aPostalAddressIndex = 210, ns1__UnindexedFieldURIType__contacts_x003aProfession = 211, ns1__UnindexedFieldURIType__contacts_x003aSpouseName = 212, ns1__UnindexedFieldURIType__contacts_x003aSurname = 213, ns1__UnindexedFieldURIType__contacts_x003aWeddingAnniversary = 214, ns1__UnindexedFieldURIType__contacts_x003aUserSMIMECertificate = 215, ns1__UnindexedFieldURIType__contacts_x003aHasPicture = 216, ns1__UnindexedFieldURIType__contacts_x003aAccountName = 217, ns1__UnindexedFieldURIType__contacts_x003aIsAutoUpdateDisabled = 218, ns1__UnindexedFieldURIType__contacts_x003aIsMessengerEnabled = 219, ns1__UnindexedFieldURIType__contacts_x003aComment = 220, ns1__UnindexedFieldURIType__contacts_x003aContactShortId = 221, ns1__UnindexedFieldURIType__contacts_x003aContactType = 222, ns1__UnindexedFieldURIType__contacts_x003aCreatedBy = 223, ns1__UnindexedFieldURIType__contacts_x003aGender = 224, ns1__UnindexedFieldURIType__contacts_x003aIsHidden = 225, ns1__UnindexedFieldURIType__contacts_x003aObjectId = 226, ns1__UnindexedFieldURIType__contacts_x003aPassportId = 227, ns1__UnindexedFieldURIType__contacts_x003aIsPrivate = 228, ns1__UnindexedFieldURIType__contacts_x003aSourceId = 229, ns1__UnindexedFieldURIType__contacts_x003aTrustLevel = 230, ns1__UnindexedFieldURIType__contacts_x003aUrls = 231, ns1__UnindexedFieldURIType__contacts_x003aCid = 232, ns1__UnindexedFieldURIType__contacts_x003aSkypeAuthCertificate = 233, ns1__UnindexedFieldURIType__contacts_x003aSkypeContext = 234, ns1__UnindexedFieldURIType__contacts_x003aSkypeId = 235, ns1__UnindexedFieldURIType__contacts_x003aXboxLiveTag = 236, ns1__UnindexedFieldURIType__contacts_x003aSkypeRelationship = 237, ns1__UnindexedFieldURIType__contacts_x003aYomiNickname = 238, ns1__UnindexedFieldURIType__contacts_x003aInviteFree = 239, ns1__UnindexedFieldURIType__contacts_x003aHidePresenceAndProfile = 240, ns1__UnindexedFieldURIType__contacts_x003aIsPendingOutbound = 241, ns1__UnindexedFieldURIType__contacts_x003aSupportGroupFeeds = 242, ns1__UnindexedFieldURIType__contacts_x003aUserTileHash = 243, ns1__UnindexedFieldURIType__contacts_x003aUnifiedInbox = 244, ns1__UnindexedFieldURIType__contacts_x003aMris = 245, ns1__UnindexedFieldURIType__contacts_x003aWlid = 246, ns1__UnindexedFieldURIType__contacts_x003aAbchContactId = 247, ns1__UnindexedFieldURIType__contacts_x003aNotInBirthdayCalendar = 248, ns1__UnindexedFieldURIType__contacts_x003aShellContactType = 249, ns1__UnindexedFieldURIType__contacts_x003aImMri = 250, ns1__UnindexedFieldURIType__contacts_x003aPresenceTrustLevel = 251, ns1__UnindexedFieldURIType__contacts_x003aOtherMri = 252, ns1__UnindexedFieldURIType__contacts_x003aProfileLastChanged = 253, ns1__UnindexedFieldURIType__contacts_x003aMobileIMEnabled = 254, ns1__UnindexedFieldURIType__distributionlist_x003aMembers = 255, ns1__UnindexedFieldURIType__contacts_x003aPartnerNetworkProfilePhotoUrl = 256, ns1__UnindexedFieldURIType__contacts_x003aPartnerNetworkThumbnailPhotoUrl = 257, ns1__UnindexedFieldURIType__postitem_x003aPostedTime = 258, ns1__UnindexedFieldURIType__conversation_x003aConversationId = 259, ns1__UnindexedFieldURIType__conversation_x003aConversationTopic = 260, ns1__UnindexedFieldURIType__conversation_x003aUniqueRecipients = 261, ns1__UnindexedFieldURIType__conversation_x003aGlobalUniqueRecipients = 262, ns1__UnindexedFieldURIType__conversation_x003aUniqueUnreadSenders = 263, ns1__UnindexedFieldURIType__conversation_x003aGlobalUniqueUnreadSenders = 264, ns1__UnindexedFieldURIType__conversation_x003aUniqueSenders = 265, ns1__UnindexedFieldURIType__conversation_x003aGlobalUniqueSenders = 266, ns1__UnindexedFieldURIType__conversation_x003aLastDeliveryTime = 267, ns1__UnindexedFieldURIType__conversation_x003aGlobalLastDeliveryTime = 268, ns1__UnindexedFieldURIType__conversation_x003aCategories = 269, ns1__UnindexedFieldURIType__conversation_x003aGlobalCategories = 270, ns1__UnindexedFieldURIType__conversation_x003aFlagStatus = 271, ns1__UnindexedFieldURIType__conversation_x003aGlobalFlagStatus = 272, ns1__UnindexedFieldURIType__conversation_x003aHasAttachments = 273, ns1__UnindexedFieldURIType__conversation_x003aGlobalHasAttachments = 274, ns1__UnindexedFieldURIType__conversation_x003aHasIrm = 275, ns1__UnindexedFieldURIType__conversation_x003aGlobalHasIrm = 276, ns1__UnindexedFieldURIType__conversation_x003aMessageCount = 277, ns1__UnindexedFieldURIType__conversation_x003aGlobalMessageCount = 278, ns1__UnindexedFieldURIType__conversation_x003aUnreadCount = 279, ns1__UnindexedFieldURIType__conversation_x003aGlobalUnreadCount = 280, ns1__UnindexedFieldURIType__conversation_x003aSize = 281, ns1__UnindexedFieldURIType__conversation_x003aGlobalSize = 282, ns1__UnindexedFieldURIType__conversation_x003aItemClasses = 283, ns1__UnindexedFieldURIType__conversation_x003aGlobalItemClasses = 284, ns1__UnindexedFieldURIType__conversation_x003aImportance = 285, ns1__UnindexedFieldURIType__conversation_x003aGlobalImportance = 286, ns1__UnindexedFieldURIType__conversation_x003aItemIds = 287, ns1__UnindexedFieldURIType__conversation_x003aGlobalItemIds = 288, ns1__UnindexedFieldURIType__conversation_x003aLastModifiedTime = 289, ns1__UnindexedFieldURIType__conversation_x003aInstanceKey = 290, ns1__UnindexedFieldURIType__conversation_x003aPreview = 291, ns1__UnindexedFieldURIType__conversation_x003aIconIndex = 292, ns1__UnindexedFieldURIType__conversation_x003aGlobalIconIndex = 293, ns1__UnindexedFieldURIType__conversation_x003aDraftItemIds = 294, ns1__UnindexedFieldURIType__conversation_x003aHasClutter = 295, ns1__UnindexedFieldURIType__persona_x003aPersonaId = 296, ns1__UnindexedFieldURIType__persona_x003aPersonaType = 297, ns1__UnindexedFieldURIType__persona_x003aGivenName = 298, ns1__UnindexedFieldURIType__persona_x003aCompanyName = 299, ns1__UnindexedFieldURIType__persona_x003aSurname = 300, ns1__UnindexedFieldURIType__persona_x003aDisplayName = 301, ns1__UnindexedFieldURIType__persona_x003aEmailAddress = 302, ns1__UnindexedFieldURIType__persona_x003aFileAs = 303, ns1__UnindexedFieldURIType__persona_x003aHomeCity = 304, ns1__UnindexedFieldURIType__persona_x003aCreationTime = 305, ns1__UnindexedFieldURIType__persona_x003aRelevanceScore = 306, ns1__UnindexedFieldURIType__persona_x003aRankingWeight = 307, ns1__UnindexedFieldURIType__persona_x003aWorkCity = 308, ns1__UnindexedFieldURIType__persona_x003aPersonaObjectStatus = 309, ns1__UnindexedFieldURIType__persona_x003aFileAsId = 310, ns1__UnindexedFieldURIType__persona_x003aDisplayNamePrefix = 311, ns1__UnindexedFieldURIType__persona_x003aYomiCompanyName = 312, ns1__UnindexedFieldURIType__persona_x003aYomiFirstName = 313, ns1__UnindexedFieldURIType__persona_x003aYomiLastName = 314, ns1__UnindexedFieldURIType__persona_x003aTitle = 315, ns1__UnindexedFieldURIType__persona_x003aEmailAddresses = 316, ns1__UnindexedFieldURIType__persona_x003aPhoneNumber = 317, ns1__UnindexedFieldURIType__persona_x003aImAddress = 318, ns1__UnindexedFieldURIType__persona_x003aImAddresses = 319, ns1__UnindexedFieldURIType__persona_x003aImAddresses2 = 320, ns1__UnindexedFieldURIType__persona_x003aImAddresses3 = 321, ns1__UnindexedFieldURIType__persona_x003aFolderIds = 322, ns1__UnindexedFieldURIType__persona_x003aAttributions = 323, ns1__UnindexedFieldURIType__persona_x003aDisplayNames = 324, ns1__UnindexedFieldURIType__persona_x003aInitials = 325, ns1__UnindexedFieldURIType__persona_x003aFileAses = 326, ns1__UnindexedFieldURIType__persona_x003aFileAsIds = 327, ns1__UnindexedFieldURIType__persona_x003aDisplayNamePrefixes = 328, ns1__UnindexedFieldURIType__persona_x003aGivenNames = 329, ns1__UnindexedFieldURIType__persona_x003aMiddleNames = 330, ns1__UnindexedFieldURIType__persona_x003aSurnames = 331, ns1__UnindexedFieldURIType__persona_x003aGenerations = 332, ns1__UnindexedFieldURIType__persona_x003aNicknames = 333, ns1__UnindexedFieldURIType__persona_x003aYomiCompanyNames = 334, ns1__UnindexedFieldURIType__persona_x003aYomiFirstNames = 335, ns1__UnindexedFieldURIType__persona_x003aYomiLastNames = 336, ns1__UnindexedFieldURIType__persona_x003aBusinessPhoneNumbers = 337, ns1__UnindexedFieldURIType__persona_x003aBusinessPhoneNumbers2 = 338, ns1__UnindexedFieldURIType__persona_x003aHomePhones = 339, ns1__UnindexedFieldURIType__persona_x003aHomePhones2 = 340, ns1__UnindexedFieldURIType__persona_x003aMobilePhones = 341, ns1__UnindexedFieldURIType__persona_x003aMobilePhones2 = 342, ns1__UnindexedFieldURIType__persona_x003aAssistantPhoneNumbers = 343, ns1__UnindexedFieldURIType__persona_x003aCallbackPhones = 344, ns1__UnindexedFieldURIType__persona_x003aCarPhones = 345, ns1__UnindexedFieldURIType__persona_x003aHomeFaxes = 346, ns1__UnindexedFieldURIType__persona_x003aOrganizationMainPhones = 347, ns1__UnindexedFieldURIType__persona_x003aOtherFaxes = 348, ns1__UnindexedFieldURIType__persona_x003aOtherTelephones = 349, ns1__UnindexedFieldURIType__persona_x003aOtherPhones2 = 350, ns1__UnindexedFieldURIType__persona_x003aPagers = 351, ns1__UnindexedFieldURIType__persona_x003aRadioPhones = 352, ns1__UnindexedFieldURIType__persona_x003aTelexNumbers = 353, ns1__UnindexedFieldURIType__persona_x003aWorkFaxes = 354, ns1__UnindexedFieldURIType__persona_x003aEmails1 = 355, ns1__UnindexedFieldURIType__persona_x003aEmails2 = 356, ns1__UnindexedFieldURIType__persona_x003aEmails3 = 357, ns1__UnindexedFieldURIType__persona_x003aBusinessHomePages = 358, ns1__UnindexedFieldURIType__persona_x003aSchool = 359, ns1__UnindexedFieldURIType__persona_x003aPersonalHomePages = 360, ns1__UnindexedFieldURIType__persona_x003aOfficeLocations = 361, ns1__UnindexedFieldURIType__persona_x003aBusinessAddresses = 362, ns1__UnindexedFieldURIType__persona_x003aHomeAddresses = 363, ns1__UnindexedFieldURIType__persona_x003aOtherAddresses = 364, ns1__UnindexedFieldURIType__persona_x003aTitles = 365, ns1__UnindexedFieldURIType__persona_x003aDepartments = 366, ns1__UnindexedFieldURIType__persona_x003aCompanyNames = 367, ns1__UnindexedFieldURIType__persona_x003aManagers = 368, ns1__UnindexedFieldURIType__persona_x003aAssistantNames = 369, ns1__UnindexedFieldURIType__persona_x003aProfessions = 370, ns1__UnindexedFieldURIType__persona_x003aSpouseNames = 371, ns1__UnindexedFieldURIType__persona_x003aHobbies = 372, ns1__UnindexedFieldURIType__persona_x003aWeddingAnniversaries = 373, ns1__UnindexedFieldURIType__persona_x003aBirthdays = 374, ns1__UnindexedFieldURIType__persona_x003aChildren = 375, ns1__UnindexedFieldURIType__persona_x003aLocations = 376, ns1__UnindexedFieldURIType__persona_x003aExtendedProperties = 377, ns1__UnindexedFieldURIType__persona_x003aPostalAddress = 378, ns1__UnindexedFieldURIType__persona_x003aBodies = 379, ns1__UnindexedFieldURIType__rolemember_x003aMemberType = 380, ns1__UnindexedFieldURIType__rolemember_x003aMemberId = 381, ns1__UnindexedFieldURIType__rolemember_x003aDisplayName = 382, ns1__UnindexedFieldURIType__network_x003aTokenRefreshLastCompleted = 383, ns1__UnindexedFieldURIType__network_x003aTokenRefreshLastAttempted = 384, ns1__UnindexedFieldURIType__network_x003aSyncEnabled = 385, ns1__UnindexedFieldURIType__network_x003aRejectedOffers = 386, ns1__UnindexedFieldURIType__network_x003aSessionHandle = 387, ns1__UnindexedFieldURIType__network_x003aRefreshTokenExpiry2 = 388, ns1__UnindexedFieldURIType__network_x003aRefreshToken2 = 389, ns1__UnindexedFieldURIType__network_x003aPsaLastChanged = 390, ns1__UnindexedFieldURIType__network_x003aOffers = 391, ns1__UnindexedFieldURIType__network_x003aLastWelcomeContact = 392, ns1__UnindexedFieldURIType__network_x003aLastVersionSaved = 393, ns1__UnindexedFieldURIType__network_x003aDomainTag = 394, ns1__UnindexedFieldURIType__network_x003aFirstAuthErrorDates = 395, ns1__UnindexedFieldURIType__network_x003aErrorOffers = 396, ns1__UnindexedFieldURIType__network_x003aContactSyncSuccess = 397, ns1__UnindexedFieldURIType__network_x003aContactSyncError = 398, ns1__UnindexedFieldURIType__network_x003aClientToken2 = 399, ns1__UnindexedFieldURIType__network_x003aClientToken = 400, ns1__UnindexedFieldURIType__network_x003aClientPublishSecret = 401, ns1__UnindexedFieldURIType__network_x003aUserEmail = 402, ns1__UnindexedFieldURIType__network_x003aAutoLinkSuccess = 403, ns1__UnindexedFieldURIType__network_x003aAutoLinkError = 404, ns1__UnindexedFieldURIType__network_x003aIsDefault = 405, ns1__UnindexedFieldURIType__network_x003aSettings = 406, ns1__UnindexedFieldURIType__network_x003aProfileUrl = 407, ns1__UnindexedFieldURIType__network_x003aUserTileUrl = 408, ns1__UnindexedFieldURIType__network_x003aDomainId = 409, ns1__UnindexedFieldURIType__network_x003aSourceEntryID = 410, ns1__UnindexedFieldURIType__abchperson_x003aFavoriteOrder = 411, ns1__UnindexedFieldURIType__abchperson_x003aPersonId = 412, ns1__UnindexedFieldURIType__abchperson_x003aAntiLinkInfo = 413, ns1__UnindexedFieldURIType__abchperson_x003aRelevanceOrder1 = 414, ns1__UnindexedFieldURIType__abchperson_x003aRelevanceOrder2 = 415, ns1__UnindexedFieldURIType__abchperson_x003aContactHandles = 416, ns1__UnindexedFieldURIType__abchperson_x003aCategories = 417, ns1__UnindexedFieldURIType__booking_x003aServiceId = 418, ns1__UnindexedFieldURIType__booking_x003aStaffIds = 419, ns1__UnindexedFieldURIType__booking_x003aCustomerName = 420, ns1__UnindexedFieldURIType__booking_x003aCustomerEmail = 421, ns1__UnindexedFieldURIType__booking_x003aCustomerPhone = 422 };
#endif

#ifndef SOAP_TYPE_ns1__DictionaryURIType
#define SOAP_TYPE_ns1__DictionaryURIType (1109)
/* ns1:DictionaryURIType */
enum ns1__DictionaryURIType { ns1__DictionaryURIType__item_x003aInternetMessageHeader = 0, ns1__DictionaryURIType__contacts_x003aImAddress = 1, ns1__DictionaryURIType__contacts_x003aPhysicalAddress_x003aStreet = 2, ns1__DictionaryURIType__contacts_x003aPhysicalAddress_x003aCity = 3, ns1__DictionaryURIType__contacts_x003aPhysicalAddress_x003aState = 4, ns1__DictionaryURIType__contacts_x003aPhysicalAddress_x003aCountryOrRegion = 5, ns1__DictionaryURIType__contacts_x003aPhysicalAddress_x003aPostalCode = 6, ns1__DictionaryURIType__contacts_x003aPhoneNumber = 7, ns1__DictionaryURIType__contacts_x003aEmailAddress = 8, ns1__DictionaryURIType__distributionlist_x003aMembers_x003aMember = 9 };
#endif

#ifndef SOAP_TYPE_ns1__ExceptionPropertyURIType
#define SOAP_TYPE_ns1__ExceptionPropertyURIType (1110)
/* ns1:ExceptionPropertyURIType */
enum ns1__ExceptionPropertyURIType { ns1__ExceptionPropertyURIType__attachment_x003aName = 0, ns1__ExceptionPropertyURIType__attachment_x003aContentType = 1, ns1__ExceptionPropertyURIType__attachment_x003aContent = 2, ns1__ExceptionPropertyURIType__recurrence_x003aMonth = 3, ns1__ExceptionPropertyURIType__recurrence_x003aDayOfWeekIndex = 4, ns1__ExceptionPropertyURIType__recurrence_x003aDaysOfWeek = 5, ns1__ExceptionPropertyURIType__recurrence_x003aDayOfMonth = 6, ns1__ExceptionPropertyURIType__recurrence_x003aInterval = 7, ns1__ExceptionPropertyURIType__recurrence_x003aNumberOfOccurrences = 8, ns1__ExceptionPropertyURIType__timezone_x003aOffset = 9 };
#endif

#ifndef SOAP_TYPE_ns1__DistinguishedPropertySetType
#define SOAP_TYPE_ns1__DistinguishedPropertySetType (1112)
/* ns1:DistinguishedPropertySetType */
enum ns1__DistinguishedPropertySetType { ns1__DistinguishedPropertySetType__Meeting = 0, ns1__DistinguishedPropertySetType__Appointment = 1, ns1__DistinguishedPropertySetType__Common = 2, ns1__DistinguishedPropertySetType__PublicStrings = 3, ns1__DistinguishedPropertySetType__Address = 4, ns1__DistinguishedPropertySetType__InternetHeaders = 5, ns1__DistinguishedPropertySetType__CalendarAssistant = 6, ns1__DistinguishedPropertySetType__UnifiedMessaging = 7, ns1__DistinguishedPropertySetType__Task = 8, ns1__DistinguishedPropertySetType__Sharing = 9 };
#endif

#ifndef SOAP_TYPE_ns1__MapiPropertyTypeType
#define SOAP_TYPE_ns1__MapiPropertyTypeType (1113)
/* ns1:MapiPropertyTypeType */
enum ns1__MapiPropertyTypeType { ns1__MapiPropertyTypeType__ApplicationTime = 0, ns1__MapiPropertyTypeType__ApplicationTimeArray = 1, ns1__MapiPropertyTypeType__Binary = 2, ns1__MapiPropertyTypeType__BinaryArray = 3, ns1__MapiPropertyTypeType__Boolean = 4, ns1__MapiPropertyTypeType__CLSID = 5, ns1__MapiPropertyTypeType__CLSIDArray = 6, ns1__MapiPropertyTypeType__Currency = 7, ns1__MapiPropertyTypeType__CurrencyArray = 8, ns1__MapiPropertyTypeType__Double = 9, ns1__MapiPropertyTypeType__DoubleArray = 10, ns1__MapiPropertyTypeType__Error = 11, ns1__MapiPropertyTypeType__Float = 12, ns1__MapiPropertyTypeType__FloatArray = 13, ns1__MapiPropertyTypeType__Integer = 14, ns1__MapiPropertyTypeType__IntegerArray = 15, ns1__MapiPropertyTypeType__Long = 16, ns1__MapiPropertyTypeType__LongArray = 17, ns1__MapiPropertyTypeType__Null = 18, ns1__MapiPropertyTypeType__Object = 19, ns1__MapiPropertyTypeType__ObjectArray = 20, ns1__MapiPropertyTypeType__Short = 21, ns1__MapiPropertyTypeType__ShortArray = 22, ns1__MapiPropertyTypeType__SystemTime = 23, ns1__MapiPropertyTypeType__SystemTimeArray = 24, ns1__MapiPropertyTypeType__String = 25, ns1__MapiPropertyTypeType__StringArray = 26 };
#endif

#ifndef SOAP_TYPE_ns1__FolderQueryTraversalType
#define SOAP_TYPE_ns1__FolderQueryTraversalType (1114)
/* ns1:FolderQueryTraversalType */
enum ns1__FolderQueryTraversalType { ns1__FolderQueryTraversalType__Shallow = 0, ns1__FolderQueryTraversalType__Deep = 1, ns1__FolderQueryTraversalType__SoftDeleted = 2 };
#endif

#ifndef SOAP_TYPE_ns1__SearchFolderTraversalType
#define SOAP_TYPE_ns1__SearchFolderTraversalType (1115)
/* ns1:SearchFolderTraversalType */
enum ns1__SearchFolderTraversalType { ns1__SearchFolderTraversalType__Shallow = 0, ns1__SearchFolderTraversalType__Deep = 1 };
#endif

#ifndef SOAP_TYPE_ns1__ItemQueryTraversalType
#define SOAP_TYPE_ns1__ItemQueryTraversalType (1116)
/* ns1:ItemQueryTraversalType */
enum ns1__ItemQueryTraversalType { ns1__ItemQueryTraversalType__Shallow = 0, ns1__ItemQueryTraversalType__SoftDeleted = 1, ns1__ItemQueryTraversalType__Associated = 2 };
#endif

#ifndef SOAP_TYPE_ns1__ConversationQueryTraversalType
#define SOAP_TYPE_ns1__ConversationQueryTraversalType (1117)
/* ns1:ConversationQueryTraversalType */
enum ns1__ConversationQueryTraversalType { ns1__ConversationQueryTraversalType__Shallow = 0, ns1__ConversationQueryTraversalType__Deep = 1 };
#endif

#ifndef SOAP_TYPE_ns1__DefaultShapeNamesType
#define SOAP_TYPE_ns1__DefaultShapeNamesType (1118)
/* ns1:DefaultShapeNamesType */
enum ns1__DefaultShapeNamesType { ns1__DefaultShapeNamesType__IdOnly = 0, ns1__DefaultShapeNamesType__Default = 1, ns1__DefaultShapeNamesType__AllProperties = 2 };
#endif

#ifndef SOAP_TYPE_ns1__BodyTypeResponseType
#define SOAP_TYPE_ns1__BodyTypeResponseType (1119)
/* ns1:BodyTypeResponseType */
enum ns1__BodyTypeResponseType { ns1__BodyTypeResponseType__Best = 0, ns1__BodyTypeResponseType__HTML = 1, ns1__BodyTypeResponseType__Text = 2 };
#endif

#ifndef SOAP_TYPE_ns1__DisposalType
#define SOAP_TYPE_ns1__DisposalType (1120)
/* ns1:DisposalType */
enum ns1__DisposalType { ns1__DisposalType__HardDelete = 0, ns1__DisposalType__SoftDelete = 1, ns1__DisposalType__MoveToDeletedItems = 2 };
#endif

#ifndef SOAP_TYPE_ns1__ConflictResolutionType
#define SOAP_TYPE_ns1__ConflictResolutionType (1121)
/* ns1:ConflictResolutionType */
enum ns1__ConflictResolutionType { ns1__ConflictResolutionType__NeverOverwrite = 0, ns1__ConflictResolutionType__AutoResolve = 1, ns1__ConflictResolutionType__AlwaysOverwrite = 2 };
#endif

#ifndef SOAP_TYPE_ns1__ClientAccessTokenTypeType
#define SOAP_TYPE_ns1__ClientAccessTokenTypeType (1122)
/* ns1:ClientAccessTokenTypeType */
enum ns1__ClientAccessTokenTypeType { ns1__ClientAccessTokenTypeType__CallerIdentity = 0, ns1__ClientAccessTokenTypeType__ExtensionCallback = 1, ns1__ClientAccessTokenTypeType__ScopedToken = 2 };
#endif

#ifndef SOAP_TYPE_ns1__ResponseClassType
#define SOAP_TYPE_ns1__ResponseClassType (1123)
/* ns1:ResponseClassType */
enum ns1__ResponseClassType { ns1__ResponseClassType__Success = 0, ns1__ResponseClassType__Warning = 1, ns1__ResponseClassType__Error = 2 };
#endif

#ifndef SOAP_TYPE_ns1__SensitivityChoicesType
#define SOAP_TYPE_ns1__SensitivityChoicesType (1124)
/* ns1:SensitivityChoicesType */
enum ns1__SensitivityChoicesType { ns1__SensitivityChoicesType__Normal = 0, ns1__SensitivityChoicesType__Personal = 1, ns1__SensitivityChoicesType__Private = 2, ns1__SensitivityChoicesType__Confidential = 3 };
#endif

#ifndef SOAP_TYPE_ns1__ImportanceChoicesType
#define SOAP_TYPE_ns1__ImportanceChoicesType (1125)
/* ns1:ImportanceChoicesType */
enum ns1__ImportanceChoicesType { ns1__ImportanceChoicesType__Low = 0, ns1__ImportanceChoicesType__Normal = 1, ns1__ImportanceChoicesType__High = 2 };
#endif

#ifndef SOAP_TYPE_ns1__BodyTypeType
#define SOAP_TYPE_ns1__BodyTypeType (1126)
/* ns1:BodyTypeType */
enum ns1__BodyTypeType { ns1__BodyTypeType__HTML = 0, ns1__BodyTypeType__Text = 1 };
#endif

#ifndef SOAP_TYPE_ns1__DistinguishedFolderIdNameType
#define SOAP_TYPE_ns1__DistinguishedFolderIdNameType (1128)
/* ns1:DistinguishedFolderIdNameType */
enum ns1__DistinguishedFolderIdNameType { ns1__DistinguishedFolderIdNameType__calendar = 0, ns1__DistinguishedFolderIdNameType__contacts = 1, ns1__DistinguishedFolderIdNameType__deleteditems = 2, ns1__DistinguishedFolderIdNameType__drafts = 3, ns1__DistinguishedFolderIdNameType__inbox = 4, ns1__DistinguishedFolderIdNameType__journal = 5, ns1__DistinguishedFolderIdNameType__notes = 6, ns1__DistinguishedFolderIdNameType__outbox = 7, ns1__DistinguishedFolderIdNameType__sentitems = 8, ns1__DistinguishedFolderIdNameType__tasks = 9, ns1__DistinguishedFolderIdNameType__msgfolderroot = 10, ns1__DistinguishedFolderIdNameType__publicfoldersroot = 11, ns1__DistinguishedFolderIdNameType__root = 12, ns1__DistinguishedFolderIdNameType__junkemail = 13, ns1__DistinguishedFolderIdNameType__searchfolders = 14, ns1__DistinguishedFolderIdNameType__voicemail = 15, ns1__DistinguishedFolderIdNameType__recoverableitemsroot = 16, ns1__DistinguishedFolderIdNameType__recoverableitemsdeletions = 17, ns1__DistinguishedFolderIdNameType__recoverableitemsversions = 18, ns1__DistinguishedFolderIdNameType__recoverableitemspurges = 19, ns1__DistinguishedFolderIdNameType__recoverableitemsdiscoveryholds = 20, ns1__DistinguishedFolderIdNameType__archiveroot = 21, ns1__DistinguishedFolderIdNameType__archivemsgfolderroot = 22, ns1__DistinguishedFolderIdNameType__archivedeleteditems = 23, ns1__DistinguishedFolderIdNameType__archiveinbox = 24, ns1__DistinguishedFolderIdNameType__archiverecoverableitemsroot = 25, ns1__DistinguishedFolderIdNameType__archiverecoverableitemsdeletions = 26, ns1__DistinguishedFolderIdNameType__archiverecoverableitemsversions = 27, ns1__DistinguishedFolderIdNameType__archiverecoverableitemspurges = 28, ns1__DistinguishedFolderIdNameType__archiverecoverableitemsdiscoveryholds = 29, ns1__DistinguishedFolderIdNameType__syncissues = 30, ns1__DistinguishedFolderIdNameType__conflicts = 31, ns1__DistinguishedFolderIdNameType__localfailures = 32, ns1__DistinguishedFolderIdNameType__serverfailures = 33, ns1__DistinguishedFolderIdNameType__recipientcache = 34, ns1__DistinguishedFolderIdNameType__quickcontacts = 35, ns1__DistinguishedFolderIdNameType__conversationhistory = 36, ns1__DistinguishedFolderIdNameType__adminauditlogs = 37, ns1__DistinguishedFolderIdNameType__todosearch = 38, ns1__DistinguishedFolderIdNameType__mycontacts = 39, ns1__DistinguishedFolderIdNameType__directory = 40, ns1__DistinguishedFolderIdNameType__imcontactlist = 41, ns1__DistinguishedFolderIdNameType__peopleconnect = 42, ns1__DistinguishedFolderIdNameType__favorites = 43, ns1__DistinguishedFolderIdNameType__mecontact = 44, ns1__DistinguishedFolderIdNameType__personmetadata = 45 };
#endif

#ifndef SOAP_TYPE_ns1__CreateActionType
#define SOAP_TYPE_ns1__CreateActionType (1129)
/* ns1:CreateActionType */
enum ns1__CreateActionType { ns1__CreateActionType__CreateNew = 0, ns1__CreateActionType__Update = 1, ns1__CreateActionType__UpdateOrCreate = 2 };
#endif

#ifndef SOAP_TYPE_ns1__CompleteActionType
#define SOAP_TYPE_ns1__CompleteActionType (1130)
/* ns1:CompleteActionType */
enum ns1__CompleteActionType { ns1__CompleteActionType__Commit = 0, ns1__CompleteActionType__Abandon = 1 };
#endif

#ifndef SOAP_TYPE_ns1__ViewFilterType
#define SOAP_TYPE_ns1__ViewFilterType (1131)
/* ns1:ViewFilterType */
enum ns1__ViewFilterType { ns1__ViewFilterType__All = 0, ns1__ViewFilterType__Flagged = 1, ns1__ViewFilterType__HasAttachment = 2, ns1__ViewFilterType__ToOrCcMe = 3, ns1__ViewFilterType__Unread = 4, ns1__ViewFilterType__TaskActive = 5, ns1__ViewFilterType__TaskOverdue = 6, ns1__ViewFilterType__TaskCompleted = 7, ns1__ViewFilterType__NoClutter = 8, ns1__ViewFilterType__Clutter = 9 };
#endif

#ifndef SOAP_TYPE_ns1__ReminderActionType
#define SOAP_TYPE_ns1__ReminderActionType (1132)
/* ns1:ReminderActionType */
enum ns1__ReminderActionType { ns1__ReminderActionType__Dismiss = 0, ns1__ReminderActionType__Snooze = 1 };
#endif

#ifndef SOAP_TYPE_ns1__FlagStatusType
#define SOAP_TYPE_ns1__FlagStatusType (1135)
/* ns1:FlagStatusType */
enum ns1__FlagStatusType { ns1__FlagStatusType__NotFlagged = 0, ns1__FlagStatusType__Flagged = 1, ns1__FlagStatusType__Complete = 2 };
#endif

#ifndef SOAP_TYPE_ns1__PredictedActionReasonType
#define SOAP_TYPE_ns1__PredictedActionReasonType (1136)
/* ns1:PredictedActionReasonType */
enum ns1__PredictedActionReasonType { ns1__PredictedActionReasonType__None = 0, ns1__PredictedActionReasonType__ConversationStarterIsYou = 1, ns1__PredictedActionReasonType__OnlyRecipient = 2, ns1__PredictedActionReasonType__ConversationContributions = 3, ns1__PredictedActionReasonType__MarkedImportantBySender = 4, ns1__PredictedActionReasonType__SenderIsManager = 5, ns1__PredictedActionReasonType__SenderIsInManagementChain = 6, ns1__PredictedActionReasonType__SenderIsDirectReport = 7, ns1__PredictedActionReasonType__ActionBasedOnSender = 8, ns1__PredictedActionReasonType__NameOnToLine = 9, ns1__PredictedActionReasonType__NameOnCcLine = 10, ns1__PredictedActionReasonType__ManagerPosition = 11, ns1__PredictedActionReasonType__ReplyToAMessageFromMe = 12, ns1__PredictedActionReasonType__PreviouslyFlagged = 13, ns1__PredictedActionReasonType__ActionBasedOnRecipients = 14, ns1__PredictedActionReasonType__ActionBasedOnSubjectWords = 15, ns1__PredictedActionReasonType__ActionBasedOnBasedOnBodyWords = 16 };
#endif

#ifndef SOAP_TYPE_ns1__EmailPositionType
#define SOAP_TYPE_ns1__EmailPositionType (1137)
/* ns1:EmailPositionType */
enum ns1__EmailPositionType { ns1__EmailPositionType__LatestReply = 0, ns1__EmailPositionType__Other = 1, ns1__EmailPositionType__Subject = 2, ns1__EmailPositionType__Signature = 3 };
#endif

#ifndef SOAP_TYPE_ns1__ConversationActionTypeType
#define SOAP_TYPE_ns1__ConversationActionTypeType (1138)
/* ns1:ConversationActionTypeType */
enum ns1__ConversationActionTypeType { ns1__ConversationActionTypeType__AlwaysCategorize = 0, ns1__ConversationActionTypeType__AlwaysDelete = 1, ns1__ConversationActionTypeType__AlwaysMove = 2, ns1__ConversationActionTypeType__Delete = 3, ns1__ConversationActionTypeType__Move = 4, ns1__ConversationActionTypeType__Copy = 5, ns1__ConversationActionTypeType__SetReadState = 6, ns1__ConversationActionTypeType__SetRetentionPolicy = 7, ns1__ConversationActionTypeType__Flag = 8 };
#endif

#ifndef SOAP_TYPE_ns1__ConversationNodeSortOrder
#define SOAP_TYPE_ns1__ConversationNodeSortOrder (1139)
/* ns1:ConversationNodeSortOrder */
enum ns1__ConversationNodeSortOrder { ns1__ConversationNodeSortOrder__TreeOrderAscending = 0, ns1__ConversationNodeSortOrder__TreeOrderDescending = 1, ns1__ConversationNodeSortOrder__DateOrderAscending = 2, ns1__ConversationNodeSortOrder__DateOrderDescending = 3 };
#endif

#ifndef SOAP_TYPE_ns1__InsightGroupType
#define SOAP_TYPE_ns1__InsightGroupType (1140)
/* ns1:InsightGroupType */
enum ns1__InsightGroupType { ns1__InsightGroupType__BasicBio = 0, ns1__InsightGroupType__ProfessionalBio = 1, ns1__InsightGroupType__OrgStructure = 2, ns1__InsightGroupType__Office = 3, ns1__InsightGroupType__CompanyInfo = 4 };
#endif

#ifndef SOAP_TYPE_ns1__InsightType
#define SOAP_TYPE_ns1__InsightType (1141)
/* ns1:InsightType */
enum ns1__InsightType { ns1__InsightType__FullName = 0, ns1__InsightType__FirstName = 1, ns1__InsightType__LastName = 2, ns1__InsightType__PhoneNumber = 3, ns1__InsightType__SMSNumber = 4, ns1__InsightType__EmailAddress = 5, ns1__InsightType__FacebookProfileLink = 6, ns1__InsightType__LinkedInProfileLink = 7, ns1__InsightType__PreviousJob = 8, ns1__InsightType__EducationHistory = 9, ns1__InsightType__Skills = 10, ns1__InsightType__ProfessionalBiography = 11, ns1__InsightType__ManagementChain = 12, ns1__InsightType__DirectReports = 13, ns1__InsightType__Peers = 14, ns1__InsightType__TeamSize = 15, ns1__InsightType__CurrentJob = 16, ns1__InsightType__Birthday = 17, ns1__InsightType__Hometown = 18, ns1__InsightType__CurrentLocation = 19, ns1__InsightType__UserProfilePicture = 20, ns1__InsightType__DelveDoc = 21, ns1__InsightType__CompanyProfile = 22, ns1__InsightType__Office = 23, ns1__InsightType__Headline = 24, ns1__InsightType__MutualConnections = 25, ns1__InsightType__Title = 26, ns1__InsightType__MutualManager = 27, ns1__InsightType__TitleChanged = 28, ns1__InsightType__ManagerChanged = 29, ns1__InsightType__OfficeChanged = 30, ns1__InsightType__PeersChanged = 31, ns1__InsightType__CompanyChanged = 32, ns1__InsightType__AuthoredDocumentsChanged = 33, ns1__InsightType__CoauthoredDocumentsChanged = 34 };
#endif

#ifndef SOAP_TYPE_ns1__InsightSourceType
#define SOAP_TYPE_ns1__InsightSourceType (1142)
/* ns1:InsightSourceType */
enum ns1__InsightSourceType { ns1__InsightSourceType__AAD = 0, ns1__InsightSourceType__Mailbox = 1, ns1__InsightSourceType__LinkedIn = 2, ns1__InsightSourceType__Facebook = 3, ns1__InsightSourceType__Delve = 4, ns1__InsightSourceType__Satori = 5 };
#endif

#ifndef SOAP_TYPE_ns1__TokenSourceType
#define SOAP_TYPE_ns1__TokenSourceType (1143)
/* ns1:TokenSourceType */
enum ns1__TokenSourceType { ns1__TokenSourceType__None = 0, ns1__TokenSourceType__LinkedIn = 1, ns1__TokenSourceType__Facebook = 2 };
#endif

#ifndef SOAP_TYPE_ns1__GroupMemberIdentifierType
#define SOAP_TYPE_ns1__GroupMemberIdentifierType (1144)
/* ns1:GroupMemberIdentifierType */
enum ns1__GroupMemberIdentifierType { ns1__GroupMemberIdentifierType__ExternalDirectoryObjectId = 0, ns1__GroupMemberIdentifierType__LegacyExchangeDN = 1, ns1__GroupMemberIdentifierType__SmtpAddress = 2 };
#endif

#ifndef SOAP_TYPE_ns1__ModernGroupTypeType
#define SOAP_TYPE_ns1__ModernGroupTypeType (1145)
/* ns1:ModernGroupTypeType */
enum ns1__ModernGroupTypeType { ns1__ModernGroupTypeType__None = 0, ns1__ModernGroupTypeType__Private = 1, ns1__ModernGroupTypeType__Secret = 2, ns1__ModernGroupTypeType__Public = 3 };
#endif

#ifndef SOAP_TYPE_ns1__MessageDispositionType
#define SOAP_TYPE_ns1__MessageDispositionType (1146)
/* ns1:MessageDispositionType */
enum ns1__MessageDispositionType { ns1__MessageDispositionType__SaveOnly = 0, ns1__MessageDispositionType__SendOnly = 1, ns1__MessageDispositionType__SendAndSaveCopy = 2 };
#endif

#ifndef SOAP_TYPE_ns1__CalendarItemCreateOrDeleteOperationType
#define SOAP_TYPE_ns1__CalendarItemCreateOrDeleteOperationType (1147)
/* ns1:CalendarItemCreateOrDeleteOperationType */
enum ns1__CalendarItemCreateOrDeleteOperationType { ns1__CalendarItemCreateOrDeleteOperationType__SendToNone = 0, ns1__CalendarItemCreateOrDeleteOperationType__SendOnlyToAll = 1, ns1__CalendarItemCreateOrDeleteOperationType__SendToAllAndSaveCopy = 2 };
#endif

#ifndef SOAP_TYPE_ns1__CalendarItemUpdateOperationType
#define SOAP_TYPE_ns1__CalendarItemUpdateOperationType (1148)
/* ns1:CalendarItemUpdateOperationType */
enum ns1__CalendarItemUpdateOperationType { ns1__CalendarItemUpdateOperationType__SendToNone = 0, ns1__CalendarItemUpdateOperationType__SendOnlyToAll = 1, ns1__CalendarItemUpdateOperationType__SendOnlyToChanged = 2, ns1__CalendarItemUpdateOperationType__SendToAllAndSaveCopy = 3, ns1__CalendarItemUpdateOperationType__SendToChangedAndSaveCopy = 4 };
#endif

#ifndef SOAP_TYPE_ns1__AffectedTaskOccurrencesType
#define SOAP_TYPE_ns1__AffectedTaskOccurrencesType (1149)
/* ns1:AffectedTaskOccurrencesType */
enum ns1__AffectedTaskOccurrencesType { ns1__AffectedTaskOccurrencesType__AllOccurrences = 0, ns1__AffectedTaskOccurrencesType__SpecifiedOccurrenceOnly = 1 };
#endif

#ifndef SOAP_TYPE_ns1__TaskStatusType
#define SOAP_TYPE_ns1__TaskStatusType (1150)
/* ns1:TaskStatusType */
enum ns1__TaskStatusType { ns1__TaskStatusType__NotStarted = 0, ns1__TaskStatusType__InProgress = 1, ns1__TaskStatusType__Completed = 2, ns1__TaskStatusType__WaitingOnOthers = 3, ns1__TaskStatusType__Deferred = 4 };
#endif

#ifndef SOAP_TYPE_ns1__TaskDelegateStateType
#define SOAP_TYPE_ns1__TaskDelegateStateType (1151)
/* ns1:TaskDelegateStateType */
enum ns1__TaskDelegateStateType { ns1__TaskDelegateStateType__NoMatch = 0, ns1__TaskDelegateStateType__OwnNew = 1, ns1__TaskDelegateStateType__Owned = 2, ns1__TaskDelegateStateType__Accepted = 3, ns1__TaskDelegateStateType__Declined = 4, ns1__TaskDelegateStateType__Max = 5 };
#endif

#ifndef SOAP_TYPE_ns1__IndexBasePointType
#define SOAP_TYPE_ns1__IndexBasePointType (1152)
/* ns1:IndexBasePointType */
enum ns1__IndexBasePointType { ns1__IndexBasePointType__Beginning = 0, ns1__IndexBasePointType__End = 1 };
#endif

#ifndef SOAP_TYPE_ns1__ResolveNamesSearchScopeType
#define SOAP_TYPE_ns1__ResolveNamesSearchScopeType (1153)
/* ns1:ResolveNamesSearchScopeType */
enum ns1__ResolveNamesSearchScopeType { ns1__ResolveNamesSearchScopeType__ActiveDirectory = 0, ns1__ResolveNamesSearchScopeType__ActiveDirectoryContacts = 1, ns1__ResolveNamesSearchScopeType__Contacts = 2, ns1__ResolveNamesSearchScopeType__ContactsActiveDirectory = 3 };
#endif

#ifndef SOAP_TYPE_ns1__MeetingRequestTypeType
#define SOAP_TYPE_ns1__MeetingRequestTypeType (1154)
/* ns1:MeetingRequestTypeType */
enum ns1__MeetingRequestTypeType { ns1__MeetingRequestTypeType__None = 0, ns1__MeetingRequestTypeType__FullUpdate = 1, ns1__MeetingRequestTypeType__InformationalUpdate = 2, ns1__MeetingRequestTypeType__NewMeetingRequest = 3, ns1__MeetingRequestTypeType__Outdated = 4, ns1__MeetingRequestTypeType__SilentUpdate = 5, ns1__MeetingRequestTypeType__PrincipalWantsCopy = 6 };
#endif

#ifndef SOAP_TYPE_ns1__LegacyFreeBusyType
#define SOAP_TYPE_ns1__LegacyFreeBusyType (1155)
/* ns1:LegacyFreeBusyType */
enum ns1__LegacyFreeBusyType { ns1__LegacyFreeBusyType__Free = 0, ns1__LegacyFreeBusyType__Tentative = 1, ns1__LegacyFreeBusyType__Busy = 2, ns1__LegacyFreeBusyType__OOF = 3, ns1__LegacyFreeBusyType__WorkingElsewhere = 4, ns1__LegacyFreeBusyType__NoData = 5 };
#endif

#ifndef SOAP_TYPE_ns1__CalendarItemTypeType
#define SOAP_TYPE_ns1__CalendarItemTypeType (1156)
/* ns1:CalendarItemTypeType */
enum ns1__CalendarItemTypeType { ns1__CalendarItemTypeType__Single = 0, ns1__CalendarItemTypeType__Occurrence = 1, ns1__CalendarItemTypeType__Exception = 2, ns1__CalendarItemTypeType__RecurringMaster = 3 };
#endif

#ifndef SOAP_TYPE_ns1__ResponseTypeType
#define SOAP_TYPE_ns1__ResponseTypeType (1157)
/* ns1:ResponseTypeType */
enum ns1__ResponseTypeType { ns1__ResponseTypeType__Unknown = 0, ns1__ResponseTypeType__Organizer = 1, ns1__ResponseTypeType__Tentative = 2, ns1__ResponseTypeType__Accept = 3, ns1__ResponseTypeType__Decline = 4, ns1__ResponseTypeType__NoResponseReceived = 5 };
#endif

#ifndef SOAP_TYPE_ns1__LobbyBypassType
#define SOAP_TYPE_ns1__LobbyBypassType (1158)
/* ns1:LobbyBypassType */
enum ns1__LobbyBypassType { ns1__LobbyBypassType__Disabled = 0, ns1__LobbyBypassType__EnabledForGatewayParticipants = 1 };
#endif

#ifndef SOAP_TYPE_ns1__OnlineMeetingAccessLevelType
#define SOAP_TYPE_ns1__OnlineMeetingAccessLevelType (1159)
/* ns1:OnlineMeetingAccessLevelType */
enum ns1__OnlineMeetingAccessLevelType { ns1__OnlineMeetingAccessLevelType__Locked = 0, ns1__OnlineMeetingAccessLevelType__Invited = 1, ns1__OnlineMeetingAccessLevelType__Internal = 2, ns1__OnlineMeetingAccessLevelType__Everyone = 3 };
#endif

#ifndef SOAP_TYPE_ns1__PresentersType
#define SOAP_TYPE_ns1__PresentersType (1160)
/* ns1:PresentersType */
enum ns1__PresentersType { ns1__PresentersType__Disabled = 0, ns1__PresentersType__Internal = 1, ns1__PresentersType__Everyone = 2 };
#endif

#ifndef SOAP_TYPE_ns1__DayOfWeekType
#define SOAP_TYPE_ns1__DayOfWeekType (1161)
/* ns1:DayOfWeekType */
enum ns1__DayOfWeekType { ns1__DayOfWeekType__Sunday = 0, ns1__DayOfWeekType__Monday = 1, ns1__DayOfWeekType__Tuesday = 2, ns1__DayOfWeekType__Wednesday = 3, ns1__DayOfWeekType__Thursday = 4, ns1__DayOfWeekType__Friday = 5, ns1__DayOfWeekType__Saturday = 6, ns1__DayOfWeekType__Day = 7, ns1__DayOfWeekType__Weekday = 8, ns1__DayOfWeekType__WeekendDay = 9 };
#endif

#ifndef SOAP_TYPE_ns1__DayOfWeekIndexType
#define SOAP_TYPE_ns1__DayOfWeekIndexType (1162)
/* ns1:DayOfWeekIndexType */
enum ns1__DayOfWeekIndexType { ns1__DayOfWeekIndexType__First = 0, ns1__DayOfWeekIndexType__Second = 1, ns1__DayOfWeekIndexType__Third = 2, ns1__DayOfWeekIndexType__Fourth = 3, ns1__DayOfWeekIndexType__Last = 4 };
#endif

#ifndef SOAP_TYPE_ns1__MonthNamesType
#define SOAP_TYPE_ns1__MonthNamesType (1163)
/* ns1:MonthNamesType */
enum ns1__MonthNamesType { ns1__MonthNamesType__January = 0, ns1__MonthNamesType__February = 1, ns1__MonthNamesType__March = 2, ns1__MonthNamesType__April = 3, ns1__MonthNamesType__May = 4, ns1__MonthNamesType__June = 5, ns1__MonthNamesType__July = 6, ns1__MonthNamesType__August = 7, ns1__MonthNamesType__September = 8, ns1__MonthNamesType__October = 9, ns1__MonthNamesType__November = 10, ns1__MonthNamesType__December = 11 };
#endif

#ifndef SOAP_TYPE_ns1__LocationSourceType
#define SOAP_TYPE_ns1__LocationSourceType (1164)
/* ns1:LocationSourceType */
enum ns1__LocationSourceType { ns1__LocationSourceType__None = 0, ns1__LocationSourceType__LocationServices = 1, ns1__LocationSourceType__PhonebookServices = 2, ns1__LocationSourceType__Device = 3, ns1__LocationSourceType__Contact = 4, ns1__LocationSourceType__Resource = 5 };
#endif

#ifndef SOAP_TYPE_ns1__TransitionTargetKindType
#define SOAP_TYPE_ns1__TransitionTargetKindType (1165)
/* ns1:TransitionTargetKindType */
enum ns1__TransitionTargetKindType { ns1__TransitionTargetKindType__Period = 0, ns1__TransitionTargetKindType__Group = 1 };
#endif

#ifndef SOAP_TYPE_ns1__RoleMemberTypeType
#define SOAP_TYPE_ns1__RoleMemberTypeType (1166)
/* ns1:RoleMemberTypeType */
enum ns1__RoleMemberTypeType { ns1__RoleMemberTypeType__None = 0, ns1__RoleMemberTypeType__Passport = 1, ns1__RoleMemberTypeType__Everyone = 2, ns1__RoleMemberTypeType__Email = 3, ns1__RoleMemberTypeType__Phone = 4, ns1__RoleMemberTypeType__SkypeId = 5 };
#endif

#ifndef SOAP_TYPE_ns1__ImAddressKeyType
#define SOAP_TYPE_ns1__ImAddressKeyType (1167)
/* ns1:ImAddressKeyType */
enum ns1__ImAddressKeyType { ns1__ImAddressKeyType__ImAddress1 = 0, ns1__ImAddressKeyType__ImAddress2 = 1, ns1__ImAddressKeyType__ImAddress3 = 2 };
#endif

#ifndef SOAP_TYPE_ns1__EmailAddressKeyType
#define SOAP_TYPE_ns1__EmailAddressKeyType (1168)
/* ns1:EmailAddressKeyType */
enum ns1__EmailAddressKeyType { ns1__EmailAddressKeyType__EmailAddress1 = 0, ns1__EmailAddressKeyType__EmailAddress2 = 1, ns1__EmailAddressKeyType__EmailAddress3 = 2 };
#endif

#ifndef SOAP_TYPE_ns1__AbchEmailAddressTypeType
#define SOAP_TYPE_ns1__AbchEmailAddressTypeType (1169)
/* ns1:AbchEmailAddressTypeType */
enum ns1__AbchEmailAddressTypeType { ns1__AbchEmailAddressTypeType__Personal = 0, ns1__AbchEmailAddressTypeType__Business = 1, ns1__AbchEmailAddressTypeType__Other = 2, ns1__AbchEmailAddressTypeType__Passport = 3 };
#endif

#ifndef SOAP_TYPE_ns1__ContactUrlKeyType
#define SOAP_TYPE_ns1__ContactUrlKeyType (1170)
/* ns1:ContactUrlKeyType */
enum ns1__ContactUrlKeyType { ns1__ContactUrlKeyType__Personal = 0, ns1__ContactUrlKeyType__Business = 1, ns1__ContactUrlKeyType__Attachment = 2, ns1__ContactUrlKeyType__EbcDisplayDefinition = 3, ns1__ContactUrlKeyType__EbcFinalImage = 4, ns1__ContactUrlKeyType__EbcLogo = 5, ns1__ContactUrlKeyType__Feed = 6, ns1__ContactUrlKeyType__Image = 7, ns1__ContactUrlKeyType__InternalMarker = 8, ns1__ContactUrlKeyType__Other = 9 };
#endif

#ifndef SOAP_TYPE_ns1__PhoneNumberKeyType
#define SOAP_TYPE_ns1__PhoneNumberKeyType (1171)
/* ns1:PhoneNumberKeyType */
enum ns1__PhoneNumberKeyType { ns1__PhoneNumberKeyType__AssistantPhone = 0, ns1__PhoneNumberKeyType__BusinessFax = 1, ns1__PhoneNumberKeyType__BusinessPhone = 2, ns1__PhoneNumberKeyType__BusinessPhone2 = 3, ns1__PhoneNumberKeyType__Callback = 4, ns1__PhoneNumberKeyType__CarPhone = 5, ns1__PhoneNumberKeyType__CompanyMainPhone = 6, ns1__PhoneNumberKeyType__HomeFax = 7, ns1__PhoneNumberKeyType__HomePhone = 8, ns1__PhoneNumberKeyType__HomePhone2 = 9, ns1__PhoneNumberKeyType__Isdn = 10, ns1__PhoneNumberKeyType__MobilePhone = 11, ns1__PhoneNumberKeyType__OtherFax = 12, ns1__PhoneNumberKeyType__OtherTelephone = 13, ns1__PhoneNumberKeyType__Pager = 14, ns1__PhoneNumberKeyType__PrimaryPhone = 15, ns1__PhoneNumberKeyType__RadioPhone = 16, ns1__PhoneNumberKeyType__Telex = 17, ns1__PhoneNumberKeyType__TtyTddPhone = 18, ns1__PhoneNumberKeyType__BusinessMobile = 19, ns1__PhoneNumberKeyType__IPPhone = 20, ns1__PhoneNumberKeyType__Mms = 21, ns1__PhoneNumberKeyType__Msn = 22 };
#endif

#ifndef SOAP_TYPE_ns1__PhysicalAddressIndexType
#define SOAP_TYPE_ns1__PhysicalAddressIndexType (1172)
/* ns1:PhysicalAddressIndexType */
enum ns1__PhysicalAddressIndexType { ns1__PhysicalAddressIndexType__None = 0, ns1__PhysicalAddressIndexType__Business = 1, ns1__PhysicalAddressIndexType__Home = 2, ns1__PhysicalAddressIndexType__Other = 3 };
#endif

#ifndef SOAP_TYPE_ns1__PhysicalAddressKeyType
#define SOAP_TYPE_ns1__PhysicalAddressKeyType (1173)
/* ns1:PhysicalAddressKeyType */
enum ns1__PhysicalAddressKeyType { ns1__PhysicalAddressKeyType__Business = 0, ns1__PhysicalAddressKeyType__Home = 1, ns1__PhysicalAddressKeyType__Other = 2 };
#endif

#ifndef SOAP_TYPE_ns1__FileAsMappingType
#define SOAP_TYPE_ns1__FileAsMappingType (1174)
/* ns1:FileAsMappingType */
enum ns1__FileAsMappingType { ns1__FileAsMappingType__None = 0, ns1__FileAsMappingType__LastCommaFirst = 1, ns1__FileAsMappingType__FirstSpaceLast = 2, ns1__FileAsMappingType__Company = 3, ns1__FileAsMappingType__LastCommaFirstCompany = 4, ns1__FileAsMappingType__CompanyLastFirst = 5, ns1__FileAsMappingType__LastFirst = 6, ns1__FileAsMappingType__LastFirstCompany = 7, ns1__FileAsMappingType__CompanyLastCommaFirst = 8, ns1__FileAsMappingType__LastFirstSuffix = 9, ns1__FileAsMappingType__LastSpaceFirstCompany = 10, ns1__FileAsMappingType__CompanyLastSpaceFirst = 11, ns1__FileAsMappingType__LastSpaceFirst = 12, ns1__FileAsMappingType__DisplayName = 13, ns1__FileAsMappingType__FirstName = 14, ns1__FileAsMappingType__LastFirstMiddleSuffix = 15, ns1__FileAsMappingType__LastName = 16, ns1__FileAsMappingType__Empty = 17 };
#endif

#ifndef SOAP_TYPE_ns1__ContactSourceType
#define SOAP_TYPE_ns1__ContactSourceType (1175)
/* ns1:ContactSourceType */
enum ns1__ContactSourceType { ns1__ContactSourceType__ActiveDirectory = 0, ns1__ContactSourceType__Store = 1 };
#endif

#ifndef SOAP_TYPE_ns1__MemberStatusType
#define SOAP_TYPE_ns1__MemberStatusType (1176)
/* ns1:MemberStatusType */
enum ns1__MemberStatusType { ns1__MemberStatusType__Unrecognized = 0, ns1__MemberStatusType__Normal = 1, ns1__MemberStatusType__Demoted = 2 };
#endif

#ifndef SOAP_TYPE_ns1__AggregateType
#define SOAP_TYPE_ns1__AggregateType (1177)
/* ns1:AggregateType */
enum ns1__AggregateType { ns1__AggregateType__Minimum = 0, ns1__AggregateType__Maximum = 1 };
#endif

#ifndef SOAP_TYPE_ns1__StandardGroupByType
#define SOAP_TYPE_ns1__StandardGroupByType (1178)
/* ns1:StandardGroupByType */
enum ns1__StandardGroupByType { ns1__StandardGroupByType__ConversationTopic = 0 };
#endif

#ifndef SOAP_TYPE_ns1__ContainmentModeType
#define SOAP_TYPE_ns1__ContainmentModeType (1180)
/* ns1:ContainmentModeType */
enum ns1__ContainmentModeType { ns1__ContainmentModeType__FullString = 0, ns1__ContainmentModeType__Prefixed = 1, ns1__ContainmentModeType__Substring = 2, ns1__ContainmentModeType__PrefixOnWords = 3, ns1__ContainmentModeType__ExactPhrase = 4 };
#endif

#ifndef SOAP_TYPE_ns1__ContainmentComparisonType
#define SOAP_TYPE_ns1__ContainmentComparisonType (1181)
/* ns1:ContainmentComparisonType */
enum ns1__ContainmentComparisonType { ns1__ContainmentComparisonType__Exact = 0, ns1__ContainmentComparisonType__IgnoreCase = 1, ns1__ContainmentComparisonType__IgnoreNonSpacingCharacters = 2, ns1__ContainmentComparisonType__Loose = 3, ns1__ContainmentComparisonType__IgnoreCaseAndNonSpacingCharacters = 4, ns1__ContainmentComparisonType__LooseAndIgnoreCase = 5, ns1__ContainmentComparisonType__LooseAndIgnoreNonSpace = 6, ns1__ContainmentComparisonType__LooseAndIgnoreCaseAndIgnoreNonSpace = 7 };
#endif

#ifndef SOAP_TYPE_ns1__SortDirectionType
#define SOAP_TYPE_ns1__SortDirectionType (1182)
/* ns1:SortDirectionType */
enum ns1__SortDirectionType { ns1__SortDirectionType__Ascending = 0, ns1__SortDirectionType__Descending = 1 };
#endif

#ifndef SOAP_TYPE_ns1__NotificationEventTypeType
#define SOAP_TYPE_ns1__NotificationEventTypeType (1183)
/* ns1:NotificationEventTypeType */
enum ns1__NotificationEventTypeType { ns1__NotificationEventTypeType__CopiedEvent = 0, ns1__NotificationEventTypeType__CreatedEvent = 1, ns1__NotificationEventTypeType__DeletedEvent = 2, ns1__NotificationEventTypeType__ModifiedEvent = 3, ns1__NotificationEventTypeType__MovedEvent = 4, ns1__NotificationEventTypeType__NewMailEvent = 5, ns1__NotificationEventTypeType__FreeBusyChangedEvent = 6 };
#endif

#ifndef SOAP_TYPE_ns1__SubscriptionStatusType
#define SOAP_TYPE_ns1__SubscriptionStatusType (1186)
/* ns1:SubscriptionStatusType */
enum ns1__SubscriptionStatusType { ns1__SubscriptionStatusType__OK = 0, ns1__SubscriptionStatusType__Unsubscribe = 1 };
#endif

#ifndef SOAP_TYPE_ns1__ConnectionStatusType
#define SOAP_TYPE_ns1__ConnectionStatusType (1188)
/* ns1:ConnectionStatusType */
enum ns1__ConnectionStatusType { ns1__ConnectionStatusType__OK = 0, ns1__ConnectionStatusType__Closed = 1 };
#endif

#ifndef SOAP_TYPE_ns1__UnifiedGroupAccessType
#define SOAP_TYPE_ns1__UnifiedGroupAccessType (1190)
/* ns1:UnifiedGroupAccessType */
enum ns1__UnifiedGroupAccessType { ns1__UnifiedGroupAccessType__None = 0, ns1__UnifiedGroupAccessType__Private = 1, ns1__UnifiedGroupAccessType__Secret = 2, ns1__UnifiedGroupAccessType__Public = 3 };
#endif

#ifndef SOAP_TYPE_ns1__SyncFolderItemsScopeType
#define SOAP_TYPE_ns1__SyncFolderItemsScopeType (1192)
/* ns1:SyncFolderItemsScopeType */
enum ns1__SyncFolderItemsScopeType { ns1__SyncFolderItemsScopeType__NormalItems = 0, ns1__SyncFolderItemsScopeType__NormalAndAssociatedItems = 1 };
#endif

#ifndef SOAP_TYPE_ns1__AvailabilityProxyRequestType
#define SOAP_TYPE_ns1__AvailabilityProxyRequestType (1193)
/* ns1:AvailabilityProxyRequestType */
enum ns1__AvailabilityProxyRequestType { ns1__AvailabilityProxyRequestType__CrossSite = 0, ns1__AvailabilityProxyRequestType__CrossForest = 1 };
#endif

#ifndef SOAP_TYPE_ns1__MeetingAttendeeType
#define SOAP_TYPE_ns1__MeetingAttendeeType (1194)
/* ns1:MeetingAttendeeType */
enum ns1__MeetingAttendeeType { ns1__MeetingAttendeeType__Organizer = 0, ns1__MeetingAttendeeType__Required = 1, ns1__MeetingAttendeeType__Optional = 2, ns1__MeetingAttendeeType__Room = 3, ns1__MeetingAttendeeType__Resource = 4 };
#endif

#ifndef SOAP_TYPE_ns1__SuggestionQuality
#define SOAP_TYPE_ns1__SuggestionQuality (1195)
/* ns1:SuggestionQuality */
enum ns1__SuggestionQuality { ns1__SuggestionQuality__Excellent = 0, ns1__SuggestionQuality__Good = 1, ns1__SuggestionQuality__Fair = 2, ns1__SuggestionQuality__Poor = 3 };
#endif

#ifndef SOAP_TYPE_ns1__OofState
#define SOAP_TYPE_ns1__OofState (1196)
/* ns1:OofState */
enum ns1__OofState { ns1__OofState__Disabled = 0, ns1__OofState__Enabled = 1, ns1__OofState__Scheduled = 2 };
#endif

#ifndef SOAP_TYPE_ns1__ExternalAudience
#define SOAP_TYPE_ns1__ExternalAudience (1197)
/* ns1:ExternalAudience */
enum ns1__ExternalAudience { ns1__ExternalAudience__None = 0, ns1__ExternalAudience__Known = 1, ns1__ExternalAudience__All = 2 };
#endif

#ifndef SOAP_TYPE_ns1__SendPromptType
#define SOAP_TYPE_ns1__SendPromptType (1198)
/* ns1:SendPromptType */
enum ns1__SendPromptType { ns1__SendPromptType__None = 0, ns1__SendPromptType__Send = 1, ns1__SendPromptType__VotingOption = 2 };
#endif

#ifndef SOAP_TYPE_ns1__IdFormatType
#define SOAP_TYPE_ns1__IdFormatType (1199)
/* ns1:IdFormatType */
enum ns1__IdFormatType { ns1__IdFormatType__EwsLegacyId = 0, ns1__IdFormatType__EwsId = 1, ns1__IdFormatType__EntryId = 2, ns1__IdFormatType__HexEntryId = 3, ns1__IdFormatType__StoreId = 4, ns1__IdFormatType__OwaId = 5 };
#endif

#ifndef SOAP_TYPE_ns1__DistinguishedUserType
#define SOAP_TYPE_ns1__DistinguishedUserType (1200)
/* ns1:DistinguishedUserType */
enum ns1__DistinguishedUserType { ns1__DistinguishedUserType__Default = 0, ns1__DistinguishedUserType__Anonymous = 1 };
#endif

#ifndef SOAP_TYPE_ns1__PermissionReadAccessType
#define SOAP_TYPE_ns1__PermissionReadAccessType (1201)
/* ns1:PermissionReadAccessType */
enum ns1__PermissionReadAccessType { ns1__PermissionReadAccessType__None = 0, ns1__PermissionReadAccessType__FullDetails = 1 };
#endif

#ifndef SOAP_TYPE_ns1__CalendarPermissionReadAccessType
#define SOAP_TYPE_ns1__CalendarPermissionReadAccessType (1202)
/* ns1:CalendarPermissionReadAccessType */
enum ns1__CalendarPermissionReadAccessType { ns1__CalendarPermissionReadAccessType__None = 0, ns1__CalendarPermissionReadAccessType__TimeOnly = 1, ns1__CalendarPermissionReadAccessType__TimeAndSubjectAndLocation = 2, ns1__CalendarPermissionReadAccessType__FullDetails = 3 };
#endif

#ifndef SOAP_TYPE_ns1__PermissionActionType
#define SOAP_TYPE_ns1__PermissionActionType (1203)
/* ns1:PermissionActionType */
enum ns1__PermissionActionType { ns1__PermissionActionType__None = 0, ns1__PermissionActionType__Owned = 1, ns1__PermissionActionType__All = 2 };
#endif

#ifndef SOAP_TYPE_ns1__PermissionLevelType
#define SOAP_TYPE_ns1__PermissionLevelType (1204)
/* ns1:PermissionLevelType */
enum ns1__PermissionLevelType { ns1__PermissionLevelType__None = 0, ns1__PermissionLevelType__Owner = 1, ns1__PermissionLevelType__PublishingEditor = 2, ns1__PermissionLevelType__Editor = 3, ns1__PermissionLevelType__PublishingAuthor = 4, ns1__PermissionLevelType__Author = 5, ns1__PermissionLevelType__NoneditingAuthor = 6, ns1__PermissionLevelType__Reviewer = 7, ns1__PermissionLevelType__Contributor = 8, ns1__PermissionLevelType__Custom = 9 };
#endif

#ifndef SOAP_TYPE_ns1__CalendarPermissionLevelType
#define SOAP_TYPE_ns1__CalendarPermissionLevelType (1205)
/* ns1:CalendarPermissionLevelType */
enum ns1__CalendarPermissionLevelType { ns1__CalendarPermissionLevelType__None = 0, ns1__CalendarPermissionLevelType__Owner = 1, ns1__CalendarPermissionLevelType__PublishingEditor = 2, ns1__CalendarPermissionLevelType__Editor = 3, ns1__CalendarPermissionLevelType__PublishingAuthor = 4, ns1__CalendarPermissionLevelType__Author = 5, ns1__CalendarPermissionLevelType__NoneditingAuthor = 6, ns1__CalendarPermissionLevelType__Reviewer = 7, ns1__CalendarPermissionLevelType__Contributor = 8, ns1__CalendarPermissionLevelType__FreeBusyTimeOnly = 9, ns1__CalendarPermissionLevelType__FreeBusyTimeAndSubjectAndLocation = 10, ns1__CalendarPermissionLevelType__Custom = 11 };
#endif

#ifndef SOAP_TYPE_ns1__DeliverMeetingRequestsType
#define SOAP_TYPE_ns1__DeliverMeetingRequestsType (1206)
/* ns1:DeliverMeetingRequestsType */
enum ns1__DeliverMeetingRequestsType { ns1__DeliverMeetingRequestsType__DelegatesOnly = 0, ns1__DeliverMeetingRequestsType__DelegatesAndMe = 1, ns1__DeliverMeetingRequestsType__DelegatesAndSendInformationToMe = 2, ns1__DeliverMeetingRequestsType__NoForward = 3 };
#endif

#ifndef SOAP_TYPE_ns1__DelegateFolderPermissionLevelType
#define SOAP_TYPE_ns1__DelegateFolderPermissionLevelType (1207)
/* ns1:DelegateFolderPermissionLevelType */
enum ns1__DelegateFolderPermissionLevelType { ns1__DelegateFolderPermissionLevelType__None = 0, ns1__DelegateFolderPermissionLevelType__Editor = 1, ns1__DelegateFolderPermissionLevelType__Reviewer = 2, ns1__DelegateFolderPermissionLevelType__Author = 3, ns1__DelegateFolderPermissionLevelType__Custom = 4 };
#endif

#ifndef SOAP_TYPE_ns1__InvalidRecipientResponseCodeType
#define SOAP_TYPE_ns1__InvalidRecipientResponseCodeType (1208)
/* ns1:InvalidRecipientResponseCodeType */
enum ns1__InvalidRecipientResponseCodeType { ns1__InvalidRecipientResponseCodeType__OtherError = 0, ns1__InvalidRecipientResponseCodeType__RecipientOrganizationNotFederated = 1, ns1__InvalidRecipientResponseCodeType__CannotObtainTokenFromSTS = 2, ns1__InvalidRecipientResponseCodeType__SystemPolicyBlocksSharingWithThisRecipient = 3, ns1__InvalidRecipientResponseCodeType__RecipientOrganizationFederatedWithUnknownTokenIssuer = 4 };
#endif

#ifndef SOAP_TYPE_ns1__SharingDataType
#define SOAP_TYPE_ns1__SharingDataType (1209)
/* ns1:SharingDataType */
enum ns1__SharingDataType { ns1__SharingDataType__Calendar = 0, ns1__SharingDataType__Contacts = 1 };
#endif

#ifndef SOAP_TYPE_ns1__PhoneCallStateType
#define SOAP_TYPE_ns1__PhoneCallStateType (1210)
/* ns1:PhoneCallStateType */
enum ns1__PhoneCallStateType { ns1__PhoneCallStateType__Idle = 0, ns1__PhoneCallStateType__Connecting = 1, ns1__PhoneCallStateType__Alerted = 2, ns1__PhoneCallStateType__Connected = 3, ns1__PhoneCallStateType__Disconnected = 4, ns1__PhoneCallStateType__Incoming = 5, ns1__PhoneCallStateType__Transferring = 6, ns1__PhoneCallStateType__Forwarding = 7 };
#endif

#ifndef SOAP_TYPE_ns1__ConnectionFailureCauseType
#define SOAP_TYPE_ns1__ConnectionFailureCauseType (1211)
/* ns1:ConnectionFailureCauseType */
enum ns1__ConnectionFailureCauseType { ns1__ConnectionFailureCauseType__None = 0, ns1__ConnectionFailureCauseType__UserBusy = 1, ns1__ConnectionFailureCauseType__NoAnswer = 2, ns1__ConnectionFailureCauseType__Unavailable = 3, ns1__ConnectionFailureCauseType__Other = 4 };
#endif

#ifndef SOAP_TYPE_ns1__UserConfigurationDictionaryObjectTypesType
#define SOAP_TYPE_ns1__UserConfigurationDictionaryObjectTypesType (1212)
/* ns1:UserConfigurationDictionaryObjectTypesType */
enum ns1__UserConfigurationDictionaryObjectTypesType { ns1__UserConfigurationDictionaryObjectTypesType__DateTime = 0, ns1__UserConfigurationDictionaryObjectTypesType__Boolean = 1, ns1__UserConfigurationDictionaryObjectTypesType__Byte = 2, ns1__UserConfigurationDictionaryObjectTypesType__String = 3, ns1__UserConfigurationDictionaryObjectTypesType__Integer32 = 4, ns1__UserConfigurationDictionaryObjectTypesType__UnsignedInteger32 = 5, ns1__UserConfigurationDictionaryObjectTypesType__Integer64 = 6, ns1__UserConfigurationDictionaryObjectTypesType__UnsignedInteger64 = 7, ns1__UserConfigurationDictionaryObjectTypesType__StringArray = 8, ns1__UserConfigurationDictionaryObjectTypesType__ByteArray = 9 };
#endif

#ifndef SOAP_TYPE_ns1__ProtectionRuleActionKindType
#define SOAP_TYPE_ns1__ProtectionRuleActionKindType (1216)
/* ns1:ProtectionRuleActionKindType */
enum ns1__ProtectionRuleActionKindType { ns1__ProtectionRuleActionKindType__RightsProtectMessage = 0 };
#endif

#ifndef SOAP_TYPE_ns1__TeamMailboxLifecycleStateType
#define SOAP_TYPE_ns1__TeamMailboxLifecycleStateType (1217)
/* ns1:TeamMailboxLifecycleStateType */
enum ns1__TeamMailboxLifecycleStateType { ns1__TeamMailboxLifecycleStateType__Active = 0, ns1__TeamMailboxLifecycleStateType__Closed = 1, ns1__TeamMailboxLifecycleStateType__Unlinked = 2, ns1__TeamMailboxLifecycleStateType__PendingDelete = 3 };
#endif

#ifndef SOAP_TYPE_ns1__MessageTrackingReportTemplateType
#define SOAP_TYPE_ns1__MessageTrackingReportTemplateType (1218)
/* ns1:MessageTrackingReportTemplateType */
enum ns1__MessageTrackingReportTemplateType { ns1__MessageTrackingReportTemplateType__Summary = 0, ns1__MessageTrackingReportTemplateType__RecipientPath = 1 };
#endif

#ifndef SOAP_TYPE_ns1__FlaggedForActionType
#define SOAP_TYPE_ns1__FlaggedForActionType (1219)
/* ns1:FlaggedForActionType */
enum ns1__FlaggedForActionType { ns1__FlaggedForActionType__Any = 0, ns1__FlaggedForActionType__Call = 1, ns1__FlaggedForActionType__DoNotForward = 2, ns1__FlaggedForActionType__FollowUp = 3, ns1__FlaggedForActionType__FYI = 4, ns1__FlaggedForActionType__Forward = 5, ns1__FlaggedForActionType__NoResponseNecessary = 6, ns1__FlaggedForActionType__Read = 7, ns1__FlaggedForActionType__Reply = 8, ns1__FlaggedForActionType__ReplyToAll = 9, ns1__FlaggedForActionType__Review = 10 };
#endif

#ifndef SOAP_TYPE_ns1__RuleFieldURIType
#define SOAP_TYPE_ns1__RuleFieldURIType (1220)
/* ns1:RuleFieldURIType */
enum ns1__RuleFieldURIType { ns1__RuleFieldURIType__RuleId = 0, ns1__RuleFieldURIType__DisplayName = 1, ns1__RuleFieldURIType__Priority = 2, ns1__RuleFieldURIType__IsNotSupported = 3, ns1__RuleFieldURIType__Actions = 4, ns1__RuleFieldURIType__Condition_x003aCategories = 5, ns1__RuleFieldURIType__Condition_x003aContainsBodyStrings = 6, ns1__RuleFieldURIType__Condition_x003aContainsHeaderStrings = 7, ns1__RuleFieldURIType__Condition_x003aContainsRecipientStrings = 8, ns1__RuleFieldURIType__Condition_x003aContainsSenderStrings = 9, ns1__RuleFieldURIType__Condition_x003aContainsSubjectOrBodyStrings = 10, ns1__RuleFieldURIType__Condition_x003aContainsSubjectStrings = 11, ns1__RuleFieldURIType__Condition_x003aFlaggedForAction = 12, ns1__RuleFieldURIType__Condition_x003aFromAddresses = 13, ns1__RuleFieldURIType__Condition_x003aFromConnectedAccounts = 14, ns1__RuleFieldURIType__Condition_x003aHasAttachments = 15, ns1__RuleFieldURIType__Condition_x003aImportance = 16, ns1__RuleFieldURIType__Condition_x003aIsApprovalRequest = 17, ns1__RuleFieldURIType__Condition_x003aIsAutomaticForward = 18, ns1__RuleFieldURIType__Condition_x003aIsAutomaticReply = 19, ns1__RuleFieldURIType__Condition_x003aIsEncrypted = 20, ns1__RuleFieldURIType__Condition_x003aIsMeetingRequest = 21, ns1__RuleFieldURIType__Condition_x003aIsMeetingResponse = 22, ns1__RuleFieldURIType__Condition_x003aIsNDR = 23, ns1__RuleFieldURIType__Condition_x003aIsPermissionControlled = 24, ns1__RuleFieldURIType__Condition_x003aIsReadReceipt = 25, ns1__RuleFieldURIType__Condition_x003aIsSigned = 26, ns1__RuleFieldURIType__Condition_x003aIsVoicemail = 27, ns1__RuleFieldURIType__Condition_x003aItemClasses = 28, ns1__RuleFieldURIType__Condition_x003aMessageClassifications = 29, ns1__RuleFieldURIType__Condition_x003aNotSentToMe = 30, ns1__RuleFieldURIType__Condition_x003aSentCcMe = 31, ns1__RuleFieldURIType__Condition_x003aSentOnlyToMe = 32, ns1__RuleFieldURIType__Condition_x003aSentToAddresses = 33, ns1__RuleFieldURIType__Condition_x003aSentToMe = 34, ns1__RuleFieldURIType__Condition_x003aSentToOrCcMe = 35, ns1__RuleFieldURIType__Condition_x003aSensitivity = 36, ns1__RuleFieldURIType__Condition_x003aWithinDateRange = 37, ns1__RuleFieldURIType__Condition_x003aWithinSizeRange = 38, ns1__RuleFieldURIType__Exception_x003aCategories = 39, ns1__RuleFieldURIType__Exception_x003aContainsBodyStrings = 40, ns1__RuleFieldURIType__Exception_x003aContainsHeaderStrings = 41, ns1__RuleFieldURIType__Exception_x003aContainsRecipientStrings = 42, ns1__RuleFieldURIType__Exception_x003aContainsSenderStrings = 43, ns1__RuleFieldURIType__Exception_x003aContainsSubjectOrBodyStrings = 44, ns1__RuleFieldURIType__Exception_x003aContainsSubjectStrings = 45, ns1__RuleFieldURIType__Exception_x003aFlaggedForAction = 46, ns1__RuleFieldURIType__Exception_x003aFromAddresses = 47, ns1__RuleFieldURIType__Exception_x003aFromConnectedAccounts = 48, ns1__RuleFieldURIType__Exception_x003aHasAttachments = 49, ns1__RuleFieldURIType__Exception_x003aImportance = 50, ns1__RuleFieldURIType__Exception_x003aIsApprovalRequest = 51, ns1__RuleFieldURIType__Exception_x003aIsAutomaticForward = 52, ns1__RuleFieldURIType__Exception_x003aIsAutomaticReply = 53, ns1__RuleFieldURIType__Exception_x003aIsEncrypted = 54, ns1__RuleFieldURIType__Exception_x003aIsMeetingRequest = 55, ns1__RuleFieldURIType__Exception_x003aIsMeetingResponse = 56, ns1__RuleFieldURIType__Exception_x003aIsNDR = 57, ns1__RuleFieldURIType__Exception_x003aIsPermissionControlled = 58, ns1__RuleFieldURIType__Exception_x003aIsReadReceipt = 59, ns1__RuleFieldURIType__Exception_x003aIsSigned = 60, ns1__RuleFieldURIType__Exception_x003aIsVoicemail = 61, ns1__RuleFieldURIType__Exception_x003aItemClasses = 62, ns1__RuleFieldURIType__Exception_x003aMessageClassifications = 63, ns1__RuleFieldURIType__Exception_x003aNotSentToMe = 64, ns1__RuleFieldURIType__Exception_x003aSentCcMe = 65, ns1__RuleFieldURIType__Exception_x003aSentOnlyToMe = 66, ns1__RuleFieldURIType__Exception_x003aSentToAddresses = 67, ns1__RuleFieldURIType__Exception_x003aSentToMe = 68, ns1__RuleFieldURIType__Exception_x003aSentToOrCcMe = 69, ns1__RuleFieldURIType__Exception_x003aSensitivity = 70, ns1__RuleFieldURIType__Exception_x003aWithinDateRange = 71, ns1__RuleFieldURIType__Exception_x003aWithinSizeRange = 72, ns1__RuleFieldURIType__Action_x003aAssignCategories = 73, ns1__RuleFieldURIType__Action_x003aCopyToFolder = 74, ns1__RuleFieldURIType__Action_x003aDelete = 75, ns1__RuleFieldURIType__Action_x003aForwardAsAttachmentToRecipients = 76, ns1__RuleFieldURIType__Action_x003aForwardToRecipients = 77, ns1__RuleFieldURIType__Action_x003aMarkImportance = 78, ns1__RuleFieldURIType__Action_x003aMarkAsRead = 79, ns1__RuleFieldURIType__Action_x003aMoveToFolder = 80, ns1__RuleFieldURIType__Action_x003aPermanentDelete = 81, ns1__RuleFieldURIType__Action_x003aRedirectToRecipients = 82, ns1__RuleFieldURIType__Action_x003aSendSMSAlertToRecipients = 83, ns1__RuleFieldURIType__Action_x003aServerReplyWithMessage = 84, ns1__RuleFieldURIType__Action_x003aStopProcessingRules = 85, ns1__RuleFieldURIType__IsEnabled = 86, ns1__RuleFieldURIType__IsInError = 87, ns1__RuleFieldURIType__Conditions = 88, ns1__RuleFieldURIType__Exceptions = 89 };
#endif

#ifndef SOAP_TYPE_ns1__RuleValidationErrorCodeType
#define SOAP_TYPE_ns1__RuleValidationErrorCodeType (1221)
/* ns1:RuleValidationErrorCodeType */
enum ns1__RuleValidationErrorCodeType { ns1__RuleValidationErrorCodeType__ADOperationFailure = 0, ns1__RuleValidationErrorCodeType__ConnectedAccountNotFound = 1, ns1__RuleValidationErrorCodeType__CreateWithRuleId = 2, ns1__RuleValidationErrorCodeType__EmptyValueFound = 3, ns1__RuleValidationErrorCodeType__DuplicatedPriority = 4, ns1__RuleValidationErrorCodeType__DuplicatedOperationOnTheSameRule = 5, ns1__RuleValidationErrorCodeType__FolderDoesNotExist = 6, ns1__RuleValidationErrorCodeType__InvalidAddress = 7, ns1__RuleValidationErrorCodeType__InvalidDateRange = 8, ns1__RuleValidationErrorCodeType__InvalidFolderId = 9, ns1__RuleValidationErrorCodeType__InvalidSizeRange = 10, ns1__RuleValidationErrorCodeType__InvalidValue = 11, ns1__RuleValidationErrorCodeType__MessageClassificationNotFound = 12, ns1__RuleValidationErrorCodeType__MissingAction = 13, ns1__RuleValidationErrorCodeType__MissingParameter = 14, ns1__RuleValidationErrorCodeType__MissingRangeValue = 15, ns1__RuleValidationErrorCodeType__NotSettable = 16, ns1__RuleValidationErrorCodeType__RecipientDoesNotExist = 17, ns1__RuleValidationErrorCodeType__RuleNotFound = 18, ns1__RuleValidationErrorCodeType__SizeLessThanZero = 19, ns1__RuleValidationErrorCodeType__StringValueTooBig = 20, ns1__RuleValidationErrorCodeType__UnsupportedAddress = 21, ns1__RuleValidationErrorCodeType__UnexpectedError = 22, ns1__RuleValidationErrorCodeType__UnsupportedRule = 23 };
#endif

#ifndef SOAP_TYPE_ns1__SearchItemKindType
#define SOAP_TYPE_ns1__SearchItemKindType (1222)
/* ns1:SearchItemKindType */
enum ns1__SearchItemKindType { ns1__SearchItemKindType__Email = 0, ns1__SearchItemKindType__Meetings = 1, ns1__SearchItemKindType__Tasks = 2, ns1__SearchItemKindType__Notes = 3, ns1__SearchItemKindType__Docs = 4, ns1__SearchItemKindType__Journals = 5, ns1__SearchItemKindType__Contacts = 6, ns1__SearchItemKindType__Im = 7, ns1__SearchItemKindType__Voicemail = 8, ns1__SearchItemKindType__Faxes = 9, ns1__SearchItemKindType__Posts = 10, ns1__SearchItemKindType__Rssfeeds = 11 };
#endif

#ifndef SOAP_TYPE_ns1__MailboxSearchLocationType
#define SOAP_TYPE_ns1__MailboxSearchLocationType (1223)
/* ns1:MailboxSearchLocationType */
enum ns1__MailboxSearchLocationType { ns1__MailboxSearchLocationType__PrimaryOnly = 0, ns1__MailboxSearchLocationType__ArchiveOnly = 1, ns1__MailboxSearchLocationType__All = 2 };
#endif

#ifndef SOAP_TYPE_ns1__SearchResultType
#define SOAP_TYPE_ns1__SearchResultType (1224)
/* ns1:SearchResultType */
enum ns1__SearchResultType { ns1__SearchResultType__StatisticsOnly = 0, ns1__SearchResultType__PreviewOnly = 1 };
#endif

#ifndef SOAP_TYPE_ns1__SearchPageDirectionType
#define SOAP_TYPE_ns1__SearchPageDirectionType (1225)
/* ns1:SearchPageDirectionType */
enum ns1__SearchPageDirectionType { ns1__SearchPageDirectionType__Previous = 0, ns1__SearchPageDirectionType__Next = 1 };
#endif

#ifndef SOAP_TYPE_ns1__PreviewItemBaseShapeType
#define SOAP_TYPE_ns1__PreviewItemBaseShapeType (1226)
/* ns1:PreviewItemBaseShapeType */
enum ns1__PreviewItemBaseShapeType { ns1__PreviewItemBaseShapeType__Default = 0, ns1__PreviewItemBaseShapeType__Compact = 1 };
#endif

#ifndef SOAP_TYPE_ns1__HoldActionType
#define SOAP_TYPE_ns1__HoldActionType (1227)
/* ns1:HoldActionType */
enum ns1__HoldActionType { ns1__HoldActionType__Create = 0, ns1__HoldActionType__Update = 1, ns1__HoldActionType__Remove = 2 };
#endif

#ifndef SOAP_TYPE_ns1__HoldStatusType
#define SOAP_TYPE_ns1__HoldStatusType (1228)
/* ns1:HoldStatusType */
enum ns1__HoldStatusType { ns1__HoldStatusType__NotOnHold = 0, ns1__HoldStatusType__Pending = 1, ns1__HoldStatusType__OnHold = 2, ns1__HoldStatusType__PartialHold = 3, ns1__HoldStatusType__Failed = 4 };
#endif

#ifndef SOAP_TYPE_ns1__ItemIndexErrorType
#define SOAP_TYPE_ns1__ItemIndexErrorType (1229)
/* ns1:ItemIndexErrorType */
enum ns1__ItemIndexErrorType { ns1__ItemIndexErrorType__None = 0, ns1__ItemIndexErrorType__GenericError = 1, ns1__ItemIndexErrorType__Timeout = 2, ns1__ItemIndexErrorType__StaleEvent = 3, ns1__ItemIndexErrorType__MailboxOffline = 4, ns1__ItemIndexErrorType__AttachmentLimitReached = 5, ns1__ItemIndexErrorType__MarsWriterTruncation = 6, ns1__ItemIndexErrorType__DocumentParserFailure = 7 };
#endif

#ifndef SOAP_TYPE_ns1__UserPhotoSizeType
#define SOAP_TYPE_ns1__UserPhotoSizeType (1230)
/* ns1:UserPhotoSizeType */
enum ns1__UserPhotoSizeType { ns1__UserPhotoSizeType__HR48x48 = 0, ns1__UserPhotoSizeType__HR64x64 = 1, ns1__UserPhotoSizeType__HR96x96 = 2, ns1__UserPhotoSizeType__HR120x120 = 3, ns1__UserPhotoSizeType__HR240x240 = 4, ns1__UserPhotoSizeType__HR360x360 = 5, ns1__UserPhotoSizeType__HR432x432 = 6, ns1__UserPhotoSizeType__HR504x504 = 7, ns1__UserPhotoSizeType__HR648x648 = 8 };
#endif

#ifndef SOAP_TYPE_ns1__ElcFolderType
#define SOAP_TYPE_ns1__ElcFolderType (1231)
/* ns1:ElcFolderType */
enum ns1__ElcFolderType { ns1__ElcFolderType__Calendar = 0, ns1__ElcFolderType__Contacts = 1, ns1__ElcFolderType__DeletedItems = 2, ns1__ElcFolderType__Drafts = 3, ns1__ElcFolderType__Inbox = 4, ns1__ElcFolderType__JunkEmail = 5, ns1__ElcFolderType__Journal = 6, ns1__ElcFolderType__Notes = 7, ns1__ElcFolderType__Outbox = 8, ns1__ElcFolderType__SentItems = 9, ns1__ElcFolderType__Tasks = 10, ns1__ElcFolderType__All = 11, ns1__ElcFolderType__ManagedCustomFolder = 12, ns1__ElcFolderType__RssSubscriptions = 13, ns1__ElcFolderType__SyncIssues = 14, ns1__ElcFolderType__ConversationHistory = 15, ns1__ElcFolderType__Personal = 16, ns1__ElcFolderType__RecoverableItems = 17, ns1__ElcFolderType__NonIpmRoot = 18 };
#endif

#ifndef SOAP_TYPE_ns1__RetentionActionType
#define SOAP_TYPE_ns1__RetentionActionType (1232)
/* ns1:RetentionActionType */
enum ns1__RetentionActionType { ns1__RetentionActionType__None = 0, ns1__RetentionActionType__MoveToDeletedItems = 1, ns1__RetentionActionType__MoveToFolder = 2, ns1__RetentionActionType__DeleteAndAllowRecovery = 3, ns1__RetentionActionType__PermanentlyDelete = 4, ns1__RetentionActionType__MarkAsPastRetentionLimit = 5, ns1__RetentionActionType__MoveToArchive = 6 };
#endif

#ifndef SOAP_TYPE_ns1__RetentionType
#define SOAP_TYPE_ns1__RetentionType (1233)
/* ns1:RetentionType */
enum ns1__RetentionType { ns1__RetentionType__Delete = 0, ns1__RetentionType__Archive = 1 };
#endif

#ifndef SOAP_TYPE_ns1__ClientExtensionProvidedToType
#define SOAP_TYPE_ns1__ClientExtensionProvidedToType (1234)
/* ns1:ClientExtensionProvidedToType */
enum ns1__ClientExtensionProvidedToType { ns1__ClientExtensionProvidedToType__Everyone = 0, ns1__ClientExtensionProvidedToType__SpecificUsers = 1 };
#endif

#ifndef SOAP_TYPE_ns1__ClientExtensionTypeType
#define SOAP_TYPE_ns1__ClientExtensionTypeType (1235)
/* ns1:ClientExtensionTypeType */
enum ns1__ClientExtensionTypeType { ns1__ClientExtensionTypeType__Default = 0, ns1__ClientExtensionTypeType__Private = 1, ns1__ClientExtensionTypeType__MarketPlace = 2 };
#endif

#ifndef SOAP_TYPE_ns1__ClientExtensionScopeType
#define SOAP_TYPE_ns1__ClientExtensionScopeType (1236)
/* ns1:ClientExtensionScopeType */
enum ns1__ClientExtensionScopeType { ns1__ClientExtensionScopeType__None = 0, ns1__ClientExtensionScopeType__User = 1, ns1__ClientExtensionScopeType__Organization = 2, ns1__ClientExtensionScopeType__Default = 3 };
#endif

#ifndef SOAP_TYPE_ns1__SetClientExtensionActionIdType
#define SOAP_TYPE_ns1__SetClientExtensionActionIdType (1237)
/* ns1:SetClientExtensionActionIdType */
enum ns1__SetClientExtensionActionIdType { ns1__SetClientExtensionActionIdType__Install = 0, ns1__SetClientExtensionActionIdType__Uninstall = 1, ns1__SetClientExtensionActionIdType__Configure = 2 };
#endif

#ifndef SOAP_TYPE_ns1__ConsentStateType
#define SOAP_TYPE_ns1__ConsentStateType (1238)
/* ns1:ConsentStateType */
enum ns1__ConsentStateType { ns1__ConsentStateType__NotResponded = 0, ns1__ConsentStateType__NotConsented = 1, ns1__ConsentStateType__Consented = 2 };
#endif

#ifndef SOAP_TYPE_ns1__UMCDRGroupByType
#define SOAP_TYPE_ns1__UMCDRGroupByType (1239)
/* ns1:UMCDRGroupByType */
enum ns1__UMCDRGroupByType { ns1__UMCDRGroupByType__Day = 0, ns1__UMCDRGroupByType__Month = 1, ns1__UMCDRGroupByType__Total = 2 };
#endif

#ifndef SOAP_TYPE_ns1__UMCDRFilterByType
#define SOAP_TYPE_ns1__UMCDRFilterByType (1240)
/* ns1:UMCDRFilterByType */
enum ns1__UMCDRFilterByType { ns1__UMCDRFilterByType__FilterByUser = 0, ns1__UMCDRFilterByType__FilterByDate = 1 };
#endif

#ifndef SOAP_TYPE_ns1__DisableReasonType
#define SOAP_TYPE_ns1__DisableReasonType (1241)
/* ns1:DisableReasonType */
enum ns1__DisableReasonType { ns1__DisableReasonType__NoReason = 0, ns1__DisableReasonType__OutlookClientPerformance = 1, ns1__DisableReasonType__OWAClientPerformance = 2, ns1__DisableReasonType__MobileClientPerformance = 3 };
#endif

#ifndef SOAP_TYPE_ns1__ClientIntentMeetingInquiryActionType
#define SOAP_TYPE_ns1__ClientIntentMeetingInquiryActionType (1242)
/* ns1:ClientIntentMeetingInquiryActionType */
enum ns1__ClientIntentMeetingInquiryActionType { ns1__ClientIntentMeetingInquiryActionType__SendCancellation = 0, ns1__ClientIntentMeetingInquiryActionType__ReviveMeeting = 1, ns1__ClientIntentMeetingInquiryActionType__SendUpdateForMaster = 2, ns1__ClientIntentMeetingInquiryActionType__MeetingAlreadyExists = 3, ns1__ClientIntentMeetingInquiryActionType__ExistingOccurrence = 4, ns1__ClientIntentMeetingInquiryActionType__HasDelegates = 5, ns1__ClientIntentMeetingInquiryActionType__DeletedVersionNotFound = 6, ns1__ClientIntentMeetingInquiryActionType__PairedCancellationFound = 7, ns1__ClientIntentMeetingInquiryActionType__FailedToRevive = 8 };
#endif

#ifndef SOAP_TYPE_ns1__UMMailboxTranscriptionEnabledSetting
#define SOAP_TYPE_ns1__UMMailboxTranscriptionEnabledSetting (1243)
/* ns1:UMMailboxTranscriptionEnabledSetting */
enum ns1__UMMailboxTranscriptionEnabledSetting { ns1__UMMailboxTranscriptionEnabledSetting__Disabled = 0, ns1__UMMailboxTranscriptionEnabledSetting__Enabled = 1, ns1__UMMailboxTranscriptionEnabledSetting__Unknown = 2 };
#endif

#ifndef SOAP_TYPE_ns1__IconIndexType
#define SOAP_TYPE_ns1__IconIndexType (1244)
/* ns1:IconIndexType */
enum ns1__IconIndexType { ns1__IconIndexType__Default = 0, ns1__IconIndexType__PostItem = 1, ns1__IconIndexType__MailRead = 2, ns1__IconIndexType__MailUnread = 3, ns1__IconIndexType__MailReplied = 4, ns1__IconIndexType__MailForwarded = 5, ns1__IconIndexType__MailEncrypted = 6, ns1__IconIndexType__MailSmimeSigned = 7, ns1__IconIndexType__MailEncryptedReplied = 8, ns1__IconIndexType__MailSmimeSignedReplied = 9, ns1__IconIndexType__MailEncryptedForwarded = 10, ns1__IconIndexType__MailSmimeSignedForwarded = 11, ns1__IconIndexType__MailEncryptedRead = 12, ns1__IconIndexType__MailSmimeSignedRead = 13, ns1__IconIndexType__MailIrm = 14, ns1__IconIndexType__MailIrmForwarded = 15, ns1__IconIndexType__MailIrmReplied = 16, ns1__IconIndexType__SmsSubmitted = 17, ns1__IconIndexType__SmsRoutedToDeliveryPoint = 18, ns1__IconIndexType__SmsRoutedToExternalMessagingSystem = 19, ns1__IconIndexType__SmsDelivered = 20, ns1__IconIndexType__OutlookDefaultForContacts = 21, ns1__IconIndexType__AppointmentItem = 22, ns1__IconIndexType__AppointmentRecur = 23, ns1__IconIndexType__AppointmentMeet = 24, ns1__IconIndexType__AppointmentMeetRecur = 25, ns1__IconIndexType__AppointmentMeetNY = 26, ns1__IconIndexType__AppointmentMeetYes = 27, ns1__IconIndexType__AppointmentMeetNo = 28, ns1__IconIndexType__AppointmentMeetMaybe = 29, ns1__IconIndexType__AppointmentMeetCancel = 30, ns1__IconIndexType__AppointmentMeetInfo = 31, ns1__IconIndexType__TaskItem = 32, ns1__IconIndexType__TaskRecur = 33, ns1__IconIndexType__TaskOwned = 34, ns1__IconIndexType__TaskDelegated = 35 };
#endif

#ifndef SOAP_TYPE_ns1__UnifiedGroupIdentityType
#define SOAP_TYPE_ns1__UnifiedGroupIdentityType (1245)
/* ns1:UnifiedGroupIdentityType */
enum ns1__UnifiedGroupIdentityType { ns1__UnifiedGroupIdentityType__SmtpAddress = 0, ns1__UnifiedGroupIdentityType__LegacyDn = 1, ns1__UnifiedGroupIdentityType__ExternalDirectoryObjectId = 2 };
#endif

#ifndef SOAP_TYPE_ns1__UserSocialActivityActionTypeEnum
#define SOAP_TYPE_ns1__UserSocialActivityActionTypeEnum (1246)
/* ns1:UserSocialActivityActionTypeEnum */
enum ns1__UserSocialActivityActionTypeEnum { ns1__UserSocialActivityActionTypeEnum__Unknown = 0, ns1__UserSocialActivityActionTypeEnum__Like = 1 };
#endif

#ifndef SOAP_TYPE_ns1__MeetingSpaceTypeEnum
#define SOAP_TYPE_ns1__MeetingSpaceTypeEnum (1247)
/* ns1:MeetingSpaceTypeEnum */
enum ns1__MeetingSpaceTypeEnum { ns1__MeetingSpaceTypeEnum__Public = 0, ns1__MeetingSpaceTypeEnum__Private = 1 };
#endif

#ifndef SOAP_TYPE_ns1__ParticipantActivityRole
#define SOAP_TYPE_ns1__ParticipantActivityRole (1248)
/* ns1:ParticipantActivityRole */
enum ns1__ParticipantActivityRole { ns1__ParticipantActivityRole__Organizer = 0, ns1__ParticipantActivityRole__Attendee = 1, ns1__ParticipantActivityRole__Presenter = 2 };
#endif

#ifndef SOAP_TYPE_ns1__ParticipantActivityMediaType
#define SOAP_TYPE_ns1__ParticipantActivityMediaType (1249)
/* ns1:ParticipantActivityMediaType */
enum ns1__ParticipantActivityMediaType { ns1__ParticipantActivityMediaType__AppSharing = 0, ns1__ParticipantActivityMediaType__AudioVideo = 1, ns1__ParticipantActivityMediaType__Chat = 2, ns1__ParticipantActivityMediaType__DataConf = 3, ns1__ParticipantActivityMediaType__Meeting = 4, ns1__ParticipantActivityMediaType__MeetingConf = 5, ns1__ParticipantActivityMediaType__PhoneConf = 6, ns1__ParticipantActivityMediaType__Focus = 7 };
#endif

#ifndef SOAP_TYPE_ns1__ContentActivityType
#define SOAP_TYPE_ns1__ContentActivityType (1250)
/* ns1:ContentActivityType */
enum ns1__ContentActivityType { ns1__ContentActivityType__Poll = 0, ns1__ContentActivityType__WhiteBoard = 1, ns1__ContentActivityType__QAndA = 2, ns1__ContentActivityType__Chat = 3, ns1__ContentActivityType__Meeting = 4, ns1__ContentActivityType__Annotations = 5, ns1__ContentActivityType__SharedNotes = 6 };
#endif

#ifndef SOAP_TYPE_ns1__ContentActivityMediaType
#define SOAP_TYPE_ns1__ContentActivityMediaType (1251)
/* ns1:ContentActivityMediaType */
enum ns1__ContentActivityMediaType { ns1__ContentActivityMediaType__AppSharing = 0, ns1__ContentActivityMediaType__AudioVideo = 1, ns1__ContentActivityMediaType__Chat = 2, ns1__ContentActivityMediaType__DataConf = 3, ns1__ContentActivityMediaType__Meeting = 4, ns1__ContentActivityMediaType__MeetingConf = 5, ns1__ContentActivityMediaType__PhoneConf = 6 };
#endif

#ifndef SOAP_TYPE_ns1__ContentActivityAcl
#define SOAP_TYPE_ns1__ContentActivityAcl (1252)
/* ns1:ContentActivityAcl */
enum ns1__ContentActivityAcl { ns1__ContentActivityAcl__Organizer = 0, ns1__ContentActivityAcl__Presenter = 1, ns1__ContentActivityAcl__Everyone = 2 };
#endif

#ifndef SOAP_TYPE_ns1__SharingInvitationPermissionLevel
#define SOAP_TYPE_ns1__SharingInvitationPermissionLevel (1253)
/* ns1:SharingInvitationPermissionLevel */
enum ns1__SharingInvitationPermissionLevel { ns1__SharingInvitationPermissionLevel__FreeBusy = 0, ns1__SharingInvitationPermissionLevel__LimitedDetails = 1, ns1__SharingInvitationPermissionLevel__Read = 2, ns1__SharingInvitationPermissionLevel__ReadWrite = 3, ns1__SharingInvitationPermissionLevel__CoOwner = 4 };
#endif

#ifndef SOAP_TYPE_ns1__RefinerTypeType
#define SOAP_TYPE_ns1__RefinerTypeType (1254)
/* ns1:RefinerTypeType */
enum ns1__RefinerTypeType { ns1__RefinerTypeType__None = 0, ns1__RefinerTypeType__To = 1, ns1__RefinerTypeType__From = 2, ns1__RefinerTypeType__Folder = 3, ns1__RefinerTypeType__HasAttachment = 4, ns1__RefinerTypeType__MailboxSource = 5 };
#endif

#ifndef SOAP_TYPE_ns1__SearchResultsPropertySetNameType
#define SOAP_TYPE_ns1__SearchResultsPropertySetNameType (1255)
/* ns1:SearchResultsPropertySetNameType */
enum ns1__SearchResultsPropertySetNameType { ns1__SearchResultsPropertySetNameType__Default = 0, ns1__SearchResultsPropertySetNameType__Owa16 = 1, ns1__SearchResultsPropertySetNameType__Outlook16 = 2 };
#endif

#ifndef SOAP_TYPE_ns1__PeopleSuggestionPersonType
#define SOAP_TYPE_ns1__PeopleSuggestionPersonType (1256)
/* ns1:PeopleSuggestionPersonType */
enum ns1__PeopleSuggestionPersonType { ns1__PeopleSuggestionPersonType__Unknown = 0, ns1__PeopleSuggestionPersonType__Person = 1, ns1__PeopleSuggestionPersonType__DistributionList = 2, ns1__PeopleSuggestionPersonType__Room = 3, ns1__PeopleSuggestionPersonType__Place = 4, ns1__PeopleSuggestionPersonType__ModernGroup = 5 };
#endif

#ifndef SOAP_TYPE_ns1__UnifiedGroupsSortType
#define SOAP_TYPE_ns1__UnifiedGroupsSortType (1257)
/* ns1:UnifiedGroupsSortType */
enum ns1__UnifiedGroupsSortType { ns1__UnifiedGroupsSortType__None = 0, ns1__UnifiedGroupsSortType__DisplayName = 1, ns1__UnifiedGroupsSortType__JoinDate = 2, ns1__UnifiedGroupsSortType__FavoriteDate = 3, ns1__UnifiedGroupsSortType__Relevance = 4 };
#endif

#ifndef SOAP_TYPE_ns1__UnifiedGroupsFilterType
#define SOAP_TYPE_ns1__UnifiedGroupsFilterType (1258)
/* ns1:UnifiedGroupsFilterType */
enum ns1__UnifiedGroupsFilterType { ns1__UnifiedGroupsFilterType__All = 0, ns1__UnifiedGroupsFilterType__Favorites = 1, ns1__UnifiedGroupsFilterType__ExcludeFavorites = 2 };
#endif

#ifndef SOAP_TYPE_ns1__UnifiedGroupDetailsResponseShapeType
#define SOAP_TYPE_ns1__UnifiedGroupDetailsResponseShapeType (1259)
/* ns1:UnifiedGroupDetailsResponseShapeType */
enum ns1__UnifiedGroupDetailsResponseShapeType { ns1__UnifiedGroupDetailsResponseShapeType__Basic = 0, ns1__UnifiedGroupDetailsResponseShapeType__Full = 1 };
#endif

#ifndef SOAP_TYPE_ns1__UnifiedGroupMembersResponseShapeType
#define SOAP_TYPE_ns1__UnifiedGroupMembersResponseShapeType (1260)
/* ns1:UnifiedGroupMembersResponseShapeType */
enum ns1__UnifiedGroupMembersResponseShapeType { ns1__UnifiedGroupMembersResponseShapeType__Members = 0, ns1__UnifiedGroupMembersResponseShapeType__Owners = 1 };
#endif

#ifndef SOAP_TYPE_ns1__UnifiedGroupMembersSortType
#define SOAP_TYPE_ns1__UnifiedGroupMembersSortType (1261)
/* ns1:UnifiedGroupMembersSortType */
enum ns1__UnifiedGroupMembersSortType { ns1__UnifiedGroupMembersSortType__None = 0, ns1__UnifiedGroupMembersSortType__DisplayName = 1, ns1__UnifiedGroupMembersSortType__OwnerAndDisplayName = 2 };
#endif

#ifndef SOAP_TYPE_ns1__UnifiedGroupCreationErrorType
#define SOAP_TYPE_ns1__UnifiedGroupCreationErrorType (1262)
/* ns1:UnifiedGroupCreationErrorType */
enum ns1__UnifiedGroupCreationErrorType { ns1__UnifiedGroupCreationErrorType__NoError = 0, ns1__UnifiedGroupCreationErrorType__FailedCreate = 1, ns1__UnifiedGroupCreationErrorType__FailedMailboxProvision = 2 };
#endif

#ifndef SOAP_TYPE_ns1__UnifiedGroupMembershipActionType
#define SOAP_TYPE_ns1__UnifiedGroupMembershipActionType (1263)
/* ns1:UnifiedGroupMembershipActionType */
enum ns1__UnifiedGroupMembershipActionType { ns1__UnifiedGroupMembershipActionType__Add = 0, ns1__UnifiedGroupMembershipActionType__Remove = 1, ns1__UnifiedGroupMembershipActionType__Promote = 2, ns1__UnifiedGroupMembershipActionType__Demote = 3 };
#endif

#ifndef SOAP_TYPE_ns1__UnifiedGroupActionResultType
#define SOAP_TYPE_ns1__UnifiedGroupActionResultType (1264)
/* ns1:UnifiedGroupActionResultType */
enum ns1__UnifiedGroupActionResultType { ns1__UnifiedGroupActionResultType__Success = 0, ns1__UnifiedGroupActionResultType__SuccessDelayed = 1, ns1__UnifiedGroupActionResultType__Unauthorized = 2 };
#endif

#ifndef SOAP_TYPE_ns1__ClientIdType
#define SOAP_TYPE_ns1__ClientIdType (1265)
/* ns1:ClientIdType */
enum ns1__ClientIdType { ns1__ClientIdType__Web = 0, ns1__ClientIdType__Mobile = 1, ns1__ClientIdType__Tablet = 2, ns1__ClientIdType__Desktop = 3, ns1__ClientIdType__Exchange = 4, ns1__ClientIdType__Outlook = 5, ns1__ClientIdType__MacOutlook = 6, ns1__ClientIdType__POP3 = 7, ns1__ClientIdType__IMAP4 = 8, ns1__ClientIdType__Other = 9, ns1__ClientIdType__Lync = 10, ns1__ClientIdType__OutlookService = 11, ns1__ClientIdType__MacMail = 12 };
#endif

#ifndef SOAP_TYPE_ns1__ActivityIdType
#define SOAP_TYPE_ns1__ActivityIdType (1266)
/* ns1:ActivityIdType */
enum ns1__ActivityIdType { ns1__ActivityIdType__Min = 0, ns1__ActivityIdType__ReadingPaneDisplayStart = 1, ns1__ActivityIdType__ReadingPaneDisplayEnd = 2, ns1__ActivityIdType__ListViewDisplayStart = 3, ns1__ActivityIdType__ListViewDisplayEnd = 4, ns1__ActivityIdType__LinkClicked = 5, ns1__ActivityIdType__Delete = 6, ns1__ActivityIdType__Move = 7, ns1__ActivityIdType__Flag = 8, ns1__ActivityIdType__FlagComplete = 9, ns1__ActivityIdType__FlagCleared = 10, ns1__ActivityIdType__Categorize = 11, ns1__ActivityIdType__InspectorDisplayStart = 12, ns1__ActivityIdType__InspectorDisplayEnd = 13, ns1__ActivityIdType__MarkAsRead = 14, ns1__ActivityIdType__MarkAsUnread = 15, ns1__ActivityIdType__MarkAsJunk = 16, ns1__ActivityIdType__Print = 17, ns1__ActivityIdType__Logon = 18, ns1__ActivityIdType__Reply = 19, ns1__ActivityIdType__ReplyAll = 20, ns1__ActivityIdType__Forward = 21, ns1__ActivityIdType__ItemSelectStart = 22, ns1__ActivityIdType__ItemSelectEnd = 23, ns1__ActivityIdType__ItemVisibleInListViewStart = 24, ns1__ActivityIdType__ItemVisibleInListViewEnd = 25, ns1__ActivityIdType__WindowActiveStart = 26, ns1__ActivityIdType__WindowActiveEnd = 27, ns1__ActivityIdType__OpenedAnAttachment = 28, ns1__ActivityIdType__PreviewOfAttachmentStarted = 29, ns1__ActivityIdType__PreviewOfAttachmentEnded = 30, ns1__ActivityIdType__AcceptedMeetingRequest = 31, ns1__ActivityIdType__DeclinedMeetingRequest = 32, ns1__ActivityIdType__TentativeMeetingRequest = 33, ns1__ActivityIdType__ProposeNewTime = 34, ns1__ActivityIdType__ModuleChange = 35, ns1__ActivityIdType__NewMessage = 36, ns1__ActivityIdType__MarkMessageAsImportant = 37, ns1__ActivityIdType__MarkMessageAsUnimportant = 38, ns1__ActivityIdType__MarkMessageAsNormal = 39, ns1__ActivityIdType__MessageSelected = 40, ns1__ActivityIdType__MessageSent = 41, ns1__ActivityIdType__DraftCreated = 42, ns1__ActivityIdType__MarkMessageAsClutter = 43, ns1__ActivityIdType__MarkMessageAsNotClutter = 44, ns1__ActivityIdType__IgnoreConversation = 45, ns1__ActivityIdType__PivotChange = 46, ns1__ActivityIdType__ClutterGroupOpened = 47, ns1__ActivityIdType__ClutterGroupClosed = 48, ns1__ActivityIdType__ClutterInfobarExpanded = 49, ns1__ActivityIdType__TurnInferenceOff = 50, ns1__ActivityIdType__TurnInferenceOn = 51, ns1__ActivityIdType__FeatureValueResponse = 52, ns1__ActivityIdType__MessageDelivered = 53, ns1__ActivityIdType__Like = 54, ns1__ActivityIdType__Error = 55, ns1__ActivityIdType__ClutterBarIntroductionAcked = 56, ns1__ActivityIdType__DeleteAllIntroductionAcked = 57, ns1__ActivityIdType__ClutterDeleteAllClicked = 58, ns1__ActivityIdType__ClutterBarIntroductionLearnMoreClicked = 59, ns1__ActivityIdType__DeleteAllIntroductionLearnMoreClicked = 60, ns1__ActivityIdType__ClutterBarIntroductionDisplayed = 61, ns1__ActivityIdType__DeleteAllIntroductionDisplayed = 62, ns1__ActivityIdType__IntroductionPeekControllerCreated = 63, ns1__ActivityIdType__IntroductionPeekShown = 64, ns1__ActivityIdType__IntroductionPeekDismissed = 65, ns1__ActivityIdType__IntroductionLearnMoreClicked = 66, ns1__ActivityIdType__IntroductionTryFeatureClicked = 67, ns1__ActivityIdType__ModernGroupsQuickCompose = 68, ns1__ActivityIdType__ModernGroupsQuickReply = 69, ns1__ActivityIdType__ModernGroupsConversationSelected = 70, ns1__ActivityIdType__SearchSessionStart = 71, ns1__ActivityIdType__SearchSessionEnd = 72, ns1__ActivityIdType__SearchRequestStart = 73, ns1__ActivityIdType__SearchResultsReceived = 74, ns1__ActivityIdType__SearchRefinersReceived = 75, ns1__ActivityIdType__SearchRequestEnd = 76, ns1__ActivityIdType__SurveyResponse = 77, ns1__ActivityIdType__MarkAllItemsAsRead = 78, ns1__ActivityIdType__Obsolete_USCOREMoveFromInbox = 79, ns1__ActivityIdType__Obsolete_USCOREMoveToInbox = 80, ns1__ActivityIdType__Obsolete_USCOREMoveFromClutter = 81, ns1__ActivityIdType__Obsolete_USCOREMoveToClutter = 82, ns1__ActivityIdType__Obsolete_USCOREDeleteFromInbox = 83, ns1__ActivityIdType__Obsolete_USCOREDeleteFromClutter = 84, ns1__ActivityIdType__RemoteSend = 85, ns1__ActivityIdType__CreateCalendarEvent = 86, ns1__ActivityIdType__UpdateCalendarEvent = 87, ns1__ActivityIdType__HelpCenterShown = 88, ns1__ActivityIdType__HelpPanelCreated = 89, ns1__ActivityIdType__HelpPanelShown = 90, ns1__ActivityIdType__HelpPanelClosed = 91, ns1__ActivityIdType__HelpArticleShown = 92, ns1__ActivityIdType__HelpArticleLinkClicked = 93, ns1__ActivityIdType__ClutterNotificationSent = 94, ns1__ActivityIdType__Unlike = 95, ns1__ActivityIdType__ServerLogon = 96, ns1__ActivityIdType__UserPhotoUploaded = 97, ns1__ActivityIdType__CreateAppointment = 98, ns1__ActivityIdType__SendMeetingRequest = 99, ns1__ActivityIdType__CancelMeeting = 100, ns1__ActivityIdType__CreateTask = 101, ns1__ActivityIdType__MarkAsNotSpam = 102, ns1__ActivityIdType__Unsubscribe = 103, ns1__ActivityIdType__ReportAndDelete = 104, ns1__ActivityIdType__SendMessageToUnifiedGroup = 105, ns1__ActivityIdType__NavigateToUnifiedGroup = 106, ns1__ActivityIdType__FavoriteFolder = 107 };
#endif

#ifndef SOAP_TYPE__ns1__AttendeeAvailability_Availability
#define SOAP_TYPE__ns1__AttendeeAvailability_Availability (1373)
/* ns1:AttendeeAvailability-Availability */
enum _ns1__AttendeeAvailability_Availability { _ns1__AttendeeAvailability_Availability__Unknown = 0, _ns1__AttendeeAvailability_Availability__Free = 1, _ns1__AttendeeAvailability_Availability__Tentative = 2, _ns1__AttendeeAvailability_Availability__Busy = 3, _ns1__AttendeeAvailability_Availability__Oof = 4, _ns1__AttendeeAvailability_Availability__WorkingElsewhere = 5 };
#endif

#ifndef SOAP_TYPE__ews__GetRemindersType_ReminderType
#define SOAP_TYPE__ews__GetRemindersType_ReminderType (2216)
/* ews:GetRemindersType-ReminderType */
enum _ews__GetRemindersType_ReminderType { _ews__GetRemindersType_ReminderType__All = 0, _ews__GetRemindersType_ReminderType__Current = 1, _ews__GetRemindersType_ReminderType__Old = 2 };
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE_xsd__duration
#define SOAP_TYPE_xsd__duration (16)
typedef LONG64 xsd__duration;
#endif

/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (8)
/* Base64 schema type: */
class SOAP_CMAC xsd__base64Binary
{
public:
	unsigned char *__ptr;
	int __size;
	char *id;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *options;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 8; } /* = unique type id SOAP_TYPE_xsd__base64Binary */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         xsd__base64Binary() { xsd__base64Binary::soap_default(NULL); }
	virtual ~xsd__base64Binary() { }
};
#endif

#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE__ews__ResponseMessageType_MessageXml
#define SOAP_TYPE__ews__ResponseMessageType_MessageXml (1273)
/* ews:ResponseMessageType-MessageXml */
class SOAP_CMAC _ews__ResponseMessageType_MessageXml
{
public:
	std::vector<char * >__any;
public:
	virtual int soap_type() const { return 1273; } /* = unique type id SOAP_TYPE__ews__ResponseMessageType_MessageXml */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ews__ResponseMessageType_MessageXml() { _ews__ResponseMessageType_MessageXml::soap_default(NULL); }
	virtual ~_ews__ResponseMessageType_MessageXml() { }
};
#endif

#ifndef SOAP_TYPE___ews__ResponseMessageType_sequence
#define SOAP_TYPE___ews__ResponseMessageType_sequence (1269)
/* Operation wrapper: */
class SOAP_CMAC __ews__ResponseMessageType_sequence
{
public:
	std::string *MessageText;	/* optional element of type xsd:string */
	enum ews__ResponseCodeType *ResponseCode;	/* optional element of type ews:ResponseCodeType */
	int *DescriptiveLinkKey;	/* optional element of type xsd:int */
	_ews__ResponseMessageType_MessageXml *MessageXml;	/* optional element of type ews:ResponseMessageType-MessageXml */
public:
	virtual int soap_type() const { return 1269; } /* = unique type id SOAP_TYPE___ews__ResponseMessageType_sequence */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ews__ResponseMessageType_sequence() { __ews__ResponseMessageType_sequence::soap_default(NULL); }
	virtual ~__ews__ResponseMessageType_sequence() { }
};
#endif

#ifndef SOAP_TYPE_ews__ResponseMessageType
#define SOAP_TYPE_ews__ResponseMessageType (25)
/* ews:ResponseMessageType */
class SOAP_CMAC ews__ResponseMessageType
{
public:
	__ews__ResponseMessageType_sequence *__ResponseMessageType_sequence;
	enum ns1__ResponseClassType ResponseClass;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 25; } /* = unique type id SOAP_TYPE_ews__ResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ResponseMessageType() { ews__ResponseMessageType::soap_default(NULL); }
	virtual ~ews__ResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE__ews__union_ArrayOfResponseMessagesType
#define SOAP_TYPE__ews__union_ArrayOfResponseMessagesType (1328)
/* xsd:choice */
union _ews__union_ArrayOfResponseMessagesType
{
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_CreateItemResponseMessage	(1)
	class ews__ItemInfoResponseMessageType *CreateItemResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_DeleteItemResponseMessage	(2)
	class ews__DeleteItemResponseMessageType *DeleteItemResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetItemResponseMessage	(3)
	ews__ItemInfoResponseMessageType *GetItemResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_UpdateItemResponseMessage	(4)
	class ews__UpdateItemResponseMessageType *UpdateItemResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_UpdateItemInRecoverableItemsResponseMessage	(5)
	class ews__UpdateItemInRecoverableItemsResponseMessageType *UpdateItemInRecoverableItemsResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_SendItemResponseMessage	(6)
	ews__ResponseMessageType *SendItemResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_DeleteFolderResponseMessage	(7)
	ews__ResponseMessageType *DeleteFolderResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_EmptyFolderResponseMessage	(8)
	ews__ResponseMessageType *EmptyFolderResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_CreateFolderResponseMessage	(9)
	class ews__FolderInfoResponseMessageType *CreateFolderResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetFolderResponseMessage	(10)
	ews__FolderInfoResponseMessageType *GetFolderResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_FindFolderResponseMessage	(11)
	class ews__FindFolderResponseMessageType *FindFolderResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_UpdateFolderResponseMessage	(12)
	ews__FolderInfoResponseMessageType *UpdateFolderResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_MoveFolderResponseMessage	(13)
	ews__FolderInfoResponseMessageType *MoveFolderResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_CopyFolderResponseMessage	(14)
	ews__FolderInfoResponseMessageType *CopyFolderResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_CreateFolderPathResponseMessage	(15)
	ews__FolderInfoResponseMessageType *CreateFolderPathResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_CreateAttachmentResponseMessage	(16)
	class ews__AttachmentInfoResponseMessageType *CreateAttachmentResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_DeleteAttachmentResponseMessage	(17)
	class ews__DeleteAttachmentResponseMessageType *DeleteAttachmentResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetAttachmentResponseMessage	(18)
	ews__AttachmentInfoResponseMessageType *GetAttachmentResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_UploadItemsResponseMessage	(19)
	class ews__UploadItemsResponseMessageType *UploadItemsResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_ExportItemsResponseMessage	(20)
	class ews__ExportItemsResponseMessageType *ExportItemsResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_MarkAllItemsAsReadResponseMessage	(21)
	ews__ResponseMessageType *MarkAllItemsAsReadResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetClientAccessTokenResponseMessage	(22)
	class ews__GetClientAccessTokenResponseMessageType *GetClientAccessTokenResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetAppManifestsResponseMessage	(23)
	ews__ResponseMessageType *GetAppManifestsResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetClientExtensionResponseMessage	(24)
	ews__ResponseMessageType *GetClientExtensionResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_SetClientExtensionResponseMessage	(25)
	ews__ResponseMessageType *SetClientExtensionResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetEncryptionConfigurationResponseMessage	(26)
	ews__ResponseMessageType *GetEncryptionConfigurationResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_SetEncryptionConfigurationResponseMessage	(27)
	ews__ResponseMessageType *SetEncryptionConfigurationResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetOMEConfigurationResponseMessage	(28)
	ews__ResponseMessageType *GetOMEConfigurationResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_SetOMEConfigurationResponseMessage	(29)
	ews__ResponseMessageType *SetOMEConfigurationResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_FindItemResponseMessage	(30)
	class ews__FindItemResponseMessageType *FindItemResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_MoveItemResponseMessage	(31)
	ews__ItemInfoResponseMessageType *MoveItemResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_ArchiveItemResponseMessage	(32)
	ews__ItemInfoResponseMessageType *ArchiveItemResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_CopyItemResponseMessage	(33)
	ews__ItemInfoResponseMessageType *CopyItemResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_ResolveNamesResponseMessage	(34)
	class ews__ResolveNamesResponseMessageType *ResolveNamesResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_ExpandDLResponseMessage	(35)
	class ews__ExpandDLResponseMessageType *ExpandDLResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetServerTimeZonesResponseMessage	(36)
	class ews__GetServerTimeZonesResponseMessageType *GetServerTimeZonesResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetEventsResponseMessage	(37)
	class ews__GetEventsResponseMessageType *GetEventsResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetStreamingEventsResponseMessage	(38)
	class ews__GetStreamingEventsResponseMessageType *GetStreamingEventsResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_SubscribeResponseMessage	(39)
	class ews__SubscribeResponseMessageType *SubscribeResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_UnsubscribeResponseMessage	(40)
	ews__ResponseMessageType *UnsubscribeResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetChannelEventsResponseMessage	(41)
	class ews__GetChannelEventsResponseMessageType *GetChannelEventsResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_ChannelSubscribeResponseMessage	(42)
	class ews__ChannelSubscribeResponseMessageType *ChannelSubscribeResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_ChannelUnsubscribeResponseMessage	(43)
	ews__ResponseMessageType *ChannelUnsubscribeResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_SendNotificationResponseMessage	(44)
	class ews__SendNotificationResponseMessageType *SendNotificationResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_SyncFolderHierarchyResponseMessage	(45)
	class ews__SyncFolderHierarchyResponseMessageType *SyncFolderHierarchyResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_SyncFolderItemsResponseMessage	(46)
	class ews__SyncFolderItemsResponseMessageType *SyncFolderItemsResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_CreateManagedFolderResponseMessage	(47)
	ews__FolderInfoResponseMessageType *CreateManagedFolderResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_ConvertIdResponseMessage	(48)
	class ews__ConvertIdResponseMessageType *ConvertIdResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetSharingMetadataResponseMessage	(49)
	class ews__GetSharingMetadataResponseMessageType *GetSharingMetadataResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_RefreshSharingFolderResponseMessage	(50)
	class ews__RefreshSharingFolderResponseMessageType *RefreshSharingFolderResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetSharingFolderResponseMessage	(51)
	class ews__GetSharingFolderResponseMessageType *GetSharingFolderResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_CreateUserConfigurationResponseMessage	(52)
	ews__ResponseMessageType *CreateUserConfigurationResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_DeleteUserConfigurationResponseMessage	(53)
	ews__ResponseMessageType *DeleteUserConfigurationResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetUserConfigurationResponseMessage	(54)
	class ews__GetUserConfigurationResponseMessageType *GetUserConfigurationResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_UpdateUserConfigurationResponseMessage	(55)
	ews__ResponseMessageType *UpdateUserConfigurationResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetRoomListsResponse	(56)
	class ews__GetRoomListsResponseMessageType *GetRoomListsResponse;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetRoomsResponse	(57)
	class ews__GetRoomsResponseMessageType *GetRoomsResponse;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetRemindersResponse	(58)
	class ews__GetRemindersResponseMessageType *GetRemindersResponse;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_PerformReminderActionResponse	(59)
	class ews__PerformReminderActionResponseMessageType *PerformReminderActionResponse;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_ApplyConversationActionResponseMessage	(60)
	class ews__ApplyConversationActionResponseMessageType *ApplyConversationActionResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_FindMailboxStatisticsByKeywordsResponseMessage	(61)
	class ews__FindMailboxStatisticsByKeywordsResponseMessageType *FindMailboxStatisticsByKeywordsResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetSearchableMailboxesResponseMessage	(62)
	class ews__GetSearchableMailboxesResponseMessageType *GetSearchableMailboxesResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_SearchMailboxesResponseMessage	(63)
	class ews__SearchMailboxesResponseMessageType *SearchMailboxesResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetDiscoverySearchConfigurationResponseMessage	(64)
	class ews__GetDiscoverySearchConfigurationResponseMessageType *GetDiscoverySearchConfigurationResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetHoldOnMailboxesResponseMessage	(65)
	class ews__GetHoldOnMailboxesResponseMessageType *GetHoldOnMailboxesResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_SetHoldOnMailboxesResponseMessage	(66)
	class ews__SetHoldOnMailboxesResponseMessageType *SetHoldOnMailboxesResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetNonIndexableItemStatisticsResponseMessage	(67)
	class ews__GetNonIndexableItemStatisticsResponseMessageType *GetNonIndexableItemStatisticsResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetNonIndexableItemDetailsResponseMessage	(68)
	class ews__GetNonIndexableItemDetailsResponseMessageType *GetNonIndexableItemDetailsResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_FindPeopleResponseMessage	(69)
	class ews__FindPeopleResponseMessageType *FindPeopleResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetPasswordExpirationDateResponse	(70)
	class ews__GetPasswordExpirationDateResponseMessageType *GetPasswordExpirationDateResponse;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetPersonaResponseMessage	(71)
	class ews__GetPersonaResponseMessageType *GetPersonaResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetConversationItemsResponseMessage	(72)
	class ews__GetConversationItemsResponseMessageType *GetConversationItemsResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetUserRetentionPolicyTagsResponseMessage	(73)
	class ews__GetUserRetentionPolicyTagsResponseMessageType *GetUserRetentionPolicyTagsResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetUserPhotoResponseMessage	(74)
	class ews__GetUserPhotoResponseMessageType *GetUserPhotoResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_MarkAsJunkResponseMessage	(75)
	class ews__MarkAsJunkResponseMessageType *MarkAsJunkResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_UpdateMailboxAssociationResponseMessage	(76)
	ews__ResponseMessageType *UpdateMailboxAssociationResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_UpdateGroupMailboxResponseMessage	(77)
	ews__ResponseMessageType *UpdateGroupMailboxResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_PostModernGroupItemResponseMessage	(78)
	ews__ResponseMessageType *PostModernGroupItemResponseMessage;
#define SOAP_UNION__ews__union_ArrayOfResponseMessagesType_GetUnifiedGroupUnseenDataResponseMessage	(79)
	class ews__GetUnifiedGroupUnseenDataResponseMessageType *GetUnifiedGroupUnseenDataResponseMessage;
};
#endif

#ifndef SOAP_TYPE___ews__union_ArrayOfResponseMessagesType
#define SOAP_TYPE___ews__union_ArrayOfResponseMessagesType (1277)
/* Operation wrapper: */
class SOAP_CMAC __ews__union_ArrayOfResponseMessagesType
{
public:
	int __union_ArrayOfResponseMessagesType;	/* union discriminant (of union defined below) */
	union _ews__union_ArrayOfResponseMessagesType union_ArrayOfResponseMessagesType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1277; } /* = unique type id SOAP_TYPE___ews__union_ArrayOfResponseMessagesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ews__union_ArrayOfResponseMessagesType() { __ews__union_ArrayOfResponseMessagesType::soap_default(NULL); }
	virtual ~__ews__union_ArrayOfResponseMessagesType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ArrayOfResponseMessagesType
#define SOAP_TYPE_ews__ArrayOfResponseMessagesType (26)
/* ews:ArrayOfResponseMessagesType */
class SOAP_CMAC ews__ArrayOfResponseMessagesType
{
public:
	int __size_ArrayOfResponseMessagesType;	/* sequence of elements <-union-ArrayOfResponseMessagesType> */
	__ews__union_ArrayOfResponseMessagesType *__union_ArrayOfResponseMessagesType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 26; } /* = unique type id SOAP_TYPE_ews__ArrayOfResponseMessagesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ArrayOfResponseMessagesType() { ews__ArrayOfResponseMessagesType::soap_default(NULL); }
	virtual ~ews__ArrayOfResponseMessagesType() { }
};
#endif

#ifndef SOAP_TYPE_ews__BaseResponseMessageType
#define SOAP_TYPE_ews__BaseResponseMessageType (27)
/* ews:BaseResponseMessageType */
class SOAP_CMAC ews__BaseResponseMessageType
{
public:
	ews__ArrayOfResponseMessagesType *ResponseMessages;	/* required element of type ews:ArrayOfResponseMessagesType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 27; } /* = unique type id SOAP_TYPE_ews__BaseResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__BaseResponseMessageType() { ews__BaseResponseMessageType::soap_default(NULL); }
	virtual ~ews__BaseResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__BaseRequestType
#define SOAP_TYPE_ews__BaseRequestType (28)
/* ews:BaseRequestType */
class SOAP_CMAC ews__BaseRequestType
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 28; } /* = unique type id SOAP_TYPE_ews__BaseRequestType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__BaseRequestType() { ews__BaseRequestType::soap_default(NULL); }
	virtual ~ews__BaseRequestType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ArrayOfMailTipsResponseMessageType
#define SOAP_TYPE_ews__ArrayOfMailTipsResponseMessageType (135)
/* ews:ArrayOfMailTipsResponseMessageType */
class SOAP_CMAC ews__ArrayOfMailTipsResponseMessageType
{
public:
	std::vector<class ews__MailTipsResponseMessageType * >MailTipsResponseMessageType;	/* required element of type ews:MailTipsResponseMessageType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 135; } /* = unique type id SOAP_TYPE_ews__ArrayOfMailTipsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ArrayOfMailTipsResponseMessageType() { ews__ArrayOfMailTipsResponseMessageType::soap_default(NULL); }
	virtual ~ews__ArrayOfMailTipsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SendNotificationResultType
#define SOAP_TYPE_ews__SendNotificationResultType (181)
/* ews:SendNotificationResultType */
class SOAP_CMAC ews__SendNotificationResultType
{
public:
	enum ns1__SubscriptionStatusType SubscriptionStatus;	/* required element of type ns1:SubscriptionStatusType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 181; } /* = unique type id SOAP_TYPE_ews__SendNotificationResultType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SendNotificationResultType() { ews__SendNotificationResultType::soap_default(NULL); }
	virtual ~ews__SendNotificationResultType() { }
};
#endif

#ifndef SOAP_TYPE_ews__FreeBusyResponseType
#define SOAP_TYPE_ews__FreeBusyResponseType (189)
/* ews:FreeBusyResponseType */
class SOAP_CMAC ews__FreeBusyResponseType
{
public:
	ews__ResponseMessageType *ResponseMessage;	/* optional element of type ews:ResponseMessageType */
	class ns1__FreeBusyView *FreeBusyView;	/* optional element of type ns1:FreeBusyView */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 189; } /* = unique type id SOAP_TYPE_ews__FreeBusyResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__FreeBusyResponseType() { ews__FreeBusyResponseType::soap_default(NULL); }
	virtual ~ews__FreeBusyResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ArrayOfFreeBusyResponse
#define SOAP_TYPE_ews__ArrayOfFreeBusyResponse (190)
/* ews:ArrayOfFreeBusyResponse */
class SOAP_CMAC ews__ArrayOfFreeBusyResponse
{
public:
	std::vector<ews__FreeBusyResponseType * >FreeBusyResponse;	/* optional element of type ews:FreeBusyResponseType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 190; } /* = unique type id SOAP_TYPE_ews__ArrayOfFreeBusyResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ArrayOfFreeBusyResponse() { ews__ArrayOfFreeBusyResponse::soap_default(NULL); }
	virtual ~ews__ArrayOfFreeBusyResponse() { }
};
#endif

#ifndef SOAP_TYPE_ews__SuggestionsResponseType
#define SOAP_TYPE_ews__SuggestionsResponseType (191)
/* ews:SuggestionsResponseType */
class SOAP_CMAC ews__SuggestionsResponseType
{
public:
	ews__ResponseMessageType *ResponseMessage;	/* optional element of type ews:ResponseMessageType */
	class ns1__ArrayOfSuggestionDayResult *SuggestionDayResultArray;	/* optional element of type ns1:ArrayOfSuggestionDayResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 191; } /* = unique type id SOAP_TYPE_ews__SuggestionsResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SuggestionsResponseType() { ews__SuggestionsResponseType::soap_default(NULL); }
	virtual ~ews__SuggestionsResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUserAvailabilityResponseType
#define SOAP_TYPE_ews__GetUserAvailabilityResponseType (192)
/* ews:GetUserAvailabilityResponseType */
class SOAP_CMAC ews__GetUserAvailabilityResponseType
{
public:
	ews__ArrayOfFreeBusyResponse *FreeBusyResponseArray;	/* optional element of type ews:ArrayOfFreeBusyResponse */
	ews__SuggestionsResponseType *SuggestionsResponse;	/* optional element of type ews:SuggestionsResponseType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 192; } /* = unique type id SOAP_TYPE_ews__GetUserAvailabilityResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUserAvailabilityResponseType() { ews__GetUserAvailabilityResponseType::soap_default(NULL); }
	virtual ~ews__GetUserAvailabilityResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUserOofSettingsResponse
#define SOAP_TYPE_ews__GetUserOofSettingsResponse (194)
/* ews:GetUserOofSettingsResponse */
class SOAP_CMAC ews__GetUserOofSettingsResponse
{
public:
	ews__ResponseMessageType *ResponseMessage;	/* required element of type ews:ResponseMessageType */
	class ns1__UserOofSettings *ns1__OofSettings;	/* optional element of type ns1:UserOofSettings */
	enum ns1__ExternalAudience *AllowExternalOof;	/* optional element of type ns1:ExternalAudience */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 194; } /* = unique type id SOAP_TYPE_ews__GetUserOofSettingsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUserOofSettingsResponse() { ews__GetUserOofSettingsResponse::soap_default(NULL); }
	virtual ~ews__GetUserOofSettingsResponse() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetUserOofSettingsResponse
#define SOAP_TYPE_ews__SetUserOofSettingsResponse (196)
/* ews:SetUserOofSettingsResponse */
class SOAP_CMAC ews__SetUserOofSettingsResponse
{
public:
	ews__ResponseMessageType *ResponseMessage;	/* optional element of type ews:ResponseMessageType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 196; } /* = unique type id SOAP_TYPE_ews__SetUserOofSettingsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetUserOofSettingsResponse() { ews__SetUserOofSettingsResponse::soap_default(NULL); }
	virtual ~ews__SetUserOofSettingsResponse() { }
};
#endif

#ifndef SOAP_TYPE_ews__ArrayOfDelegateUserResponseMessageType
#define SOAP_TYPE_ews__ArrayOfDelegateUserResponseMessageType (202)
/* ews:ArrayOfDelegateUserResponseMessageType */
class SOAP_CMAC ews__ArrayOfDelegateUserResponseMessageType
{
public:
	std::vector<class ews__DelegateUserResponseMessageType * >DelegateUserResponseMessageType;	/* required element of type ews:DelegateUserResponseMessageType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 202; } /* = unique type id SOAP_TYPE_ews__ArrayOfDelegateUserResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ArrayOfDelegateUserResponseMessageType() { ews__ArrayOfDelegateUserResponseMessageType::soap_default(NULL); }
	virtual ~ews__ArrayOfDelegateUserResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE__ews__union_ArrayOfServiceConfigurationType
#define SOAP_TYPE__ews__union_ArrayOfServiceConfigurationType (1344)
/* xsd:choice */
union _ews__union_ArrayOfServiceConfigurationType
{
#define SOAP_UNION__ews__union_ArrayOfServiceConfigurationType_ConfigurationName	(1)
	enum ns1__ServiceConfigurationType ConfigurationName;
};
#endif

#ifndef SOAP_TYPE___ews__union_ArrayOfServiceConfigurationType
#define SOAP_TYPE___ews__union_ArrayOfServiceConfigurationType (1343)
/* Operation wrapper: */
class SOAP_CMAC __ews__union_ArrayOfServiceConfigurationType
{
public:
	int __union_ArrayOfServiceConfigurationType;	/* union discriminant (of union defined below) */
	union _ews__union_ArrayOfServiceConfigurationType union_ArrayOfServiceConfigurationType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1343; } /* = unique type id SOAP_TYPE___ews__union_ArrayOfServiceConfigurationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ews__union_ArrayOfServiceConfigurationType() { __ews__union_ArrayOfServiceConfigurationType::soap_default(NULL); }
	virtual ~__ews__union_ArrayOfServiceConfigurationType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ArrayOfServiceConfigurationType
#define SOAP_TYPE_ews__ArrayOfServiceConfigurationType (239)
/* ews:ArrayOfServiceConfigurationType */
class SOAP_CMAC ews__ArrayOfServiceConfigurationType
{
public:
	int __size_ArrayOfServiceConfigurationType;	/* sequence of elements <-union-ArrayOfServiceConfigurationType> */
	__ews__union_ArrayOfServiceConfigurationType *__union_ArrayOfServiceConfigurationType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 239; } /* = unique type id SOAP_TYPE_ews__ArrayOfServiceConfigurationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ArrayOfServiceConfigurationType() { ews__ArrayOfServiceConfigurationType::soap_default(NULL); }
	virtual ~ews__ArrayOfServiceConfigurationType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ArrayOfServiceConfigurationResponseMessageType
#define SOAP_TYPE_ews__ArrayOfServiceConfigurationResponseMessageType (242)
/* ews:ArrayOfServiceConfigurationResponseMessageType */
class SOAP_CMAC ews__ArrayOfServiceConfigurationResponseMessageType
{
public:
	std::vector<class ews__ServiceConfigurationResponseMessageType * >ServiceConfigurationResponseMessageType;	/* required element of type ews:ServiceConfigurationResponseMessageType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 242; } /* = unique type id SOAP_TYPE_ews__ArrayOfServiceConfigurationResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ArrayOfServiceConfigurationResponseMessageType() { ews__ArrayOfServiceConfigurationResponseMessageType::soap_default(NULL); }
	virtual ~ews__ArrayOfServiceConfigurationResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ArrayOfAppManifestsType
#define SOAP_TYPE_ews__ArrayOfAppManifestsType (289)
/* ews:ArrayOfAppManifestsType */
class SOAP_CMAC ews__ArrayOfAppManifestsType
{
public:
	std::vector<xsd__base64Binary >Manifest;	/* optional element of type xsd:base64Binary */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 289; } /* = unique type id SOAP_TYPE_ews__ArrayOfAppManifestsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ArrayOfAppManifestsType() { ews__ArrayOfAppManifestsType::soap_default(NULL); }
	virtual ~ews__ArrayOfAppManifestsType() { }
};
#endif

#ifndef SOAP_TYPE__ews__union_AvailableCulturesArray
#define SOAP_TYPE__ews__union_AvailableCulturesArray (1351)
/* xsd:choice */
union _ews__union_AvailableCulturesArray
{
#define SOAP_UNION__ews__union_AvailableCulturesArray_AvailableCulture	(1)
	class ns1__CultureInfoDataType *AvailableCulture;
};
#endif

#ifndef SOAP_TYPE___ews__union_AvailableCulturesArray
#define SOAP_TYPE___ews__union_AvailableCulturesArray (1349)
/* Operation wrapper: */
class SOAP_CMAC __ews__union_AvailableCulturesArray
{
public:
	int __union_AvailableCulturesArray;	/* union discriminant (of union defined below) */
	union _ews__union_AvailableCulturesArray union_AvailableCulturesArray;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1349; } /* = unique type id SOAP_TYPE___ews__union_AvailableCulturesArray */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ews__union_AvailableCulturesArray() { __ews__union_AvailableCulturesArray::soap_default(NULL); }
	virtual ~__ews__union_AvailableCulturesArray() { }
};
#endif

#ifndef SOAP_TYPE_ews__AvailableCulturesArray
#define SOAP_TYPE_ews__AvailableCulturesArray (429)
/* ews:AvailableCulturesArray */
class SOAP_CMAC ews__AvailableCulturesArray
{
public:
	int __size_AvailableCulturesArray;	/* sequence of elements <-union-AvailableCulturesArray> */
	__ews__union_AvailableCulturesArray *__union_AvailableCulturesArray;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 429; } /* = unique type id SOAP_TYPE_ews__AvailableCulturesArray */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__AvailableCulturesArray() { ews__AvailableCulturesArray::soap_default(NULL); }
	virtual ~ews__AvailableCulturesArray() { }
};
#endif

#ifndef SOAP_TYPE__ews__union_GroupMembersArray
#define SOAP_TYPE__ews__union_GroupMembersArray (1354)
/* xsd:choice */
union _ews__union_GroupMembersArray
{
#define SOAP_UNION__ews__union_GroupMembersArray_Member	(1)
	std::string *Member;
};
#endif

#ifndef SOAP_TYPE___ews__union_GroupMembersArray
#define SOAP_TYPE___ews__union_GroupMembersArray (1353)
/* Operation wrapper: */
class SOAP_CMAC __ews__union_GroupMembersArray
{
public:
	int __union_GroupMembersArray;	/* union discriminant (of union defined below) */
	union _ews__union_GroupMembersArray union_GroupMembersArray;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1353; } /* = unique type id SOAP_TYPE___ews__union_GroupMembersArray */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ews__union_GroupMembersArray() { __ews__union_GroupMembersArray::soap_default(NULL); }
	virtual ~__ews__union_GroupMembersArray() { }
};
#endif

#ifndef SOAP_TYPE_ews__GroupMembersArray
#define SOAP_TYPE_ews__GroupMembersArray (431)
/* ews:GroupMembersArray */
class SOAP_CMAC ews__GroupMembersArray
{
public:
	int __size_GroupMembersArray;	/* sequence of elements <-union-GroupMembersArray> */
	__ews__union_GroupMembersArray *__union_GroupMembersArray;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 431; } /* = unique type id SOAP_TYPE_ews__GroupMembersArray */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GroupMembersArray() { ews__GroupMembersArray::soap_default(NULL); }
	virtual ~ews__GroupMembersArray() { }
};
#endif

#ifndef SOAP_TYPE_ews__ArrayOfUnifiedGroupMembers
#define SOAP_TYPE_ews__ArrayOfUnifiedGroupMembers (432)
/* ews:ArrayOfUnifiedGroupMembers */
class SOAP_CMAC ews__ArrayOfUnifiedGroupMembers
{
public:
	std::vector<std::string >Member;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 432; } /* = unique type id SOAP_TYPE_ews__ArrayOfUnifiedGroupMembers */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ArrayOfUnifiedGroupMembers() { ews__ArrayOfUnifiedGroupMembers::soap_default(NULL); }
	virtual ~ews__ArrayOfUnifiedGroupMembers() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfRoleType
#define SOAP_TYPE_ns1__NonEmptyArrayOfRoleType (456)
/* ns1:NonEmptyArrayOfRoleType */
class SOAP_CMAC ns1__NonEmptyArrayOfRoleType
{
public:
	std::vector<std::string >Role;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 456; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfRoleType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfRoleType() { ns1__NonEmptyArrayOfRoleType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfRoleType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ManagementRoleType
#define SOAP_TYPE_ns1__ManagementRoleType (457)
/* ns1:ManagementRoleType */
class SOAP_CMAC ns1__ManagementRoleType
{
public:
	ns1__NonEmptyArrayOfRoleType *UserRoles;	/* optional element of type ns1:NonEmptyArrayOfRoleType */
	ns1__NonEmptyArrayOfRoleType *ApplicationRoles;	/* optional element of type ns1:NonEmptyArrayOfRoleType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 457; } /* = unique type id SOAP_TYPE_ns1__ManagementRoleType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ManagementRoleType() { ns1__ManagementRoleType::soap_default(NULL); }
	virtual ~ns1__ManagementRoleType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SidAndAttributesType
#define SOAP_TYPE_ns1__SidAndAttributesType (458)
/* ns1:SidAndAttributesType */
class SOAP_CMAC ns1__SidAndAttributesType
{
public:
	std::string SecurityIdentifier;	/* required element of type xsd:string */
	unsigned int Attributes;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 458; } /* = unique type id SOAP_TYPE_ns1__SidAndAttributesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SidAndAttributesType() { ns1__SidAndAttributesType::soap_default(NULL); }
	virtual ~ns1__SidAndAttributesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfGroupIdentifiersType
#define SOAP_TYPE_ns1__NonEmptyArrayOfGroupIdentifiersType (459)
/* ns1:NonEmptyArrayOfGroupIdentifiersType */
class SOAP_CMAC ns1__NonEmptyArrayOfGroupIdentifiersType
{
public:
	std::vector<ns1__SidAndAttributesType * >GroupIdentifier;	/* required element of type ns1:SidAndAttributesType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 459; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfGroupIdentifiersType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfGroupIdentifiersType() { ns1__NonEmptyArrayOfGroupIdentifiersType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfGroupIdentifiersType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfRestrictedGroupIdentifiersType
#define SOAP_TYPE_ns1__NonEmptyArrayOfRestrictedGroupIdentifiersType (460)
/* ns1:NonEmptyArrayOfRestrictedGroupIdentifiersType */
class SOAP_CMAC ns1__NonEmptyArrayOfRestrictedGroupIdentifiersType
{
public:
	std::vector<ns1__SidAndAttributesType * >RestrictedGroupIdentifier;	/* required element of type ns1:SidAndAttributesType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 460; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfRestrictedGroupIdentifiersType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfRestrictedGroupIdentifiersType() { ns1__NonEmptyArrayOfRestrictedGroupIdentifiersType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfRestrictedGroupIdentifiersType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SerializedSecurityContextType
#define SOAP_TYPE_ns1__SerializedSecurityContextType (461)
/* ns1:SerializedSecurityContextType */
class SOAP_CMAC ns1__SerializedSecurityContextType
{
public:
	std::string UserSid;	/* required element of type xsd:string */
	ns1__NonEmptyArrayOfGroupIdentifiersType *GroupSids;	/* optional element of type ns1:NonEmptyArrayOfGroupIdentifiersType */
	ns1__NonEmptyArrayOfRestrictedGroupIdentifiersType *RestrictedGroupSids;	/* optional element of type ns1:NonEmptyArrayOfRestrictedGroupIdentifiersType */
	std::string *PrimarySmtpAddress;	/* optional element of type xsd:string */
	char *__anyAttribute;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 461; } /* = unique type id SOAP_TYPE_ns1__SerializedSecurityContextType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SerializedSecurityContextType() { ns1__SerializedSecurityContextType::soap_default(NULL); }
	virtual ~ns1__SerializedSecurityContextType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ConnectingSIDType
#define SOAP_TYPE__ns1__union_ConnectingSIDType (1366)
/* xsd:choice */
union _ns1__union_ConnectingSIDType
{
#define SOAP_UNION__ns1__union_ConnectingSIDType_PrincipalName	(1)
	class ns1__PrincipalNameType *PrincipalName;
#define SOAP_UNION__ns1__union_ConnectingSIDType_SID	(2)
	class ns1__SIDType *SID;
#define SOAP_UNION__ns1__union_ConnectingSIDType_PrimarySmtpAddress	(3)
	class ns1__PrimarySmtpAddressType *PrimarySmtpAddress;
#define SOAP_UNION__ns1__union_ConnectingSIDType_SmtpAddress	(4)
	class ns1__SmtpAddressType *SmtpAddress;
};
#endif

#ifndef SOAP_TYPE_ns1__ConnectingSIDType
#define SOAP_TYPE_ns1__ConnectingSIDType (462)
/* Choice: */
class SOAP_CMAC ns1__ConnectingSIDType
{
public:
	int __union_ConnectingSIDType;	/* union discriminant (of union defined below) */
	union _ns1__union_ConnectingSIDType union_ConnectingSIDType;	/* required element of type xsd:choice */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 462; } /* = unique type id SOAP_TYPE_ns1__ConnectingSIDType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ConnectingSIDType() { ns1__ConnectingSIDType::soap_default(NULL); }
	virtual ~ns1__ConnectingSIDType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ExchangeImpersonationType
#define SOAP_TYPE_ns1__ExchangeImpersonationType (467)
/* ns1:ExchangeImpersonationType */
class SOAP_CMAC ns1__ExchangeImpersonationType
{
public:
	ns1__ConnectingSIDType *ConnectingSID;	/* required element of type ns1:ConnectingSIDType */
	char *__anyAttribute;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 467; } /* = unique type id SOAP_TYPE_ns1__ExchangeImpersonationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ExchangeImpersonationType() { ns1__ExchangeImpersonationType::soap_default(NULL); }
	virtual ~ns1__ExchangeImpersonationType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__OpenAsAdminOrSystemServiceType
#define SOAP_TYPE_ns1__OpenAsAdminOrSystemServiceType (468)
/* ns1:OpenAsAdminOrSystemServiceType */
class SOAP_CMAC ns1__OpenAsAdminOrSystemServiceType
{
public:
	ns1__ConnectingSIDType *ConnectingSID;	/* required element of type ns1:ConnectingSIDType */
	enum ns1__SpecialLogonTypeType LogonType;	/* required attribute */
	int *BudgetType;	/* optional attribute */
	char *__anyAttribute;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 468; } /* = unique type id SOAP_TYPE_ns1__OpenAsAdminOrSystemServiceType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__OpenAsAdminOrSystemServiceType() { ns1__OpenAsAdminOrSystemServiceType::soap_default(NULL); }
	virtual ~ns1__OpenAsAdminOrSystemServiceType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__BaseEmailAddressType
#define SOAP_TYPE_ns1__BaseEmailAddressType (470)
/* ns1:BaseEmailAddressType */
class SOAP_CMAC ns1__BaseEmailAddressType
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 470; } /* = unique type id SOAP_TYPE_ns1__BaseEmailAddressType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__BaseEmailAddressType() { ns1__BaseEmailAddressType::soap_default(NULL); }
	virtual ~ns1__BaseEmailAddressType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfEmailAddressesType
#define SOAP_TYPE_ns1__ArrayOfEmailAddressesType (472)
/* ns1:ArrayOfEmailAddressesType */
class SOAP_CMAC ns1__ArrayOfEmailAddressesType
{
public:
	std::vector<class ns1__EmailAddressType * >Address;	/* optional element of type ns1:EmailAddressType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 472; } /* = unique type id SOAP_TYPE_ns1__ArrayOfEmailAddressesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfEmailAddressesType() { ns1__ArrayOfEmailAddressesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfEmailAddressesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__DirectoryEntryType
#define SOAP_TYPE_ns1__DirectoryEntryType (473)
/* ns1:DirectoryEntryType */
class SOAP_CMAC ns1__DirectoryEntryType
{
public:
	ns1__EmailAddressType *Id;	/* optional element of type ns1:EmailAddressType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 473; } /* = unique type id SOAP_TYPE_ns1__DirectoryEntryType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__DirectoryEntryType() { ns1__DirectoryEntryType::soap_default(NULL); }
	virtual ~ns1__DirectoryEntryType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfRoomsType
#define SOAP_TYPE_ns1__ArrayOfRoomsType (475)
/* ns1:ArrayOfRoomsType */
class SOAP_CMAC ns1__ArrayOfRoomsType
{
public:
	std::vector<class ns1__RoomType * >Room;	/* optional element of type ns1:RoomType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 475; } /* = unique type id SOAP_TYPE_ns1__ArrayOfRoomsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfRoomsType() { ns1__ArrayOfRoomsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfRoomsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__TimeSlot
#define SOAP_TYPE_ns1__TimeSlot (476)
/* ns1:TimeSlot */
class SOAP_CMAC ns1__TimeSlot
{
public:
	time_t StartTime;	/* required element of type xsd:dateTime */
	int DurationInMinutes;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 476; } /* = unique type id SOAP_TYPE_ns1__TimeSlot */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__TimeSlot() { ns1__TimeSlot::soap_default(NULL); }
	virtual ~ns1__TimeSlot() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MeetingLocation
#define SOAP_TYPE_ns1__MeetingLocation (477)
/* ns1:MeetingLocation */
class SOAP_CMAC ns1__MeetingLocation
{
public:
	std::string EmailAddress;	/* required element of type xsd:string */
	std::string DisplayName;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 477; } /* = unique type id SOAP_TYPE_ns1__MeetingLocation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MeetingLocation() { ns1__MeetingLocation::soap_default(NULL); }
	virtual ~ns1__MeetingLocation() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AttendeeAvailability
#define SOAP_TYPE_ns1__AttendeeAvailability (478)
/* ns1:AttendeeAvailability */
class SOAP_CMAC ns1__AttendeeAvailability
{
public:
	std::string EmailAddress;	/* required element of type xsd:string */
	enum _ns1__AttendeeAvailability_Availability Availability;	/* required element of type ns1:AttendeeAvailability-Availability */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 478; } /* = unique type id SOAP_TYPE_ns1__AttendeeAvailability */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AttendeeAvailability() { ns1__AttendeeAvailability::soap_default(NULL); }
	virtual ~ns1__AttendeeAvailability() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfMeetingLocation
#define SOAP_TYPE_ns1__ArrayOfMeetingLocation (479)
/* ns1:ArrayOfMeetingLocation */
class SOAP_CMAC ns1__ArrayOfMeetingLocation
{
public:
	std::vector<ns1__MeetingLocation * >MeetingLocation;	/* optional element of type ns1:MeetingLocation */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 479; } /* = unique type id SOAP_TYPE_ns1__ArrayOfMeetingLocation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfMeetingLocation() { ns1__ArrayOfMeetingLocation::soap_default(NULL); }
	virtual ~ns1__ArrayOfMeetingLocation() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfAttendeeAvailability
#define SOAP_TYPE_ns1__ArrayOfAttendeeAvailability (480)
/* ns1:ArrayOfAttendeeAvailability */
class SOAP_CMAC ns1__ArrayOfAttendeeAvailability
{
public:
	std::vector<ns1__AttendeeAvailability * >AttendeeAvailability;	/* optional element of type ns1:AttendeeAvailability */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 480; } /* = unique type id SOAP_TYPE_ns1__ArrayOfAttendeeAvailability */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfAttendeeAvailability() { ns1__ArrayOfAttendeeAvailability::soap_default(NULL); }
	virtual ~ns1__ArrayOfAttendeeAvailability() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MeetingTimeCandidate
#define SOAP_TYPE_ns1__MeetingTimeCandidate (481)
/* ns1:MeetingTimeCandidate */
class SOAP_CMAC ns1__MeetingTimeCandidate
{
public:
	ns1__TimeSlot *MeetingTimeslot;	/* required element of type ns1:TimeSlot */
	double Confidence;	/* required element of type xsd:double */
	int Score;	/* required element of type xsd:int */
	ns1__ArrayOfAttendeeAvailability *AttendeeAvailabilities;	/* required element of type ns1:ArrayOfAttendeeAvailability */
	ns1__ArrayOfMeetingLocation *Locations;	/* required element of type ns1:ArrayOfMeetingLocation */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 481; } /* = unique type id SOAP_TYPE_ns1__MeetingTimeCandidate */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MeetingTimeCandidate() { ns1__MeetingTimeCandidate::soap_default(NULL); }
	virtual ~ns1__MeetingTimeCandidate() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfMeetingTimeCandidate
#define SOAP_TYPE_ns1__ArrayOfMeetingTimeCandidate (482)
/* ns1:ArrayOfMeetingTimeCandidate */
class SOAP_CMAC ns1__ArrayOfMeetingTimeCandidate
{
public:
	std::vector<ns1__MeetingTimeCandidate * >MeetingTimeCandidate;	/* required element of type ns1:MeetingTimeCandidate */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 482; } /* = unique type id SOAP_TYPE_ns1__ArrayOfMeetingTimeCandidate */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfMeetingTimeCandidate() { ns1__ArrayOfMeetingTimeCandidate::soap_default(NULL); }
	virtual ~ns1__ArrayOfMeetingTimeCandidate() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ReminderType
#define SOAP_TYPE_ns1__ReminderType (483)
/* ns1:ReminderType */
class SOAP_CMAC ns1__ReminderType
{
public:
	std::string Subject;	/* required element of type xsd:string */
	std::string *Location;	/* optional element of type xsd:string */
	time_t ReminderTime;	/* required element of type xsd:dateTime */
	time_t StartDate;	/* required element of type xsd:dateTime */
	time_t EndDate;	/* required element of type xsd:dateTime */
	class ns1__ItemIdType *ItemId;	/* required element of type ns1:ItemIdType */
	ns1__ItemIdType *RecurringMasterItemId;	/* optional element of type ns1:ItemIdType */
	enum ns1__ReminderGroupType *ReminderGroup;	/* optional element of type ns1:ReminderGroupType */
	std::string UID;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 483; } /* = unique type id SOAP_TYPE_ns1__ReminderType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ReminderType() { ns1__ReminderType::soap_default(NULL); }
	virtual ~ns1__ReminderType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfRemindersType
#define SOAP_TYPE_ns1__ArrayOfRemindersType (484)
/* ns1:ArrayOfRemindersType */
class SOAP_CMAC ns1__ArrayOfRemindersType
{
public:
	std::vector<ns1__ReminderType * >Reminder;	/* optional element of type ns1:ReminderType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 484; } /* = unique type id SOAP_TYPE_ns1__ArrayOfRemindersType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfRemindersType() { ns1__ArrayOfRemindersType::soap_default(NULL); }
	virtual ~ns1__ArrayOfRemindersType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfRecipientsType
#define SOAP_TYPE__ns1__union_ArrayOfRecipientsType (1389)
/* xsd:choice */
union _ns1__union_ArrayOfRecipientsType
{
#define SOAP_UNION__ns1__union_ArrayOfRecipientsType_Mailbox	(1)
	ns1__EmailAddressType *Mailbox;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfRecipientsType
#define SOAP_TYPE___ns1__union_ArrayOfRecipientsType (1388)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfRecipientsType
{
public:
	int __union_ArrayOfRecipientsType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfRecipientsType union_ArrayOfRecipientsType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1388; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfRecipientsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfRecipientsType() { __ns1__union_ArrayOfRecipientsType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfRecipientsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfRecipientsType
#define SOAP_TYPE_ns1__ArrayOfRecipientsType (485)
/* ns1:ArrayOfRecipientsType */
class SOAP_CMAC ns1__ArrayOfRecipientsType
{
public:
	int __size_ArrayOfRecipientsType;	/* sequence of elements <-union-ArrayOfRecipientsType> */
	__ns1__union_ArrayOfRecipientsType *__union_ArrayOfRecipientsType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 485; } /* = unique type id SOAP_TYPE_ns1__ArrayOfRecipientsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfRecipientsType() { ns1__ArrayOfRecipientsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfRecipientsType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_SingleRecipientType
#define SOAP_TYPE__ns1__union_SingleRecipientType (1391)
/* xsd:choice */
union _ns1__union_SingleRecipientType
{
#define SOAP_UNION__ns1__union_SingleRecipientType_Mailbox	(1)
	ns1__EmailAddressType *Mailbox;
};
#endif

#ifndef SOAP_TYPE_ns1__SingleRecipientType
#define SOAP_TYPE_ns1__SingleRecipientType (486)
/* Choice: */
class SOAP_CMAC ns1__SingleRecipientType
{
public:
	int __union_SingleRecipientType;	/* union discriminant (of union defined below) */
	union _ns1__union_SingleRecipientType union_SingleRecipientType;	/* required element of type xsd:choice */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 486; } /* = unique type id SOAP_TYPE_ns1__SingleRecipientType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SingleRecipientType() { ns1__SingleRecipientType::soap_default(NULL); }
	virtual ~ns1__SingleRecipientType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__BasePathToElementType
#define SOAP_TYPE_ns1__BasePathToElementType (487)
/* ns1:BasePathToElementType */
class SOAP_CMAC ns1__BasePathToElementType
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 487; } /* = unique type id SOAP_TYPE_ns1__BasePathToElementType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__BasePathToElementType() { ns1__BasePathToElementType::soap_default(NULL); }
	virtual ~ns1__BasePathToElementType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_NonEmptyArrayOfPathsToElementType
#define SOAP_TYPE__ns1__union_NonEmptyArrayOfPathsToElementType (1396)
/* xsd:choice */
union _ns1__union_NonEmptyArrayOfPathsToElementType
{
#define SOAP_UNION__ns1__union_NonEmptyArrayOfPathsToElementType_FieldURI	(1)
	class ns1__PathToUnindexedFieldType *FieldURI;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfPathsToElementType_IndexedFieldURI	(2)
	class ns1__PathToIndexedFieldType *IndexedFieldURI;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfPathsToElementType_ExtendedFieldURI	(3)
	class ns1__PathToExtendedFieldType *ExtendedFieldURI;
};
#endif

#ifndef SOAP_TYPE___ns1__union_NonEmptyArrayOfPathsToElementType
#define SOAP_TYPE___ns1__union_NonEmptyArrayOfPathsToElementType (1392)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_NonEmptyArrayOfPathsToElementType
{
public:
	int __union_NonEmptyArrayOfPathsToElementType;	/* union discriminant (of union defined below) */
	union _ns1__union_NonEmptyArrayOfPathsToElementType union_NonEmptyArrayOfPathsToElementType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1392; } /* = unique type id SOAP_TYPE___ns1__union_NonEmptyArrayOfPathsToElementType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_NonEmptyArrayOfPathsToElementType() { __ns1__union_NonEmptyArrayOfPathsToElementType::soap_default(NULL); }
	virtual ~__ns1__union_NonEmptyArrayOfPathsToElementType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfPathsToElementType
#define SOAP_TYPE_ns1__NonEmptyArrayOfPathsToElementType (492)
/* ns1:NonEmptyArrayOfPathsToElementType */
class SOAP_CMAC ns1__NonEmptyArrayOfPathsToElementType
{
public:
	int __size_NonEmptyArrayOfPathsToElementType;	/* sequence of elements <-union-NonEmptyArrayOfPathsToElementType> */
	__ns1__union_NonEmptyArrayOfPathsToElementType *__union_NonEmptyArrayOfPathsToElementType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 492; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfPathsToElementType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfPathsToElementType() { ns1__NonEmptyArrayOfPathsToElementType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfPathsToElementType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_NonEmptyArrayOfPropertyValuesType
#define SOAP_TYPE__ns1__union_NonEmptyArrayOfPropertyValuesType (1399)
/* xsd:choice */
union _ns1__union_NonEmptyArrayOfPropertyValuesType
{
#define SOAP_UNION__ns1__union_NonEmptyArrayOfPropertyValuesType_Value	(1)
	std::vector<std::string >*Value;
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfPropertyValuesType
#define SOAP_TYPE_ns1__NonEmptyArrayOfPropertyValuesType (493)
/* Choice: */
class SOAP_CMAC ns1__NonEmptyArrayOfPropertyValuesType
{
public:
	int __union_NonEmptyArrayOfPropertyValuesType;	/* union discriminant (of union defined below) */
	union _ns1__union_NonEmptyArrayOfPropertyValuesType union_NonEmptyArrayOfPropertyValuesType;	/* required element of type xsd:choice */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 493; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfPropertyValuesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfPropertyValuesType() { ns1__NonEmptyArrayOfPropertyValuesType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfPropertyValuesType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_NonEmptyArrayOfExtendedPropertyType
#define SOAP_TYPE__ns1__union_NonEmptyArrayOfExtendedPropertyType (1403)
/* xsd:choice */
union _ns1__union_NonEmptyArrayOfExtendedPropertyType
{
#define SOAP_UNION__ns1__union_NonEmptyArrayOfExtendedPropertyType_ExtendedProperty	(1)
	std::vector<class ns1__ExtendedPropertyType * >*ExtendedProperty;
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfExtendedPropertyType
#define SOAP_TYPE_ns1__NonEmptyArrayOfExtendedPropertyType (494)
/* Choice: */
class SOAP_CMAC ns1__NonEmptyArrayOfExtendedPropertyType
{
public:
	int __union_NonEmptyArrayOfExtendedPropertyType;	/* union discriminant (of union defined below) */
	union _ns1__union_NonEmptyArrayOfExtendedPropertyType union_NonEmptyArrayOfExtendedPropertyType;	/* required element of type xsd:choice */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 494; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfExtendedPropertyType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfExtendedPropertyType() { ns1__NonEmptyArrayOfExtendedPropertyType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfExtendedPropertyType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ExtendedPropertyType
#define SOAP_TYPE__ns1__union_ExtendedPropertyType (1405)
/* xsd:choice */
union _ns1__union_ExtendedPropertyType
{
#define SOAP_UNION__ns1__union_ExtendedPropertyType_Value	(1)
	std::string *Value;
#define SOAP_UNION__ns1__union_ExtendedPropertyType_Values	(2)
	ns1__NonEmptyArrayOfPropertyValuesType *Values;
};
#endif

#ifndef SOAP_TYPE_ns1__ExtendedPropertyType
#define SOAP_TYPE_ns1__ExtendedPropertyType (495)
/* ns1:ExtendedPropertyType */
class SOAP_CMAC ns1__ExtendedPropertyType
{
public:
	ns1__PathToExtendedFieldType *ExtendedFieldURI;	/* required element of type ns1:PathToExtendedFieldType */
	int __union_ExtendedPropertyType;	/* union discriminant (of union defined below) */
	union _ns1__union_ExtendedPropertyType union_ExtendedPropertyType;	/* required element of type xsd:choice */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 495; } /* = unique type id SOAP_TYPE_ns1__ExtendedPropertyType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ExtendedPropertyType() { ns1__ExtendedPropertyType::soap_default(NULL); }
	virtual ~ns1__ExtendedPropertyType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__FolderResponseShapeType
#define SOAP_TYPE_ns1__FolderResponseShapeType (496)
/* ns1:FolderResponseShapeType */
class SOAP_CMAC ns1__FolderResponseShapeType
{
public:
	enum ns1__DefaultShapeNamesType BaseShape;	/* required element of type ns1:DefaultShapeNamesType */
	ns1__NonEmptyArrayOfPathsToElementType *AdditionalProperties;	/* optional element of type ns1:NonEmptyArrayOfPathsToElementType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 496; } /* = unique type id SOAP_TYPE_ns1__FolderResponseShapeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__FolderResponseShapeType() { ns1__FolderResponseShapeType::soap_default(NULL); }
	virtual ~ns1__FolderResponseShapeType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ItemResponseShapeType
#define SOAP_TYPE_ns1__ItemResponseShapeType (497)
/* ns1:ItemResponseShapeType */
class SOAP_CMAC ns1__ItemResponseShapeType
{
public:
	enum ns1__DefaultShapeNamesType BaseShape;	/* required element of type ns1:DefaultShapeNamesType */
	bool *IncludeMimeContent;	/* optional element of type xsd:boolean */
	enum ns1__BodyTypeResponseType *BodyType;	/* optional element of type ns1:BodyTypeResponseType */
	enum ns1__BodyTypeResponseType *UniqueBodyType;	/* optional element of type ns1:BodyTypeResponseType */
	enum ns1__BodyTypeResponseType *NormalizedBodyType;	/* optional element of type ns1:BodyTypeResponseType */
	bool *FilterHtmlContent;	/* optional element of type xsd:boolean */
	bool *ConvertHtmlCodePageToUTF8;	/* optional element of type xsd:boolean */
	std::string *InlineImageUrlTemplate;	/* optional element of type xsd:string */
	bool *BlockExternalImages;	/* optional element of type xsd:boolean */
	bool *AddBlankTargetToLinks;	/* optional element of type xsd:boolean */
	int *MaximumBodySize;	/* optional element of type xsd:int */
	ns1__NonEmptyArrayOfPathsToElementType *AdditionalProperties;	/* optional element of type ns1:NonEmptyArrayOfPathsToElementType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 497; } /* = unique type id SOAP_TYPE_ns1__ItemResponseShapeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ItemResponseShapeType() { ns1__ItemResponseShapeType::soap_default(NULL); }
	virtual ~ns1__ItemResponseShapeType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AttachmentResponseShapeType
#define SOAP_TYPE_ns1__AttachmentResponseShapeType (498)
/* ns1:AttachmentResponseShapeType */
class SOAP_CMAC ns1__AttachmentResponseShapeType
{
public:
	bool *IncludeMimeContent;	/* optional element of type xsd:boolean */
	enum ns1__BodyTypeResponseType *BodyType;	/* optional element of type ns1:BodyTypeResponseType */
	bool *FilterHtmlContent;	/* optional element of type xsd:boolean */
	ns1__NonEmptyArrayOfPathsToElementType *AdditionalProperties;	/* optional element of type ns1:NonEmptyArrayOfPathsToElementType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 498; } /* = unique type id SOAP_TYPE_ns1__AttachmentResponseShapeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AttachmentResponseShapeType() { ns1__AttachmentResponseShapeType::soap_default(NULL); }
	virtual ~ns1__AttachmentResponseShapeType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ConversationResponseShapeType
#define SOAP_TYPE_ns1__ConversationResponseShapeType (499)
/* ns1:ConversationResponseShapeType */
class SOAP_CMAC ns1__ConversationResponseShapeType
{
public:
	enum ns1__DefaultShapeNamesType BaseShape;	/* required element of type ns1:DefaultShapeNamesType */
	ns1__NonEmptyArrayOfPathsToElementType *AdditionalProperties;	/* optional element of type ns1:NonEmptyArrayOfPathsToElementType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 499; } /* = unique type id SOAP_TYPE_ns1__ConversationResponseShapeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ConversationResponseShapeType() { ns1__ConversationResponseShapeType::soap_default(NULL); }
	virtual ~ns1__ConversationResponseShapeType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PersonaResponseShapeType
#define SOAP_TYPE_ns1__PersonaResponseShapeType (500)
/* ns1:PersonaResponseShapeType */
class SOAP_CMAC ns1__PersonaResponseShapeType
{
public:
	enum ns1__DefaultShapeNamesType BaseShape;	/* required element of type ns1:DefaultShapeNamesType */
	ns1__NonEmptyArrayOfPathsToElementType *AdditionalProperties;	/* optional element of type ns1:NonEmptyArrayOfPathsToElementType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 500; } /* = unique type id SOAP_TYPE_ns1__PersonaResponseShapeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PersonaResponseShapeType() { ns1__PersonaResponseShapeType::soap_default(NULL); }
	virtual ~ns1__PersonaResponseShapeType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfClientAccessTokenRequestsType
#define SOAP_TYPE_ns1__NonEmptyArrayOfClientAccessTokenRequestsType (501)
/* ns1:NonEmptyArrayOfClientAccessTokenRequestsType */
class SOAP_CMAC ns1__NonEmptyArrayOfClientAccessTokenRequestsType
{
public:
	std::vector<class ns1__ClientAccessTokenRequestType * >TokenRequest;	/* required element of type ns1:ClientAccessTokenRequestType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 501; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfClientAccessTokenRequestsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfClientAccessTokenRequestsType() { ns1__NonEmptyArrayOfClientAccessTokenRequestsType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfClientAccessTokenRequestsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ClientAccessTokenRequestType
#define SOAP_TYPE_ns1__ClientAccessTokenRequestType (502)
/* ns1:ClientAccessTokenRequestType */
class SOAP_CMAC ns1__ClientAccessTokenRequestType
{
public:
	std::string Id;	/* required element of type xsd:string */
	enum ns1__ClientAccessTokenTypeType TokenType;	/* required element of type ns1:ClientAccessTokenTypeType */
	std::string *Scope;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 502; } /* = unique type id SOAP_TYPE_ns1__ClientAccessTokenRequestType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ClientAccessTokenRequestType() { ns1__ClientAccessTokenRequestType::soap_default(NULL); }
	virtual ~ns1__ClientAccessTokenRequestType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ClientAccessTokenType
#define SOAP_TYPE_ns1__ClientAccessTokenType (503)
/* ns1:ClientAccessTokenType */
class SOAP_CMAC ns1__ClientAccessTokenType
{
public:
	std::string Id;	/* required element of type xsd:string */
	enum ns1__ClientAccessTokenTypeType TokenType;	/* required element of type ns1:ClientAccessTokenTypeType */
	std::string TokenValue;	/* required element of type xsd:string */
	std::string TTL;	/* required element of type xsd:integer */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 503; } /* = unique type id SOAP_TYPE_ns1__ClientAccessTokenType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ClientAccessTokenType() { ns1__ClientAccessTokenType::soap_default(NULL); }
	virtual ~ns1__ClientAccessTokenType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ChangeDescriptionType
#define SOAP_TYPE__ns1__union_ChangeDescriptionType (1412)
/* xsd:choice */
union _ns1__union_ChangeDescriptionType
{
#define SOAP_UNION__ns1__union_ChangeDescriptionType_FieldURI	(1)
	ns1__PathToUnindexedFieldType *FieldURI;
#define SOAP_UNION__ns1__union_ChangeDescriptionType_IndexedFieldURI	(2)
	ns1__PathToIndexedFieldType *IndexedFieldURI;
#define SOAP_UNION__ns1__union_ChangeDescriptionType_ExtendedFieldURI	(3)
	ns1__PathToExtendedFieldType *ExtendedFieldURI;
};
#endif

#ifndef SOAP_TYPE_ns1__ChangeDescriptionType
#define SOAP_TYPE_ns1__ChangeDescriptionType (504)
/* Choice: */
class SOAP_CMAC ns1__ChangeDescriptionType
{
public:
	int __unionPath;	/* union discriminant (of union defined below) */
	union _ns1__union_ChangeDescriptionType __union_ChangeDescriptionType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 504; } /* = unique type id SOAP_TYPE_ns1__ChangeDescriptionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ChangeDescriptionType() { ns1__ChangeDescriptionType::soap_default(NULL); }
	virtual ~ns1__ChangeDescriptionType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_NonEmptyArrayOfItemChangeDescriptionsType
#define SOAP_TYPE__ns1__union_NonEmptyArrayOfItemChangeDescriptionsType (1417)
/* xsd:choice */
union _ns1__union_NonEmptyArrayOfItemChangeDescriptionsType
{
#define SOAP_UNION__ns1__union_NonEmptyArrayOfItemChangeDescriptionsType_AppendToItemField	(1)
	class ns1__AppendToItemFieldType *AppendToItemField;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfItemChangeDescriptionsType_SetItemField	(2)
	class ns1__SetItemFieldType *SetItemField;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfItemChangeDescriptionsType_DeleteItemField	(3)
	class ns1__DeleteItemFieldType *DeleteItemField;
};
#endif

#ifndef SOAP_TYPE___ns1__union_NonEmptyArrayOfItemChangeDescriptionsType
#define SOAP_TYPE___ns1__union_NonEmptyArrayOfItemChangeDescriptionsType (1413)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_NonEmptyArrayOfItemChangeDescriptionsType
{
public:
	int __union_NonEmptyArrayOfItemChangeDescriptionsType;	/* union discriminant (of union defined below) */
	union _ns1__union_NonEmptyArrayOfItemChangeDescriptionsType union_NonEmptyArrayOfItemChangeDescriptionsType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1413; } /* = unique type id SOAP_TYPE___ns1__union_NonEmptyArrayOfItemChangeDescriptionsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_NonEmptyArrayOfItemChangeDescriptionsType() { __ns1__union_NonEmptyArrayOfItemChangeDescriptionsType::soap_default(NULL); }
	virtual ~__ns1__union_NonEmptyArrayOfItemChangeDescriptionsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfItemChangeDescriptionsType
#define SOAP_TYPE_ns1__NonEmptyArrayOfItemChangeDescriptionsType (513)
/* ns1:NonEmptyArrayOfItemChangeDescriptionsType */
class SOAP_CMAC ns1__NonEmptyArrayOfItemChangeDescriptionsType
{
public:
	int __size_NonEmptyArrayOfItemChangeDescriptionsType;	/* sequence of elements <-union-NonEmptyArrayOfItemChangeDescriptionsType> */
	__ns1__union_NonEmptyArrayOfItemChangeDescriptionsType *__union_NonEmptyArrayOfItemChangeDescriptionsType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 513; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfItemChangeDescriptionsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfItemChangeDescriptionsType() { ns1__NonEmptyArrayOfItemChangeDescriptionsType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfItemChangeDescriptionsType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_NonEmptyArrayOfFolderChangeDescriptionsType
#define SOAP_TYPE__ns1__union_NonEmptyArrayOfFolderChangeDescriptionsType (1423)
/* xsd:choice */
union _ns1__union_NonEmptyArrayOfFolderChangeDescriptionsType
{
#define SOAP_UNION__ns1__union_NonEmptyArrayOfFolderChangeDescriptionsType_AppendToFolderField	(1)
	class ns1__AppendToFolderFieldType *AppendToFolderField;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfFolderChangeDescriptionsType_SetFolderField	(2)
	class ns1__SetFolderFieldType *SetFolderField;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfFolderChangeDescriptionsType_DeleteFolderField	(3)
	class ns1__DeleteFolderFieldType *DeleteFolderField;
};
#endif

#ifndef SOAP_TYPE___ns1__union_NonEmptyArrayOfFolderChangeDescriptionsType
#define SOAP_TYPE___ns1__union_NonEmptyArrayOfFolderChangeDescriptionsType (1419)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_NonEmptyArrayOfFolderChangeDescriptionsType
{
public:
	int __union_NonEmptyArrayOfFolderChangeDescriptionsType;	/* union discriminant (of union defined below) */
	union _ns1__union_NonEmptyArrayOfFolderChangeDescriptionsType union_NonEmptyArrayOfFolderChangeDescriptionsType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1419; } /* = unique type id SOAP_TYPE___ns1__union_NonEmptyArrayOfFolderChangeDescriptionsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_NonEmptyArrayOfFolderChangeDescriptionsType() { __ns1__union_NonEmptyArrayOfFolderChangeDescriptionsType::soap_default(NULL); }
	virtual ~__ns1__union_NonEmptyArrayOfFolderChangeDescriptionsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfFolderChangeDescriptionsType
#define SOAP_TYPE_ns1__NonEmptyArrayOfFolderChangeDescriptionsType (514)
/* ns1:NonEmptyArrayOfFolderChangeDescriptionsType */
class SOAP_CMAC ns1__NonEmptyArrayOfFolderChangeDescriptionsType
{
public:
	int __size_NonEmptyArrayOfFolderChangeDescriptionsType;	/* sequence of elements <-union-NonEmptyArrayOfFolderChangeDescriptionsType> */
	__ns1__union_NonEmptyArrayOfFolderChangeDescriptionsType *__union_NonEmptyArrayOfFolderChangeDescriptionsType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 514; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfFolderChangeDescriptionsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfFolderChangeDescriptionsType() { ns1__NonEmptyArrayOfFolderChangeDescriptionsType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfFolderChangeDescriptionsType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ItemChangeType
#define SOAP_TYPE__ns1__union_ItemChangeType (1427)
/* xsd:choice */
union _ns1__union_ItemChangeType
{
#define SOAP_UNION__ns1__union_ItemChangeType_ItemId	(1)
	ns1__ItemIdType *ItemId;
#define SOAP_UNION__ns1__union_ItemChangeType_OccurrenceItemId	(2)
	class ns1__OccurrenceItemIdType *OccurrenceItemId;
#define SOAP_UNION__ns1__union_ItemChangeType_RecurringMasterItemId	(3)
	class ns1__RecurringMasterItemIdType *RecurringMasterItemId;
};
#endif

#ifndef SOAP_TYPE_ns1__ItemChangeType
#define SOAP_TYPE_ns1__ItemChangeType (515)
/* ns1:ItemChangeType */
class SOAP_CMAC ns1__ItemChangeType
{
public:
	int __union_ItemChangeType;	/* union discriminant (of union defined below) */
	union _ns1__union_ItemChangeType union_ItemChangeType;	/* required element of type xsd:choice */
	ns1__NonEmptyArrayOfItemChangeDescriptionsType *Updates;	/* required element of type ns1:NonEmptyArrayOfItemChangeDescriptionsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 515; } /* = unique type id SOAP_TYPE_ns1__ItemChangeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ItemChangeType() { ns1__ItemChangeType::soap_default(NULL); }
	virtual ~ns1__ItemChangeType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfItemChangesType
#define SOAP_TYPE_ns1__NonEmptyArrayOfItemChangesType (516)
/* ns1:NonEmptyArrayOfItemChangesType */
class SOAP_CMAC ns1__NonEmptyArrayOfItemChangesType
{
public:
	std::vector<ns1__ItemChangeType * >ItemChange;	/* required element of type ns1:ItemChangeType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 516; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfItemChangesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfItemChangesType() { ns1__NonEmptyArrayOfItemChangesType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfItemChangesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfInternetHeadersType
#define SOAP_TYPE_ns1__NonEmptyArrayOfInternetHeadersType (518)
/* ns1:NonEmptyArrayOfInternetHeadersType */
class SOAP_CMAC ns1__NonEmptyArrayOfInternetHeadersType
{
public:
	std::vector<class ns1__InternetHeaderType * >InternetMessageHeader;	/* required element of type ns1:InternetHeaderType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 518; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfInternetHeadersType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfInternetHeadersType() { ns1__NonEmptyArrayOfInternetHeadersType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfInternetHeadersType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfPredictedActionReasonType
#define SOAP_TYPE_ns1__NonEmptyArrayOfPredictedActionReasonType (519)
/* ns1:NonEmptyArrayOfPredictedActionReasonType */
class SOAP_CMAC ns1__NonEmptyArrayOfPredictedActionReasonType
{
public:
	std::vector<enum ns1__PredictedActionReasonType >PredictedActionReason;	/* required element of type ns1:PredictedActionReasonType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 519; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfPredictedActionReasonType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfPredictedActionReasonType() { ns1__NonEmptyArrayOfPredictedActionReasonType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfPredictedActionReasonType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_NonEmptyArrayOfRequestAttachmentIdsType
#define SOAP_TYPE__ns1__union_NonEmptyArrayOfRequestAttachmentIdsType (1436)
/* xsd:choice */
union _ns1__union_NonEmptyArrayOfRequestAttachmentIdsType
{
#define SOAP_UNION__ns1__union_NonEmptyArrayOfRequestAttachmentIdsType_AttachmentId	(1)
	class ns1__RequestAttachmentIdType *AttachmentId;
};
#endif

#ifndef SOAP_TYPE___ns1__union_NonEmptyArrayOfRequestAttachmentIdsType
#define SOAP_TYPE___ns1__union_NonEmptyArrayOfRequestAttachmentIdsType (1434)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_NonEmptyArrayOfRequestAttachmentIdsType
{
public:
	int __union_NonEmptyArrayOfRequestAttachmentIdsType;	/* union discriminant (of union defined below) */
	union _ns1__union_NonEmptyArrayOfRequestAttachmentIdsType union_NonEmptyArrayOfRequestAttachmentIdsType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1434; } /* = unique type id SOAP_TYPE___ns1__union_NonEmptyArrayOfRequestAttachmentIdsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_NonEmptyArrayOfRequestAttachmentIdsType() { __ns1__union_NonEmptyArrayOfRequestAttachmentIdsType::soap_default(NULL); }
	virtual ~__ns1__union_NonEmptyArrayOfRequestAttachmentIdsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfRequestAttachmentIdsType
#define SOAP_TYPE_ns1__NonEmptyArrayOfRequestAttachmentIdsType (523)
/* ns1:NonEmptyArrayOfRequestAttachmentIdsType */
class SOAP_CMAC ns1__NonEmptyArrayOfRequestAttachmentIdsType
{
public:
	int __size_NonEmptyArrayOfRequestAttachmentIdsType;	/* sequence of elements <-union-NonEmptyArrayOfRequestAttachmentIdsType> */
	__ns1__union_NonEmptyArrayOfRequestAttachmentIdsType *__union_NonEmptyArrayOfRequestAttachmentIdsType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 523; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfRequestAttachmentIdsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfRequestAttachmentIdsType() { ns1__NonEmptyArrayOfRequestAttachmentIdsType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfRequestAttachmentIdsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AttachmentType
#define SOAP_TYPE_ns1__AttachmentType (524)
/* ns1:AttachmentType */
class SOAP_CMAC ns1__AttachmentType
{
public:
	class ns1__AttachmentIdType *AttachmentId;	/* optional element of type ns1:AttachmentIdType */
	std::string *Name;	/* optional element of type xsd:string */
	std::string *ContentType;	/* optional element of type xsd:string */
	std::string *ContentId;	/* optional element of type xsd:string */
	std::string *ContentLocation;	/* optional element of type xsd:string */
	int *Size;	/* optional element of type xsd:int */
	time_t *LastModifiedTime;	/* optional element of type xsd:dateTime */
	bool *IsInline;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 524; } /* = unique type id SOAP_TYPE_ns1__AttachmentType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AttachmentType() { ns1__AttachmentType::soap_default(NULL); }
	virtual ~ns1__AttachmentType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_SyncFolderItemsCreateOrUpdateType
#define SOAP_TYPE__ns1__union_SyncFolderItemsCreateOrUpdateType (1455)
/* xsd:choice */
union _ns1__union_SyncFolderItemsCreateOrUpdateType
{
#define SOAP_UNION__ns1__union_SyncFolderItemsCreateOrUpdateType_Item	(1)
	class ns1__ItemType *Item;
#define SOAP_UNION__ns1__union_SyncFolderItemsCreateOrUpdateType_Message	(2)
	class ns1__MessageType *Message;
#define SOAP_UNION__ns1__union_SyncFolderItemsCreateOrUpdateType_CalendarItem	(3)
	class ns1__CalendarItemType *CalendarItem;
#define SOAP_UNION__ns1__union_SyncFolderItemsCreateOrUpdateType_Contact	(4)
	class ns1__ContactItemType *Contact;
#define SOAP_UNION__ns1__union_SyncFolderItemsCreateOrUpdateType_DistributionList	(5)
	class ns1__DistributionListType *DistributionList;
#define SOAP_UNION__ns1__union_SyncFolderItemsCreateOrUpdateType_MeetingMessage	(6)
	class ns1__MeetingMessageType *MeetingMessage;
#define SOAP_UNION__ns1__union_SyncFolderItemsCreateOrUpdateType_MeetingRequest	(7)
	class ns1__MeetingRequestMessageType *MeetingRequest;
#define SOAP_UNION__ns1__union_SyncFolderItemsCreateOrUpdateType_MeetingResponse	(8)
	class ns1__MeetingResponseMessageType *MeetingResponse;
#define SOAP_UNION__ns1__union_SyncFolderItemsCreateOrUpdateType_MeetingCancellation	(9)
	class ns1__MeetingCancellationMessageType *MeetingCancellation;
#define SOAP_UNION__ns1__union_SyncFolderItemsCreateOrUpdateType_Task	(10)
	class ns1__TaskType *Task;
#define SOAP_UNION__ns1__union_SyncFolderItemsCreateOrUpdateType_PostItem	(11)
	class ns1__PostItemType *PostItem;
#define SOAP_UNION__ns1__union_SyncFolderItemsCreateOrUpdateType_RoleMember	(12)
	class ns1__RoleMemberItemType *RoleMember;
#define SOAP_UNION__ns1__union_SyncFolderItemsCreateOrUpdateType_Network	(13)
	class ns1__NetworkItemType *Network;
#define SOAP_UNION__ns1__union_SyncFolderItemsCreateOrUpdateType_Person	(14)
	class ns1__AbchPersonItemType *Person;
#define SOAP_UNION__ns1__union_SyncFolderItemsCreateOrUpdateType_Booking	(15)
	class ns1__BookingItemType *Booking;
};
#endif

#ifndef SOAP_TYPE_ns1__SyncFolderItemsCreateOrUpdateType
#define SOAP_TYPE_ns1__SyncFolderItemsCreateOrUpdateType (526)
/* Choice: */
class SOAP_CMAC ns1__SyncFolderItemsCreateOrUpdateType
{
public:
	int __union_SyncFolderItemsCreateOrUpdateType;	/* union discriminant (of union defined below) */
	union _ns1__union_SyncFolderItemsCreateOrUpdateType union_SyncFolderItemsCreateOrUpdateType;	/* required element of type xsd:choice */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 526; } /* = unique type id SOAP_TYPE_ns1__SyncFolderItemsCreateOrUpdateType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SyncFolderItemsCreateOrUpdateType() { ns1__SyncFolderItemsCreateOrUpdateType::soap_default(NULL); }
	virtual ~ns1__SyncFolderItemsCreateOrUpdateType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfAttachmentsType
#define SOAP_TYPE__ns1__union_ArrayOfAttachmentsType (1459)
/* xsd:choice */
union _ns1__union_ArrayOfAttachmentsType
{
#define SOAP_UNION__ns1__union_ArrayOfAttachmentsType_ItemAttachment	(1)
	class ns1__ItemAttachmentType *ItemAttachment;
#define SOAP_UNION__ns1__union_ArrayOfAttachmentsType_FileAttachment	(2)
	class ns1__FileAttachmentType *FileAttachment;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfAttachmentsType
#define SOAP_TYPE___ns1__union_ArrayOfAttachmentsType (1456)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfAttachmentsType
{
public:
	int __union_ArrayOfAttachmentsType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfAttachmentsType union_ArrayOfAttachmentsType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1456; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfAttachmentsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfAttachmentsType() { __ns1__union_ArrayOfAttachmentsType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfAttachmentsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfAttachmentsType
#define SOAP_TYPE_ns1__ArrayOfAttachmentsType (529)
/* ns1:ArrayOfAttachmentsType */
class SOAP_CMAC ns1__ArrayOfAttachmentsType
{
public:
	int __size_ArrayOfAttachmentsType;	/* sequence of elements <-union-ArrayOfAttachmentsType> */
	__ns1__union_ArrayOfAttachmentsType *__union_ArrayOfAttachmentsType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 529; } /* = unique type id SOAP_TYPE_ns1__ArrayOfAttachmentsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfAttachmentsType() { ns1__ArrayOfAttachmentsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfAttachmentsType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_NonEmptyArrayOfAttachmentsType
#define SOAP_TYPE__ns1__union_NonEmptyArrayOfAttachmentsType (1462)
/* xsd:choice */
union _ns1__union_NonEmptyArrayOfAttachmentsType
{
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAttachmentsType_ItemAttachment	(1)
	ns1__ItemAttachmentType *ItemAttachment;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAttachmentsType_FileAttachment	(2)
	ns1__FileAttachmentType *FileAttachment;
};
#endif

#ifndef SOAP_TYPE___ns1__union_NonEmptyArrayOfAttachmentsType
#define SOAP_TYPE___ns1__union_NonEmptyArrayOfAttachmentsType (1461)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_NonEmptyArrayOfAttachmentsType
{
public:
	int __union_NonEmptyArrayOfAttachmentsType;	/* union discriminant (of union defined below) */
	union _ns1__union_NonEmptyArrayOfAttachmentsType union_NonEmptyArrayOfAttachmentsType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1461; } /* = unique type id SOAP_TYPE___ns1__union_NonEmptyArrayOfAttachmentsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_NonEmptyArrayOfAttachmentsType() { __ns1__union_NonEmptyArrayOfAttachmentsType::soap_default(NULL); }
	virtual ~__ns1__union_NonEmptyArrayOfAttachmentsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfAttachmentsType
#define SOAP_TYPE_ns1__NonEmptyArrayOfAttachmentsType (530)
/* ns1:NonEmptyArrayOfAttachmentsType */
class SOAP_CMAC ns1__NonEmptyArrayOfAttachmentsType
{
public:
	int __size_NonEmptyArrayOfAttachmentsType;	/* sequence of elements <-union-NonEmptyArrayOfAttachmentsType> */
	__ns1__union_NonEmptyArrayOfAttachmentsType *__union_NonEmptyArrayOfAttachmentsType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 530; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfAttachmentsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfAttachmentsType() { ns1__NonEmptyArrayOfAttachmentsType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfAttachmentsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__BaseFolderIdType
#define SOAP_TYPE_ns1__BaseFolderIdType (534)
/* ns1:BaseFolderIdType */
class SOAP_CMAC ns1__BaseFolderIdType
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 534; } /* = unique type id SOAP_TYPE_ns1__BaseFolderIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__BaseFolderIdType() { ns1__BaseFolderIdType::soap_default(NULL); }
	virtual ~ns1__BaseFolderIdType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfDistinguishedFolderIdType
#define SOAP_TYPE__ns1__union_ArrayOfDistinguishedFolderIdType (1466)
/* xsd:choice */
union _ns1__union_ArrayOfDistinguishedFolderIdType
{
#define SOAP_UNION__ns1__union_ArrayOfDistinguishedFolderIdType_DistinguishedFolderId	(1)
	class ns1__DistinguishedFolderIdType *DistinguishedFolderId;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfDistinguishedFolderIdType
#define SOAP_TYPE___ns1__union_ArrayOfDistinguishedFolderIdType (1464)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfDistinguishedFolderIdType
{
public:
	int __union_ArrayOfDistinguishedFolderIdType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfDistinguishedFolderIdType union_ArrayOfDistinguishedFolderIdType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1464; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfDistinguishedFolderIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfDistinguishedFolderIdType() { __ns1__union_ArrayOfDistinguishedFolderIdType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfDistinguishedFolderIdType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfDistinguishedFolderIdType
#define SOAP_TYPE_ns1__ArrayOfDistinguishedFolderIdType (538)
/* ns1:ArrayOfDistinguishedFolderIdType */
class SOAP_CMAC ns1__ArrayOfDistinguishedFolderIdType
{
public:
	int __size_ArrayOfDistinguishedFolderIdType;	/* sequence of elements <-union-ArrayOfDistinguishedFolderIdType> */
	__ns1__union_ArrayOfDistinguishedFolderIdType *__union_ArrayOfDistinguishedFolderIdType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 538; } /* = unique type id SOAP_TYPE_ns1__ArrayOfDistinguishedFolderIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfDistinguishedFolderIdType() { ns1__ArrayOfDistinguishedFolderIdType::soap_default(NULL); }
	virtual ~ns1__ArrayOfDistinguishedFolderIdType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_NonEmptyArrayOfBaseFolderIdsType
#define SOAP_TYPE__ns1__union_NonEmptyArrayOfBaseFolderIdsType (1470)
/* xsd:choice */
union _ns1__union_NonEmptyArrayOfBaseFolderIdsType
{
#define SOAP_UNION__ns1__union_NonEmptyArrayOfBaseFolderIdsType_FolderId	(1)
	class ns1__FolderIdType *FolderId;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfBaseFolderIdsType_DistinguishedFolderId	(2)
	ns1__DistinguishedFolderIdType *DistinguishedFolderId;
};
#endif

#ifndef SOAP_TYPE___ns1__union_NonEmptyArrayOfBaseFolderIdsType
#define SOAP_TYPE___ns1__union_NonEmptyArrayOfBaseFolderIdsType (1468)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_NonEmptyArrayOfBaseFolderIdsType
{
public:
	int __union_NonEmptyArrayOfBaseFolderIdsType;	/* union discriminant (of union defined below) */
	union _ns1__union_NonEmptyArrayOfBaseFolderIdsType union_NonEmptyArrayOfBaseFolderIdsType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1468; } /* = unique type id SOAP_TYPE___ns1__union_NonEmptyArrayOfBaseFolderIdsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_NonEmptyArrayOfBaseFolderIdsType() { __ns1__union_NonEmptyArrayOfBaseFolderIdsType::soap_default(NULL); }
	virtual ~__ns1__union_NonEmptyArrayOfBaseFolderIdsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfBaseFolderIdsType
#define SOAP_TYPE_ns1__NonEmptyArrayOfBaseFolderIdsType (539)
/* ns1:NonEmptyArrayOfBaseFolderIdsType */
class SOAP_CMAC ns1__NonEmptyArrayOfBaseFolderIdsType
{
public:
	int __size_NonEmptyArrayOfBaseFolderIdsType;	/* sequence of elements <-union-NonEmptyArrayOfBaseFolderIdsType> */
	__ns1__union_NonEmptyArrayOfBaseFolderIdsType *__union_NonEmptyArrayOfBaseFolderIdsType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 539; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfBaseFolderIdsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfBaseFolderIdsType() { ns1__NonEmptyArrayOfBaseFolderIdsType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfBaseFolderIdsType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_TargetFolderIdType
#define SOAP_TYPE__ns1__union_TargetFolderIdType (1474)
/* xsd:choice */
union _ns1__union_TargetFolderIdType
{
#define SOAP_UNION__ns1__union_TargetFolderIdType_FolderId	(1)
	ns1__FolderIdType *FolderId;
#define SOAP_UNION__ns1__union_TargetFolderIdType_DistinguishedFolderId	(2)
	ns1__DistinguishedFolderIdType *DistinguishedFolderId;
#define SOAP_UNION__ns1__union_TargetFolderIdType_AddressListId	(3)
	class ns1__AddressListIdType *AddressListId;
#define SOAP_UNION__ns1__union_TargetFolderIdType_ConsumerCalendarId	(4)
	class ns1__ConsumerCalendarIdType *ConsumerCalendarId;
};
#endif

#ifndef SOAP_TYPE_ns1__TargetFolderIdType
#define SOAP_TYPE_ns1__TargetFolderIdType (540)
/* Choice: */
class SOAP_CMAC ns1__TargetFolderIdType
{
public:
	int __union_TargetFolderIdType;	/* union discriminant (of union defined below) */
	union _ns1__union_TargetFolderIdType union_TargetFolderIdType;	/* required element of type xsd:choice */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 540; } /* = unique type id SOAP_TYPE_ns1__TargetFolderIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__TargetFolderIdType() { ns1__TargetFolderIdType::soap_default(NULL); }
	virtual ~ns1__TargetFolderIdType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfUploadItemsType
#define SOAP_TYPE_ns1__NonEmptyArrayOfUploadItemsType (541)
/* ns1:NonEmptyArrayOfUploadItemsType */
class SOAP_CMAC ns1__NonEmptyArrayOfUploadItemsType
{
public:
	std::vector<class ns1__UploadItemType * >Item;	/* required element of type ns1:UploadItemType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 541; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfUploadItemsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfUploadItemsType() { ns1__NonEmptyArrayOfUploadItemsType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfUploadItemsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UploadItemType
#define SOAP_TYPE_ns1__UploadItemType (542)
/* ns1:UploadItemType */
class SOAP_CMAC ns1__UploadItemType
{
public:
	ns1__FolderIdType *ParentFolderId;	/* required element of type ns1:FolderIdType */
	ns1__ItemIdType *ItemId;	/* optional element of type ns1:ItemIdType */
	xsd__base64Binary Data;	/* required element of type xsd:base64Binary */
	enum ns1__CreateActionType CreateAction;	/* required attribute */
	bool *IsAssociated;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 542; } /* = unique type id SOAP_TYPE_ns1__UploadItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UploadItemType() { ns1__UploadItemType::soap_default(NULL); }
	virtual ~ns1__UploadItemType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__FindFolderParentType
#define SOAP_TYPE_ns1__FindFolderParentType (543)
/* ns1:FindFolderParentType */
class SOAP_CMAC ns1__FindFolderParentType
{
public:
	class ns1__ArrayOfFoldersType *Folders;	/* optional element of type ns1:ArrayOfFoldersType */
	int *IndexedPagingOffset;	/* optional attribute */
	int *NumeratorOffset;	/* optional attribute */
	int *AbsoluteDenominator;	/* optional attribute */
	bool *IncludesLastItemInRange;	/* optional attribute */
	int *TotalItemsInView;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 543; } /* = unique type id SOAP_TYPE_ns1__FindFolderParentType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__FindFolderParentType() { ns1__FindFolderParentType::soap_default(NULL); }
	virtual ~ns1__FindFolderParentType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__BaseFolderType
#define SOAP_TYPE_ns1__BaseFolderType (544)
/* ns1:BaseFolderType */
class SOAP_CMAC ns1__BaseFolderType
{
public:
	ns1__FolderIdType *FolderId;	/* optional element of type ns1:FolderIdType */
	ns1__FolderIdType *ParentFolderId;	/* optional element of type ns1:FolderIdType */
	std::string *FolderClass;	/* optional element of type xsd:string */
	std::string *DisplayName;	/* optional element of type xsd:string */
	int *TotalCount;	/* optional element of type xsd:int */
	int *ChildFolderCount;	/* optional element of type xsd:int */
	std::vector<ns1__ExtendedPropertyType * >ExtendedProperty;	/* optional element of type ns1:ExtendedPropertyType */
	class ns1__ManagedFolderInformationType *ManagedFolderInformation;	/* optional element of type ns1:ManagedFolderInformationType */
	class ns1__EffectiveRightsType *EffectiveRights;	/* optional element of type ns1:EffectiveRightsType */
	enum ns1__DistinguishedFolderIdNameType *DistinguishedFolderId;	/* optional element of type ns1:DistinguishedFolderIdNameType */
	class ns1__RetentionTagType *PolicyTag;	/* optional element of type ns1:RetentionTagType */
	ns1__RetentionTagType *ArchiveTag;	/* optional element of type ns1:RetentionTagType */
	class ns1__ArrayOfStringsType *ReplicaList;	/* optional element of type ns1:ArrayOfStringsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 544; } /* = unique type id SOAP_TYPE_ns1__BaseFolderType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__BaseFolderType() { ns1__BaseFolderType::soap_default(NULL); }
	virtual ~ns1__BaseFolderType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ManagedFolderInformationType
#define SOAP_TYPE_ns1__ManagedFolderInformationType (545)
/* ns1:ManagedFolderInformationType */
class SOAP_CMAC ns1__ManagedFolderInformationType
{
public:
	bool *CanDelete;	/* optional element of type xsd:boolean */
	bool *CanRenameOrMove;	/* optional element of type xsd:boolean */
	bool *MustDisplayComment;	/* optional element of type xsd:boolean */
	bool *HasQuota;	/* optional element of type xsd:boolean */
	bool *IsManagedFoldersRoot;	/* optional element of type xsd:boolean */
	std::string *ManagedFolderId;	/* optional element of type xsd:string */
	std::string *Comment;	/* optional element of type xsd:string */
	int *StorageQuota;	/* optional element of type xsd:int */
	int *FolderSize;	/* optional element of type xsd:int */
	std::string *HomePage;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 545; } /* = unique type id SOAP_TYPE_ns1__ManagedFolderInformationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ManagedFolderInformationType() { ns1__ManagedFolderInformationType::soap_default(NULL); }
	virtual ~ns1__ManagedFolderInformationType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ReminderItemActionType
#define SOAP_TYPE_ns1__ReminderItemActionType (548)
/* ns1:ReminderItemActionType */
class SOAP_CMAC ns1__ReminderItemActionType
{
public:
	enum ns1__ReminderActionType ActionType;	/* required element of type ns1:ReminderActionType */
	ns1__ItemIdType *ItemId;	/* required element of type ns1:ItemIdType */
	std::string *NewReminderTime;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 548; } /* = unique type id SOAP_TYPE_ns1__ReminderItemActionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ReminderItemActionType() { ns1__ReminderItemActionType::soap_default(NULL); }
	virtual ~ns1__ReminderItemActionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfReminderItemActionType
#define SOAP_TYPE_ns1__NonEmptyArrayOfReminderItemActionType (549)
/* ns1:NonEmptyArrayOfReminderItemActionType */
class SOAP_CMAC ns1__NonEmptyArrayOfReminderItemActionType
{
public:
	std::vector<ns1__ReminderItemActionType * >ReminderItemAction;	/* required element of type ns1:ReminderItemActionType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 549; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfReminderItemActionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfReminderItemActionType() { ns1__NonEmptyArrayOfReminderItemActionType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfReminderItemActionType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_NonEmptyArrayOfFoldersType
#define SOAP_TYPE__ns1__union_NonEmptyArrayOfFoldersType (1491)
/* xsd:choice */
union _ns1__union_NonEmptyArrayOfFoldersType
{
#define SOAP_UNION__ns1__union_NonEmptyArrayOfFoldersType_Folder	(1)
	class ns1__FolderType *Folder;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfFoldersType_CalendarFolder	(2)
	class ns1__CalendarFolderType *CalendarFolder;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfFoldersType_ContactsFolder	(3)
	class ns1__ContactsFolderType *ContactsFolder;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfFoldersType_SearchFolder	(4)
	class ns1__SearchFolderType *SearchFolder;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfFoldersType_TasksFolder	(5)
	class ns1__TasksFolderType *TasksFolder;
};
#endif

#ifndef SOAP_TYPE___ns1__union_NonEmptyArrayOfFoldersType
#define SOAP_TYPE___ns1__union_NonEmptyArrayOfFoldersType (1485)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_NonEmptyArrayOfFoldersType
{
public:
	int __union_NonEmptyArrayOfFoldersType;	/* union discriminant (of union defined below) */
	union _ns1__union_NonEmptyArrayOfFoldersType union_NonEmptyArrayOfFoldersType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1485; } /* = unique type id SOAP_TYPE___ns1__union_NonEmptyArrayOfFoldersType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_NonEmptyArrayOfFoldersType() { __ns1__union_NonEmptyArrayOfFoldersType::soap_default(NULL); }
	virtual ~__ns1__union_NonEmptyArrayOfFoldersType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfFoldersType
#define SOAP_TYPE_ns1__NonEmptyArrayOfFoldersType (553)
/* ns1:NonEmptyArrayOfFoldersType */
class SOAP_CMAC ns1__NonEmptyArrayOfFoldersType
{
public:
	int __size_NonEmptyArrayOfFoldersType;	/* sequence of elements <-union-NonEmptyArrayOfFoldersType> */
	__ns1__union_NonEmptyArrayOfFoldersType *__union_NonEmptyArrayOfFoldersType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 553; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfFoldersType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfFoldersType() { ns1__NonEmptyArrayOfFoldersType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfFoldersType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfFoldersType
#define SOAP_TYPE__ns1__union_ArrayOfFoldersType (1494)
/* xsd:choice */
union _ns1__union_ArrayOfFoldersType
{
#define SOAP_UNION__ns1__union_ArrayOfFoldersType_Folder	(1)
	ns1__FolderType *Folder;
#define SOAP_UNION__ns1__union_ArrayOfFoldersType_CalendarFolder	(2)
	ns1__CalendarFolderType *CalendarFolder;
#define SOAP_UNION__ns1__union_ArrayOfFoldersType_ContactsFolder	(3)
	ns1__ContactsFolderType *ContactsFolder;
#define SOAP_UNION__ns1__union_ArrayOfFoldersType_SearchFolder	(4)
	ns1__SearchFolderType *SearchFolder;
#define SOAP_UNION__ns1__union_ArrayOfFoldersType_TasksFolder	(5)
	ns1__TasksFolderType *TasksFolder;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfFoldersType
#define SOAP_TYPE___ns1__union_ArrayOfFoldersType (1493)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfFoldersType
{
public:
	int __union_ArrayOfFoldersType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfFoldersType union_ArrayOfFoldersType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1493; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfFoldersType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfFoldersType() { __ns1__union_ArrayOfFoldersType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfFoldersType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfFoldersType
#define SOAP_TYPE_ns1__ArrayOfFoldersType (554)
/* ns1:ArrayOfFoldersType */
class SOAP_CMAC ns1__ArrayOfFoldersType
{
public:
	int __size_ArrayOfFoldersType;	/* sequence of elements <-union-ArrayOfFoldersType> */
	__ns1__union_ArrayOfFoldersType *__union_ArrayOfFoldersType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 554; } /* = unique type id SOAP_TYPE_ns1__ArrayOfFoldersType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfFoldersType() { ns1__ArrayOfFoldersType::soap_default(NULL); }
	virtual ~ns1__ArrayOfFoldersType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__BaseItemIdType
#define SOAP_TYPE_ns1__BaseItemIdType (555)
/* ns1:BaseItemIdType */
class SOAP_CMAC ns1__BaseItemIdType
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 555; } /* = unique type id SOAP_TYPE_ns1__BaseItemIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__BaseItemIdType() { ns1__BaseItemIdType::soap_default(NULL); }
	virtual ~ns1__BaseItemIdType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_NonEmptyArrayOfBaseItemIdsType
#define SOAP_TYPE__ns1__union_NonEmptyArrayOfBaseItemIdsType (1498)
/* xsd:choice */
union _ns1__union_NonEmptyArrayOfBaseItemIdsType
{
#define SOAP_UNION__ns1__union_NonEmptyArrayOfBaseItemIdsType_ItemId	(1)
	ns1__ItemIdType *ItemId;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfBaseItemIdsType_OccurrenceItemId	(2)
	ns1__OccurrenceItemIdType *OccurrenceItemId;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfBaseItemIdsType_RecurringMasterItemId	(3)
	ns1__RecurringMasterItemIdType *RecurringMasterItemId;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfBaseItemIdsType_RecurringMasterItemIdRanges	(4)
	class ns1__RecurringMasterItemIdRangesType *RecurringMasterItemIdRanges;
};
#endif

#ifndef SOAP_TYPE___ns1__union_NonEmptyArrayOfBaseItemIdsType
#define SOAP_TYPE___ns1__union_NonEmptyArrayOfBaseItemIdsType (1496)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_NonEmptyArrayOfBaseItemIdsType
{
public:
	int __union_NonEmptyArrayOfBaseItemIdsType;	/* union discriminant (of union defined below) */
	union _ns1__union_NonEmptyArrayOfBaseItemIdsType union_NonEmptyArrayOfBaseItemIdsType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1496; } /* = unique type id SOAP_TYPE___ns1__union_NonEmptyArrayOfBaseItemIdsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_NonEmptyArrayOfBaseItemIdsType() { __ns1__union_NonEmptyArrayOfBaseItemIdsType::soap_default(NULL); }
	virtual ~__ns1__union_NonEmptyArrayOfBaseItemIdsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfBaseItemIdsType
#define SOAP_TYPE_ns1__NonEmptyArrayOfBaseItemIdsType (557)
/* ns1:NonEmptyArrayOfBaseItemIdsType */
class SOAP_CMAC ns1__NonEmptyArrayOfBaseItemIdsType
{
public:
	int __size_NonEmptyArrayOfBaseItemIdsType;	/* sequence of elements <-union-NonEmptyArrayOfBaseItemIdsType> */
	__ns1__union_NonEmptyArrayOfBaseItemIdsType *__union_NonEmptyArrayOfBaseItemIdsType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 557; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfBaseItemIdsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfBaseItemIdsType() { ns1__NonEmptyArrayOfBaseItemIdsType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfBaseItemIdsType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfBaseItemIdsType
#define SOAP_TYPE__ns1__union_ArrayOfBaseItemIdsType (1501)
/* xsd:choice */
union _ns1__union_ArrayOfBaseItemIdsType
{
#define SOAP_UNION__ns1__union_ArrayOfBaseItemIdsType_ItemId	(1)
	ns1__ItemIdType *ItemId;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfBaseItemIdsType
#define SOAP_TYPE___ns1__union_ArrayOfBaseItemIdsType (1500)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfBaseItemIdsType
{
public:
	int __union_ArrayOfBaseItemIdsType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfBaseItemIdsType union_ArrayOfBaseItemIdsType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1500; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfBaseItemIdsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfBaseItemIdsType() { __ns1__union_ArrayOfBaseItemIdsType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfBaseItemIdsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfBaseItemIdsType
#define SOAP_TYPE_ns1__ArrayOfBaseItemIdsType (558)
/* ns1:ArrayOfBaseItemIdsType */
class SOAP_CMAC ns1__ArrayOfBaseItemIdsType
{
public:
	int __size_ArrayOfBaseItemIdsType;	/* sequence of elements <-union-ArrayOfBaseItemIdsType> */
	__ns1__union_ArrayOfBaseItemIdsType *__union_ArrayOfBaseItemIdsType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 558; } /* = unique type id SOAP_TYPE_ns1__ArrayOfBaseItemIdsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfBaseItemIdsType() { ns1__ArrayOfBaseItemIdsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfBaseItemIdsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfItemIdsType
#define SOAP_TYPE_ns1__NonEmptyArrayOfItemIdsType (559)
/* ns1:NonEmptyArrayOfItemIdsType */
class SOAP_CMAC ns1__NonEmptyArrayOfItemIdsType
{
public:
	std::vector<ns1__ItemIdType * >ItemId;	/* required element of type ns1:ItemIdType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 559; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfItemIdsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfItemIdsType() { ns1__NonEmptyArrayOfItemIdsType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfItemIdsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfItemIdsType
#define SOAP_TYPE_ns1__ArrayOfItemIdsType (560)
/* ns1:ArrayOfItemIdsType */
class SOAP_CMAC ns1__ArrayOfItemIdsType
{
public:
	std::vector<ns1__ItemIdType * >ItemId;	/* optional element of type ns1:ItemIdType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 560; } /* = unique type id SOAP_TYPE_ns1__ArrayOfItemIdsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfItemIdsType() { ns1__ArrayOfItemIdsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfItemIdsType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_NonEmptyArrayOfResponseObjectsType
#define SOAP_TYPE__ns1__union_NonEmptyArrayOfResponseObjectsType (1518)
/* xsd:choice */
union _ns1__union_NonEmptyArrayOfResponseObjectsType
{
#define SOAP_UNION__ns1__union_NonEmptyArrayOfResponseObjectsType_AcceptItem	(1)
	class ns1__AcceptItemType *AcceptItem;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfResponseObjectsType_TentativelyAcceptItem	(2)
	class ns1__TentativelyAcceptItemType *TentativelyAcceptItem;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfResponseObjectsType_DeclineItem	(3)
	class ns1__DeclineItemType *DeclineItem;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfResponseObjectsType_ReplyToItem	(4)
	class ns1__ReplyToItemType *ReplyToItem;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfResponseObjectsType_ForwardItem	(5)
	class ns1__ForwardItemType *ForwardItem;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfResponseObjectsType_ReplyAllToItem	(6)
	class ns1__ReplyAllToItemType *ReplyAllToItem;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfResponseObjectsType_CancelCalendarItem	(7)
	class ns1__CancelCalendarItemType *CancelCalendarItem;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfResponseObjectsType_RemoveItem	(8)
	class ns1__RemoveItemType *RemoveItem;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfResponseObjectsType_SuppressReadReceipt	(9)
	class ns1__SuppressReadReceiptType *SuppressReadReceipt;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfResponseObjectsType_PostReplyItem	(10)
	class ns1__PostReplyItemType *PostReplyItem;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfResponseObjectsType_AcceptSharingInvitation	(11)
	class ns1__AcceptSharingInvitationType *AcceptSharingInvitation;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfResponseObjectsType_AddItemToMyCalendar	(12)
	class ns1__AddItemToMyCalendarType *AddItemToMyCalendar;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfResponseObjectsType_ProposeNewTime	(13)
	class ns1__ProposeNewTimeType *ProposeNewTime;
};
#endif

#ifndef SOAP_TYPE___ns1__union_NonEmptyArrayOfResponseObjectsType
#define SOAP_TYPE___ns1__union_NonEmptyArrayOfResponseObjectsType (1504)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_NonEmptyArrayOfResponseObjectsType
{
public:
	int __union_NonEmptyArrayOfResponseObjectsType;	/* union discriminant (of union defined below) */
	union _ns1__union_NonEmptyArrayOfResponseObjectsType union_NonEmptyArrayOfResponseObjectsType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1504; } /* = unique type id SOAP_TYPE___ns1__union_NonEmptyArrayOfResponseObjectsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_NonEmptyArrayOfResponseObjectsType() { __ns1__union_NonEmptyArrayOfResponseObjectsType::soap_default(NULL); }
	virtual ~__ns1__union_NonEmptyArrayOfResponseObjectsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfResponseObjectsType
#define SOAP_TYPE_ns1__NonEmptyArrayOfResponseObjectsType (563)
/* ns1:NonEmptyArrayOfResponseObjectsType */
class SOAP_CMAC ns1__NonEmptyArrayOfResponseObjectsType
{
public:
	int __size_NonEmptyArrayOfResponseObjectsType;	/* sequence of elements <-union-NonEmptyArrayOfResponseObjectsType> */
	__ns1__union_NonEmptyArrayOfResponseObjectsType *__union_NonEmptyArrayOfResponseObjectsType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 563; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfResponseObjectsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfResponseObjectsType() { ns1__NonEmptyArrayOfResponseObjectsType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfResponseObjectsType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_FolderChangeType
#define SOAP_TYPE__ns1__union_FolderChangeType (1520)
/* xsd:choice */
union _ns1__union_FolderChangeType
{
#define SOAP_UNION__ns1__union_FolderChangeType_FolderId	(1)
	ns1__FolderIdType *FolderId;
#define SOAP_UNION__ns1__union_FolderChangeType_DistinguishedFolderId	(2)
	ns1__DistinguishedFolderIdType *DistinguishedFolderId;
};
#endif

#ifndef SOAP_TYPE_ns1__FolderChangeType
#define SOAP_TYPE_ns1__FolderChangeType (564)
/* ns1:FolderChangeType */
class SOAP_CMAC ns1__FolderChangeType
{
public:
	int __union_FolderChangeType;	/* union discriminant (of union defined below) */
	union _ns1__union_FolderChangeType union_FolderChangeType;	/* required element of type xsd:choice */
	ns1__NonEmptyArrayOfFolderChangeDescriptionsType *Updates;	/* required element of type ns1:NonEmptyArrayOfFolderChangeDescriptionsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 564; } /* = unique type id SOAP_TYPE_ns1__FolderChangeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__FolderChangeType() { ns1__FolderChangeType::soap_default(NULL); }
	virtual ~ns1__FolderChangeType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfFolderChangesType
#define SOAP_TYPE_ns1__NonEmptyArrayOfFolderChangesType (565)
/* ns1:NonEmptyArrayOfFolderChangesType */
class SOAP_CMAC ns1__NonEmptyArrayOfFolderChangesType
{
public:
	std::vector<ns1__FolderChangeType * >FolderChange;	/* required element of type ns1:FolderChangeType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 565; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfFolderChangesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfFolderChangesType() { ns1__NonEmptyArrayOfFolderChangesType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfFolderChangesType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_FindItemParentType
#define SOAP_TYPE__ns1__union_FindItemParentType (1526)
/* xsd:choice */
union _ns1__union_FindItemParentType
{
#define SOAP_UNION__ns1__union_FindItemParentType_Items	(1)
	class ns1__ArrayOfRealItemsType *Items;
#define SOAP_UNION__ns1__union_FindItemParentType_Groups	(2)
	class ns1__ArrayOfGroupedItemsType *Groups;
};
#endif

#ifndef SOAP_TYPE_ns1__FindItemParentType
#define SOAP_TYPE_ns1__FindItemParentType (575)
/* ns1:FindItemParentType */
class SOAP_CMAC ns1__FindItemParentType
{
public:
	int __union_FindItemParentType;	/* union discriminant (of union defined below) */
	union _ns1__union_FindItemParentType union_FindItemParentType;	/* required element of type xsd:choice */
	int *IndexedPagingOffset;	/* optional attribute */
	int *NumeratorOffset;	/* optional attribute */
	int *AbsoluteDenominator;	/* optional attribute */
	bool *IncludesLastItemInRange;	/* optional attribute */
	int *TotalItemsInView;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 575; } /* = unique type id SOAP_TYPE_ns1__FindItemParentType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__FindItemParentType() { ns1__FindItemParentType::soap_default(NULL); }
	virtual ~ns1__FindItemParentType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ItemType
#define SOAP_TYPE_ns1__ItemType (576)
/* ns1:ItemType */
class SOAP_CMAC ns1__ItemType
{
public:
	class ns1__MimeContentType *MimeContent;	/* optional element of type ns1:MimeContentType */
	ns1__ItemIdType *ItemId;	/* optional element of type ns1:ItemIdType */
	ns1__FolderIdType *ParentFolderId;	/* optional element of type ns1:FolderIdType */
	std::string *ItemClass;	/* optional element of type ns1:ItemClassType */
	std::string *Subject;	/* optional element of type xsd:string */
	enum ns1__SensitivityChoicesType *Sensitivity;	/* optional element of type ns1:SensitivityChoicesType */
	class ns1__BodyType *Body;	/* optional element of type ns1:BodyType */
	ns1__NonEmptyArrayOfAttachmentsType *Attachments;	/* optional element of type ns1:NonEmptyArrayOfAttachmentsType */
	time_t *DateTimeReceived;	/* optional element of type xsd:dateTime */
	int *Size;	/* optional element of type xsd:int */
	ns1__ArrayOfStringsType *Categories;	/* optional element of type ns1:ArrayOfStringsType */
	enum ns1__ImportanceChoicesType *Importance;	/* optional element of type ns1:ImportanceChoicesType */
	std::string *InReplyTo;	/* optional element of type xsd:string */
	bool *IsSubmitted;	/* optional element of type xsd:boolean */
	bool *IsDraft;	/* optional element of type xsd:boolean */
	bool *IsFromMe;	/* optional element of type xsd:boolean */
	bool *IsResend;	/* optional element of type xsd:boolean */
	bool *IsUnmodified;	/* optional element of type xsd:boolean */
	ns1__NonEmptyArrayOfInternetHeadersType *InternetMessageHeaders;	/* optional element of type ns1:NonEmptyArrayOfInternetHeadersType */
	time_t *DateTimeSent;	/* optional element of type xsd:dateTime */
	time_t *DateTimeCreated;	/* optional element of type xsd:dateTime */
	ns1__NonEmptyArrayOfResponseObjectsType *ResponseObjects;	/* optional element of type ns1:NonEmptyArrayOfResponseObjectsType */
	time_t *ReminderDueBy;	/* optional element of type xsd:dateTime */
	bool *ReminderIsSet;	/* optional element of type xsd:boolean */
	time_t *ReminderNextTime;	/* optional element of type xsd:dateTime */
	std::string *ReminderMinutesBeforeStart;	/* optional element of type ns1:ReminderMinutesBeforeStartType */
	std::string *DisplayCc;	/* optional element of type xsd:string */
	std::string *DisplayTo;	/* optional element of type xsd:string */
	bool *HasAttachments;	/* optional element of type xsd:boolean */
	std::vector<ns1__ExtendedPropertyType * >ExtendedProperty;	/* optional element of type ns1:ExtendedPropertyType */
	std::string *Culture;	/* optional element of type xsd:language */
	ns1__EffectiveRightsType *EffectiveRights;	/* optional element of type ns1:EffectiveRightsType */
	std::string *LastModifiedName;	/* optional element of type xsd:string */
	time_t *LastModifiedTime;	/* optional element of type xsd:dateTime */
	bool *IsAssociated;	/* optional element of type xsd:boolean */
	std::string *WebClientReadFormQueryString;	/* optional element of type xsd:string */
	std::string *WebClientEditFormQueryString;	/* optional element of type xsd:string */
	ns1__ItemIdType *ConversationId;	/* optional element of type ns1:ItemIdType */
	ns1__BodyType *UniqueBody;	/* optional element of type ns1:BodyType */
	class ns1__FlagType *Flag;	/* optional element of type ns1:FlagType */
	xsd__base64Binary *StoreEntryId;	/* optional element of type xsd:base64Binary */
	xsd__base64Binary *InstanceKey;	/* optional element of type xsd:base64Binary */
	ns1__BodyType *NormalizedBody;	/* optional element of type ns1:BodyType */
	class ns1__EntityExtractionResultType *EntityExtractionResult;	/* optional element of type ns1:EntityExtractionResultType */
	ns1__RetentionTagType *PolicyTag;	/* optional element of type ns1:RetentionTagType */
	ns1__RetentionTagType *ArchiveTag;	/* optional element of type ns1:RetentionTagType */
	time_t *RetentionDate;	/* optional element of type xsd:dateTime */
	std::string *Preview;	/* optional element of type xsd:string */
	class ns1__RightsManagementLicenseDataType *RightsManagementLicenseData;	/* optional element of type ns1:RightsManagementLicenseDataType */
	ns1__NonEmptyArrayOfPredictedActionReasonType *PredictedActionReasons;	/* optional element of type ns1:NonEmptyArrayOfPredictedActionReasonType */
	bool *IsClutter;	/* optional element of type xsd:boolean */
	bool *BlockStatus;	/* optional element of type xsd:boolean */
	bool *HasBlockedImages;	/* optional element of type xsd:boolean */
	ns1__BodyType *TextBody;	/* optional element of type ns1:BodyType */
	enum ns1__IconIndexType *IconIndex;	/* optional element of type ns1:IconIndexType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 576; } /* = unique type id SOAP_TYPE_ns1__ItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ItemType() { ns1__ItemType::soap_default(NULL); }
	virtual ~ns1__ItemType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfItemClassType
#define SOAP_TYPE__ns1__union_ArrayOfItemClassType (1544)
/* xsd:choice */
union _ns1__union_ArrayOfItemClassType
{
#define SOAP_UNION__ns1__union_ArrayOfItemClassType_ItemClass	(1)
	std::string *ItemClass;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfItemClassType
#define SOAP_TYPE___ns1__union_ArrayOfItemClassType (1543)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfItemClassType
{
public:
	int __union_ArrayOfItemClassType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfItemClassType union_ArrayOfItemClassType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1543; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfItemClassType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfItemClassType() { __ns1__union_ArrayOfItemClassType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfItemClassType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfItemClassType
#define SOAP_TYPE_ns1__ArrayOfItemClassType (577)
/* ns1:ArrayOfItemClassType */
class SOAP_CMAC ns1__ArrayOfItemClassType
{
public:
	int __size_ArrayOfItemClassType;	/* sequence of elements <-union-ArrayOfItemClassType> */
	__ns1__union_ArrayOfItemClassType *__union_ArrayOfItemClassType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 577; } /* = unique type id SOAP_TYPE_ns1__ArrayOfItemClassType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfItemClassType() { ns1__ArrayOfItemClassType::soap_default(NULL); }
	virtual ~ns1__ArrayOfItemClassType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__FlagType
#define SOAP_TYPE_ns1__FlagType (578)
/* ns1:FlagType */
class SOAP_CMAC ns1__FlagType
{
public:
	enum ns1__FlagStatusType FlagStatus;	/* required element of type ns1:FlagStatusType */
	time_t *StartDate;	/* optional element of type xsd:dateTime */
	time_t *DueDate;	/* optional element of type xsd:dateTime */
	time_t *CompleteDate;	/* optional element of type xsd:dateTime */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 578; } /* = unique type id SOAP_TYPE_ns1__FlagType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__FlagType() { ns1__FlagType::soap_default(NULL); }
	virtual ~ns1__FlagType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__EntityType
#define SOAP_TYPE_ns1__EntityType (579)
/* ns1:EntityType */
class SOAP_CMAC ns1__EntityType
{
public:
	std::vector<enum ns1__EmailPositionType >Position;	/* optional element of type ns1:EmailPositionType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 579; } /* = unique type id SOAP_TYPE_ns1__EntityType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__EntityType() { ns1__EntityType::soap_default(NULL); }
	virtual ~ns1__EntityType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfAddressesType
#define SOAP_TYPE_ns1__ArrayOfAddressesType (580)
/* ns1:ArrayOfAddressesType */
class SOAP_CMAC ns1__ArrayOfAddressesType
{
public:
	std::vector<std::string >Address;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 580; } /* = unique type id SOAP_TYPE_ns1__ArrayOfAddressesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfAddressesType() { ns1__ArrayOfAddressesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfAddressesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfAddressEntitiesType
#define SOAP_TYPE_ns1__ArrayOfAddressEntitiesType (581)
/* ns1:ArrayOfAddressEntitiesType */
class SOAP_CMAC ns1__ArrayOfAddressEntitiesType
{
public:
	std::vector<class ns1__AddressEntityType * >AddressEntity;	/* optional element of type ns1:AddressEntityType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 581; } /* = unique type id SOAP_TYPE_ns1__ArrayOfAddressEntitiesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfAddressEntitiesType() { ns1__ArrayOfAddressEntitiesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfAddressEntitiesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfEmailAddressEntitiesType
#define SOAP_TYPE_ns1__ArrayOfEmailAddressEntitiesType (583)
/* ns1:ArrayOfEmailAddressEntitiesType */
class SOAP_CMAC ns1__ArrayOfEmailAddressEntitiesType
{
public:
	std::vector<class ns1__EmailAddressEntityType * >EmailAddressEntity;	/* optional element of type ns1:EmailAddressEntityType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 583; } /* = unique type id SOAP_TYPE_ns1__ArrayOfEmailAddressEntitiesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfEmailAddressEntitiesType() { ns1__ArrayOfEmailAddressEntitiesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfEmailAddressEntitiesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfUrlEntitiesType
#define SOAP_TYPE_ns1__ArrayOfUrlEntitiesType (585)
/* ns1:ArrayOfUrlEntitiesType */
class SOAP_CMAC ns1__ArrayOfUrlEntitiesType
{
public:
	std::vector<class ns1__UrlEntityType * >UrlEntity;	/* optional element of type ns1:UrlEntityType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 585; } /* = unique type id SOAP_TYPE_ns1__ArrayOfUrlEntitiesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfUrlEntitiesType() { ns1__ArrayOfUrlEntitiesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfUrlEntitiesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfMeetingSuggestionsType
#define SOAP_TYPE_ns1__ArrayOfMeetingSuggestionsType (587)
/* ns1:ArrayOfMeetingSuggestionsType */
class SOAP_CMAC ns1__ArrayOfMeetingSuggestionsType
{
public:
	std::vector<class ns1__MeetingSuggestionType * >MeetingSuggestion;	/* required element of type ns1:MeetingSuggestionType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 587; } /* = unique type id SOAP_TYPE_ns1__ArrayOfMeetingSuggestionsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfMeetingSuggestionsType() { ns1__ArrayOfMeetingSuggestionsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfMeetingSuggestionsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfTaskSuggestionsType
#define SOAP_TYPE_ns1__ArrayOfTaskSuggestionsType (589)
/* ns1:ArrayOfTaskSuggestionsType */
class SOAP_CMAC ns1__ArrayOfTaskSuggestionsType
{
public:
	std::vector<class ns1__TaskSuggestionType * >TaskSuggestion;	/* required element of type ns1:TaskSuggestionType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 589; } /* = unique type id SOAP_TYPE_ns1__ArrayOfTaskSuggestionsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfTaskSuggestionsType() { ns1__ArrayOfTaskSuggestionsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfTaskSuggestionsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfContactsType
#define SOAP_TYPE_ns1__ArrayOfContactsType (590)
/* ns1:ArrayOfContactsType */
class SOAP_CMAC ns1__ArrayOfContactsType
{
public:
	std::vector<class ns1__ContactType * >Contact;	/* optional element of type ns1:ContactType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 590; } /* = unique type id SOAP_TYPE_ns1__ArrayOfContactsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfContactsType() { ns1__ArrayOfContactsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfContactsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfUrlsType
#define SOAP_TYPE_ns1__ArrayOfUrlsType (592)
/* ns1:ArrayOfUrlsType */
class SOAP_CMAC ns1__ArrayOfUrlsType
{
public:
	std::vector<std::string >Url;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 592; } /* = unique type id SOAP_TYPE_ns1__ArrayOfUrlsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfUrlsType() { ns1__ArrayOfUrlsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfUrlsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfPhonesType
#define SOAP_TYPE_ns1__ArrayOfPhonesType (593)
/* ns1:ArrayOfPhonesType */
class SOAP_CMAC ns1__ArrayOfPhonesType
{
public:
	std::vector<class ns1__PhoneType * >Phone;	/* optional element of type ns1:PhoneType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 593; } /* = unique type id SOAP_TYPE_ns1__ArrayOfPhonesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfPhonesType() { ns1__ArrayOfPhonesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfPhonesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PhoneType
#define SOAP_TYPE_ns1__PhoneType (594)
/* ns1:PhoneType */
class SOAP_CMAC ns1__PhoneType
{
public:
	std::string *OriginalPhoneString;	/* optional element of type xsd:string */
	std::string *PhoneString;	/* optional element of type xsd:string */
	std::string *Type;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 594; } /* = unique type id SOAP_TYPE_ns1__PhoneType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PhoneType() { ns1__PhoneType::soap_default(NULL); }
	virtual ~ns1__PhoneType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfPhoneEntitiesType
#define SOAP_TYPE_ns1__ArrayOfPhoneEntitiesType (595)
/* ns1:ArrayOfPhoneEntitiesType */
class SOAP_CMAC ns1__ArrayOfPhoneEntitiesType
{
public:
	std::vector<class ns1__PhoneEntityType * >Phone;	/* optional element of type ns1:PhoneEntityType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 595; } /* = unique type id SOAP_TYPE_ns1__ArrayOfPhoneEntitiesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfPhoneEntitiesType() { ns1__ArrayOfPhoneEntitiesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfPhoneEntitiesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfEmailUsersType
#define SOAP_TYPE_ns1__ArrayOfEmailUsersType (597)
/* ns1:ArrayOfEmailUsersType */
class SOAP_CMAC ns1__ArrayOfEmailUsersType
{
public:
	std::vector<class ns1__EmailUserType * >EmailUser;	/* optional element of type ns1:EmailUserType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 597; } /* = unique type id SOAP_TYPE_ns1__ArrayOfEmailUsersType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfEmailUsersType() { ns1__ArrayOfEmailUsersType::soap_default(NULL); }
	virtual ~ns1__ArrayOfEmailUsersType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__EmailUserType
#define SOAP_TYPE_ns1__EmailUserType (598)
/* ns1:EmailUserType */
class SOAP_CMAC ns1__EmailUserType
{
public:
	std::string *Name;	/* optional element of type xsd:string */
	std::string *UserId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 598; } /* = unique type id SOAP_TYPE_ns1__EmailUserType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__EmailUserType() { ns1__EmailUserType::soap_default(NULL); }
	virtual ~ns1__EmailUserType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfExtractedEmailAddresses
#define SOAP_TYPE_ns1__ArrayOfExtractedEmailAddresses (600)
/* ns1:ArrayOfExtractedEmailAddresses */
class SOAP_CMAC ns1__ArrayOfExtractedEmailAddresses
{
public:
	std::vector<std::string >EmailAddress;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 600; } /* = unique type id SOAP_TYPE_ns1__ArrayOfExtractedEmailAddresses */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfExtractedEmailAddresses() { ns1__ArrayOfExtractedEmailAddresses::soap_default(NULL); }
	virtual ~ns1__ArrayOfExtractedEmailAddresses() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ParcelDeliveryEntityType
#define SOAP_TYPE_ns1__ParcelDeliveryEntityType (601)
/* ns1:ParcelDeliveryEntityType */
class SOAP_CMAC ns1__ParcelDeliveryEntityType
{
public:
	std::string *Carrier;	/* optional element of type xsd:string */
	std::string *TrackingNumber;	/* optional element of type xsd:string */
	std::string *TrackingUrl;	/* optional element of type xsd:string */
	std::string *ExpectedArrivalFrom;	/* optional element of type xsd:string */
	std::string *ExpectedArrivalUntil;	/* optional element of type xsd:string */
	std::string *Product;	/* optional element of type xsd:string */
	std::string *ProductUrl;	/* optional element of type xsd:string */
	std::string *ProductImage;	/* optional element of type xsd:string */
	std::string *ProductSku;	/* optional element of type xsd:string */
	std::string *ProductDescription;	/* optional element of type xsd:string */
	std::string *ProductBrand;	/* optional element of type xsd:string */
	std::string *ProductColor;	/* optional element of type xsd:string */
	std::string *OrderNumber;	/* optional element of type xsd:string */
	std::string *Seller;	/* optional element of type xsd:string */
	std::string *OrderStatus;	/* optional element of type xsd:string */
	std::string *AddressName;	/* optional element of type xsd:string */
	std::string *StreetAddress;	/* optional element of type xsd:string */
	std::string *AddressLocality;	/* optional element of type xsd:string */
	std::string *AddressRegion;	/* optional element of type xsd:string */
	std::string *AddressCountry;	/* optional element of type xsd:string */
	std::string *PostalCode;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 601; } /* = unique type id SOAP_TYPE_ns1__ParcelDeliveryEntityType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ParcelDeliveryEntityType() { ns1__ParcelDeliveryEntityType::soap_default(NULL); }
	virtual ~ns1__ParcelDeliveryEntityType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfParcelDeliveryEntitiesType
#define SOAP_TYPE_ns1__ArrayOfParcelDeliveryEntitiesType (602)
/* ns1:ArrayOfParcelDeliveryEntitiesType */
class SOAP_CMAC ns1__ArrayOfParcelDeliveryEntitiesType
{
public:
	std::vector<ns1__ParcelDeliveryEntityType * >ParcelDelivery;	/* optional element of type ns1:ParcelDeliveryEntityType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 602; } /* = unique type id SOAP_TYPE_ns1__ArrayOfParcelDeliveryEntitiesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfParcelDeliveryEntitiesType() { ns1__ArrayOfParcelDeliveryEntitiesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfParcelDeliveryEntitiesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__FlightEntityType
#define SOAP_TYPE_ns1__FlightEntityType (603)
/* ns1:FlightEntityType */
class SOAP_CMAC ns1__FlightEntityType
{
public:
	std::string *FlightNumber;	/* optional element of type xsd:string */
	std::string *AirlineIataCode;	/* optional element of type xsd:string */
	std::string *DepartureTime;	/* optional element of type xsd:string */
	std::string *WindowsTimeZoneName;	/* optional element of type xsd:string */
	std::string *DepartureAirportIataCode;	/* optional element of type xsd:string */
	std::string *ArrivalAirportIataCode;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 603; } /* = unique type id SOAP_TYPE_ns1__FlightEntityType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__FlightEntityType() { ns1__FlightEntityType::soap_default(NULL); }
	virtual ~ns1__FlightEntityType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfFlightsType
#define SOAP_TYPE_ns1__ArrayOfFlightsType (604)
/* ns1:ArrayOfFlightsType */
class SOAP_CMAC ns1__ArrayOfFlightsType
{
public:
	std::vector<ns1__FlightEntityType * >Flight;	/* optional element of type ns1:FlightEntityType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 604; } /* = unique type id SOAP_TYPE_ns1__ArrayOfFlightsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfFlightsType() { ns1__ArrayOfFlightsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfFlightsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__FlightReservationEntityType
#define SOAP_TYPE_ns1__FlightReservationEntityType (605)
/* ns1:FlightReservationEntityType */
class SOAP_CMAC ns1__FlightReservationEntityType
{
public:
	std::string *ReservationId;	/* optional element of type xsd:string */
	std::string *ReservationStatus;	/* optional element of type xsd:string */
	std::string *UnderName;	/* optional element of type xsd:string */
	std::string *BrokerName;	/* optional element of type xsd:string */
	std::string *BrokerPhone;	/* optional element of type xsd:string */
	ns1__ArrayOfFlightsType *Flights;	/* optional element of type ns1:ArrayOfFlightsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 605; } /* = unique type id SOAP_TYPE_ns1__FlightReservationEntityType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__FlightReservationEntityType() { ns1__FlightReservationEntityType::soap_default(NULL); }
	virtual ~ns1__FlightReservationEntityType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfFlightReservationsType
#define SOAP_TYPE_ns1__ArrayOfFlightReservationsType (606)
/* ns1:ArrayOfFlightReservationsType */
class SOAP_CMAC ns1__ArrayOfFlightReservationsType
{
public:
	std::vector<ns1__FlightReservationEntityType * >FlightReservation;	/* optional element of type ns1:FlightReservationEntityType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 606; } /* = unique type id SOAP_TYPE_ns1__ArrayOfFlightReservationsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfFlightReservationsType() { ns1__ArrayOfFlightReservationsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfFlightReservationsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__EntityExtractionResultType
#define SOAP_TYPE_ns1__EntityExtractionResultType (607)
/* ns1:EntityExtractionResultType */
class SOAP_CMAC ns1__EntityExtractionResultType
{
public:
	ns1__ArrayOfAddressEntitiesType *Addresses;	/* optional element of type ns1:ArrayOfAddressEntitiesType */
	ns1__ArrayOfMeetingSuggestionsType *MeetingSuggestions;	/* optional element of type ns1:ArrayOfMeetingSuggestionsType */
	ns1__ArrayOfTaskSuggestionsType *TaskSuggestions;	/* optional element of type ns1:ArrayOfTaskSuggestionsType */
	ns1__ArrayOfEmailAddressEntitiesType *EmailAddresses;	/* optional element of type ns1:ArrayOfEmailAddressEntitiesType */
	ns1__ArrayOfContactsType *Contacts;	/* optional element of type ns1:ArrayOfContactsType */
	ns1__ArrayOfUrlEntitiesType *Urls;	/* optional element of type ns1:ArrayOfUrlEntitiesType */
	ns1__ArrayOfPhoneEntitiesType *PhoneNumbers;	/* optional element of type ns1:ArrayOfPhoneEntitiesType */
	ns1__ArrayOfParcelDeliveryEntitiesType *ParcelDeliveries;	/* optional element of type ns1:ArrayOfParcelDeliveryEntitiesType */
	ns1__ArrayOfFlightReservationsType *FlightReservations;	/* optional element of type ns1:ArrayOfFlightReservationsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 607; } /* = unique type id SOAP_TYPE_ns1__EntityExtractionResultType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__EntityExtractionResultType() { ns1__EntityExtractionResultType::soap_default(NULL); }
	virtual ~ns1__EntityExtractionResultType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RightsManagementLicenseDataType
#define SOAP_TYPE_ns1__RightsManagementLicenseDataType (608)
/* ns1:RightsManagementLicenseDataType */
class SOAP_CMAC ns1__RightsManagementLicenseDataType
{
public:
	int *RightsManagedMessageDecryptionStatus;	/* optional element of type xsd:int */
	std::string *RmsTemplateId;	/* optional element of type xsd:string */
	std::string *TemplateName;	/* optional element of type xsd:string */
	std::string *TemplateDescription;	/* optional element of type xsd:string */
	bool *EditAllowed;	/* optional element of type xsd:boolean */
	bool *ReplyAllowed;	/* optional element of type xsd:boolean */
	bool *ReplyAllAllowed;	/* optional element of type xsd:boolean */
	bool *ForwardAllowed;	/* optional element of type xsd:boolean */
	bool *ModifyRecipientsAllowed;	/* optional element of type xsd:boolean */
	bool *ExtractAllowed;	/* optional element of type xsd:boolean */
	bool *PrintAllowed;	/* optional element of type xsd:boolean */
	bool *ExportAllowed;	/* optional element of type xsd:boolean */
	bool *ProgrammaticAccessAllowed;	/* optional element of type xsd:boolean */
	bool *IsOwner;	/* optional element of type xsd:boolean */
	std::string *ContentOwner;	/* optional element of type xsd:string */
	std::string *ContentExpiryDate;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 608; } /* = unique type id SOAP_TYPE_ns1__RightsManagementLicenseDataType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RightsManagementLicenseDataType() { ns1__RightsManagementLicenseDataType::soap_default(NULL); }
	virtual ~ns1__RightsManagementLicenseDataType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ConversationActionType
#define SOAP_TYPE_ns1__ConversationActionType (609)
/* ns1:ConversationActionType */
class SOAP_CMAC ns1__ConversationActionType
{
public:
	enum ns1__ConversationActionTypeType Action;	/* required element of type ns1:ConversationActionTypeType */
	ns1__ItemIdType *ConversationId;	/* required element of type ns1:ItemIdType */
	ns1__TargetFolderIdType *ContextFolderId;	/* optional element of type ns1:TargetFolderIdType */
	time_t *ConversationLastSyncTime;	/* optional element of type xsd:dateTime */
	bool *ProcessRightAway;	/* optional element of type xsd:boolean */
	ns1__TargetFolderIdType *DestinationFolderId;	/* optional element of type ns1:TargetFolderIdType */
	ns1__ArrayOfStringsType *Categories;	/* optional element of type ns1:ArrayOfStringsType */
	bool *EnableAlwaysDelete;	/* optional element of type xsd:boolean */
	bool *IsRead;	/* optional element of type xsd:boolean */
	enum ns1__DisposalType *DeleteType;	/* optional element of type ns1:DisposalType */
	enum ns1__RetentionType *RetentionPolicyType;	/* optional element of type ns1:RetentionType */
	std::string *RetentionPolicyTagId;	/* optional element of type xsd:string */
	ns1__FlagType *Flag;	/* optional element of type ns1:FlagType */
	bool *SuppressReadReceipts;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 609; } /* = unique type id SOAP_TYPE_ns1__ConversationActionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ConversationActionType() { ns1__ConversationActionType::soap_default(NULL); }
	virtual ~ns1__ConversationActionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfApplyConversationActionType
#define SOAP_TYPE_ns1__NonEmptyArrayOfApplyConversationActionType (610)
/* ns1:NonEmptyArrayOfApplyConversationActionType */
class SOAP_CMAC ns1__NonEmptyArrayOfApplyConversationActionType
{
public:
	std::vector<ns1__ConversationActionType * >ConversationAction;	/* required element of type ns1:ConversationActionType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 610; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfApplyConversationActionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfApplyConversationActionType() { ns1__NonEmptyArrayOfApplyConversationActionType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfApplyConversationActionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ConversationType
#define SOAP_TYPE_ns1__ConversationType (611)
/* ns1:ConversationType */
class SOAP_CMAC ns1__ConversationType
{
public:
	ns1__ItemIdType *ConversationId;	/* optional element of type ns1:ItemIdType */
	std::string *ConversationTopic;	/* optional element of type xsd:string */
	ns1__ArrayOfStringsType *UniqueRecipients;	/* optional element of type ns1:ArrayOfStringsType */
	ns1__ArrayOfStringsType *GlobalUniqueRecipients;	/* optional element of type ns1:ArrayOfStringsType */
	ns1__ArrayOfStringsType *UniqueUnreadSenders;	/* optional element of type ns1:ArrayOfStringsType */
	ns1__ArrayOfStringsType *GlobalUniqueUnreadSenders;	/* optional element of type ns1:ArrayOfStringsType */
	ns1__ArrayOfStringsType *UniqueSenders;	/* optional element of type ns1:ArrayOfStringsType */
	ns1__ArrayOfStringsType *GlobalUniqueSenders;	/* optional element of type ns1:ArrayOfStringsType */
	time_t *LastDeliveryTime;	/* optional element of type xsd:dateTime */
	time_t *GlobalLastDeliveryTime;	/* optional element of type xsd:dateTime */
	ns1__ArrayOfStringsType *Categories;	/* optional element of type ns1:ArrayOfStringsType */
	ns1__ArrayOfStringsType *GlobalCategories;	/* optional element of type ns1:ArrayOfStringsType */
	enum ns1__FlagStatusType *FlagStatus;	/* optional element of type ns1:FlagStatusType */
	enum ns1__FlagStatusType *GlobalFlagStatus;	/* optional element of type ns1:FlagStatusType */
	bool *HasAttachments;	/* optional element of type xsd:boolean */
	bool *GlobalHasAttachments;	/* optional element of type xsd:boolean */
	int *MessageCount;	/* optional element of type xsd:int */
	int *GlobalMessageCount;	/* optional element of type xsd:int */
	int *UnreadCount;	/* optional element of type xsd:int */
	int *GlobalUnreadCount;	/* optional element of type xsd:int */
	int *Size;	/* optional element of type xsd:int */
	int *GlobalSize;	/* optional element of type xsd:int */
	ns1__ArrayOfItemClassType *ItemClasses;	/* optional element of type ns1:ArrayOfItemClassType */
	ns1__ArrayOfItemClassType *GlobalItemClasses;	/* optional element of type ns1:ArrayOfItemClassType */
	enum ns1__ImportanceChoicesType *Importance;	/* optional element of type ns1:ImportanceChoicesType */
	enum ns1__ImportanceChoicesType *GlobalImportance;	/* optional element of type ns1:ImportanceChoicesType */
	ns1__NonEmptyArrayOfBaseItemIdsType *ItemIds;	/* optional element of type ns1:NonEmptyArrayOfBaseItemIdsType */
	ns1__NonEmptyArrayOfBaseItemIdsType *GlobalItemIds;	/* optional element of type ns1:NonEmptyArrayOfBaseItemIdsType */
	time_t *LastModifiedTime;	/* optional element of type xsd:dateTime */
	xsd__base64Binary *InstanceKey;	/* optional element of type xsd:base64Binary */
	std::string *Preview;	/* optional element of type xsd:string */
	enum ns1__MailboxSearchLocationType *MailboxScope;	/* optional element of type ns1:MailboxSearchLocationType */
	enum ns1__IconIndexType *IconIndex;	/* optional element of type ns1:IconIndexType */
	enum ns1__IconIndexType *GlobalIconIndex;	/* optional element of type ns1:IconIndexType */
	ns1__NonEmptyArrayOfBaseItemIdsType *DraftItemIds;	/* optional element of type ns1:NonEmptyArrayOfBaseItemIdsType */
	bool *HasIrm;	/* optional element of type xsd:boolean */
	bool *GlobalHasIrm;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 611; } /* = unique type id SOAP_TYPE_ns1__ConversationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ConversationType() { ns1__ConversationType::soap_default(NULL); }
	virtual ~ns1__ConversationType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__HighlightTermType
#define SOAP_TYPE_ns1__HighlightTermType (612)
/* ns1:HighlightTermType */
class SOAP_CMAC ns1__HighlightTermType
{
public:
	std::string Scope;	/* required element of type xsd:string */
	std::string Value;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 612; } /* = unique type id SOAP_TYPE_ns1__HighlightTermType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__HighlightTermType() { ns1__HighlightTermType::soap_default(NULL); }
	virtual ~ns1__HighlightTermType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfConversationsType
#define SOAP_TYPE__ns1__union_ArrayOfConversationsType (1592)
/* xsd:choice */
union _ns1__union_ArrayOfConversationsType
{
#define SOAP_UNION__ns1__union_ArrayOfConversationsType_Conversation	(1)
	ns1__ConversationType *Conversation;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfConversationsType
#define SOAP_TYPE___ns1__union_ArrayOfConversationsType (1590)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfConversationsType
{
public:
	int __union_ArrayOfConversationsType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfConversationsType union_ArrayOfConversationsType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1590; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfConversationsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfConversationsType() { __ns1__union_ArrayOfConversationsType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfConversationsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfConversationsType
#define SOAP_TYPE_ns1__ArrayOfConversationsType (613)
/* ns1:ArrayOfConversationsType */
class SOAP_CMAC ns1__ArrayOfConversationsType
{
public:
	int __size_ArrayOfConversationsType;	/* sequence of elements <-union-ArrayOfConversationsType> */
	__ns1__union_ArrayOfConversationsType *__union_ArrayOfConversationsType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 613; } /* = unique type id SOAP_TYPE_ns1__ArrayOfConversationsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfConversationsType() { ns1__ArrayOfConversationsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfConversationsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ConversationRequestType
#define SOAP_TYPE_ns1__ConversationRequestType (614)
/* ns1:ConversationRequestType */
class SOAP_CMAC ns1__ConversationRequestType
{
public:
	ns1__ItemIdType *ConversationId;	/* required element of type ns1:ItemIdType */
	xsd__base64Binary *SyncState;	/* optional element of type xsd:base64Binary */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 614; } /* = unique type id SOAP_TYPE_ns1__ConversationRequestType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ConversationRequestType() { ns1__ConversationRequestType::soap_default(NULL); }
	virtual ~ns1__ConversationRequestType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfConversationRequestsType
#define SOAP_TYPE__ns1__union_ArrayOfConversationRequestsType (1596)
/* xsd:choice */
union _ns1__union_ArrayOfConversationRequestsType
{
#define SOAP_UNION__ns1__union_ArrayOfConversationRequestsType_Conversation	(1)
	ns1__ConversationRequestType *Conversation;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfConversationRequestsType
#define SOAP_TYPE___ns1__union_ArrayOfConversationRequestsType (1594)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfConversationRequestsType
{
public:
	int __union_ArrayOfConversationRequestsType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfConversationRequestsType union_ArrayOfConversationRequestsType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1594; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfConversationRequestsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfConversationRequestsType() { __ns1__union_ArrayOfConversationRequestsType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfConversationRequestsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfConversationRequestsType
#define SOAP_TYPE_ns1__ArrayOfConversationRequestsType (615)
/* ns1:ArrayOfConversationRequestsType */
class SOAP_CMAC ns1__ArrayOfConversationRequestsType
{
public:
	int __size_ArrayOfConversationRequestsType;	/* sequence of elements <-union-ArrayOfConversationRequestsType> */
	__ns1__union_ArrayOfConversationRequestsType *__union_ArrayOfConversationRequestsType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 615; } /* = unique type id SOAP_TYPE_ns1__ArrayOfConversationRequestsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfConversationRequestsType() { ns1__ArrayOfConversationRequestsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfConversationRequestsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ConversationNodeType
#define SOAP_TYPE_ns1__ConversationNodeType (616)
/* ns1:ConversationNodeType */
class SOAP_CMAC ns1__ConversationNodeType
{
public:
	std::string *InternetMessageId;	/* optional element of type xsd:string */
	std::string *ParentInternetMessageId;	/* optional element of type xsd:string */
	class ns1__NonEmptyArrayOfAllItemsType *Items;	/* optional element of type ns1:NonEmptyArrayOfAllItemsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 616; } /* = unique type id SOAP_TYPE_ns1__ConversationNodeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ConversationNodeType() { ns1__ConversationNodeType::soap_default(NULL); }
	virtual ~ns1__ConversationNodeType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfConversationNodesType
#define SOAP_TYPE__ns1__union_ArrayOfConversationNodesType (1601)
/* xsd:choice */
union _ns1__union_ArrayOfConversationNodesType
{
#define SOAP_UNION__ns1__union_ArrayOfConversationNodesType_ConversationNode	(1)
	ns1__ConversationNodeType *ConversationNode;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfConversationNodesType
#define SOAP_TYPE___ns1__union_ArrayOfConversationNodesType (1599)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfConversationNodesType
{
public:
	int __union_ArrayOfConversationNodesType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfConversationNodesType union_ArrayOfConversationNodesType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1599; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfConversationNodesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfConversationNodesType() { __ns1__union_ArrayOfConversationNodesType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfConversationNodesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfConversationNodesType
#define SOAP_TYPE_ns1__ArrayOfConversationNodesType (617)
/* ns1:ArrayOfConversationNodesType */
class SOAP_CMAC ns1__ArrayOfConversationNodesType
{
public:
	int __size_ArrayOfConversationNodesType;	/* sequence of elements <-union-ArrayOfConversationNodesType> */
	__ns1__union_ArrayOfConversationNodesType *__union_ArrayOfConversationNodesType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 617; } /* = unique type id SOAP_TYPE_ns1__ArrayOfConversationNodesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfConversationNodesType() { ns1__ArrayOfConversationNodesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfConversationNodesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ConversationResponseType
#define SOAP_TYPE_ns1__ConversationResponseType (618)
/* ns1:ConversationResponseType */
class SOAP_CMAC ns1__ConversationResponseType
{
public:
	ns1__ItemIdType *ConversationId;	/* required element of type ns1:ItemIdType */
	xsd__base64Binary *SyncState;	/* optional element of type xsd:base64Binary */
	ns1__ArrayOfConversationNodesType *ConversationNodes;	/* optional element of type ns1:ArrayOfConversationNodesType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 618; } /* = unique type id SOAP_TYPE_ns1__ConversationResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ConversationResponseType() { ns1__ConversationResponseType::soap_default(NULL); }
	virtual ~ns1__ConversationResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfHighlightTermsType
#define SOAP_TYPE_ns1__ArrayOfHighlightTermsType (619)
/* ns1:ArrayOfHighlightTermsType */
class SOAP_CMAC ns1__ArrayOfHighlightTermsType
{
public:
	std::vector<ns1__HighlightTermType * >Term;	/* optional element of type ns1:HighlightTermType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 619; } /* = unique type id SOAP_TYPE_ns1__ArrayOfHighlightTermsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfHighlightTermsType() { ns1__ArrayOfHighlightTermsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfHighlightTermsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PersonaAttributionType
#define SOAP_TYPE_ns1__PersonaAttributionType (620)
/* ns1:PersonaAttributionType */
class SOAP_CMAC ns1__PersonaAttributionType
{
public:
	std::string Id;	/* required element of type xsd:string */
	ns1__ItemIdType *SourceId;	/* required element of type ns1:ItemIdType */
	std::string DisplayName;	/* required element of type xsd:string */
	bool *IsWritable;	/* optional element of type xsd:boolean */
	bool *IsQuickContact;	/* optional element of type xsd:boolean */
	bool *IsHidden;	/* optional element of type xsd:boolean */
	ns1__FolderIdType *FolderId;	/* optional element of type ns1:FolderIdType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 620; } /* = unique type id SOAP_TYPE_ns1__PersonaAttributionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PersonaAttributionType() { ns1__PersonaAttributionType::soap_default(NULL); }
	virtual ~ns1__PersonaAttributionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfPersonaAttributionsType
#define SOAP_TYPE_ns1__ArrayOfPersonaAttributionsType (621)
/* ns1:ArrayOfPersonaAttributionsType */
class SOAP_CMAC ns1__ArrayOfPersonaAttributionsType
{
public:
	std::vector<ns1__PersonaAttributionType * >Attribution;	/* required element of type ns1:PersonaAttributionType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 621; } /* = unique type id SOAP_TYPE_ns1__ArrayOfPersonaAttributionsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfPersonaAttributionsType() { ns1__ArrayOfPersonaAttributionsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfPersonaAttributionsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfValueAttributionsType
#define SOAP_TYPE_ns1__ArrayOfValueAttributionsType (622)
/* ns1:ArrayOfValueAttributionsType */
class SOAP_CMAC ns1__ArrayOfValueAttributionsType
{
public:
	std::vector<std::string >Attribution;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 622; } /* = unique type id SOAP_TYPE_ns1__ArrayOfValueAttributionsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfValueAttributionsType() { ns1__ArrayOfValueAttributionsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfValueAttributionsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfStringValueType
#define SOAP_TYPE_ns1__ArrayOfStringValueType (623)
/* ns1:ArrayOfStringValueType */
class SOAP_CMAC ns1__ArrayOfStringValueType
{
public:
	std::vector<std::string >Value;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 623; } /* = unique type id SOAP_TYPE_ns1__ArrayOfStringValueType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfStringValueType() { ns1__ArrayOfStringValueType::soap_default(NULL); }
	virtual ~ns1__ArrayOfStringValueType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__StringAttributedValueType
#define SOAP_TYPE_ns1__StringAttributedValueType (624)
/* ns1:StringAttributedValueType */
class SOAP_CMAC ns1__StringAttributedValueType
{
public:
	std::string Value;	/* required element of type xsd:string */
	ns1__ArrayOfValueAttributionsType *Attributions;	/* required element of type ns1:ArrayOfValueAttributionsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 624; } /* = unique type id SOAP_TYPE_ns1__StringAttributedValueType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__StringAttributedValueType() { ns1__StringAttributedValueType::soap_default(NULL); }
	virtual ~ns1__StringAttributedValueType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__BodyContentType
#define SOAP_TYPE_ns1__BodyContentType (625)
/* ns1:BodyContentType */
class SOAP_CMAC ns1__BodyContentType
{
public:
	std::string Value;	/* required element of type xsd:string */
	enum ns1__BodyTypeType BodyType;	/* required element of type ns1:BodyTypeType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 625; } /* = unique type id SOAP_TYPE_ns1__BodyContentType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__BodyContentType() { ns1__BodyContentType::soap_default(NULL); }
	virtual ~ns1__BodyContentType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__BodyContentAttributedValueType
#define SOAP_TYPE_ns1__BodyContentAttributedValueType (626)
/* ns1:BodyContentAttributedValueType */
class SOAP_CMAC ns1__BodyContentAttributedValueType
{
public:
	ns1__BodyContentType *Value;	/* required element of type ns1:BodyContentType */
	ns1__ArrayOfValueAttributionsType *Attributions;	/* required element of type ns1:ArrayOfValueAttributionsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 626; } /* = unique type id SOAP_TYPE_ns1__BodyContentAttributedValueType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__BodyContentAttributedValueType() { ns1__BodyContentAttributedValueType::soap_default(NULL); }
	virtual ~ns1__BodyContentAttributedValueType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__StringArrayAttributedValueType
#define SOAP_TYPE_ns1__StringArrayAttributedValueType (627)
/* ns1:StringArrayAttributedValueType */
class SOAP_CMAC ns1__StringArrayAttributedValueType
{
public:
	ns1__ArrayOfStringValueType *Values;	/* required element of type ns1:ArrayOfStringValueType */
	ns1__ArrayOfValueAttributionsType *Attributions;	/* required element of type ns1:ArrayOfValueAttributionsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 627; } /* = unique type id SOAP_TYPE_ns1__StringArrayAttributedValueType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__StringArrayAttributedValueType() { ns1__StringArrayAttributedValueType::soap_default(NULL); }
	virtual ~ns1__StringArrayAttributedValueType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__EmailAddressAttributedValueType
#define SOAP_TYPE_ns1__EmailAddressAttributedValueType (628)
/* ns1:EmailAddressAttributedValueType */
class SOAP_CMAC ns1__EmailAddressAttributedValueType
{
public:
	ns1__EmailAddressType *Value;	/* required element of type ns1:EmailAddressType */
	ns1__ArrayOfValueAttributionsType *Attributions;	/* required element of type ns1:ArrayOfValueAttributionsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 628; } /* = unique type id SOAP_TYPE_ns1__EmailAddressAttributedValueType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__EmailAddressAttributedValueType() { ns1__EmailAddressAttributedValueType::soap_default(NULL); }
	virtual ~ns1__EmailAddressAttributedValueType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PersonaPhoneNumberType
#define SOAP_TYPE_ns1__PersonaPhoneNumberType (629)
/* ns1:PersonaPhoneNumberType */
class SOAP_CMAC ns1__PersonaPhoneNumberType
{
public:
	std::string Number;	/* required element of type xsd:string */
	std::string Type;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 629; } /* = unique type id SOAP_TYPE_ns1__PersonaPhoneNumberType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PersonaPhoneNumberType() { ns1__PersonaPhoneNumberType::soap_default(NULL); }
	virtual ~ns1__PersonaPhoneNumberType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PhoneNumberAttributedValueType
#define SOAP_TYPE_ns1__PhoneNumberAttributedValueType (630)
/* ns1:PhoneNumberAttributedValueType */
class SOAP_CMAC ns1__PhoneNumberAttributedValueType
{
public:
	ns1__PersonaPhoneNumberType *Value;	/* required element of type ns1:PersonaPhoneNumberType */
	ns1__ArrayOfValueAttributionsType *Attributions;	/* required element of type ns1:ArrayOfValueAttributionsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 630; } /* = unique type id SOAP_TYPE_ns1__PhoneNumberAttributedValueType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PhoneNumberAttributedValueType() { ns1__PhoneNumberAttributedValueType::soap_default(NULL); }
	virtual ~ns1__PhoneNumberAttributedValueType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PersonaPostalAddressType
#define SOAP_TYPE_ns1__PersonaPostalAddressType (631)
/* ns1:PersonaPostalAddressType */
class SOAP_CMAC ns1__PersonaPostalAddressType
{
public:
	std::string *Street;	/* optional element of type xsd:string */
	std::string *City;	/* optional element of type xsd:string */
	std::string *State;	/* optional element of type xsd:string */
	std::string *Country;	/* optional element of type xsd:string */
	std::string *PostalCode;	/* optional element of type xsd:string */
	std::string *PostOfficeBox;	/* optional element of type xsd:string */
	std::string *Type;	/* optional element of type xsd:string */
	double *Latitude;	/* optional element of type xsd:double */
	double *Longitude;	/* optional element of type xsd:double */
	double *Accuracy;	/* optional element of type xsd:double */
	double *Altitude;	/* optional element of type xsd:double */
	double *AltitudeAccuracy;	/* optional element of type xsd:double */
	std::string *FormattedAddress;	/* optional element of type xsd:string */
	std::string *LocationUri;	/* optional element of type xsd:string */
	enum ns1__LocationSourceType *LocationSource;	/* optional element of type ns1:LocationSourceType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 631; } /* = unique type id SOAP_TYPE_ns1__PersonaPostalAddressType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PersonaPostalAddressType() { ns1__PersonaPostalAddressType::soap_default(NULL); }
	virtual ~ns1__PersonaPostalAddressType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PostalAddressAttributedValueType
#define SOAP_TYPE_ns1__PostalAddressAttributedValueType (632)
/* ns1:PostalAddressAttributedValueType */
class SOAP_CMAC ns1__PostalAddressAttributedValueType
{
public:
	ns1__PersonaPostalAddressType *Value;	/* required element of type ns1:PersonaPostalAddressType */
	ns1__ArrayOfValueAttributionsType *Attributions;	/* required element of type ns1:ArrayOfValueAttributionsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 632; } /* = unique type id SOAP_TYPE_ns1__PostalAddressAttributedValueType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PostalAddressAttributedValueType() { ns1__PostalAddressAttributedValueType::soap_default(NULL); }
	virtual ~ns1__PostalAddressAttributedValueType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ExtendedPropertyAttributedValueType
#define SOAP_TYPE_ns1__ExtendedPropertyAttributedValueType (633)
/* ns1:ExtendedPropertyAttributedValueType */
class SOAP_CMAC ns1__ExtendedPropertyAttributedValueType
{
public:
	ns1__ExtendedPropertyType *Value;	/* required element of type ns1:ExtendedPropertyType */
	ns1__ArrayOfValueAttributionsType *Attributions;	/* required element of type ns1:ArrayOfValueAttributionsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 633; } /* = unique type id SOAP_TYPE_ns1__ExtendedPropertyAttributedValueType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ExtendedPropertyAttributedValueType() { ns1__ExtendedPropertyAttributedValueType::soap_default(NULL); }
	virtual ~ns1__ExtendedPropertyAttributedValueType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfStringAttributedValuesType
#define SOAP_TYPE_ns1__ArrayOfStringAttributedValuesType (634)
/* ns1:ArrayOfStringAttributedValuesType */
class SOAP_CMAC ns1__ArrayOfStringAttributedValuesType
{
public:
	std::vector<ns1__StringAttributedValueType * >StringAttributedValue;	/* optional element of type ns1:StringAttributedValueType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 634; } /* = unique type id SOAP_TYPE_ns1__ArrayOfStringAttributedValuesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfStringAttributedValuesType() { ns1__ArrayOfStringAttributedValuesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfStringAttributedValuesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfStringArrayAttributedValuesType
#define SOAP_TYPE_ns1__ArrayOfStringArrayAttributedValuesType (635)
/* ns1:ArrayOfStringArrayAttributedValuesType */
class SOAP_CMAC ns1__ArrayOfStringArrayAttributedValuesType
{
public:
	std::vector<ns1__StringArrayAttributedValueType * >StringArrayAttributedValue;	/* optional element of type ns1:StringArrayAttributedValueType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 635; } /* = unique type id SOAP_TYPE_ns1__ArrayOfStringArrayAttributedValuesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfStringArrayAttributedValuesType() { ns1__ArrayOfStringArrayAttributedValuesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfStringArrayAttributedValuesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfBodyContentAttributedValuesType
#define SOAP_TYPE_ns1__ArrayOfBodyContentAttributedValuesType (636)
/* ns1:ArrayOfBodyContentAttributedValuesType */
class SOAP_CMAC ns1__ArrayOfBodyContentAttributedValuesType
{
public:
	std::vector<ns1__BodyContentAttributedValueType * >BodyContentAttributedValue;	/* optional element of type ns1:BodyContentAttributedValueType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 636; } /* = unique type id SOAP_TYPE_ns1__ArrayOfBodyContentAttributedValuesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfBodyContentAttributedValuesType() { ns1__ArrayOfBodyContentAttributedValuesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfBodyContentAttributedValuesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfEmailAddressAttributedValuesType
#define SOAP_TYPE_ns1__ArrayOfEmailAddressAttributedValuesType (637)
/* ns1:ArrayOfEmailAddressAttributedValuesType */
class SOAP_CMAC ns1__ArrayOfEmailAddressAttributedValuesType
{
public:
	std::vector<ns1__EmailAddressAttributedValueType * >EmailAddressAttributedValue;	/* optional element of type ns1:EmailAddressAttributedValueType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 637; } /* = unique type id SOAP_TYPE_ns1__ArrayOfEmailAddressAttributedValuesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfEmailAddressAttributedValuesType() { ns1__ArrayOfEmailAddressAttributedValuesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfEmailAddressAttributedValuesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfPhoneNumberAttributedValuesType
#define SOAP_TYPE_ns1__ArrayOfPhoneNumberAttributedValuesType (638)
/* ns1:ArrayOfPhoneNumberAttributedValuesType */
class SOAP_CMAC ns1__ArrayOfPhoneNumberAttributedValuesType
{
public:
	std::vector<ns1__PhoneNumberAttributedValueType * >PhoneNumberAttributedValue;	/* optional element of type ns1:PhoneNumberAttributedValueType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 638; } /* = unique type id SOAP_TYPE_ns1__ArrayOfPhoneNumberAttributedValuesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfPhoneNumberAttributedValuesType() { ns1__ArrayOfPhoneNumberAttributedValuesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfPhoneNumberAttributedValuesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfPostalAddressAttributedValuesType
#define SOAP_TYPE_ns1__ArrayOfPostalAddressAttributedValuesType (639)
/* ns1:ArrayOfPostalAddressAttributedValuesType */
class SOAP_CMAC ns1__ArrayOfPostalAddressAttributedValuesType
{
public:
	std::vector<ns1__PostalAddressAttributedValueType * >PostalAddressAttributedValue;	/* optional element of type ns1:PostalAddressAttributedValueType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 639; } /* = unique type id SOAP_TYPE_ns1__ArrayOfPostalAddressAttributedValuesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfPostalAddressAttributedValuesType() { ns1__ArrayOfPostalAddressAttributedValuesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfPostalAddressAttributedValuesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfExtendedPropertyAttributedValueType
#define SOAP_TYPE_ns1__ArrayOfExtendedPropertyAttributedValueType (640)
/* ns1:ArrayOfExtendedPropertyAttributedValueType */
class SOAP_CMAC ns1__ArrayOfExtendedPropertyAttributedValueType
{
public:
	std::vector<ns1__ExtendedPropertyAttributedValueType * >ExtendedPropertyAttributedValue;	/* optional element of type ns1:ExtendedPropertyAttributedValueType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 640; } /* = unique type id SOAP_TYPE_ns1__ArrayOfExtendedPropertyAttributedValueType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfExtendedPropertyAttributedValueType() { ns1__ArrayOfExtendedPropertyAttributedValueType::soap_default(NULL); }
	virtual ~ns1__ArrayOfExtendedPropertyAttributedValueType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__InsightValue
#define SOAP_TYPE_ns1__InsightValue (641)
/* ns1:InsightValue */
class SOAP_CMAC ns1__InsightValue
{
public:
	enum ns1__InsightSourceType *InsightSource;	/* optional element of type ns1:InsightSourceType */
	LONG64 *UpdatedUtcTicks;	/* optional element of type xsd:long */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 641; } /* = unique type id SOAP_TYPE_ns1__InsightValue */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__InsightValue() { ns1__InsightValue::soap_default(NULL); }
	virtual ~ns1__InsightValue() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfInsightValue
#define SOAP_TYPE_ns1__ArrayOfInsightValue (650)
/* ns1:ArrayOfInsightValue */
class SOAP_CMAC ns1__ArrayOfInsightValue
{
public:
	std::vector<ns1__InsightValue * >Item;	/* optional element of type ns1:InsightValue */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 650; } /* = unique type id SOAP_TYPE_ns1__ArrayOfInsightValue */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfInsightValue() { ns1__ArrayOfInsightValue::soap_default(NULL); }
	virtual ~ns1__ArrayOfInsightValue() { }
};
#endif

#ifndef SOAP_TYPE_ns1__InsightContent
#define SOAP_TYPE_ns1__InsightContent (651)
/* ns1:InsightContent */
class SOAP_CMAC ns1__InsightContent
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 651; } /* = unique type id SOAP_TYPE_ns1__InsightContent */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__InsightContent() { ns1__InsightContent::soap_default(NULL); }
	virtual ~ns1__InsightContent() { }
};
#endif

#ifndef SOAP_TYPE_ns1__Insight
#define SOAP_TYPE_ns1__Insight (654)
/* ns1:Insight */
class SOAP_CMAC ns1__Insight
{
public:
	enum ns1__InsightGroupType *InsightGroupType;	/* optional element of type ns1:InsightGroupType */
	enum ns1__InsightType *InsightType;	/* optional element of type ns1:InsightType */
	double *Rank;	/* optional element of type xsd:double */
	ns1__InsightContent *Content;	/* optional element of type ns1:InsightContent */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 654; } /* = unique type id SOAP_TYPE_ns1__Insight */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__Insight() { ns1__Insight::soap_default(NULL); }
	virtual ~ns1__Insight() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ComputedInsightValueProperty
#define SOAP_TYPE_ns1__ComputedInsightValueProperty (655)
/* ns1:ComputedInsightValueProperty */
class SOAP_CMAC ns1__ComputedInsightValueProperty
{
public:
	std::string Key;	/* required element of type xsd:string */
	std::string Value;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 655; } /* = unique type id SOAP_TYPE_ns1__ComputedInsightValueProperty */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ComputedInsightValueProperty() { ns1__ComputedInsightValueProperty::soap_default(NULL); }
	virtual ~ns1__ComputedInsightValueProperty() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfComputedInsightValueProperty
#define SOAP_TYPE_ns1__ArrayOfComputedInsightValueProperty (656)
/* ns1:ArrayOfComputedInsightValueProperty */
class SOAP_CMAC ns1__ArrayOfComputedInsightValueProperty
{
public:
	std::vector<ns1__ComputedInsightValueProperty * >Property;	/* optional element of type ns1:ComputedInsightValueProperty */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 656; } /* = unique type id SOAP_TYPE_ns1__ArrayOfComputedInsightValueProperty */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfComputedInsightValueProperty() { ns1__ArrayOfComputedInsightValueProperty::soap_default(NULL); }
	virtual ~ns1__ArrayOfComputedInsightValueProperty() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfInsight
#define SOAP_TYPE_ns1__ArrayOfInsight (658)
/* ns1:ArrayOfInsight */
class SOAP_CMAC ns1__ArrayOfInsight
{
public:
	std::vector<ns1__Insight * >Insight;	/* optional element of type ns1:Insight */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 658; } /* = unique type id SOAP_TYPE_ns1__ArrayOfInsight */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfInsight() { ns1__ArrayOfInsight::soap_default(NULL); }
	virtual ~ns1__ArrayOfInsight() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PersonType
#define SOAP_TYPE_ns1__PersonType (659)
/* ns1:PersonType */
class SOAP_CMAC ns1__PersonType
{
public:
	std::string *DisplayName;	/* optional element of type xsd:string */
	std::string *EmailAddress;	/* optional element of type xsd:string */
	ns1__ArrayOfInsight *Insights;	/* optional element of type ns1:ArrayOfInsight */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 659; } /* = unique type id SOAP_TYPE_ns1__PersonType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PersonType() { ns1__PersonType::soap_default(NULL); }
	virtual ~ns1__PersonType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfPersonType
#define SOAP_TYPE__ns1__union_ArrayOfPersonType (1644)
/* xsd:choice */
union _ns1__union_ArrayOfPersonType
{
#define SOAP_UNION__ns1__union_ArrayOfPersonType_Person	(1)
	ns1__PersonType *Person;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfPersonType
#define SOAP_TYPE___ns1__union_ArrayOfPersonType (1642)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfPersonType
{
public:
	int __union_ArrayOfPersonType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfPersonType union_ArrayOfPersonType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1642; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfPersonType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfPersonType() { __ns1__union_ArrayOfPersonType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfPersonType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfPersonType
#define SOAP_TYPE_ns1__ArrayOfPersonType (660)
/* ns1:ArrayOfPersonType */
class SOAP_CMAC ns1__ArrayOfPersonType
{
public:
	int __size_ArrayOfPersonType;	/* sequence of elements <-union-ArrayOfPersonType> */
	__ns1__union_ArrayOfPersonType *__union_ArrayOfPersonType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 660; } /* = unique type id SOAP_TYPE_ns1__ArrayOfPersonType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfPersonType() { ns1__ArrayOfPersonType::soap_default(NULL); }
	virtual ~ns1__ArrayOfPersonType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PeopleTokenType
#define SOAP_TYPE_ns1__PeopleTokenType (661)
/* ns1:PeopleTokenType */
class SOAP_CMAC ns1__PeopleTokenType
{
public:
	enum ns1__TokenSourceType TokenSource;	/* required element of type ns1:TokenSourceType */
	time_t *ExpirationDateTime;	/* optional element of type xsd:dateTime */
	std::string *TokenValue;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 661; } /* = unique type id SOAP_TYPE_ns1__PeopleTokenType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PeopleTokenType() { ns1__PeopleTokenType::soap_default(NULL); }
	virtual ~ns1__PeopleTokenType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfPeopleTokenType
#define SOAP_TYPE_ns1__NonEmptyArrayOfPeopleTokenType (662)
/* ns1:NonEmptyArrayOfPeopleTokenType */
class SOAP_CMAC ns1__NonEmptyArrayOfPeopleTokenType
{
public:
	std::vector<ns1__PeopleTokenType * >PeopleToken;	/* required element of type ns1:PeopleTokenType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 662; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfPeopleTokenType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfPeopleTokenType() { ns1__NonEmptyArrayOfPeopleTokenType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfPeopleTokenType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PersonaType
#define SOAP_TYPE_ns1__PersonaType (663)
/* ns1:PersonaType */
class SOAP_CMAC ns1__PersonaType
{
public:
	ns1__ItemIdType *PersonaId;	/* required element of type ns1:ItemIdType */
	std::string *PersonaType;	/* optional element of type xsd:string */
	std::string *PersonaObjectStatus;	/* optional element of type xsd:string */
	time_t *CreationTime;	/* optional element of type xsd:dateTime */
	ns1__ArrayOfBodyContentAttributedValuesType *Bodies;	/* optional element of type ns1:ArrayOfBodyContentAttributedValuesType */
	std::string *DisplayNameFirstLastSortKey;	/* optional element of type xsd:string */
	std::string *DisplayNameLastFirstSortKey;	/* optional element of type xsd:string */
	std::string *CompanyNameSortKey;	/* optional element of type xsd:string */
	std::string *HomeCitySortKey;	/* optional element of type xsd:string */
	std::string *WorkCitySortKey;	/* optional element of type xsd:string */
	std::string *DisplayNameFirstLastHeader;	/* optional element of type xsd:string */
	std::string *DisplayNameLastFirstHeader;	/* optional element of type xsd:string */
	std::string *DisplayName;	/* optional element of type xsd:string */
	std::string *DisplayNameFirstLast;	/* optional element of type xsd:string */
	std::string *DisplayNameLastFirst;	/* optional element of type xsd:string */
	std::string *FileAs;	/* optional element of type xsd:string */
	std::string *FileAsId;	/* optional element of type xsd:string */
	std::string *DisplayNamePrefix;	/* optional element of type xsd:string */
	std::string *GivenName;	/* optional element of type xsd:string */
	std::string *MiddleName;	/* optional element of type xsd:string */
	std::string *Surname;	/* optional element of type xsd:string */
	std::string *Generation;	/* optional element of type xsd:string */
	std::string *Nickname;	/* optional element of type xsd:string */
	std::string *YomiCompanyName;	/* optional element of type xsd:string */
	std::string *YomiFirstName;	/* optional element of type xsd:string */
	std::string *YomiLastName;	/* optional element of type xsd:string */
	std::string *Title;	/* optional element of type xsd:string */
	std::string *Department;	/* optional element of type xsd:string */
	std::string *CompanyName;	/* optional element of type xsd:string */
	std::string *Location;	/* optional element of type xsd:string */
	ns1__EmailAddressType *EmailAddress;	/* optional element of type ns1:EmailAddressType */
	ns1__ArrayOfEmailAddressesType *EmailAddresses;	/* optional element of type ns1:ArrayOfEmailAddressesType */
	ns1__PersonaPhoneNumberType *PhoneNumber;	/* optional element of type ns1:PersonaPhoneNumberType */
	std::string *ImAddress;	/* optional element of type xsd:string */
	std::string *HomeCity;	/* optional element of type xsd:string */
	std::string *WorkCity;	/* optional element of type xsd:string */
	int *RelevanceScore;	/* optional element of type xsd:int */
	double *RankingWeight;	/* optional element of type xsd:double */
	class ns1__ArrayOfFolderIdType *FolderIds;	/* optional element of type ns1:ArrayOfFolderIdType */
	ns1__ArrayOfPersonaAttributionsType *Attributions;	/* optional element of type ns1:ArrayOfPersonaAttributionsType */
	ns1__ArrayOfStringAttributedValuesType *DisplayNames;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *FileAses;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *FileAsIds;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *DisplayNamePrefixes;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *GivenNames;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *MiddleNames;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *Surnames;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *Generations;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *Nicknames;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *Initials;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *YomiCompanyNames;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *YomiFirstNames;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *YomiLastNames;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfPhoneNumberAttributedValuesType *BusinessPhoneNumbers;	/* optional element of type ns1:ArrayOfPhoneNumberAttributedValuesType */
	ns1__ArrayOfPhoneNumberAttributedValuesType *BusinessPhoneNumbers2;	/* optional element of type ns1:ArrayOfPhoneNumberAttributedValuesType */
	ns1__ArrayOfPhoneNumberAttributedValuesType *HomePhones;	/* optional element of type ns1:ArrayOfPhoneNumberAttributedValuesType */
	ns1__ArrayOfPhoneNumberAttributedValuesType *HomePhones2;	/* optional element of type ns1:ArrayOfPhoneNumberAttributedValuesType */
	ns1__ArrayOfPhoneNumberAttributedValuesType *MobilePhones;	/* optional element of type ns1:ArrayOfPhoneNumberAttributedValuesType */
	ns1__ArrayOfPhoneNumberAttributedValuesType *MobilePhones2;	/* optional element of type ns1:ArrayOfPhoneNumberAttributedValuesType */
	ns1__ArrayOfPhoneNumberAttributedValuesType *AssistantPhoneNumbers;	/* optional element of type ns1:ArrayOfPhoneNumberAttributedValuesType */
	ns1__ArrayOfPhoneNumberAttributedValuesType *CallbackPhones;	/* optional element of type ns1:ArrayOfPhoneNumberAttributedValuesType */
	ns1__ArrayOfPhoneNumberAttributedValuesType *CarPhones;	/* optional element of type ns1:ArrayOfPhoneNumberAttributedValuesType */
	ns1__ArrayOfPhoneNumberAttributedValuesType *HomeFaxes;	/* optional element of type ns1:ArrayOfPhoneNumberAttributedValuesType */
	ns1__ArrayOfPhoneNumberAttributedValuesType *OrganizationMainPhones;	/* optional element of type ns1:ArrayOfPhoneNumberAttributedValuesType */
	ns1__ArrayOfPhoneNumberAttributedValuesType *OtherFaxes;	/* optional element of type ns1:ArrayOfPhoneNumberAttributedValuesType */
	ns1__ArrayOfPhoneNumberAttributedValuesType *OtherTelephones;	/* optional element of type ns1:ArrayOfPhoneNumberAttributedValuesType */
	ns1__ArrayOfPhoneNumberAttributedValuesType *OtherPhones2;	/* optional element of type ns1:ArrayOfPhoneNumberAttributedValuesType */
	ns1__ArrayOfPhoneNumberAttributedValuesType *Pagers;	/* optional element of type ns1:ArrayOfPhoneNumberAttributedValuesType */
	ns1__ArrayOfPhoneNumberAttributedValuesType *RadioPhones;	/* optional element of type ns1:ArrayOfPhoneNumberAttributedValuesType */
	ns1__ArrayOfPhoneNumberAttributedValuesType *TelexNumbers;	/* optional element of type ns1:ArrayOfPhoneNumberAttributedValuesType */
	ns1__ArrayOfPhoneNumberAttributedValuesType *TTYTDDPhoneNumbers;	/* optional element of type ns1:ArrayOfPhoneNumberAttributedValuesType */
	ns1__ArrayOfPhoneNumberAttributedValuesType *WorkFaxes;	/* optional element of type ns1:ArrayOfPhoneNumberAttributedValuesType */
	ns1__ArrayOfEmailAddressAttributedValuesType *Emails1;	/* optional element of type ns1:ArrayOfEmailAddressAttributedValuesType */
	ns1__ArrayOfEmailAddressAttributedValuesType *Emails2;	/* optional element of type ns1:ArrayOfEmailAddressAttributedValuesType */
	ns1__ArrayOfEmailAddressAttributedValuesType *Emails3;	/* optional element of type ns1:ArrayOfEmailAddressAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *BusinessHomePages;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *PersonalHomePages;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *OfficeLocations;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *ImAddresses;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *ImAddresses2;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *ImAddresses3;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfPostalAddressAttributedValuesType *BusinessAddresses;	/* optional element of type ns1:ArrayOfPostalAddressAttributedValuesType */
	ns1__ArrayOfPostalAddressAttributedValuesType *HomeAddresses;	/* optional element of type ns1:ArrayOfPostalAddressAttributedValuesType */
	ns1__ArrayOfPostalAddressAttributedValuesType *OtherAddresses;	/* optional element of type ns1:ArrayOfPostalAddressAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *Titles;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *Departments;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *CompanyNames;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *Managers;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *AssistantNames;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *Professions;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *SpouseNames;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringArrayAttributedValuesType *Children;	/* optional element of type ns1:ArrayOfStringArrayAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *Schools;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *Hobbies;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *WeddingAnniversaries;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *Birthdays;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfStringAttributedValuesType *Locations;	/* optional element of type ns1:ArrayOfStringAttributedValuesType */
	ns1__ArrayOfExtendedPropertyAttributedValueType *ExtendedProperties;	/* optional element of type ns1:ArrayOfExtendedPropertyAttributedValueType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 663; } /* = unique type id SOAP_TYPE_ns1__PersonaType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PersonaType() { ns1__PersonaType::soap_default(NULL); }
	virtual ~ns1__PersonaType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfPeopleType
#define SOAP_TYPE__ns1__union_ArrayOfPeopleType (1660)
/* xsd:choice */
union _ns1__union_ArrayOfPeopleType
{
#define SOAP_UNION__ns1__union_ArrayOfPeopleType_Persona	(1)
	ns1__PersonaType *Persona;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfPeopleType
#define SOAP_TYPE___ns1__union_ArrayOfPeopleType (1658)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfPeopleType
{
public:
	int __union_ArrayOfPeopleType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfPeopleType union_ArrayOfPeopleType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1658; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfPeopleType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfPeopleType() { __ns1__union_ArrayOfPeopleType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfPeopleType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfPeopleType
#define SOAP_TYPE_ns1__ArrayOfPeopleType (664)
/* ns1:ArrayOfPeopleType */
class SOAP_CMAC ns1__ArrayOfPeopleType
{
public:
	int __size_ArrayOfPeopleType;	/* sequence of elements <-union-ArrayOfPeopleType> */
	__ns1__union_ArrayOfPeopleType *__union_ArrayOfPeopleType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 664; } /* = unique type id SOAP_TYPE_ns1__ArrayOfPeopleType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfPeopleType() { ns1__ArrayOfPeopleType::soap_default(NULL); }
	virtual ~ns1__ArrayOfPeopleType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MailboxLocatorType
#define SOAP_TYPE_ns1__MailboxLocatorType (665)
/* ns1:MailboxLocatorType */
class SOAP_CMAC ns1__MailboxLocatorType
{
public:
	std::string *ExternalDirectoryObjectId;	/* optional element of type xsd:string */
	std::string *LegacyDn;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 665; } /* = unique type id SOAP_TYPE_ns1__MailboxLocatorType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MailboxLocatorType() { ns1__MailboxLocatorType::soap_default(NULL); }
	virtual ~ns1__MailboxLocatorType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MailboxAssociationType
#define SOAP_TYPE_ns1__MailboxAssociationType (668)
/* ns1:MailboxAssociationType */
class SOAP_CMAC ns1__MailboxAssociationType
{
public:
	class ns1__GroupLocatorType *Group;	/* required element of type ns1:GroupLocatorType */
	class ns1__UserLocatorType *User;	/* required element of type ns1:UserLocatorType */
	bool *IsMember;	/* optional element of type xsd:boolean */
	time_t *JoinDate;	/* optional element of type xsd:dateTime */
	bool *IsPin;	/* optional element of type xsd:boolean */
	std::string *JoinedBy;	/* optional element of type xsd:string */
	time_t *LastVisitedDate;	/* optional element of type xsd:dateTime */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 668; } /* = unique type id SOAP_TYPE_ns1__MailboxAssociationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MailboxAssociationType() { ns1__MailboxAssociationType::soap_default(NULL); }
	virtual ~ns1__MailboxAssociationType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MasterMailboxType
#define SOAP_TYPE_ns1__MasterMailboxType (669)
/* ns1:MasterMailboxType */
class SOAP_CMAC ns1__MasterMailboxType
{
public:
	std::string MailboxType;	/* required element of type xsd:string */
	std::string *Alias;	/* optional element of type xsd:string */
	std::string *DisplayName;	/* optional element of type xsd:string */
	std::string *SmtpAddress;	/* optional element of type xsd:string */
	enum ns1__ModernGroupTypeType *GroupType;	/* optional element of type ns1:ModernGroupTypeType */
	std::string *Description;	/* optional element of type xsd:string */
	std::string *Photo;	/* optional element of type xsd:string */
	std::string *SharePointUrl;	/* optional element of type xsd:string */
	std::string *InboxUrl;	/* optional element of type xsd:string */
	std::string *CalendarUrl;	/* optional element of type xsd:string */
	std::string *DomainController;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 669; } /* = unique type id SOAP_TYPE_ns1__MasterMailboxType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MasterMailboxType() { ns1__MasterMailboxType::soap_default(NULL); }
	virtual ~ns1__MasterMailboxType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfItemsType
#define SOAP_TYPE__ns1__union_ArrayOfItemsType (1666)
/* xsd:choice */
union _ns1__union_ArrayOfItemsType
{
#define SOAP_UNION__ns1__union_ArrayOfItemsType_Item	(1)
	ns1__ItemType *Item;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfItemsType
#define SOAP_TYPE___ns1__union_ArrayOfItemsType (1665)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfItemsType
{
public:
	int __union_ArrayOfItemsType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfItemsType union_ArrayOfItemsType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1665; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfItemsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfItemsType() { __ns1__union_ArrayOfItemsType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfItemsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfItemsType
#define SOAP_TYPE_ns1__ArrayOfItemsType (670)
/* ns1:ArrayOfItemsType */
class SOAP_CMAC ns1__ArrayOfItemsType
{
public:
	int __size_ArrayOfItemsType;	/* sequence of elements <-union-ArrayOfItemsType> */
	__ns1__union_ArrayOfItemsType *__union_ArrayOfItemsType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 670; } /* = unique type id SOAP_TYPE_ns1__ArrayOfItemsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfItemsType() { ns1__ArrayOfItemsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfItemsType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfCalendarItemsType
#define SOAP_TYPE__ns1__union_ArrayOfCalendarItemsType (1669)
/* xsd:choice */
union _ns1__union_ArrayOfCalendarItemsType
{
#define SOAP_UNION__ns1__union_ArrayOfCalendarItemsType_CalendarItem	(1)
	ns1__CalendarItemType *CalendarItem;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfCalendarItemsType
#define SOAP_TYPE___ns1__union_ArrayOfCalendarItemsType (1668)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfCalendarItemsType
{
public:
	int __union_ArrayOfCalendarItemsType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfCalendarItemsType union_ArrayOfCalendarItemsType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1668; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfCalendarItemsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfCalendarItemsType() { __ns1__union_ArrayOfCalendarItemsType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfCalendarItemsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfCalendarItemsType
#define SOAP_TYPE_ns1__ArrayOfCalendarItemsType (671)
/* ns1:ArrayOfCalendarItemsType */
class SOAP_CMAC ns1__ArrayOfCalendarItemsType
{
public:
	int __size_ArrayOfCalendarItemsType;	/* sequence of elements <-union-ArrayOfCalendarItemsType> */
	__ns1__union_ArrayOfCalendarItemsType *__union_ArrayOfCalendarItemsType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 671; } /* = unique type id SOAP_TYPE_ns1__ArrayOfCalendarItemsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfCalendarItemsType() { ns1__ArrayOfCalendarItemsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfCalendarItemsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__InstantSearchPayloadType
#define SOAP_TYPE_ns1__InstantSearchPayloadType (672)
/* ns1:InstantSearchPayloadType */
class SOAP_CMAC ns1__InstantSearchPayloadType
{
public:
	std::string SearchSessionId;	/* required element of type xsd:string */
	LONG64 SearchRequestId;	/* required element of type xsd:long */
	enum ns1__InstantSearchResultType ResultType;	/* required element of type ns1:InstantSearchResultType */
	ns1__ArrayOfItemsType *Items;	/* optional element of type ns1:ArrayOfItemsType */
	ns1__ArrayOfConversationsType *Conversations;	/* optional element of type ns1:ArrayOfConversationsType */
	ns1__ArrayOfCalendarItemsType *CalendarItems;	/* optional element of type ns1:ArrayOfCalendarItemsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 672; } /* = unique type id SOAP_TYPE_ns1__InstantSearchPayloadType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__InstantSearchPayloadType() { ns1__InstantSearchPayloadType::soap_default(NULL); }
	virtual ~ns1__InstantSearchPayloadType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfStringsType
#define SOAP_TYPE_ns1__ArrayOfStringsType (673)
/* ns1:ArrayOfStringsType */
class SOAP_CMAC ns1__ArrayOfStringsType
{
public:
	std::vector<std::string >String;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 673; } /* = unique type id SOAP_TYPE_ns1__ArrayOfStringsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfStringsType() { ns1__ArrayOfStringsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfStringsType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfRealItemsType
#define SOAP_TYPE__ns1__union_ArrayOfRealItemsType (1675)
/* xsd:choice */
union _ns1__union_ArrayOfRealItemsType
{
#define SOAP_UNION__ns1__union_ArrayOfRealItemsType_Item	(1)
	ns1__ItemType *Item;
#define SOAP_UNION__ns1__union_ArrayOfRealItemsType_Message	(2)
	ns1__MessageType *Message;
#define SOAP_UNION__ns1__union_ArrayOfRealItemsType_CalendarItem	(3)
	ns1__CalendarItemType *CalendarItem;
#define SOAP_UNION__ns1__union_ArrayOfRealItemsType_Contact	(4)
	ns1__ContactItemType *Contact;
#define SOAP_UNION__ns1__union_ArrayOfRealItemsType_DistributionList	(5)
	ns1__DistributionListType *DistributionList;
#define SOAP_UNION__ns1__union_ArrayOfRealItemsType_MeetingMessage	(6)
	ns1__MeetingMessageType *MeetingMessage;
#define SOAP_UNION__ns1__union_ArrayOfRealItemsType_MeetingRequest	(7)
	ns1__MeetingRequestMessageType *MeetingRequest;
#define SOAP_UNION__ns1__union_ArrayOfRealItemsType_MeetingResponse	(8)
	ns1__MeetingResponseMessageType *MeetingResponse;
#define SOAP_UNION__ns1__union_ArrayOfRealItemsType_MeetingCancellation	(9)
	ns1__MeetingCancellationMessageType *MeetingCancellation;
#define SOAP_UNION__ns1__union_ArrayOfRealItemsType_Task	(10)
	ns1__TaskType *Task;
#define SOAP_UNION__ns1__union_ArrayOfRealItemsType_PostItem	(11)
	ns1__PostItemType *PostItem;
#define SOAP_UNION__ns1__union_ArrayOfRealItemsType_RoleMember	(12)
	ns1__RoleMemberItemType *RoleMember;
#define SOAP_UNION__ns1__union_ArrayOfRealItemsType_Network	(13)
	ns1__NetworkItemType *Network;
#define SOAP_UNION__ns1__union_ArrayOfRealItemsType_Person	(14)
	ns1__AbchPersonItemType *Person;
#define SOAP_UNION__ns1__union_ArrayOfRealItemsType_Booking	(15)
	ns1__BookingItemType *Booking;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfRealItemsType
#define SOAP_TYPE___ns1__union_ArrayOfRealItemsType (1674)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfRealItemsType
{
public:
	int __union_ArrayOfRealItemsType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfRealItemsType union_ArrayOfRealItemsType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1674; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfRealItemsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfRealItemsType() { __ns1__union_ArrayOfRealItemsType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfRealItemsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfRealItemsType
#define SOAP_TYPE_ns1__ArrayOfRealItemsType (674)
/* ns1:ArrayOfRealItemsType */
class SOAP_CMAC ns1__ArrayOfRealItemsType
{
public:
	int __size_ArrayOfRealItemsType;	/* sequence of elements <-union-ArrayOfRealItemsType> */
	__ns1__union_ArrayOfRealItemsType *__union_ArrayOfRealItemsType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 674; } /* = unique type id SOAP_TYPE_ns1__ArrayOfRealItemsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfRealItemsType() { ns1__ArrayOfRealItemsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfRealItemsType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_NonEmptyArrayOfAllItemsType
#define SOAP_TYPE__ns1__union_NonEmptyArrayOfAllItemsType (1678)
/* xsd:choice */
union _ns1__union_NonEmptyArrayOfAllItemsType
{
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAllItemsType_Item	(1)
	ns1__ItemType *Item;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAllItemsType_Message	(2)
	ns1__MessageType *Message;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAllItemsType_CalendarItem	(3)
	ns1__CalendarItemType *CalendarItem;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAllItemsType_Contact	(4)
	ns1__ContactItemType *Contact;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAllItemsType_DistributionList	(5)
	ns1__DistributionListType *DistributionList;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAllItemsType_MeetingMessage	(6)
	ns1__MeetingMessageType *MeetingMessage;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAllItemsType_MeetingRequest	(7)
	ns1__MeetingRequestMessageType *MeetingRequest;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAllItemsType_MeetingResponse	(8)
	ns1__MeetingResponseMessageType *MeetingResponse;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAllItemsType_MeetingCancellation	(9)
	ns1__MeetingCancellationMessageType *MeetingCancellation;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAllItemsType_Task	(10)
	ns1__TaskType *Task;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAllItemsType_PostItem	(11)
	ns1__PostItemType *PostItem;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAllItemsType_ReplyToItem	(12)
	ns1__ReplyToItemType *ReplyToItem;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAllItemsType_ForwardItem	(13)
	ns1__ForwardItemType *ForwardItem;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAllItemsType_ReplyAllToItem	(14)
	ns1__ReplyAllToItemType *ReplyAllToItem;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAllItemsType_AcceptItem	(15)
	ns1__AcceptItemType *AcceptItem;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAllItemsType_TentativelyAcceptItem	(16)
	ns1__TentativelyAcceptItemType *TentativelyAcceptItem;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAllItemsType_DeclineItem	(17)
	ns1__DeclineItemType *DeclineItem;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAllItemsType_CancelCalendarItem	(18)
	ns1__CancelCalendarItemType *CancelCalendarItem;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAllItemsType_RemoveItem	(19)
	ns1__RemoveItemType *RemoveItem;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAllItemsType_SuppressReadReceipt	(20)
	ns1__SuppressReadReceiptType *SuppressReadReceipt;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAllItemsType_PostReplyItem	(21)
	ns1__PostReplyItemType *PostReplyItem;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAllItemsType_AcceptSharingInvitation	(22)
	ns1__AcceptSharingInvitationType *AcceptSharingInvitation;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAllItemsType_RoleMember	(23)
	ns1__RoleMemberItemType *RoleMember;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAllItemsType_Network	(24)
	ns1__NetworkItemType *Network;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAllItemsType_Person	(25)
	ns1__AbchPersonItemType *Person;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAllItemsType_Booking	(26)
	ns1__BookingItemType *Booking;
};
#endif

#ifndef SOAP_TYPE___ns1__union_NonEmptyArrayOfAllItemsType
#define SOAP_TYPE___ns1__union_NonEmptyArrayOfAllItemsType (1677)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_NonEmptyArrayOfAllItemsType
{
public:
	int __union_NonEmptyArrayOfAllItemsType;	/* union discriminant (of union defined below) */
	union _ns1__union_NonEmptyArrayOfAllItemsType union_NonEmptyArrayOfAllItemsType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1677; } /* = unique type id SOAP_TYPE___ns1__union_NonEmptyArrayOfAllItemsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_NonEmptyArrayOfAllItemsType() { __ns1__union_NonEmptyArrayOfAllItemsType::soap_default(NULL); }
	virtual ~__ns1__union_NonEmptyArrayOfAllItemsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfAllItemsType
#define SOAP_TYPE_ns1__NonEmptyArrayOfAllItemsType (675)
/* ns1:NonEmptyArrayOfAllItemsType */
class SOAP_CMAC ns1__NonEmptyArrayOfAllItemsType
{
public:
	int __size_NonEmptyArrayOfAllItemsType;	/* sequence of elements <-union-NonEmptyArrayOfAllItemsType> */
	__ns1__union_NonEmptyArrayOfAllItemsType *__union_NonEmptyArrayOfAllItemsType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 675; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfAllItemsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfAllItemsType() { ns1__NonEmptyArrayOfAllItemsType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfAllItemsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__BasePagingType
#define SOAP_TYPE_ns1__BasePagingType (690)
/* ns1:BasePagingType */
class SOAP_CMAC ns1__BasePagingType
{
public:
	int *MaxEntriesReturned;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 690; } /* = unique type id SOAP_TYPE_ns1__BasePagingType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__BasePagingType() { ns1__BasePagingType::soap_default(NULL); }
	virtual ~ns1__BasePagingType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ResolutionType
#define SOAP_TYPE_ns1__ResolutionType (696)
/* ns1:ResolutionType */
class SOAP_CMAC ns1__ResolutionType
{
public:
	ns1__EmailAddressType *Mailbox;	/* required element of type ns1:EmailAddressType */
	ns1__ContactItemType *Contact;	/* optional element of type ns1:ContactItemType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 696; } /* = unique type id SOAP_TYPE_ns1__ResolutionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ResolutionType() { ns1__ResolutionType::soap_default(NULL); }
	virtual ~ns1__ResolutionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfResolutionType
#define SOAP_TYPE_ns1__ArrayOfResolutionType (697)
/* ns1:ArrayOfResolutionType */
class SOAP_CMAC ns1__ArrayOfResolutionType
{
public:
	std::vector<ns1__ResolutionType * >Resolution;	/* sequence of 0 to 100 elements */
	int *IndexedPagingOffset;	/* optional attribute */
	int *NumeratorOffset;	/* optional attribute */
	int *AbsoluteDenominator;	/* optional attribute */
	bool *IncludesLastItemInRange;	/* optional attribute */
	int *TotalItemsInView;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 697; } /* = unique type id SOAP_TYPE_ns1__ArrayOfResolutionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfResolutionType() { ns1__ArrayOfResolutionType::soap_default(NULL); }
	virtual ~ns1__ArrayOfResolutionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfDLExpansionType
#define SOAP_TYPE_ns1__ArrayOfDLExpansionType (698)
/* ns1:ArrayOfDLExpansionType */
class SOAP_CMAC ns1__ArrayOfDLExpansionType
{
public:
	std::vector<ns1__EmailAddressType * >Mailbox;	/* optional element of type ns1:EmailAddressType */
	int *IndexedPagingOffset;	/* optional attribute */
	int *NumeratorOffset;	/* optional attribute */
	int *AbsoluteDenominator;	/* optional attribute */
	bool *IncludesLastItemInRange;	/* optional attribute */
	int *TotalItemsInView;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 698; } /* = unique type id SOAP_TYPE_ns1__ArrayOfDLExpansionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfDLExpansionType() { ns1__ArrayOfDLExpansionType::soap_default(NULL); }
	virtual ~ns1__ArrayOfDLExpansionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfTimeZoneIdType
#define SOAP_TYPE_ns1__NonEmptyArrayOfTimeZoneIdType (699)
/* ns1:NonEmptyArrayOfTimeZoneIdType */
class SOAP_CMAC ns1__NonEmptyArrayOfTimeZoneIdType
{
public:
	std::vector<std::string >Id;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 699; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfTimeZoneIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfTimeZoneIdType() { ns1__NonEmptyArrayOfTimeZoneIdType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfTimeZoneIdType() { }
};
#endif

#ifndef SOAP_TYPE___ns1__ArrayOfTimeZoneDefinitionType_sequence
#define SOAP_TYPE___ns1__ArrayOfTimeZoneDefinitionType_sequence (1682)
/* Operation wrapper: */
class SOAP_CMAC __ns1__ArrayOfTimeZoneDefinitionType_sequence
{
public:
	class ns1__TimeZoneDefinitionType *TimeZoneDefinition;	/* required element of type ns1:TimeZoneDefinitionType */
public:
	virtual int soap_type() const { return 1682; } /* = unique type id SOAP_TYPE___ns1__ArrayOfTimeZoneDefinitionType_sequence */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__ArrayOfTimeZoneDefinitionType_sequence() { __ns1__ArrayOfTimeZoneDefinitionType_sequence::soap_default(NULL); }
	virtual ~__ns1__ArrayOfTimeZoneDefinitionType_sequence() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfTimeZoneDefinitionType
#define SOAP_TYPE_ns1__ArrayOfTimeZoneDefinitionType (700)
/* ns1:ArrayOfTimeZoneDefinitionType */
class SOAP_CMAC ns1__ArrayOfTimeZoneDefinitionType
{
public:
	std::vector<__ns1__ArrayOfTimeZoneDefinitionType_sequence >__ArrayOfTimeZoneDefinitionType_sequence;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 700; } /* = unique type id SOAP_TYPE_ns1__ArrayOfTimeZoneDefinitionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfTimeZoneDefinitionType() { ns1__ArrayOfTimeZoneDefinitionType::soap_default(NULL); }
	virtual ~ns1__ArrayOfTimeZoneDefinitionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__OnlineMeetingSettingsType
#define SOAP_TYPE_ns1__OnlineMeetingSettingsType (701)
/* ns1:OnlineMeetingSettingsType */
class SOAP_CMAC ns1__OnlineMeetingSettingsType
{
public:
	enum ns1__LobbyBypassType LobbyBypass;	/* required element of type ns1:LobbyBypassType */
	enum ns1__OnlineMeetingAccessLevelType AccessLevel;	/* required element of type ns1:OnlineMeetingAccessLevelType */
	enum ns1__PresentersType Presenters;	/* required element of type ns1:PresentersType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 701; } /* = unique type id SOAP_TYPE_ns1__OnlineMeetingSettingsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__OnlineMeetingSettingsType() { ns1__OnlineMeetingSettingsType::soap_default(NULL); }
	virtual ~ns1__OnlineMeetingSettingsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AttendeeType
#define SOAP_TYPE_ns1__AttendeeType (702)
/* ns1:AttendeeType */
class SOAP_CMAC ns1__AttendeeType
{
public:
	ns1__EmailAddressType *Mailbox;	/* required element of type ns1:EmailAddressType */
	enum ns1__ResponseTypeType *ResponseType;	/* optional element of type ns1:ResponseTypeType */
	time_t *LastResponseTime;	/* optional element of type xsd:dateTime */
	time_t *ProposedStart;	/* optional element of type xsd:dateTime */
	time_t *ProposedEnd;	/* optional element of type xsd:dateTime */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 702; } /* = unique type id SOAP_TYPE_ns1__AttendeeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AttendeeType() { ns1__AttendeeType::soap_default(NULL); }
	virtual ~ns1__AttendeeType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfAttendeesType
#define SOAP_TYPE_ns1__NonEmptyArrayOfAttendeesType (703)
/* ns1:NonEmptyArrayOfAttendeesType */
class SOAP_CMAC ns1__NonEmptyArrayOfAttendeesType
{
public:
	std::vector<ns1__AttendeeType * >Attendee;	/* required element of type ns1:AttendeeType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 703; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfAttendeesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfAttendeesType() { ns1__NonEmptyArrayOfAttendeesType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfAttendeesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfOccurrenceRangesType
#define SOAP_TYPE_ns1__ArrayOfOccurrenceRangesType (707)
/* ns1:ArrayOfOccurrenceRangesType */
class SOAP_CMAC ns1__ArrayOfOccurrenceRangesType
{
public:
	std::vector<class ns1__OccurrencesRangeType * >Range;	/* required element of type ns1:OccurrencesRangeType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 707; } /* = unique type id SOAP_TYPE_ns1__ArrayOfOccurrenceRangesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfOccurrenceRangesType() { ns1__ArrayOfOccurrenceRangesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfOccurrenceRangesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__OccurrencesRangeType
#define SOAP_TYPE_ns1__OccurrencesRangeType (708)
/* ns1:OccurrencesRangeType */
class SOAP_CMAC ns1__OccurrencesRangeType
{
public:
	time_t *Start;	/* optional attribute */
	time_t *End;	/* optional attribute */
	int *Count;	/* optional attribute */
	bool *CompareOriginalStartTime;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 708; } /* = unique type id SOAP_TYPE_ns1__OccurrencesRangeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__OccurrencesRangeType() { ns1__OccurrencesRangeType::soap_default(NULL); }
	virtual ~ns1__OccurrencesRangeType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RecurrencePatternBaseType
#define SOAP_TYPE_ns1__RecurrencePatternBaseType (709)
/* ns1:RecurrencePatternBaseType */
class SOAP_CMAC ns1__RecurrencePatternBaseType
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 709; } /* = unique type id SOAP_TYPE_ns1__RecurrencePatternBaseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RecurrencePatternBaseType() { ns1__RecurrencePatternBaseType::soap_default(NULL); }
	virtual ~ns1__RecurrencePatternBaseType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__EnhancedLocationType
#define SOAP_TYPE_ns1__EnhancedLocationType (722)
/* ns1:EnhancedLocationType */
class SOAP_CMAC ns1__EnhancedLocationType
{
public:
	std::string DisplayName;	/* required element of type xsd:string */
	std::string *Annotation;	/* optional element of type xsd:string */
	ns1__PersonaPostalAddressType *PostalAddress;	/* optional element of type ns1:PersonaPostalAddressType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 722; } /* = unique type id SOAP_TYPE_ns1__EnhancedLocationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__EnhancedLocationType() { ns1__EnhancedLocationType::soap_default(NULL); }
	virtual ~ns1__EnhancedLocationType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_TimeChangeType
#define SOAP_TYPE__ns1__union_TimeChangeType (1693)
/* xsd:choice */
union _ns1__union_TimeChangeType
{
#define SOAP_UNION__ns1__union_TimeChangeType_RelativeYearlyRecurrence	(1)
	class ns1__RelativeYearlyRecurrencePatternType *RelativeYearlyRecurrence;
#define SOAP_UNION__ns1__union_TimeChangeType_AbsoluteDate	(2)
	std::string *AbsoluteDate;
};
#endif

#ifndef SOAP_TYPE___ns1__TimeChangeType_sequence
#define SOAP_TYPE___ns1__TimeChangeType_sequence (1690)
/* Operation wrapper: */
class SOAP_CMAC __ns1__TimeChangeType_sequence
{
public:
	int __union_TimeChangeType;	/* union discriminant (of union defined below) */
	union _ns1__union_TimeChangeType union_TimeChangeType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1690; } /* = unique type id SOAP_TYPE___ns1__TimeChangeType_sequence */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__TimeChangeType_sequence() { __ns1__TimeChangeType_sequence::soap_default(NULL); }
	virtual ~__ns1__TimeChangeType_sequence() { }
};
#endif

#ifndef SOAP_TYPE_ns1__TimeChangeType
#define SOAP_TYPE_ns1__TimeChangeType (723)
/* ns1:TimeChangeType */
class SOAP_CMAC ns1__TimeChangeType
{
public:
	LONG64 Offset;	/* external */
	__ns1__TimeChangeType_sequence *__TimeChangeType_sequence;
	std::string Time;	/* required element of type xsd:time */
	std::string *TimeZoneName;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 723; } /* = unique type id SOAP_TYPE_ns1__TimeChangeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__TimeChangeType() { ns1__TimeChangeType::soap_default(NULL); }
	virtual ~ns1__TimeChangeType() { }
};
#endif

#ifndef SOAP_TYPE___ns1__TimeZoneType_sequence_
#define SOAP_TYPE___ns1__TimeZoneType_sequence_ (1696)
/* Operation wrapper: */
class SOAP_CMAC __ns1__TimeZoneType_sequence_
{
public:
	ns1__TimeChangeType *Standard;	/* required element of type ns1:TimeChangeType */
	ns1__TimeChangeType *Daylight;	/* required element of type ns1:TimeChangeType */
public:
	virtual int soap_type() const { return 1696; } /* = unique type id SOAP_TYPE___ns1__TimeZoneType_sequence_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__TimeZoneType_sequence_() { __ns1__TimeZoneType_sequence_::soap_default(NULL); }
	virtual ~__ns1__TimeZoneType_sequence_() { }
};
#endif

#ifndef SOAP_TYPE___ns1__TimeZoneType_sequence
#define SOAP_TYPE___ns1__TimeZoneType_sequence (1695)
/* Operation wrapper: */
class SOAP_CMAC __ns1__TimeZoneType_sequence
{
public:
	LONG64 BaseOffset;	/* external */
	__ns1__TimeZoneType_sequence_ *__TimeZoneType_sequence_;
public:
	virtual int soap_type() const { return 1695; } /* = unique type id SOAP_TYPE___ns1__TimeZoneType_sequence */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__TimeZoneType_sequence() { __ns1__TimeZoneType_sequence::soap_default(NULL); }
	virtual ~__ns1__TimeZoneType_sequence() { }
};
#endif

#ifndef SOAP_TYPE_ns1__TimeZoneType
#define SOAP_TYPE_ns1__TimeZoneType (724)
/* ns1:TimeZoneType */
class SOAP_CMAC ns1__TimeZoneType
{
public:
	__ns1__TimeZoneType_sequence *__TimeZoneType_sequence;
	std::string *TimeZoneName;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 724; } /* = unique type id SOAP_TYPE_ns1__TimeZoneType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__TimeZoneType() { ns1__TimeZoneType::soap_default(NULL); }
	virtual ~ns1__TimeZoneType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__TimeZoneContextType
#define SOAP_TYPE_ns1__TimeZoneContextType (725)
/* ns1:TimeZoneContextType */
class SOAP_CMAC ns1__TimeZoneContextType
{
public:
	ns1__TimeZoneDefinitionType *TimeZoneDefinition;	/* required element of type ns1:TimeZoneDefinitionType */
	char *__anyAttribute;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 725; } /* = unique type id SOAP_TYPE_ns1__TimeZoneContextType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__TimeZoneContextType() { ns1__TimeZoneContextType::soap_default(NULL); }
	virtual ~ns1__TimeZoneContextType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__TransitionType
#define SOAP_TYPE_ns1__TransitionType (727)
/* ns1:TransitionType */
class SOAP_CMAC ns1__TransitionType
{
public:
	class ns1__TransitionTargetType *To;	/* required element of type ns1:TransitionTargetType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 727; } /* = unique type id SOAP_TYPE_ns1__TransitionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__TransitionType() { ns1__TransitionType::soap_default(NULL); }
	virtual ~ns1__TransitionType() { }
};
#endif

#ifndef SOAP_TYPE___ns1__TimeZoneDefinitionType_sequence
#define SOAP_TYPE___ns1__TimeZoneDefinitionType_sequence (1701)
/* Operation wrapper: */
class SOAP_CMAC __ns1__TimeZoneDefinitionType_sequence
{
public:
	class ns1__NonEmptyArrayOfPeriodsType *Periods;	/* required element of type ns1:NonEmptyArrayOfPeriodsType */
	class ns1__ArrayOfTransitionsGroupsType *TransitionsGroups;	/* optional element of type ns1:ArrayOfTransitionsGroupsType */
	class ns1__ArrayOfTransitionsType *Transitions;	/* optional element of type ns1:ArrayOfTransitionsType */
public:
	virtual int soap_type() const { return 1701; } /* = unique type id SOAP_TYPE___ns1__TimeZoneDefinitionType_sequence */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__TimeZoneDefinitionType_sequence() { __ns1__TimeZoneDefinitionType_sequence::soap_default(NULL); }
	virtual ~__ns1__TimeZoneDefinitionType_sequence() { }
};
#endif

#ifndef SOAP_TYPE_ns1__TimeZoneDefinitionType
#define SOAP_TYPE_ns1__TimeZoneDefinitionType (732)
/* ns1:TimeZoneDefinitionType */
class SOAP_CMAC ns1__TimeZoneDefinitionType
{
public:
	__ns1__TimeZoneDefinitionType_sequence *__TimeZoneDefinitionType_sequence;
	std::string *Id;	/* optional attribute */
	std::string *Name;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 732; } /* = unique type id SOAP_TYPE_ns1__TimeZoneDefinitionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__TimeZoneDefinitionType() { ns1__TimeZoneDefinitionType::soap_default(NULL); }
	virtual ~ns1__TimeZoneDefinitionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfPeriodsType
#define SOAP_TYPE_ns1__NonEmptyArrayOfPeriodsType (733)
/* ns1:NonEmptyArrayOfPeriodsType */
class SOAP_CMAC ns1__NonEmptyArrayOfPeriodsType
{
public:
	std::vector<class ns1__PeriodType * >Period;	/* required element of type ns1:PeriodType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 733; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfPeriodsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfPeriodsType() { ns1__NonEmptyArrayOfPeriodsType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfPeriodsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PeriodType
#define SOAP_TYPE_ns1__PeriodType (734)
/* ns1:PeriodType */
class SOAP_CMAC ns1__PeriodType
{
public:
	LONG64 *Bias;	/* optional attribute */
	std::string *Name;	/* optional attribute */
	std::string *Id;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 734; } /* = unique type id SOAP_TYPE_ns1__PeriodType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PeriodType() { ns1__PeriodType::soap_default(NULL); }
	virtual ~ns1__PeriodType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfTransitionsGroupsType
#define SOAP_TYPE_ns1__ArrayOfTransitionsGroupsType (735)
/* ns1:ArrayOfTransitionsGroupsType */
class SOAP_CMAC ns1__ArrayOfTransitionsGroupsType
{
public:
	std::vector<ns1__ArrayOfTransitionsType * >TransitionsGroup;	/* required element of type ns1:ArrayOfTransitionsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 735; } /* = unique type id SOAP_TYPE_ns1__ArrayOfTransitionsGroupsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfTransitionsGroupsType() { ns1__ArrayOfTransitionsGroupsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfTransitionsGroupsType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfTransitionsType
#define SOAP_TYPE__ns1__union_ArrayOfTransitionsType (1717)
/* xsd:choice */
union _ns1__union_ArrayOfTransitionsType
{
#define SOAP_UNION__ns1__union_ArrayOfTransitionsType_Transition	(1)
	std::vector<ns1__TransitionType * >*Transition;
#define SOAP_UNION__ns1__union_ArrayOfTransitionsType_AbsoluteDateTransition	(2)
	class ns1__AbsoluteDateTransitionType *AbsoluteDateTransition;
#define SOAP_UNION__ns1__union_ArrayOfTransitionsType_RecurringDayTransition	(3)
	class ns1__RecurringDayTransitionType *RecurringDayTransition;
#define SOAP_UNION__ns1__union_ArrayOfTransitionsType_RecurringDateTransition	(4)
	class ns1__RecurringDateTransitionType *RecurringDateTransition;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfTransitionsType
#define SOAP_TYPE___ns1__union_ArrayOfTransitionsType (1710)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfTransitionsType
{
public:
	int __unionTransition;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfTransitionsType __union_ArrayOfTransitionsType;
public:
	virtual int soap_type() const { return 1710; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfTransitionsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfTransitionsType() { __ns1__union_ArrayOfTransitionsType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfTransitionsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfTransitionsType
#define SOAP_TYPE_ns1__ArrayOfTransitionsType (736)
/* ns1:ArrayOfTransitionsType */
class SOAP_CMAC ns1__ArrayOfTransitionsType
{
public:
	int __sizeTransition;	/* sequence of elements <-union-ArrayOfTransitionsType> */
	__ns1__union_ArrayOfTransitionsType *__union_ArrayOfTransitionsType;
	std::string *Id;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 736; } /* = unique type id SOAP_TYPE_ns1__ArrayOfTransitionsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfTransitionsType() { ns1__ArrayOfTransitionsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfTransitionsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RecurrenceRangeBaseType
#define SOAP_TYPE_ns1__RecurrenceRangeBaseType (737)
/* ns1:RecurrenceRangeBaseType */
class SOAP_CMAC ns1__RecurrenceRangeBaseType
{
public:
	std::string StartDate;	/* required element of type xsd:date */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 737; } /* = unique type id SOAP_TYPE_ns1__RecurrenceRangeBaseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RecurrenceRangeBaseType() { ns1__RecurrenceRangeBaseType::soap_default(NULL); }
	virtual ~ns1__RecurrenceRangeBaseType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_RecurrenceType
#define SOAP_TYPE__ns1__union_RecurrenceType (1724)
/* xsd:choice */
union _ns1__union_RecurrenceType
{
#define SOAP_UNION__ns1__union_RecurrenceType_RelativeYearlyRecurrence	(1)
	ns1__RelativeYearlyRecurrencePatternType *RelativeYearlyRecurrence;
#define SOAP_UNION__ns1__union_RecurrenceType_AbsoluteYearlyRecurrence	(2)
	class ns1__AbsoluteYearlyRecurrencePatternType *AbsoluteYearlyRecurrence;
#define SOAP_UNION__ns1__union_RecurrenceType_RelativeMonthlyRecurrence	(3)
	class ns1__RelativeMonthlyRecurrencePatternType *RelativeMonthlyRecurrence;
#define SOAP_UNION__ns1__union_RecurrenceType_AbsoluteMonthlyRecurrence	(4)
	class ns1__AbsoluteMonthlyRecurrencePatternType *AbsoluteMonthlyRecurrence;
#define SOAP_UNION__ns1__union_RecurrenceType_WeeklyRecurrence	(5)
	class ns1__WeeklyRecurrencePatternType *WeeklyRecurrence;
#define SOAP_UNION__ns1__union_RecurrenceType_DailyRecurrence	(6)
	class ns1__DailyRecurrencePatternType *DailyRecurrence;
};
#endif

#ifndef SOAP_TYPE__ns1__union_RecurrenceType_
#define SOAP_TYPE__ns1__union_RecurrenceType_ (1728)
/* xsd:choice */
union _ns1__union_RecurrenceType_
{
#define SOAP_UNION__ns1__union_RecurrenceType__NoEndRecurrence	(1)
	class ns1__NoEndRecurrenceRangeType *NoEndRecurrence;
#define SOAP_UNION__ns1__union_RecurrenceType__EndDateRecurrence	(2)
	class ns1__EndDateRecurrenceRangeType *EndDateRecurrence;
#define SOAP_UNION__ns1__union_RecurrenceType__NumberedRecurrence	(3)
	class ns1__NumberedRecurrenceRangeType *NumberedRecurrence;
};
#endif

#ifndef SOAP_TYPE_ns1__RecurrenceType
#define SOAP_TYPE_ns1__RecurrenceType (741)
/* ns1:RecurrenceType */
class SOAP_CMAC ns1__RecurrenceType
{
public:
	int __union_RecurrenceType;	/* union discriminant (of union defined below) */
	union _ns1__union_RecurrenceType union_RecurrenceType;	/* required element of type xsd:choice */
	int __union_RecurrenceType_;	/* union discriminant (of union defined below) */
	union _ns1__union_RecurrenceType_ union_RecurrenceType_;	/* required element of type xsd:choice */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 741; } /* = unique type id SOAP_TYPE_ns1__RecurrenceType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RecurrenceType() { ns1__RecurrenceType::soap_default(NULL); }
	virtual ~ns1__RecurrenceType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_TaskRecurrenceType
#define SOAP_TYPE__ns1__union_TaskRecurrenceType (1733)
/* xsd:choice */
union _ns1__union_TaskRecurrenceType
{
#define SOAP_UNION__ns1__union_TaskRecurrenceType_RelativeYearlyRecurrence	(1)
	ns1__RelativeYearlyRecurrencePatternType *RelativeYearlyRecurrence;
#define SOAP_UNION__ns1__union_TaskRecurrenceType_AbsoluteYearlyRecurrence	(2)
	ns1__AbsoluteYearlyRecurrencePatternType *AbsoluteYearlyRecurrence;
#define SOAP_UNION__ns1__union_TaskRecurrenceType_RelativeMonthlyRecurrence	(3)
	ns1__RelativeMonthlyRecurrencePatternType *RelativeMonthlyRecurrence;
#define SOAP_UNION__ns1__union_TaskRecurrenceType_AbsoluteMonthlyRecurrence	(4)
	ns1__AbsoluteMonthlyRecurrencePatternType *AbsoluteMonthlyRecurrence;
#define SOAP_UNION__ns1__union_TaskRecurrenceType_WeeklyRecurrence	(5)
	ns1__WeeklyRecurrencePatternType *WeeklyRecurrence;
#define SOAP_UNION__ns1__union_TaskRecurrenceType_DailyRecurrence	(6)
	ns1__DailyRecurrencePatternType *DailyRecurrence;
#define SOAP_UNION__ns1__union_TaskRecurrenceType_DailyRegeneration	(7)
	class ns1__DailyRegeneratingPatternType *DailyRegeneration;
#define SOAP_UNION__ns1__union_TaskRecurrenceType_WeeklyRegeneration	(8)
	class ns1__WeeklyRegeneratingPatternType *WeeklyRegeneration;
#define SOAP_UNION__ns1__union_TaskRecurrenceType_MonthlyRegeneration	(9)
	class ns1__MonthlyRegeneratingPatternType *MonthlyRegeneration;
#define SOAP_UNION__ns1__union_TaskRecurrenceType_YearlyRegeneration	(10)
	class ns1__YearlyRegeneratingPatternType *YearlyRegeneration;
};
#endif

#ifndef SOAP_TYPE__ns1__union_TaskRecurrenceType_
#define SOAP_TYPE__ns1__union_TaskRecurrenceType_ (1734)
/* xsd:choice */
union _ns1__union_TaskRecurrenceType_
{
#define SOAP_UNION__ns1__union_TaskRecurrenceType__NoEndRecurrence	(1)
	ns1__NoEndRecurrenceRangeType *NoEndRecurrence;
#define SOAP_UNION__ns1__union_TaskRecurrenceType__EndDateRecurrence	(2)
	ns1__EndDateRecurrenceRangeType *EndDateRecurrence;
#define SOAP_UNION__ns1__union_TaskRecurrenceType__NumberedRecurrence	(3)
	ns1__NumberedRecurrenceRangeType *NumberedRecurrence;
};
#endif

#ifndef SOAP_TYPE_ns1__TaskRecurrenceType
#define SOAP_TYPE_ns1__TaskRecurrenceType (742)
/* ns1:TaskRecurrenceType */
class SOAP_CMAC ns1__TaskRecurrenceType
{
public:
	int __union_TaskRecurrenceType;	/* union discriminant (of union defined below) */
	union _ns1__union_TaskRecurrenceType union_TaskRecurrenceType;	/* required element of type xsd:choice */
	int __union_TaskRecurrenceType_;	/* union discriminant (of union defined below) */
	union _ns1__union_TaskRecurrenceType_ union_TaskRecurrenceType_;	/* required element of type xsd:choice */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 742; } /* = unique type id SOAP_TYPE_ns1__TaskRecurrenceType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__TaskRecurrenceType() { ns1__TaskRecurrenceType::soap_default(NULL); }
	virtual ~ns1__TaskRecurrenceType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__OccurrenceInfoType
#define SOAP_TYPE_ns1__OccurrenceInfoType (743)
/* ns1:OccurrenceInfoType */
class SOAP_CMAC ns1__OccurrenceInfoType
{
public:
	ns1__ItemIdType *ItemId;	/* required element of type ns1:ItemIdType */
	time_t Start;	/* required element of type xsd:dateTime */
	time_t End;	/* required element of type xsd:dateTime */
	time_t OriginalStart;	/* required element of type xsd:dateTime */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 743; } /* = unique type id SOAP_TYPE_ns1__OccurrenceInfoType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__OccurrenceInfoType() { ns1__OccurrenceInfoType::soap_default(NULL); }
	virtual ~ns1__OccurrenceInfoType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfOccurrenceInfoType
#define SOAP_TYPE_ns1__NonEmptyArrayOfOccurrenceInfoType (744)
/* ns1:NonEmptyArrayOfOccurrenceInfoType */
class SOAP_CMAC ns1__NonEmptyArrayOfOccurrenceInfoType
{
public:
	std::vector<ns1__OccurrenceInfoType * >Occurrence;	/* required element of type ns1:OccurrenceInfoType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 744; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfOccurrenceInfoType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfOccurrenceInfoType() { ns1__NonEmptyArrayOfOccurrenceInfoType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfOccurrenceInfoType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__DeletedOccurrenceInfoType
#define SOAP_TYPE_ns1__DeletedOccurrenceInfoType (745)
/* ns1:DeletedOccurrenceInfoType */
class SOAP_CMAC ns1__DeletedOccurrenceInfoType
{
public:
	time_t Start;	/* required element of type xsd:dateTime */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 745; } /* = unique type id SOAP_TYPE_ns1__DeletedOccurrenceInfoType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__DeletedOccurrenceInfoType() { ns1__DeletedOccurrenceInfoType::soap_default(NULL); }
	virtual ~ns1__DeletedOccurrenceInfoType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfDeletedOccurrencesType
#define SOAP_TYPE_ns1__NonEmptyArrayOfDeletedOccurrencesType (746)
/* ns1:NonEmptyArrayOfDeletedOccurrencesType */
class SOAP_CMAC ns1__NonEmptyArrayOfDeletedOccurrencesType
{
public:
	std::vector<ns1__DeletedOccurrenceInfoType * >DeletedOccurrence;	/* required element of type ns1:DeletedOccurrenceInfoType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 746; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfDeletedOccurrencesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfDeletedOccurrencesType() { ns1__NonEmptyArrayOfDeletedOccurrencesType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfDeletedOccurrencesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ChangeHighlightsType
#define SOAP_TYPE_ns1__ChangeHighlightsType (749)
/* ns1:ChangeHighlightsType */
class SOAP_CMAC ns1__ChangeHighlightsType
{
public:
	bool *HasLocationChanged;	/* optional element of type xsd:boolean */
	std::string *Location;	/* optional element of type xsd:string */
	bool *HasStartTimeChanged;	/* optional element of type xsd:boolean */
	time_t *Start;	/* optional element of type xsd:dateTime */
	bool *HasEndTimeChanged;	/* optional element of type xsd:boolean */
	time_t *End;	/* optional element of type xsd:dateTime */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 749; } /* = unique type id SOAP_TYPE_ns1__ChangeHighlightsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ChangeHighlightsType() { ns1__ChangeHighlightsType::soap_default(NULL); }
	virtual ~ns1__ChangeHighlightsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CompleteNameType
#define SOAP_TYPE_ns1__CompleteNameType (753)
/* ns1:CompleteNameType */
class SOAP_CMAC ns1__CompleteNameType
{
public:
	std::string *Title;	/* optional element of type xsd:string */
	std::string *FirstName;	/* optional element of type xsd:string */
	std::string *MiddleName;	/* optional element of type xsd:string */
	std::string *LastName;	/* optional element of type xsd:string */
	std::string *Suffix;	/* optional element of type xsd:string */
	std::string *Initials;	/* optional element of type xsd:string */
	std::string *FullName;	/* optional element of type xsd:string */
	std::string *Nickname;	/* optional element of type xsd:string */
	std::string *YomiFirstName;	/* optional element of type xsd:string */
	std::string *YomiLastName;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 753; } /* = unique type id SOAP_TYPE_ns1__CompleteNameType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CompleteNameType() { ns1__CompleteNameType::soap_default(NULL); }
	virtual ~ns1__CompleteNameType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ContactUrlDictionaryEntryType
#define SOAP_TYPE_ns1__ContactUrlDictionaryEntryType (755)
/* ns1:ContactUrlDictionaryEntryType */
class SOAP_CMAC ns1__ContactUrlDictionaryEntryType
{
public:
	enum ns1__ContactUrlKeyType Type;	/* required element of type ns1:ContactUrlKeyType */
	std::string *Name;	/* optional element of type xsd:string */
	std::string *Address;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 755; } /* = unique type id SOAP_TYPE_ns1__ContactUrlDictionaryEntryType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ContactUrlDictionaryEntryType() { ns1__ContactUrlDictionaryEntryType::soap_default(NULL); }
	virtual ~ns1__ContactUrlDictionaryEntryType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AbchEmailAddressDictionaryEntryType
#define SOAP_TYPE_ns1__AbchEmailAddressDictionaryEntryType (756)
/* ns1:AbchEmailAddressDictionaryEntryType */
class SOAP_CMAC ns1__AbchEmailAddressDictionaryEntryType
{
public:
	enum ns1__AbchEmailAddressTypeType Type;	/* required element of type ns1:AbchEmailAddressTypeType */
	std::string Address;	/* required element of type xsd:string */
	bool *IsMessengerEnabled;	/* optional element of type xsd:boolean */
	LONG64 *Capabilities;	/* optional element of type xsd:long */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 756; } /* = unique type id SOAP_TYPE_ns1__AbchEmailAddressDictionaryEntryType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AbchEmailAddressDictionaryEntryType() { ns1__AbchEmailAddressDictionaryEntryType::soap_default(NULL); }
	virtual ~ns1__AbchEmailAddressDictionaryEntryType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PhysicalAddressDictionaryEntryType
#define SOAP_TYPE_ns1__PhysicalAddressDictionaryEntryType (759)
/* ns1:PhysicalAddressDictionaryEntryType */
class SOAP_CMAC ns1__PhysicalAddressDictionaryEntryType
{
public:
	std::string *Street;	/* optional element of type xsd:string */
	std::string *City;	/* optional element of type xsd:string */
	std::string *State;	/* optional element of type xsd:string */
	std::string *CountryOrRegion;	/* optional element of type xsd:string */
	std::string *PostalCode;	/* optional element of type xsd:string */
	enum ns1__PhysicalAddressKeyType Key;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 759; } /* = unique type id SOAP_TYPE_ns1__PhysicalAddressDictionaryEntryType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PhysicalAddressDictionaryEntryType() { ns1__PhysicalAddressDictionaryEntryType::soap_default(NULL); }
	virtual ~ns1__PhysicalAddressDictionaryEntryType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ContactUrlDictionaryType
#define SOAP_TYPE_ns1__ContactUrlDictionaryType (760)
/* ns1:ContactUrlDictionaryType */
class SOAP_CMAC ns1__ContactUrlDictionaryType
{
public:
	std::vector<ns1__ContactUrlDictionaryEntryType * >Url;	/* required element of type ns1:ContactUrlDictionaryEntryType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 760; } /* = unique type id SOAP_TYPE_ns1__ContactUrlDictionaryType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ContactUrlDictionaryType() { ns1__ContactUrlDictionaryType::soap_default(NULL); }
	virtual ~ns1__ContactUrlDictionaryType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AbchEmailAddressDictionaryType
#define SOAP_TYPE_ns1__AbchEmailAddressDictionaryType (761)
/* ns1:AbchEmailAddressDictionaryType */
class SOAP_CMAC ns1__AbchEmailAddressDictionaryType
{
public:
	std::vector<ns1__AbchEmailAddressDictionaryEntryType * >Email;	/* required element of type ns1:AbchEmailAddressDictionaryEntryType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 761; } /* = unique type id SOAP_TYPE_ns1__AbchEmailAddressDictionaryType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AbchEmailAddressDictionaryType() { ns1__AbchEmailAddressDictionaryType::soap_default(NULL); }
	virtual ~ns1__AbchEmailAddressDictionaryType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ImAddressDictionaryType
#define SOAP_TYPE_ns1__ImAddressDictionaryType (762)
/* ns1:ImAddressDictionaryType */
class SOAP_CMAC ns1__ImAddressDictionaryType
{
public:
	std::vector<class ns1__ImAddressDictionaryEntryType * >Entry;	/* required element of type ns1:ImAddressDictionaryEntryType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 762; } /* = unique type id SOAP_TYPE_ns1__ImAddressDictionaryType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ImAddressDictionaryType() { ns1__ImAddressDictionaryType::soap_default(NULL); }
	virtual ~ns1__ImAddressDictionaryType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__EmailAddressDictionaryType
#define SOAP_TYPE_ns1__EmailAddressDictionaryType (763)
/* ns1:EmailAddressDictionaryType */
class SOAP_CMAC ns1__EmailAddressDictionaryType
{
public:
	std::vector<class ns1__EmailAddressDictionaryEntryType * >Entry;	/* required element of type ns1:EmailAddressDictionaryEntryType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 763; } /* = unique type id SOAP_TYPE_ns1__EmailAddressDictionaryType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__EmailAddressDictionaryType() { ns1__EmailAddressDictionaryType::soap_default(NULL); }
	virtual ~ns1__EmailAddressDictionaryType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PhoneNumberDictionaryType
#define SOAP_TYPE_ns1__PhoneNumberDictionaryType (764)
/* ns1:PhoneNumberDictionaryType */
class SOAP_CMAC ns1__PhoneNumberDictionaryType
{
public:
	std::vector<class ns1__PhoneNumberDictionaryEntryType * >Entry;	/* required element of type ns1:PhoneNumberDictionaryEntryType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 764; } /* = unique type id SOAP_TYPE_ns1__PhoneNumberDictionaryType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PhoneNumberDictionaryType() { ns1__PhoneNumberDictionaryType::soap_default(NULL); }
	virtual ~ns1__PhoneNumberDictionaryType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PhysicalAddressDictionaryType
#define SOAP_TYPE_ns1__PhysicalAddressDictionaryType (765)
/* ns1:PhysicalAddressDictionaryType */
class SOAP_CMAC ns1__PhysicalAddressDictionaryType
{
public:
	std::vector<ns1__PhysicalAddressDictionaryEntryType * >Entry;	/* required element of type ns1:PhysicalAddressDictionaryEntryType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 765; } /* = unique type id SOAP_TYPE_ns1__PhysicalAddressDictionaryType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PhysicalAddressDictionaryType() { ns1__PhysicalAddressDictionaryType::soap_default(NULL); }
	virtual ~ns1__PhysicalAddressDictionaryType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MembersListType
#define SOAP_TYPE_ns1__MembersListType (766)
/* ns1:MembersListType */
class SOAP_CMAC ns1__MembersListType
{
public:
	std::vector<class ns1__MemberType * >Member;	/* optional element of type ns1:MemberType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 766; } /* = unique type id SOAP_TYPE_ns1__MembersListType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MembersListType() { ns1__MembersListType::soap_default(NULL); }
	virtual ~ns1__MembersListType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MemberType
#define SOAP_TYPE_ns1__MemberType (767)
/* ns1:MemberType */
class SOAP_CMAC ns1__MemberType
{
public:
	ns1__EmailAddressType *Mailbox;	/* optional element of type ns1:EmailAddressType */
	enum ns1__MemberStatusType *Status;	/* optional element of type ns1:MemberStatusType */
	std::string *Key;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 767; } /* = unique type id SOAP_TYPE_ns1__MemberType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MemberType() { ns1__MemberType::soap_default(NULL); }
	virtual ~ns1__MemberType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfAbchPersonContactHandlesType
#define SOAP_TYPE_ns1__ArrayOfAbchPersonContactHandlesType (771)
/* ns1:ArrayOfAbchPersonContactHandlesType */
class SOAP_CMAC ns1__ArrayOfAbchPersonContactHandlesType
{
public:
	std::vector<class ns1__AbchPersonContactHandle * >ContactHandle;	/* optional element of type ns1:AbchPersonContactHandle */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 771; } /* = unique type id SOAP_TYPE_ns1__ArrayOfAbchPersonContactHandlesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfAbchPersonContactHandlesType() { ns1__ArrayOfAbchPersonContactHandlesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfAbchPersonContactHandlesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AbchPersonContactHandle
#define SOAP_TYPE_ns1__AbchPersonContactHandle (772)
/* ns1:AbchPersonContactHandle */
class SOAP_CMAC ns1__AbchPersonContactHandle
{
public:
	std::string SourceId;	/* required element of type xsd:string */
	std::string ObjectId;	/* required element of type xsd:string */
	std::string *AccountName;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 772; } /* = unique type id SOAP_TYPE_ns1__AbchPersonContactHandle */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AbchPersonContactHandle() { ns1__AbchPersonContactHandle::soap_default(NULL); }
	virtual ~ns1__AbchPersonContactHandle() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfBinaryType
#define SOAP_TYPE_ns1__ArrayOfBinaryType (775)
/* ns1:ArrayOfBinaryType */
class SOAP_CMAC ns1__ArrayOfBinaryType
{
public:
	std::vector<xsd__base64Binary >Base64Binary;	/* optional element of type xsd:base64Binary */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 775; } /* = unique type id SOAP_TYPE_ns1__ArrayOfBinaryType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfBinaryType() { ns1__ArrayOfBinaryType::soap_default(NULL); }
	virtual ~ns1__ArrayOfBinaryType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SearchParametersType
#define SOAP_TYPE_ns1__SearchParametersType (777)
/* ns1:SearchParametersType */
class SOAP_CMAC ns1__SearchParametersType
{
public:
	class ns1__RestrictionType *Restriction;	/* required element of type ns1:RestrictionType */
	ns1__NonEmptyArrayOfBaseFolderIdsType *BaseFolderIds;	/* required element of type ns1:NonEmptyArrayOfBaseFolderIdsType */
	enum ns1__SearchFolderTraversalType *Traversal;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 777; } /* = unique type id SOAP_TYPE_ns1__SearchParametersType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SearchParametersType() { ns1__SearchParametersType::soap_default(NULL); }
	virtual ~ns1__SearchParametersType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ConstantValueType
#define SOAP_TYPE_ns1__ConstantValueType (778)
/* ns1:ConstantValueType */
class SOAP_CMAC ns1__ConstantValueType
{
public:
	std::string Value;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 778; } /* = unique type id SOAP_TYPE_ns1__ConstantValueType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ConstantValueType() { ns1__ConstantValueType::soap_default(NULL); }
	virtual ~ns1__ConstantValueType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SearchExpressionType
#define SOAP_TYPE_ns1__SearchExpressionType (779)
/* ns1:SearchExpressionType */
class SOAP_CMAC ns1__SearchExpressionType
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 779; } /* = unique type id SOAP_TYPE_ns1__SearchExpressionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SearchExpressionType() { ns1__SearchExpressionType::soap_default(NULL); }
	virtual ~ns1__SearchExpressionType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_AggregateOnType
#define SOAP_TYPE__ns1__union_AggregateOnType (1759)
/* xsd:choice */
union _ns1__union_AggregateOnType
{
#define SOAP_UNION__ns1__union_AggregateOnType_FieldURI	(1)
	ns1__PathToUnindexedFieldType *FieldURI;
#define SOAP_UNION__ns1__union_AggregateOnType_IndexedFieldURI	(2)
	ns1__PathToIndexedFieldType *IndexedFieldURI;
#define SOAP_UNION__ns1__union_AggregateOnType_ExtendedFieldURI	(3)
	ns1__PathToExtendedFieldType *ExtendedFieldURI;
};
#endif

#ifndef SOAP_TYPE_ns1__AggregateOnType
#define SOAP_TYPE_ns1__AggregateOnType (780)
/* ns1:AggregateOnType */
class SOAP_CMAC ns1__AggregateOnType
{
public:
	int __union_AggregateOnType;	/* union discriminant (of union defined below) */
	union _ns1__union_AggregateOnType union_AggregateOnType;	/* required element of type xsd:choice */
	enum ns1__AggregateType Aggregate;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 780; } /* = unique type id SOAP_TYPE_ns1__AggregateOnType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AggregateOnType() { ns1__AggregateOnType::soap_default(NULL); }
	virtual ~ns1__AggregateOnType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__BaseGroupByType
#define SOAP_TYPE_ns1__BaseGroupByType (781)
/* ns1:BaseGroupByType */
class SOAP_CMAC ns1__BaseGroupByType
{
public:
	enum ns1__SortDirectionType Order;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 781; } /* = unique type id SOAP_TYPE_ns1__BaseGroupByType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__BaseGroupByType() { ns1__BaseGroupByType::soap_default(NULL); }
	virtual ~ns1__BaseGroupByType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__GroupedItemsType
#define SOAP_TYPE_ns1__GroupedItemsType (784)
/* ns1:GroupedItemsType */
class SOAP_CMAC ns1__GroupedItemsType
{
public:
	std::string GroupIndex;	/* required element of type xsd:string */
	ns1__ArrayOfRealItemsType *Items;	/* required element of type ns1:ArrayOfRealItemsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 784; } /* = unique type id SOAP_TYPE_ns1__GroupedItemsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__GroupedItemsType() { ns1__GroupedItemsType::soap_default(NULL); }
	virtual ~ns1__GroupedItemsType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfGroupedItemsType
#define SOAP_TYPE__ns1__union_ArrayOfGroupedItemsType (1763)
/* xsd:choice */
union _ns1__union_ArrayOfGroupedItemsType
{
#define SOAP_UNION__ns1__union_ArrayOfGroupedItemsType_GroupedItems	(1)
	std::vector<ns1__GroupedItemsType * >*GroupedItems;
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfGroupedItemsType
#define SOAP_TYPE_ns1__ArrayOfGroupedItemsType (785)
/* Choice: */
class SOAP_CMAC ns1__ArrayOfGroupedItemsType
{
public:
	int __union_ArrayOfGroupedItemsType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfGroupedItemsType union_ArrayOfGroupedItemsType;	/* required element of type xsd:choice */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 785; } /* = unique type id SOAP_TYPE_ns1__ArrayOfGroupedItemsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfGroupedItemsType() { ns1__ArrayOfGroupedItemsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfGroupedItemsType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_FieldURIOrConstantType
#define SOAP_TYPE__ns1__union_FieldURIOrConstantType (1765)
/* xsd:choice */
union _ns1__union_FieldURIOrConstantType
{
#define SOAP_UNION__ns1__union_FieldURIOrConstantType_FieldURI	(1)
	ns1__PathToUnindexedFieldType *FieldURI;
#define SOAP_UNION__ns1__union_FieldURIOrConstantType_IndexedFieldURI	(2)
	ns1__PathToIndexedFieldType *IndexedFieldURI;
#define SOAP_UNION__ns1__union_FieldURIOrConstantType_ExtendedFieldURI	(3)
	ns1__PathToExtendedFieldType *ExtendedFieldURI;
#define SOAP_UNION__ns1__union_FieldURIOrConstantType_Constant	(4)
	ns1__ConstantValueType *Constant;
};
#endif

#ifndef SOAP_TYPE_ns1__FieldURIOrConstantType
#define SOAP_TYPE_ns1__FieldURIOrConstantType (787)
/* Choice: */
class SOAP_CMAC ns1__FieldURIOrConstantType
{
public:
	int __union_FieldURIOrConstantType;	/* union discriminant (of union defined below) */
	union _ns1__union_FieldURIOrConstantType union_FieldURIOrConstantType;	/* required element of type xsd:choice */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 787; } /* = unique type id SOAP_TYPE_ns1__FieldURIOrConstantType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__FieldURIOrConstantType() { ns1__FieldURIOrConstantType::soap_default(NULL); }
	virtual ~ns1__FieldURIOrConstantType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ExcludesValueType
#define SOAP_TYPE_ns1__ExcludesValueType (789)
/* ns1:ExcludesValueType */
class SOAP_CMAC ns1__ExcludesValueType
{
public:
	std::string Value;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 789; } /* = unique type id SOAP_TYPE_ns1__ExcludesValueType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ExcludesValueType() { ns1__ExcludesValueType::soap_default(NULL); }
	virtual ~ns1__ExcludesValueType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_RestrictionType
#define SOAP_TYPE__ns1__union_RestrictionType (1778)
/* xsd:choice */
union _ns1__union_RestrictionType
{
#define SOAP_UNION__ns1__union_RestrictionType_Exists	(1)
	class ns1__ExistsType *Exists;
#define SOAP_UNION__ns1__union_RestrictionType_Excludes	(2)
	class ns1__ExcludesType *Excludes;
#define SOAP_UNION__ns1__union_RestrictionType_IsEqualTo	(3)
	class ns1__IsEqualToType *IsEqualTo;
#define SOAP_UNION__ns1__union_RestrictionType_IsNotEqualTo	(4)
	class ns1__IsNotEqualToType *IsNotEqualTo;
#define SOAP_UNION__ns1__union_RestrictionType_IsGreaterThan	(5)
	class ns1__IsGreaterThanType *IsGreaterThan;
#define SOAP_UNION__ns1__union_RestrictionType_IsGreaterThanOrEqualTo	(6)
	class ns1__IsGreaterThanOrEqualToType *IsGreaterThanOrEqualTo;
#define SOAP_UNION__ns1__union_RestrictionType_IsLessThan	(7)
	class ns1__IsLessThanType *IsLessThan;
#define SOAP_UNION__ns1__union_RestrictionType_IsLessThanOrEqualTo	(8)
	class ns1__IsLessThanOrEqualToType *IsLessThanOrEqualTo;
#define SOAP_UNION__ns1__union_RestrictionType_Contains	(9)
	class ns1__ContainsExpressionType *Contains;
#define SOAP_UNION__ns1__union_RestrictionType_Not	(10)
	class ns1__NotType *Not;
#define SOAP_UNION__ns1__union_RestrictionType_And	(11)
	class ns1__AndType *And;
#define SOAP_UNION__ns1__union_RestrictionType_Or	(12)
	class ns1__OrType *Or;
};
#endif

#ifndef SOAP_TYPE_ns1__RestrictionType
#define SOAP_TYPE_ns1__RestrictionType (802)
/* Choice: */
class SOAP_CMAC ns1__RestrictionType
{
public:
	int __unionSearchExpression;	/* union discriminant (of union defined below) */
	union _ns1__union_RestrictionType __union_RestrictionType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 802; } /* = unique type id SOAP_TYPE_ns1__RestrictionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RestrictionType() { ns1__RestrictionType::soap_default(NULL); }
	virtual ~ns1__RestrictionType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_FieldOrderType
#define SOAP_TYPE__ns1__union_FieldOrderType (1779)
/* xsd:choice */
union _ns1__union_FieldOrderType
{
#define SOAP_UNION__ns1__union_FieldOrderType_FieldURI	(1)
	ns1__PathToUnindexedFieldType *FieldURI;
#define SOAP_UNION__ns1__union_FieldOrderType_IndexedFieldURI	(2)
	ns1__PathToIndexedFieldType *IndexedFieldURI;
#define SOAP_UNION__ns1__union_FieldOrderType_ExtendedFieldURI	(3)
	ns1__PathToExtendedFieldType *ExtendedFieldURI;
};
#endif

#ifndef SOAP_TYPE_ns1__FieldOrderType
#define SOAP_TYPE_ns1__FieldOrderType (803)
/* ns1:FieldOrderType */
class SOAP_CMAC ns1__FieldOrderType
{
public:
	int __unionPath;	/* union discriminant (of union defined below) */
	union _ns1__union_FieldOrderType __union_FieldOrderType;
	enum ns1__SortDirectionType Order;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 803; } /* = unique type id SOAP_TYPE_ns1__FieldOrderType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__FieldOrderType() { ns1__FieldOrderType::soap_default(NULL); }
	virtual ~ns1__FieldOrderType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfFieldOrdersType
#define SOAP_TYPE_ns1__NonEmptyArrayOfFieldOrdersType (804)
/* ns1:NonEmptyArrayOfFieldOrdersType */
class SOAP_CMAC ns1__NonEmptyArrayOfFieldOrdersType
{
public:
	std::vector<ns1__FieldOrderType * >FieldOrder;	/* required element of type ns1:FieldOrderType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 804; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfFieldOrdersType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfFieldOrdersType() { ns1__NonEmptyArrayOfFieldOrdersType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfFieldOrdersType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfFolderNamesType
#define SOAP_TYPE_ns1__NonEmptyArrayOfFolderNamesType (805)
/* ns1:NonEmptyArrayOfFolderNamesType */
class SOAP_CMAC ns1__NonEmptyArrayOfFolderNamesType
{
public:
	std::vector<std::string >FolderName;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 805; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfFolderNamesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfFolderNamesType() { ns1__NonEmptyArrayOfFolderNamesType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfFolderNamesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__BaseNotificationEventType
#define SOAP_TYPE_ns1__BaseNotificationEventType (806)
/* ns1:BaseNotificationEventType */
class SOAP_CMAC ns1__BaseNotificationEventType
{
public:
	std::string *Watermark;	/* optional element of type ns1:WatermarkType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 806; } /* = unique type id SOAP_TYPE_ns1__BaseNotificationEventType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__BaseNotificationEventType() { ns1__BaseNotificationEventType::soap_default(NULL); }
	virtual ~ns1__BaseNotificationEventType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_NotificationType
#define SOAP_TYPE__ns1__union_NotificationType (1788)
/* xsd:choice */
union _ns1__union_NotificationType
{
#define SOAP_UNION__ns1__union_NotificationType_CopiedEvent	(1)
	class ns1__MovedCopiedEventType *CopiedEvent;
#define SOAP_UNION__ns1__union_NotificationType_CreatedEvent	(2)
	class ns1__BaseObjectChangedEventType *CreatedEvent;
#define SOAP_UNION__ns1__union_NotificationType_DeletedEvent	(3)
	ns1__BaseObjectChangedEventType *DeletedEvent;
#define SOAP_UNION__ns1__union_NotificationType_ModifiedEvent	(4)
	class ns1__ModifiedEventType *ModifiedEvent;
#define SOAP_UNION__ns1__union_NotificationType_MovedEvent	(5)
	ns1__MovedCopiedEventType *MovedEvent;
#define SOAP_UNION__ns1__union_NotificationType_NewMailEvent	(6)
	ns1__BaseObjectChangedEventType *NewMailEvent;
#define SOAP_UNION__ns1__union_NotificationType_StatusEvent	(7)
	ns1__BaseNotificationEventType *StatusEvent;
#define SOAP_UNION__ns1__union_NotificationType_FreeBusyChangedEvent	(8)
	ns1__BaseObjectChangedEventType *FreeBusyChangedEvent;
};
#endif

#ifndef SOAP_TYPE___ns1__union_NotificationType
#define SOAP_TYPE___ns1__union_NotificationType (1783)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_NotificationType
{
public:
	int __union_NotificationType;	/* union discriminant (of union defined below) */
	union _ns1__union_NotificationType union_NotificationType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1783; } /* = unique type id SOAP_TYPE___ns1__union_NotificationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_NotificationType() { __ns1__union_NotificationType::soap_default(NULL); }
	virtual ~__ns1__union_NotificationType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NotificationType
#define SOAP_TYPE_ns1__NotificationType (810)
/* ns1:NotificationType */
class SOAP_CMAC ns1__NotificationType
{
public:
	std::string SubscriptionId;	/* required element of type ns1:SubscriptionIdType */
	std::string *PreviousWatermark;	/* optional element of type ns1:WatermarkType */
	bool *MoreEvents;	/* optional element of type xsd:boolean */
	int __size_NotificationType;	/* sequence of elements <-union-NotificationType> */
	__ns1__union_NotificationType *__union_NotificationType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 810; } /* = unique type id SOAP_TYPE_ns1__NotificationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NotificationType() { ns1__NotificationType::soap_default(NULL); }
	virtual ~ns1__NotificationType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_NonEmptyArrayOfNotificationEventTypesType
#define SOAP_TYPE__ns1__union_NonEmptyArrayOfNotificationEventTypesType (1791)
/* xsd:choice */
union _ns1__union_NonEmptyArrayOfNotificationEventTypesType
{
#define SOAP_UNION__ns1__union_NonEmptyArrayOfNotificationEventTypesType_EventType	(1)
	enum ns1__NotificationEventTypeType EventType;
};
#endif

#ifndef SOAP_TYPE___ns1__union_NonEmptyArrayOfNotificationEventTypesType
#define SOAP_TYPE___ns1__union_NonEmptyArrayOfNotificationEventTypesType (1790)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_NonEmptyArrayOfNotificationEventTypesType
{
public:
	int __union_NonEmptyArrayOfNotificationEventTypesType;	/* union discriminant (of union defined below) */
	union _ns1__union_NonEmptyArrayOfNotificationEventTypesType union_NonEmptyArrayOfNotificationEventTypesType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1790; } /* = unique type id SOAP_TYPE___ns1__union_NonEmptyArrayOfNotificationEventTypesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_NonEmptyArrayOfNotificationEventTypesType() { __ns1__union_NonEmptyArrayOfNotificationEventTypesType::soap_default(NULL); }
	virtual ~__ns1__union_NonEmptyArrayOfNotificationEventTypesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfNotificationEventTypesType
#define SOAP_TYPE_ns1__NonEmptyArrayOfNotificationEventTypesType (811)
/* ns1:NonEmptyArrayOfNotificationEventTypesType */
class SOAP_CMAC ns1__NonEmptyArrayOfNotificationEventTypesType
{
public:
	int __size_NonEmptyArrayOfNotificationEventTypesType;	/* sequence of elements <-union-NonEmptyArrayOfNotificationEventTypesType> */
	__ns1__union_NonEmptyArrayOfNotificationEventTypesType *__union_NonEmptyArrayOfNotificationEventTypesType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 811; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfNotificationEventTypesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfNotificationEventTypesType() { ns1__NonEmptyArrayOfNotificationEventTypesType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfNotificationEventTypesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__BaseSubscriptionRequestType
#define SOAP_TYPE_ns1__BaseSubscriptionRequestType (812)
/* ns1:BaseSubscriptionRequestType */
class SOAP_CMAC ns1__BaseSubscriptionRequestType
{
public:
	ns1__NonEmptyArrayOfBaseFolderIdsType *FolderIds;	/* optional element of type ns1:NonEmptyArrayOfBaseFolderIdsType */
	ns1__NonEmptyArrayOfNotificationEventTypesType *EventTypes;	/* required element of type ns1:NonEmptyArrayOfNotificationEventTypesType */
	std::string *Watermark;	/* optional element of type ns1:WatermarkType */
	bool *SubscribeToAllFolders;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 812; } /* = unique type id SOAP_TYPE_ns1__BaseSubscriptionRequestType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__BaseSubscriptionRequestType() { ns1__BaseSubscriptionRequestType::soap_default(NULL); }
	virtual ~ns1__BaseSubscriptionRequestType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__StreamingSubscriptionRequestType
#define SOAP_TYPE_ns1__StreamingSubscriptionRequestType (815)
/* ns1:StreamingSubscriptionRequestType */
class SOAP_CMAC ns1__StreamingSubscriptionRequestType
{
public:
	ns1__NonEmptyArrayOfBaseFolderIdsType *FolderIds;	/* optional element of type ns1:NonEmptyArrayOfBaseFolderIdsType */
	ns1__NonEmptyArrayOfNotificationEventTypesType *EventTypes;	/* required element of type ns1:NonEmptyArrayOfNotificationEventTypesType */
	bool *SubscribeToAllFolders;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 815; } /* = unique type id SOAP_TYPE_ns1__StreamingSubscriptionRequestType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__StreamingSubscriptionRequestType() { ns1__StreamingSubscriptionRequestType::soap_default(NULL); }
	virtual ~ns1__StreamingSubscriptionRequestType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfSubscriptionIdsType
#define SOAP_TYPE_ns1__NonEmptyArrayOfSubscriptionIdsType (816)
/* ns1:NonEmptyArrayOfSubscriptionIdsType */
class SOAP_CMAC ns1__NonEmptyArrayOfSubscriptionIdsType
{
public:
	std::vector<std::string >SubscriptionId;	/* required element of type ns1:SubscriptionIdType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 816; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfSubscriptionIdsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfSubscriptionIdsType() { ns1__NonEmptyArrayOfSubscriptionIdsType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfSubscriptionIdsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfNotificationsType
#define SOAP_TYPE_ns1__NonEmptyArrayOfNotificationsType (817)
/* ns1:NonEmptyArrayOfNotificationsType */
class SOAP_CMAC ns1__NonEmptyArrayOfNotificationsType
{
public:
	std::vector<ns1__NotificationType * >Notification;	/* optional element of type ns1:NotificationType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 817; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfNotificationsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfNotificationsType() { ns1__NonEmptyArrayOfNotificationsType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfNotificationsType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_NonEmptyArrayOfChannelSubscriptionsType
#define SOAP_TYPE__ns1__union_NonEmptyArrayOfChannelSubscriptionsType (1802)
/* xsd:choice */
union _ns1__union_NonEmptyArrayOfChannelSubscriptionsType
{
#define SOAP_UNION__ns1__union_NonEmptyArrayOfChannelSubscriptionsType_UnifiedGroupUnseenChangedSubscription	(1)
	class ns1__UnifiedGroupUnseenChangedChannelSubscriptionType *UnifiedGroupUnseenChangedSubscription;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfChannelSubscriptionsType_UnifiedGroupContentChangedSubscription	(2)
	class ns1__UnifiedGroupContentChangedChannelSubscriptionType *UnifiedGroupContentChangedSubscription;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfChannelSubscriptionsType_UserMembershipChangedSubscription	(3)
	class ns1__UserMembershipChangedChannelSubscriptionType *UserMembershipChangedSubscription;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfChannelSubscriptionsType_NewSocialActivityAddedSubscription	(4)
	class ns1__NewSocialActivityAddedSubscriptionType *NewSocialActivityAddedSubscription;
};
#endif

#ifndef SOAP_TYPE___ns1__union_NonEmptyArrayOfChannelSubscriptionsType
#define SOAP_TYPE___ns1__union_NonEmptyArrayOfChannelSubscriptionsType (1797)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_NonEmptyArrayOfChannelSubscriptionsType
{
public:
	int __union_NonEmptyArrayOfChannelSubscriptionsType;	/* union discriminant (of union defined below) */
	union _ns1__union_NonEmptyArrayOfChannelSubscriptionsType union_NonEmptyArrayOfChannelSubscriptionsType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1797; } /* = unique type id SOAP_TYPE___ns1__union_NonEmptyArrayOfChannelSubscriptionsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_NonEmptyArrayOfChannelSubscriptionsType() { __ns1__union_NonEmptyArrayOfChannelSubscriptionsType::soap_default(NULL); }
	virtual ~__ns1__union_NonEmptyArrayOfChannelSubscriptionsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfChannelSubscriptionsType
#define SOAP_TYPE_ns1__NonEmptyArrayOfChannelSubscriptionsType (818)
/* ns1:NonEmptyArrayOfChannelSubscriptionsType */
class SOAP_CMAC ns1__NonEmptyArrayOfChannelSubscriptionsType
{
public:
	int __size_NonEmptyArrayOfChannelSubscriptionsType;	/* sequence of elements <-union-NonEmptyArrayOfChannelSubscriptionsType> */
	__ns1__union_NonEmptyArrayOfChannelSubscriptionsType *__union_NonEmptyArrayOfChannelSubscriptionsType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 818; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfChannelSubscriptionsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfChannelSubscriptionsType() { ns1__NonEmptyArrayOfChannelSubscriptionsType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfChannelSubscriptionsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ChannelSubscriptionBaseType
#define SOAP_TYPE_ns1__ChannelSubscriptionBaseType (819)
/* ns1:ChannelSubscriptionBaseType */
class SOAP_CMAC ns1__ChannelSubscriptionBaseType
{
public:
	std::string SubscriptionId;	/* required element of type ns1:GuidType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 819; } /* = unique type id SOAP_TYPE_ns1__ChannelSubscriptionBaseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ChannelSubscriptionBaseType() { ns1__ChannelSubscriptionBaseType::soap_default(NULL); }
	virtual ~ns1__ChannelSubscriptionBaseType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_NonEmptyArrayOfChannelEventsType
#define SOAP_TYPE__ns1__union_NonEmptyArrayOfChannelEventsType (1813)
/* xsd:choice */
union _ns1__union_NonEmptyArrayOfChannelEventsType
{
#define SOAP_UNION__ns1__union_NonEmptyArrayOfChannelEventsType_ChannelStatusEvent	(1)
	class ns1__ChannelStatusEventType *ChannelStatusEvent;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfChannelEventsType_ChannelEventDroppedEvent	(2)
	class ns1__ChannelEventDroppedChannelEventType *ChannelEventDroppedEvent;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfChannelEventsType_SubscriptionEventDroppedEvent	(3)
	class ns1__SubscriptionEventDroppedChannelEventType *SubscriptionEventDroppedEvent;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfChannelEventsType_SubscriptionRenewFailedEvent	(4)
	class ns1__SubscriptionRenewFailedChannelEventType *SubscriptionRenewFailedEvent;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfChannelEventsType_UnifiedGroupUnseenChangedEvent	(5)
	class ns1__UnifiedGroupUnseenChangedChannelEventType *UnifiedGroupUnseenChangedEvent;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfChannelEventsType_UnifiedGroupContentChangedEvent	(6)
	class ns1__UnifiedGroupContentChangedChannelEventType *UnifiedGroupContentChangedEvent;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfChannelEventsType_UserMembershipChangedEvent	(7)
	class ns1__UserMembershipChangedChannelEventType *UserMembershipChangedEvent;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfChannelEventsType_NewSocialActivityAddedEvent	(8)
	class ns1__NewSocialActivityAddedEventType *NewSocialActivityAddedEvent;
};
#endif

#ifndef SOAP_TYPE___ns1__union_NonEmptyArrayOfChannelEventsType
#define SOAP_TYPE___ns1__union_NonEmptyArrayOfChannelEventsType (1804)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_NonEmptyArrayOfChannelEventsType
{
public:
	int __union_NonEmptyArrayOfChannelEventsType;	/* union discriminant (of union defined below) */
	union _ns1__union_NonEmptyArrayOfChannelEventsType union_NonEmptyArrayOfChannelEventsType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1804; } /* = unique type id SOAP_TYPE___ns1__union_NonEmptyArrayOfChannelEventsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_NonEmptyArrayOfChannelEventsType() { __ns1__union_NonEmptyArrayOfChannelEventsType::soap_default(NULL); }
	virtual ~__ns1__union_NonEmptyArrayOfChannelEventsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfChannelEventsType
#define SOAP_TYPE_ns1__NonEmptyArrayOfChannelEventsType (824)
/* ns1:NonEmptyArrayOfChannelEventsType */
class SOAP_CMAC ns1__NonEmptyArrayOfChannelEventsType
{
public:
	int __size_NonEmptyArrayOfChannelEventsType;	/* sequence of elements <-union-NonEmptyArrayOfChannelEventsType> */
	__ns1__union_NonEmptyArrayOfChannelEventsType *__union_NonEmptyArrayOfChannelEventsType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 824; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfChannelEventsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfChannelEventsType() { ns1__NonEmptyArrayOfChannelEventsType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfChannelEventsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ChannelEventType
#define SOAP_TYPE_ns1__ChannelEventType (825)
/* ns1:ChannelEventType */
class SOAP_CMAC ns1__ChannelEventType
{
public:
	time_t *TimeStamp;	/* optional attribute */
	std::string *NotificationId;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 825; } /* = unique type id SOAP_TYPE_ns1__ChannelEventType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ChannelEventType() { ns1__ChannelEventType::soap_default(NULL); }
	virtual ~ns1__ChannelEventType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SocialActivityTargetDataType
#define SOAP_TYPE_ns1__SocialActivityTargetDataType (832)
/* ns1:SocialActivityTargetDataType */
class SOAP_CMAC ns1__SocialActivityTargetDataType
{
public:
	std::string TargetItemType;	/* required element of type xsd:string */
	ns1__ItemIdType *TargetConversationId;	/* required element of type ns1:ItemIdType */
	ns1__ItemIdType *TargetItemId;	/* required element of type ns1:ItemIdType */
	std::string TargetMailboxSmtpAddress;	/* required element of type xsd:string */
	std::string TargetMailboxGuid;	/* required element of type ns1:GuidType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 832; } /* = unique type id SOAP_TYPE_ns1__SocialActivityTargetDataType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SocialActivityTargetDataType() { ns1__SocialActivityTargetDataType::soap_default(NULL); }
	virtual ~ns1__SocialActivityTargetDataType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SocialActivityMetadataType
#define SOAP_TYPE_ns1__SocialActivityMetadataType (833)
/* ns1:SocialActivityMetadataType */
class SOAP_CMAC ns1__SocialActivityMetadataType
{
public:
	std::string TargetGroupName;	/* required element of type xsd:string */
	std::string MessagePreview;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 833; } /* = unique type id SOAP_TYPE_ns1__SocialActivityMetadataType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SocialActivityMetadataType() { ns1__SocialActivityMetadataType::soap_default(NULL); }
	virtual ~ns1__SocialActivityMetadataType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SyncFolderItemsDeleteType
#define SOAP_TYPE_ns1__SyncFolderItemsDeleteType (837)
/* ns1:SyncFolderItemsDeleteType */
class SOAP_CMAC ns1__SyncFolderItemsDeleteType
{
public:
	ns1__ItemIdType *ItemId;	/* required element of type ns1:ItemIdType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 837; } /* = unique type id SOAP_TYPE_ns1__SyncFolderItemsDeleteType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SyncFolderItemsDeleteType() { ns1__SyncFolderItemsDeleteType::soap_default(NULL); }
	virtual ~ns1__SyncFolderItemsDeleteType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SyncFolderItemsReadFlagType
#define SOAP_TYPE_ns1__SyncFolderItemsReadFlagType (838)
/* ns1:SyncFolderItemsReadFlagType */
class SOAP_CMAC ns1__SyncFolderItemsReadFlagType
{
public:
	ns1__ItemIdType *ItemId;	/* required element of type ns1:ItemIdType */
	bool IsRead;	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 838; } /* = unique type id SOAP_TYPE_ns1__SyncFolderItemsReadFlagType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SyncFolderItemsReadFlagType() { ns1__SyncFolderItemsReadFlagType::soap_default(NULL); }
	virtual ~ns1__SyncFolderItemsReadFlagType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_SyncFolderItemsChangesType
#define SOAP_TYPE__ns1__union_SyncFolderItemsChangesType (1820)
/* xsd:choice */
union _ns1__union_SyncFolderItemsChangesType
{
#define SOAP_UNION__ns1__union_SyncFolderItemsChangesType_Create	(1)
	ns1__SyncFolderItemsCreateOrUpdateType *Create;
#define SOAP_UNION__ns1__union_SyncFolderItemsChangesType_Update	(2)
	ns1__SyncFolderItemsCreateOrUpdateType *Update;
#define SOAP_UNION__ns1__union_SyncFolderItemsChangesType_Delete	(3)
	ns1__SyncFolderItemsDeleteType *Delete;
#define SOAP_UNION__ns1__union_SyncFolderItemsChangesType_ReadFlagChange	(4)
	ns1__SyncFolderItemsReadFlagType *ReadFlagChange;
};
#endif

#ifndef SOAP_TYPE___ns1__union_SyncFolderItemsChangesType
#define SOAP_TYPE___ns1__union_SyncFolderItemsChangesType (1816)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_SyncFolderItemsChangesType
{
public:
	int __union_SyncFolderItemsChangesType;	/* union discriminant (of union defined below) */
	union _ns1__union_SyncFolderItemsChangesType union_SyncFolderItemsChangesType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1816; } /* = unique type id SOAP_TYPE___ns1__union_SyncFolderItemsChangesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_SyncFolderItemsChangesType() { __ns1__union_SyncFolderItemsChangesType::soap_default(NULL); }
	virtual ~__ns1__union_SyncFolderItemsChangesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SyncFolderItemsChangesType
#define SOAP_TYPE_ns1__SyncFolderItemsChangesType (839)
/* ns1:SyncFolderItemsChangesType */
class SOAP_CMAC ns1__SyncFolderItemsChangesType
{
public:
	int __size_SyncFolderItemsChangesType;	/* sequence of elements <-union-SyncFolderItemsChangesType> */
	__ns1__union_SyncFolderItemsChangesType *__union_SyncFolderItemsChangesType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 839; } /* = unique type id SOAP_TYPE_ns1__SyncFolderItemsChangesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SyncFolderItemsChangesType() { ns1__SyncFolderItemsChangesType::soap_default(NULL); }
	virtual ~ns1__SyncFolderItemsChangesType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_SyncFolderHierarchyCreateOrUpdateType
#define SOAP_TYPE__ns1__union_SyncFolderHierarchyCreateOrUpdateType (1822)
/* xsd:choice */
union _ns1__union_SyncFolderHierarchyCreateOrUpdateType
{
#define SOAP_UNION__ns1__union_SyncFolderHierarchyCreateOrUpdateType_Folder	(1)
	ns1__FolderType *Folder;
#define SOAP_UNION__ns1__union_SyncFolderHierarchyCreateOrUpdateType_CalendarFolder	(2)
	ns1__CalendarFolderType *CalendarFolder;
#define SOAP_UNION__ns1__union_SyncFolderHierarchyCreateOrUpdateType_ContactsFolder	(3)
	ns1__ContactsFolderType *ContactsFolder;
#define SOAP_UNION__ns1__union_SyncFolderHierarchyCreateOrUpdateType_SearchFolder	(4)
	ns1__SearchFolderType *SearchFolder;
#define SOAP_UNION__ns1__union_SyncFolderHierarchyCreateOrUpdateType_TasksFolder	(5)
	ns1__TasksFolderType *TasksFolder;
};
#endif

#ifndef SOAP_TYPE_ns1__SyncFolderHierarchyCreateOrUpdateType
#define SOAP_TYPE_ns1__SyncFolderHierarchyCreateOrUpdateType (840)
/* Choice: */
class SOAP_CMAC ns1__SyncFolderHierarchyCreateOrUpdateType
{
public:
	int __union_SyncFolderHierarchyCreateOrUpdateType;	/* union discriminant (of union defined below) */
	union _ns1__union_SyncFolderHierarchyCreateOrUpdateType union_SyncFolderHierarchyCreateOrUpdateType;	/* required element of type xsd:choice */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 840; } /* = unique type id SOAP_TYPE_ns1__SyncFolderHierarchyCreateOrUpdateType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SyncFolderHierarchyCreateOrUpdateType() { ns1__SyncFolderHierarchyCreateOrUpdateType::soap_default(NULL); }
	virtual ~ns1__SyncFolderHierarchyCreateOrUpdateType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SyncFolderHierarchyDeleteType
#define SOAP_TYPE_ns1__SyncFolderHierarchyDeleteType (841)
/* ns1:SyncFolderHierarchyDeleteType */
class SOAP_CMAC ns1__SyncFolderHierarchyDeleteType
{
public:
	ns1__FolderIdType *FolderId;	/* required element of type ns1:FolderIdType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 841; } /* = unique type id SOAP_TYPE_ns1__SyncFolderHierarchyDeleteType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SyncFolderHierarchyDeleteType() { ns1__SyncFolderHierarchyDeleteType::soap_default(NULL); }
	virtual ~ns1__SyncFolderHierarchyDeleteType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_SyncFolderHierarchyChangesType
#define SOAP_TYPE__ns1__union_SyncFolderHierarchyChangesType (1826)
/* xsd:choice */
union _ns1__union_SyncFolderHierarchyChangesType
{
#define SOAP_UNION__ns1__union_SyncFolderHierarchyChangesType_Create	(1)
	ns1__SyncFolderHierarchyCreateOrUpdateType *Create;
#define SOAP_UNION__ns1__union_SyncFolderHierarchyChangesType_Update	(2)
	ns1__SyncFolderHierarchyCreateOrUpdateType *Update;
#define SOAP_UNION__ns1__union_SyncFolderHierarchyChangesType_Delete	(3)
	ns1__SyncFolderHierarchyDeleteType *Delete;
};
#endif

#ifndef SOAP_TYPE___ns1__union_SyncFolderHierarchyChangesType
#define SOAP_TYPE___ns1__union_SyncFolderHierarchyChangesType (1823)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_SyncFolderHierarchyChangesType
{
public:
	int __union_SyncFolderHierarchyChangesType;	/* union discriminant (of union defined below) */
	union _ns1__union_SyncFolderHierarchyChangesType union_SyncFolderHierarchyChangesType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1823; } /* = unique type id SOAP_TYPE___ns1__union_SyncFolderHierarchyChangesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_SyncFolderHierarchyChangesType() { __ns1__union_SyncFolderHierarchyChangesType::soap_default(NULL); }
	virtual ~__ns1__union_SyncFolderHierarchyChangesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SyncFolderHierarchyChangesType
#define SOAP_TYPE_ns1__SyncFolderHierarchyChangesType (842)
/* ns1:SyncFolderHierarchyChangesType */
class SOAP_CMAC ns1__SyncFolderHierarchyChangesType
{
public:
	int __size_SyncFolderHierarchyChangesType;	/* sequence of elements <-union-SyncFolderHierarchyChangesType> */
	__ns1__union_SyncFolderHierarchyChangesType *__union_SyncFolderHierarchyChangesType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 842; } /* = unique type id SOAP_TYPE_ns1__SyncFolderHierarchyChangesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SyncFolderHierarchyChangesType() { ns1__SyncFolderHierarchyChangesType::soap_default(NULL); }
	virtual ~ns1__SyncFolderHierarchyChangesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RequestTypeHeader
#define SOAP_TYPE_ns1__RequestTypeHeader (843)
/* ns1:RequestTypeHeader */
class SOAP_CMAC ns1__RequestTypeHeader
{
public:
	enum ns1__AvailabilityProxyRequestType RequestType;	/* required element of type ns1:AvailabilityProxyRequestType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 843; } /* = unique type id SOAP_TYPE_ns1__RequestTypeHeader */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RequestTypeHeader() { ns1__RequestTypeHeader::soap_default(NULL); }
	virtual ~ns1__RequestTypeHeader() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CalendarEventDetails
#define SOAP_TYPE_ns1__CalendarEventDetails (844)
/* ns1:CalendarEventDetails */
class SOAP_CMAC ns1__CalendarEventDetails
{
public:
	std::string *ID;	/* optional element of type xsd:string */
	std::string *Subject;	/* optional element of type xsd:string */
	std::string *Location;	/* optional element of type xsd:string */
	bool IsMeeting;	/* required element of type xsd:boolean */
	bool IsRecurring;	/* required element of type xsd:boolean */
	bool IsException;	/* required element of type xsd:boolean */
	bool IsReminderSet;	/* required element of type xsd:boolean */
	bool IsPrivate;	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 844; } /* = unique type id SOAP_TYPE_ns1__CalendarEventDetails */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CalendarEventDetails() { ns1__CalendarEventDetails::soap_default(NULL); }
	virtual ~ns1__CalendarEventDetails() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CalendarEvent
#define SOAP_TYPE_ns1__CalendarEvent (845)
/* ns1:CalendarEvent */
class SOAP_CMAC ns1__CalendarEvent
{
public:
	time_t StartTime;	/* required element of type xsd:dateTime */
	time_t EndTime;	/* required element of type xsd:dateTime */
	enum ns1__LegacyFreeBusyType BusyType;	/* required element of type ns1:LegacyFreeBusyType */
	ns1__CalendarEventDetails *CalendarEventDetails;	/* optional element of type ns1:CalendarEventDetails */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 845; } /* = unique type id SOAP_TYPE_ns1__CalendarEvent */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CalendarEvent() { ns1__CalendarEvent::soap_default(NULL); }
	virtual ~ns1__CalendarEvent() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfCalendarEvent
#define SOAP_TYPE_ns1__ArrayOfCalendarEvent (846)
/* ns1:ArrayOfCalendarEvent */
class SOAP_CMAC ns1__ArrayOfCalendarEvent
{
public:
	std::vector<ns1__CalendarEvent * >CalendarEvent;	/* optional element of type ns1:CalendarEvent */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 846; } /* = unique type id SOAP_TYPE_ns1__ArrayOfCalendarEvent */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfCalendarEvent() { ns1__ArrayOfCalendarEvent::soap_default(NULL); }
	virtual ~ns1__ArrayOfCalendarEvent() { }
};
#endif

#ifndef SOAP_TYPE_ns1__Duration
#define SOAP_TYPE_ns1__Duration (847)
/* ns1:Duration */
class SOAP_CMAC ns1__Duration
{
public:
	time_t StartTime;	/* required element of type xsd:dateTime */
	time_t EndTime;	/* required element of type xsd:dateTime */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 847; } /* = unique type id SOAP_TYPE_ns1__Duration */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__Duration() { ns1__Duration::soap_default(NULL); }
	virtual ~ns1__Duration() { }
};
#endif

#ifndef SOAP_TYPE_ns1__EmailAddress
#define SOAP_TYPE_ns1__EmailAddress (848)
/* ns1:EmailAddress */
class SOAP_CMAC ns1__EmailAddress
{
public:
	std::string *Name;	/* optional element of type xsd:string */
	std::string Address;	/* required element of type xsd:string */
	std::string *RoutingType;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 848; } /* = unique type id SOAP_TYPE_ns1__EmailAddress */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__EmailAddress() { ns1__EmailAddress::soap_default(NULL); }
	virtual ~ns1__EmailAddress() { }
};
#endif

#ifndef SOAP_TYPE_ns1__FreeBusyViewOptionsType
#define SOAP_TYPE_ns1__FreeBusyViewOptionsType (849)
/* ns1:FreeBusyViewOptionsType */
class SOAP_CMAC ns1__FreeBusyViewOptionsType
{
public:
	ns1__Duration *TimeWindow;	/* required element of type ns1:Duration */
	int *MergedFreeBusyIntervalInMinutes;	/* optional element of type xsd:int */
	enum ns1__FreeBusyViewType *RequestedView;	/* optional element of type ns1:FreeBusyViewType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 849; } /* = unique type id SOAP_TYPE_ns1__FreeBusyViewOptionsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__FreeBusyViewOptionsType() { ns1__FreeBusyViewOptionsType::soap_default(NULL); }
	virtual ~ns1__FreeBusyViewOptionsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__WorkingPeriod
#define SOAP_TYPE_ns1__WorkingPeriod (850)
/* ns1:WorkingPeriod */
class SOAP_CMAC ns1__WorkingPeriod
{
public:
	enum ns1__DaysOfWeekType DayOfWeek;	/* required element of type ns1:DaysOfWeekType */
	int StartTimeInMinutes;	/* required element of type xsd:int */
	int EndTimeInMinutes;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 850; } /* = unique type id SOAP_TYPE_ns1__WorkingPeriod */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__WorkingPeriod() { ns1__WorkingPeriod::soap_default(NULL); }
	virtual ~ns1__WorkingPeriod() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfWorkingPeriod
#define SOAP_TYPE_ns1__ArrayOfWorkingPeriod (851)
/* ns1:ArrayOfWorkingPeriod */
class SOAP_CMAC ns1__ArrayOfWorkingPeriod
{
public:
	std::vector<ns1__WorkingPeriod * >WorkingPeriod;	/* optional element of type ns1:WorkingPeriod */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 851; } /* = unique type id SOAP_TYPE_ns1__ArrayOfWorkingPeriod */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfWorkingPeriod() { ns1__ArrayOfWorkingPeriod::soap_default(NULL); }
	virtual ~ns1__ArrayOfWorkingPeriod() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SerializableTimeZoneTime
#define SOAP_TYPE_ns1__SerializableTimeZoneTime (852)
/* ns1:SerializableTimeZoneTime */
class SOAP_CMAC ns1__SerializableTimeZoneTime
{
public:
	int Bias;	/* required element of type xsd:int */
	std::string Time;	/* required element of type xsd:string */
	short DayOrder;	/* required element of type xsd:short */
	short Month;	/* required element of type xsd:short */
	enum ns1__DayOfWeekType DayOfWeek;	/* required element of type ns1:DayOfWeekType */
	std::string *Year;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 852; } /* = unique type id SOAP_TYPE_ns1__SerializableTimeZoneTime */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SerializableTimeZoneTime() { ns1__SerializableTimeZoneTime::soap_default(NULL); }
	virtual ~ns1__SerializableTimeZoneTime() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SerializableTimeZone
#define SOAP_TYPE_ns1__SerializableTimeZone (853)
/* ns1:SerializableTimeZone */
class SOAP_CMAC ns1__SerializableTimeZone
{
public:
	int Bias;	/* required element of type xsd:int */
	ns1__SerializableTimeZoneTime *StandardTime;	/* required element of type ns1:SerializableTimeZoneTime */
	ns1__SerializableTimeZoneTime *DaylightTime;	/* required element of type ns1:SerializableTimeZoneTime */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 853; } /* = unique type id SOAP_TYPE_ns1__SerializableTimeZone */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SerializableTimeZone() { ns1__SerializableTimeZone::soap_default(NULL); }
	virtual ~ns1__SerializableTimeZone() { }
};
#endif

#ifndef SOAP_TYPE_ns1__WorkingHours
#define SOAP_TYPE_ns1__WorkingHours (854)
/* ns1:WorkingHours */
class SOAP_CMAC ns1__WorkingHours
{
public:
	ns1__SerializableTimeZone *TimeZone;	/* required element of type ns1:SerializableTimeZone */
	ns1__ArrayOfWorkingPeriod *WorkingPeriodArray;	/* required element of type ns1:ArrayOfWorkingPeriod */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 854; } /* = unique type id SOAP_TYPE_ns1__WorkingHours */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__WorkingHours() { ns1__WorkingHours::soap_default(NULL); }
	virtual ~ns1__WorkingHours() { }
};
#endif

#ifndef SOAP_TYPE_ns1__FreeBusyView
#define SOAP_TYPE_ns1__FreeBusyView (855)
/* ns1:FreeBusyView */
class SOAP_CMAC ns1__FreeBusyView
{
public:
	enum ns1__FreeBusyViewType FreeBusyViewType;	/* required element of type ns1:FreeBusyViewType */
	std::string *MergedFreeBusy;	/* optional element of type xsd:string */
	ns1__ArrayOfCalendarEvent *CalendarEventArray;	/* optional element of type ns1:ArrayOfCalendarEvent */
	ns1__WorkingHours *WorkingHours;	/* optional element of type ns1:WorkingHours */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 855; } /* = unique type id SOAP_TYPE_ns1__FreeBusyView */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__FreeBusyView() { ns1__FreeBusyView::soap_default(NULL); }
	virtual ~ns1__FreeBusyView() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MailboxData
#define SOAP_TYPE_ns1__MailboxData (856)
/* ns1:MailboxData */
class SOAP_CMAC ns1__MailboxData
{
public:
	ns1__EmailAddress *Email;	/* required element of type ns1:EmailAddress */
	enum ns1__MeetingAttendeeType AttendeeType;	/* required element of type ns1:MeetingAttendeeType */
	bool *ExcludeConflicts;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 856; } /* = unique type id SOAP_TYPE_ns1__MailboxData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MailboxData() { ns1__MailboxData::soap_default(NULL); }
	virtual ~ns1__MailboxData() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfMailboxData
#define SOAP_TYPE_ns1__ArrayOfMailboxData (857)
/* ns1:ArrayOfMailboxData */
class SOAP_CMAC ns1__ArrayOfMailboxData
{
public:
	std::vector<ns1__MailboxData * >MailboxData;	/* optional element of type ns1:MailboxData */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 857; } /* = unique type id SOAP_TYPE_ns1__ArrayOfMailboxData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfMailboxData() { ns1__ArrayOfMailboxData::soap_default(NULL); }
	virtual ~ns1__ArrayOfMailboxData() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SuggestionsViewOptionsType
#define SOAP_TYPE_ns1__SuggestionsViewOptionsType (858)
/* ns1:SuggestionsViewOptionsType */
class SOAP_CMAC ns1__SuggestionsViewOptionsType
{
public:
	int *GoodThreshold;	/* optional element of type xsd:int */
	int *MaximumResultsByDay;	/* optional element of type xsd:int */
	int *MaximumNonWorkHourResultsByDay;	/* optional element of type xsd:int */
	int *MeetingDurationInMinutes;	/* optional element of type xsd:int */
	enum ns1__SuggestionQuality *MinimumSuggestionQuality;	/* optional element of type ns1:SuggestionQuality */
	ns1__Duration *DetailedSuggestionsWindow;	/* required element of type ns1:Duration */
	time_t *CurrentMeetingTime;	/* optional element of type xsd:dateTime */
	std::string *GlobalObjectId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 858; } /* = unique type id SOAP_TYPE_ns1__SuggestionsViewOptionsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SuggestionsViewOptionsType() { ns1__SuggestionsViewOptionsType::soap_default(NULL); }
	virtual ~ns1__SuggestionsViewOptionsType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfAttendeeConflictData
#define SOAP_TYPE__ns1__union_ArrayOfAttendeeConflictData (1850)
/* xsd:choice */
union _ns1__union_ArrayOfAttendeeConflictData
{
#define SOAP_UNION__ns1__union_ArrayOfAttendeeConflictData_UnknownAttendeeConflictData	(1)
	class ns1__UnknownAttendeeConflictData *UnknownAttendeeConflictData;
#define SOAP_UNION__ns1__union_ArrayOfAttendeeConflictData_IndividualAttendeeConflictData	(2)
	class ns1__IndividualAttendeeConflictData *IndividualAttendeeConflictData;
#define SOAP_UNION__ns1__union_ArrayOfAttendeeConflictData_TooBigGroupAttendeeConflictData	(3)
	class ns1__TooBigGroupAttendeeConflictData *TooBigGroupAttendeeConflictData;
#define SOAP_UNION__ns1__union_ArrayOfAttendeeConflictData_GroupAttendeeConflictData	(4)
	class ns1__GroupAttendeeConflictData *GroupAttendeeConflictData;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfAttendeeConflictData
#define SOAP_TYPE___ns1__union_ArrayOfAttendeeConflictData (1845)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfAttendeeConflictData
{
public:
	int __union_ArrayOfAttendeeConflictData;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfAttendeeConflictData union_ArrayOfAttendeeConflictData;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1845; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfAttendeeConflictData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfAttendeeConflictData() { __ns1__union_ArrayOfAttendeeConflictData::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfAttendeeConflictData() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfAttendeeConflictData
#define SOAP_TYPE_ns1__ArrayOfAttendeeConflictData (859)
/* ns1:ArrayOfAttendeeConflictData */
class SOAP_CMAC ns1__ArrayOfAttendeeConflictData
{
public:
	int __size_ArrayOfAttendeeConflictData;	/* sequence of elements <-union-ArrayOfAttendeeConflictData> */
	__ns1__union_ArrayOfAttendeeConflictData *__union_ArrayOfAttendeeConflictData;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 859; } /* = unique type id SOAP_TYPE_ns1__ArrayOfAttendeeConflictData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfAttendeeConflictData() { ns1__ArrayOfAttendeeConflictData::soap_default(NULL); }
	virtual ~ns1__ArrayOfAttendeeConflictData() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AttendeeConflictData
#define SOAP_TYPE_ns1__AttendeeConflictData (860)
/* ns1:AttendeeConflictData */
class SOAP_CMAC ns1__AttendeeConflictData
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 860; } /* = unique type id SOAP_TYPE_ns1__AttendeeConflictData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AttendeeConflictData() { ns1__AttendeeConflictData::soap_default(NULL); }
	virtual ~ns1__AttendeeConflictData() { }
};
#endif

#ifndef SOAP_TYPE_ns1__Suggestion
#define SOAP_TYPE_ns1__Suggestion (865)
/* ns1:Suggestion */
class SOAP_CMAC ns1__Suggestion
{
public:
	time_t MeetingTime;	/* required element of type xsd:dateTime */
	bool IsWorkTime;	/* required element of type xsd:boolean */
	enum ns1__SuggestionQuality SuggestionQuality;	/* required element of type ns1:SuggestionQuality */
	ns1__ArrayOfAttendeeConflictData *AttendeeConflictDataArray;	/* optional element of type ns1:ArrayOfAttendeeConflictData */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 865; } /* = unique type id SOAP_TYPE_ns1__Suggestion */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__Suggestion() { ns1__Suggestion::soap_default(NULL); }
	virtual ~ns1__Suggestion() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfSuggestion
#define SOAP_TYPE_ns1__ArrayOfSuggestion (866)
/* ns1:ArrayOfSuggestion */
class SOAP_CMAC ns1__ArrayOfSuggestion
{
public:
	std::vector<ns1__Suggestion * >Suggestion;	/* optional element of type ns1:Suggestion */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 866; } /* = unique type id SOAP_TYPE_ns1__ArrayOfSuggestion */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfSuggestion() { ns1__ArrayOfSuggestion::soap_default(NULL); }
	virtual ~ns1__ArrayOfSuggestion() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SuggestionDayResult
#define SOAP_TYPE_ns1__SuggestionDayResult (867)
/* ns1:SuggestionDayResult */
class SOAP_CMAC ns1__SuggestionDayResult
{
public:
	time_t Date;	/* required element of type xsd:dateTime */
	enum ns1__SuggestionQuality DayQuality;	/* required element of type ns1:SuggestionQuality */
	ns1__ArrayOfSuggestion *SuggestionArray;	/* optional element of type ns1:ArrayOfSuggestion */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 867; } /* = unique type id SOAP_TYPE_ns1__SuggestionDayResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SuggestionDayResult() { ns1__SuggestionDayResult::soap_default(NULL); }
	virtual ~ns1__SuggestionDayResult() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfSuggestionDayResult
#define SOAP_TYPE_ns1__ArrayOfSuggestionDayResult (868)
/* ns1:ArrayOfSuggestionDayResult */
class SOAP_CMAC ns1__ArrayOfSuggestionDayResult
{
public:
	std::vector<ns1__SuggestionDayResult * >SuggestionDayResult;	/* optional element of type ns1:SuggestionDayResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 868; } /* = unique type id SOAP_TYPE_ns1__ArrayOfSuggestionDayResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfSuggestionDayResult() { ns1__ArrayOfSuggestionDayResult::soap_default(NULL); }
	virtual ~ns1__ArrayOfSuggestionDayResult() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ReplyBody
#define SOAP_TYPE_ns1__ReplyBody (869)
/* ns1:ReplyBody */
class SOAP_CMAC ns1__ReplyBody
{
public:
	std::string *Message;	/* optional element of type xsd:string */
	std::string *xml__lang;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 869; } /* = unique type id SOAP_TYPE_ns1__ReplyBody */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ReplyBody() { ns1__ReplyBody::soap_default(NULL); }
	virtual ~ns1__ReplyBody() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UserOofSettings
#define SOAP_TYPE_ns1__UserOofSettings (870)
/* ns1:UserOofSettings */
class SOAP_CMAC ns1__UserOofSettings
{
public:
	enum ns1__OofState OofState;	/* required element of type ns1:OofState */
	enum ns1__ExternalAudience ExternalAudience;	/* required element of type ns1:ExternalAudience */
	ns1__Duration *Duration;	/* optional element of type ns1:Duration */
	ns1__ReplyBody *InternalReply;	/* optional element of type ns1:ReplyBody */
	ns1__ReplyBody *ExternalReply;	/* optional element of type ns1:ReplyBody */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 870; } /* = unique type id SOAP_TYPE_ns1__UserOofSettings */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UserOofSettings() { ns1__UserOofSettings::soap_default(NULL); }
	virtual ~ns1__UserOofSettings() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ApprovalRequestDataType
#define SOAP_TYPE_ns1__ApprovalRequestDataType (872)
/* ns1:ApprovalRequestDataType */
class SOAP_CMAC ns1__ApprovalRequestDataType
{
public:
	bool *IsUndecidedApprovalRequest;	/* optional element of type xsd:boolean */
	int *ApprovalDecision;	/* optional element of type xsd:int */
	std::string *ApprovalDecisionMaker;	/* optional element of type xsd:string */
	time_t *ApprovalDecisionTime;	/* optional element of type xsd:dateTime */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 872; } /* = unique type id SOAP_TYPE_ns1__ApprovalRequestDataType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ApprovalRequestDataType() { ns1__ApprovalRequestDataType::soap_default(NULL); }
	virtual ~ns1__ApprovalRequestDataType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ReminderMessageDataType
#define SOAP_TYPE_ns1__ReminderMessageDataType (873)
/* ns1:ReminderMessageDataType */
class SOAP_CMAC ns1__ReminderMessageDataType
{
public:
	std::string *ReminderText;	/* optional element of type xsd:string */
	std::string *Location;	/* optional element of type xsd:string */
	time_t *StartTime;	/* optional element of type xsd:dateTime */
	time_t *EndTime;	/* optional element of type xsd:dateTime */
	ns1__ItemIdType *AssociatedCalendarItemId;	/* optional element of type ns1:ItemIdType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 873; } /* = unique type id SOAP_TYPE_ns1__ReminderMessageDataType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ReminderMessageDataType() { ns1__ReminderMessageDataType::soap_default(NULL); }
	virtual ~ns1__ReminderMessageDataType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__VotingOptionDataType
#define SOAP_TYPE_ns1__VotingOptionDataType (874)
/* ns1:VotingOptionDataType */
class SOAP_CMAC ns1__VotingOptionDataType
{
public:
	std::string *DisplayName;	/* optional element of type xsd:string */
	enum ns1__SendPromptType *SendPrompt;	/* optional element of type ns1:SendPromptType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 874; } /* = unique type id SOAP_TYPE_ns1__VotingOptionDataType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__VotingOptionDataType() { ns1__VotingOptionDataType::soap_default(NULL); }
	virtual ~ns1__VotingOptionDataType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfVotingOptionDataType
#define SOAP_TYPE_ns1__ArrayOfVotingOptionDataType (875)
/* ns1:ArrayOfVotingOptionDataType */
class SOAP_CMAC ns1__ArrayOfVotingOptionDataType
{
public:
	std::vector<ns1__VotingOptionDataType * >VotingOptionData;	/* optional element of type ns1:VotingOptionDataType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 875; } /* = unique type id SOAP_TYPE_ns1__ArrayOfVotingOptionDataType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfVotingOptionDataType() { ns1__ArrayOfVotingOptionDataType::soap_default(NULL); }
	virtual ~ns1__ArrayOfVotingOptionDataType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__VotingInformationType
#define SOAP_TYPE_ns1__VotingInformationType (876)
/* ns1:VotingInformationType */
class SOAP_CMAC ns1__VotingInformationType
{
public:
	ns1__ArrayOfVotingOptionDataType *UserOptions;	/* optional element of type ns1:ArrayOfVotingOptionDataType */
	std::string *VotingResponse;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 876; } /* = unique type id SOAP_TYPE_ns1__VotingInformationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__VotingInformationType() { ns1__VotingInformationType::soap_default(NULL); }
	virtual ~ns1__VotingInformationType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AlternateIdBaseType
#define SOAP_TYPE_ns1__AlternateIdBaseType (877)
/* ns1:AlternateIdBaseType */
class SOAP_CMAC ns1__AlternateIdBaseType
{
public:
	enum ns1__IdFormatType Format;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 877; } /* = unique type id SOAP_TYPE_ns1__AlternateIdBaseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AlternateIdBaseType() { ns1__AlternateIdBaseType::soap_default(NULL); }
	virtual ~ns1__AlternateIdBaseType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_NonEmptyArrayOfAlternateIdsType
#define SOAP_TYPE__ns1__union_NonEmptyArrayOfAlternateIdsType (1868)
/* xsd:choice */
union _ns1__union_NonEmptyArrayOfAlternateIdsType
{
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAlternateIdsType_AlternateId	(1)
	class ns1__AlternateIdType *AlternateId;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAlternateIdsType_AlternatePublicFolderId	(2)
	class ns1__AlternatePublicFolderIdType *AlternatePublicFolderId;
#define SOAP_UNION__ns1__union_NonEmptyArrayOfAlternateIdsType_AlternatePublicFolderItemId	(3)
	class ns1__AlternatePublicFolderItemIdType *AlternatePublicFolderItemId;
};
#endif

#ifndef SOAP_TYPE___ns1__union_NonEmptyArrayOfAlternateIdsType
#define SOAP_TYPE___ns1__union_NonEmptyArrayOfAlternateIdsType (1864)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_NonEmptyArrayOfAlternateIdsType
{
public:
	int __union_NonEmptyArrayOfAlternateIdsType;	/* union discriminant (of union defined below) */
	union _ns1__union_NonEmptyArrayOfAlternateIdsType union_NonEmptyArrayOfAlternateIdsType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1864; } /* = unique type id SOAP_TYPE___ns1__union_NonEmptyArrayOfAlternateIdsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_NonEmptyArrayOfAlternateIdsType() { __ns1__union_NonEmptyArrayOfAlternateIdsType::soap_default(NULL); }
	virtual ~__ns1__union_NonEmptyArrayOfAlternateIdsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfAlternateIdsType
#define SOAP_TYPE_ns1__NonEmptyArrayOfAlternateIdsType (881)
/* ns1:NonEmptyArrayOfAlternateIdsType */
class SOAP_CMAC ns1__NonEmptyArrayOfAlternateIdsType
{
public:
	int __size_NonEmptyArrayOfAlternateIdsType;	/* sequence of elements <-union-NonEmptyArrayOfAlternateIdsType> */
	__ns1__union_NonEmptyArrayOfAlternateIdsType *__union_NonEmptyArrayOfAlternateIdsType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 881; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfAlternateIdsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfAlternateIdsType() { ns1__NonEmptyArrayOfAlternateIdsType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfAlternateIdsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UserIdType
#define SOAP_TYPE_ns1__UserIdType (882)
/* ns1:UserIdType */
class SOAP_CMAC ns1__UserIdType
{
public:
	std::string *SID;	/* optional element of type xsd:string */
	std::string *PrimarySmtpAddress;	/* optional element of type xsd:string */
	std::string *DisplayName;	/* optional element of type xsd:string */
	enum ns1__DistinguishedUserType *DistinguishedUser;	/* optional element of type ns1:DistinguishedUserType */
	std::string *ExternalUserIdentity;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 882; } /* = unique type id SOAP_TYPE_ns1__UserIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UserIdType() { ns1__UserIdType::soap_default(NULL); }
	virtual ~ns1__UserIdType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfPermissionsType
#define SOAP_TYPE__ns1__union_ArrayOfPermissionsType (1873)
/* xsd:choice */
union _ns1__union_ArrayOfPermissionsType
{
#define SOAP_UNION__ns1__union_ArrayOfPermissionsType_Permission	(1)
	class ns1__PermissionType *Permission;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfPermissionsType
#define SOAP_TYPE___ns1__union_ArrayOfPermissionsType (1871)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfPermissionsType
{
public:
	int __union_ArrayOfPermissionsType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfPermissionsType union_ArrayOfPermissionsType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1871; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfPermissionsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfPermissionsType() { __ns1__union_ArrayOfPermissionsType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfPermissionsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfPermissionsType
#define SOAP_TYPE_ns1__ArrayOfPermissionsType (883)
/* ns1:ArrayOfPermissionsType */
class SOAP_CMAC ns1__ArrayOfPermissionsType
{
public:
	int __size_ArrayOfPermissionsType;	/* sequence of elements <-union-ArrayOfPermissionsType> */
	__ns1__union_ArrayOfPermissionsType *__union_ArrayOfPermissionsType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 883; } /* = unique type id SOAP_TYPE_ns1__ArrayOfPermissionsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfPermissionsType() { ns1__ArrayOfPermissionsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfPermissionsType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfCalendarPermissionsType
#define SOAP_TYPE__ns1__union_ArrayOfCalendarPermissionsType (1877)
/* xsd:choice */
union _ns1__union_ArrayOfCalendarPermissionsType
{
#define SOAP_UNION__ns1__union_ArrayOfCalendarPermissionsType_CalendarPermission	(1)
	class ns1__CalendarPermissionType *CalendarPermission;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfCalendarPermissionsType
#define SOAP_TYPE___ns1__union_ArrayOfCalendarPermissionsType (1875)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfCalendarPermissionsType
{
public:
	int __union_ArrayOfCalendarPermissionsType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfCalendarPermissionsType union_ArrayOfCalendarPermissionsType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1875; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfCalendarPermissionsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfCalendarPermissionsType() { __ns1__union_ArrayOfCalendarPermissionsType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfCalendarPermissionsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfCalendarPermissionsType
#define SOAP_TYPE_ns1__ArrayOfCalendarPermissionsType (884)
/* ns1:ArrayOfCalendarPermissionsType */
class SOAP_CMAC ns1__ArrayOfCalendarPermissionsType
{
public:
	int __size_ArrayOfCalendarPermissionsType;	/* sequence of elements <-union-ArrayOfCalendarPermissionsType> */
	__ns1__union_ArrayOfCalendarPermissionsType *__union_ArrayOfCalendarPermissionsType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 884; } /* = unique type id SOAP_TYPE_ns1__ArrayOfCalendarPermissionsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfCalendarPermissionsType() { ns1__ArrayOfCalendarPermissionsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfCalendarPermissionsType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfUnknownEntriesType
#define SOAP_TYPE__ns1__union_ArrayOfUnknownEntriesType (1880)
/* xsd:choice */
union _ns1__union_ArrayOfUnknownEntriesType
{
#define SOAP_UNION__ns1__union_ArrayOfUnknownEntriesType_UnknownEntry	(1)
	std::string *UnknownEntry;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfUnknownEntriesType
#define SOAP_TYPE___ns1__union_ArrayOfUnknownEntriesType (1879)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfUnknownEntriesType
{
public:
	int __union_ArrayOfUnknownEntriesType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfUnknownEntriesType union_ArrayOfUnknownEntriesType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1879; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfUnknownEntriesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfUnknownEntriesType() { __ns1__union_ArrayOfUnknownEntriesType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfUnknownEntriesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfUnknownEntriesType
#define SOAP_TYPE_ns1__ArrayOfUnknownEntriesType (885)
/* ns1:ArrayOfUnknownEntriesType */
class SOAP_CMAC ns1__ArrayOfUnknownEntriesType
{
public:
	int __size_ArrayOfUnknownEntriesType;	/* sequence of elements <-union-ArrayOfUnknownEntriesType> */
	__ns1__union_ArrayOfUnknownEntriesType *__union_ArrayOfUnknownEntriesType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 885; } /* = unique type id SOAP_TYPE_ns1__ArrayOfUnknownEntriesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfUnknownEntriesType() { ns1__ArrayOfUnknownEntriesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfUnknownEntriesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__BasePermissionType
#define SOAP_TYPE_ns1__BasePermissionType (886)
/* ns1:BasePermissionType */
class SOAP_CMAC ns1__BasePermissionType
{
public:
	ns1__UserIdType *UserId;	/* required element of type ns1:UserIdType */
	bool *CanCreateItems;	/* optional element of type xsd:boolean */
	bool *CanCreateSubFolders;	/* optional element of type xsd:boolean */
	bool *IsFolderOwner;	/* optional element of type xsd:boolean */
	bool *IsFolderVisible;	/* optional element of type xsd:boolean */
	bool *IsFolderContact;	/* optional element of type xsd:boolean */
	enum ns1__PermissionActionType *EditItems;	/* optional element of type ns1:PermissionActionType */
	enum ns1__PermissionActionType *DeleteItems;	/* optional element of type ns1:PermissionActionType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 886; } /* = unique type id SOAP_TYPE_ns1__BasePermissionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__BasePermissionType() { ns1__BasePermissionType::soap_default(NULL); }
	virtual ~ns1__BasePermissionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PermissionSetType
#define SOAP_TYPE_ns1__PermissionSetType (889)
/* ns1:PermissionSetType */
class SOAP_CMAC ns1__PermissionSetType
{
public:
	ns1__ArrayOfPermissionsType *Permissions;	/* required element of type ns1:ArrayOfPermissionsType */
	ns1__ArrayOfUnknownEntriesType *UnknownEntries;	/* optional element of type ns1:ArrayOfUnknownEntriesType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 889; } /* = unique type id SOAP_TYPE_ns1__PermissionSetType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PermissionSetType() { ns1__PermissionSetType::soap_default(NULL); }
	virtual ~ns1__PermissionSetType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CalendarPermissionSetType
#define SOAP_TYPE_ns1__CalendarPermissionSetType (890)
/* ns1:CalendarPermissionSetType */
class SOAP_CMAC ns1__CalendarPermissionSetType
{
public:
	ns1__ArrayOfCalendarPermissionsType *CalendarPermissions;	/* required element of type ns1:ArrayOfCalendarPermissionsType */
	ns1__ArrayOfUnknownEntriesType *UnknownEntries;	/* optional element of type ns1:ArrayOfUnknownEntriesType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 890; } /* = unique type id SOAP_TYPE_ns1__CalendarPermissionSetType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CalendarPermissionSetType() { ns1__CalendarPermissionSetType::soap_default(NULL); }
	virtual ~ns1__CalendarPermissionSetType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__EffectiveRightsType
#define SOAP_TYPE_ns1__EffectiveRightsType (891)
/* ns1:EffectiveRightsType */
class SOAP_CMAC ns1__EffectiveRightsType
{
public:
	bool CreateAssociated;	/* required element of type xsd:boolean */
	bool CreateContents;	/* required element of type xsd:boolean */
	bool CreateHierarchy;	/* required element of type xsd:boolean */
	bool Delete;	/* required element of type xsd:boolean */
	bool Modify;	/* required element of type xsd:boolean */
	bool Read;	/* required element of type xsd:boolean */
	bool *ViewPrivateItems;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 891; } /* = unique type id SOAP_TYPE_ns1__EffectiveRightsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__EffectiveRightsType() { ns1__EffectiveRightsType::soap_default(NULL); }
	virtual ~ns1__EffectiveRightsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfDelegateUserType
#define SOAP_TYPE_ns1__ArrayOfDelegateUserType (892)
/* ns1:ArrayOfDelegateUserType */
class SOAP_CMAC ns1__ArrayOfDelegateUserType
{
public:
	std::vector<class ns1__DelegateUserType * >DelegateUser;	/* required element of type ns1:DelegateUserType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 892; } /* = unique type id SOAP_TYPE_ns1__ArrayOfDelegateUserType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfDelegateUserType() { ns1__ArrayOfDelegateUserType::soap_default(NULL); }
	virtual ~ns1__ArrayOfDelegateUserType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfUserIdType
#define SOAP_TYPE_ns1__ArrayOfUserIdType (893)
/* ns1:ArrayOfUserIdType */
class SOAP_CMAC ns1__ArrayOfUserIdType
{
public:
	std::vector<ns1__UserIdType * >UserId;	/* required element of type ns1:UserIdType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 893; } /* = unique type id SOAP_TYPE_ns1__ArrayOfUserIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfUserIdType() { ns1__ArrayOfUserIdType::soap_default(NULL); }
	virtual ~ns1__ArrayOfUserIdType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__DelegateUserType
#define SOAP_TYPE_ns1__DelegateUserType (894)
/* ns1:DelegateUserType */
class SOAP_CMAC ns1__DelegateUserType
{
public:
	ns1__UserIdType *UserId;	/* required element of type ns1:UserIdType */
	class ns1__DelegatePermissionsType *DelegatePermissions;	/* optional element of type ns1:DelegatePermissionsType */
	bool *ReceiveCopiesOfMeetingMessages;	/* optional element of type xsd:boolean */
	bool *ViewPrivateItems;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 894; } /* = unique type id SOAP_TYPE_ns1__DelegateUserType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__DelegateUserType() { ns1__DelegateUserType::soap_default(NULL); }
	virtual ~ns1__DelegateUserType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__DelegatePermissionsType
#define SOAP_TYPE_ns1__DelegatePermissionsType (895)
/* ns1:DelegatePermissionsType */
class SOAP_CMAC ns1__DelegatePermissionsType
{
public:
	enum ns1__DelegateFolderPermissionLevelType *CalendarFolderPermissionLevel;	/* optional element of type ns1:DelegateFolderPermissionLevelType */
	enum ns1__DelegateFolderPermissionLevelType *TasksFolderPermissionLevel;	/* optional element of type ns1:DelegateFolderPermissionLevelType */
	enum ns1__DelegateFolderPermissionLevelType *InboxFolderPermissionLevel;	/* optional element of type ns1:DelegateFolderPermissionLevelType */
	enum ns1__DelegateFolderPermissionLevelType *ContactsFolderPermissionLevel;	/* optional element of type ns1:DelegateFolderPermissionLevelType */
	enum ns1__DelegateFolderPermissionLevelType *NotesFolderPermissionLevel;	/* optional element of type ns1:DelegateFolderPermissionLevelType */
	enum ns1__DelegateFolderPermissionLevelType *JournalFolderPermissionLevel;	/* optional element of type ns1:DelegateFolderPermissionLevelType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 895; } /* = unique type id SOAP_TYPE_ns1__DelegatePermissionsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__DelegatePermissionsType() { ns1__DelegatePermissionsType::soap_default(NULL); }
	virtual ~ns1__DelegatePermissionsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ConflictResultsType
#define SOAP_TYPE_ns1__ConflictResultsType (896)
/* ns1:ConflictResultsType */
class SOAP_CMAC ns1__ConflictResultsType
{
public:
	int Count;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 896; } /* = unique type id SOAP_TYPE_ns1__ConflictResultsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ConflictResultsType() { ns1__ConflictResultsType::soap_default(NULL); }
	virtual ~ns1__ConflictResultsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__OutOfOfficeMailTip
#define SOAP_TYPE_ns1__OutOfOfficeMailTip (897)
/* ns1:OutOfOfficeMailTip */
class SOAP_CMAC ns1__OutOfOfficeMailTip
{
public:
	ns1__ReplyBody *ReplyBody;	/* required element of type ns1:ReplyBody */
	ns1__Duration *Duration;	/* optional element of type ns1:Duration */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 897; } /* = unique type id SOAP_TYPE_ns1__OutOfOfficeMailTip */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__OutOfOfficeMailTip() { ns1__OutOfOfficeMailTip::soap_default(NULL); }
	virtual ~ns1__OutOfOfficeMailTip() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SmtpDomainList
#define SOAP_TYPE_ns1__SmtpDomainList (898)
/* ns1:SmtpDomainList */
class SOAP_CMAC ns1__SmtpDomainList
{
public:
	std::vector<class ns1__SmtpDomain * >Domain;	/* optional element of type ns1:SmtpDomain */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 898; } /* = unique type id SOAP_TYPE_ns1__SmtpDomainList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SmtpDomainList() { ns1__SmtpDomainList::soap_default(NULL); }
	virtual ~ns1__SmtpDomainList() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SmtpDomain
#define SOAP_TYPE_ns1__SmtpDomain (899)
/* ns1:SmtpDomain */
class SOAP_CMAC ns1__SmtpDomain
{
public:
	std::string Name;	/* required attribute */
	bool *IncludeSubdomains;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 899; } /* = unique type id SOAP_TYPE_ns1__SmtpDomain */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SmtpDomain() { ns1__SmtpDomain::soap_default(NULL); }
	virtual ~ns1__SmtpDomain() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MailTips
#define SOAP_TYPE_ns1__MailTips (900)
/* ns1:MailTips */
class SOAP_CMAC ns1__MailTips
{
public:
	ns1__EmailAddressType *RecipientAddress;	/* required element of type ns1:EmailAddressType */
	enum ns1__MailTipTypes PendingMailTips;	/* required element of type ns1:MailTipTypes */
	ns1__OutOfOfficeMailTip *OutOfOffice;	/* optional element of type ns1:OutOfOfficeMailTip */
	bool *MailboxFull;	/* optional element of type xsd:boolean */
	std::string *CustomMailTip;	/* optional element of type xsd:string */
	int *TotalMemberCount;	/* optional element of type xsd:int */
	int *ExternalMemberCount;	/* optional element of type xsd:int */
	int *MaxMessageSize;	/* optional element of type xsd:int */
	bool *DeliveryRestricted;	/* optional element of type xsd:boolean */
	bool *IsModerated;	/* optional element of type xsd:boolean */
	bool *InvalidRecipient;	/* optional element of type xsd:boolean */
	int *Scope;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 900; } /* = unique type id SOAP_TYPE_ns1__MailTips */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MailTips() { ns1__MailTips::soap_default(NULL); }
	virtual ~ns1__MailTips() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ServiceConfiguration
#define SOAP_TYPE_ns1__ServiceConfiguration (901)
/* ns1:ServiceConfiguration */
class SOAP_CMAC ns1__ServiceConfiguration
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 901; } /* = unique type id SOAP_TYPE_ns1__ServiceConfiguration */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ServiceConfiguration() { ns1__ServiceConfiguration::soap_default(NULL); }
	virtual ~ns1__ServiceConfiguration() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ConfigurationRequestDetailsType
#define SOAP_TYPE__ns1__union_ConfigurationRequestDetailsType (1896)
/* xsd:choice */
union _ns1__union_ConfigurationRequestDetailsType
{
#define SOAP_UNION__ns1__union_ConfigurationRequestDetailsType___any	(1)
	std::vector<char * >*__any;
};
#endif

#ifndef SOAP_TYPE_ns1__ConfigurationRequestDetailsType
#define SOAP_TYPE_ns1__ConfigurationRequestDetailsType (904)
/* Choice: */
class SOAP_CMAC ns1__ConfigurationRequestDetailsType
{
public:
	int __union_ConfigurationRequestDetailsType;	/* union discriminant (of union defined below) */
	union _ns1__union_ConfigurationRequestDetailsType union_ConfigurationRequestDetailsType;	/* required element of type xsd:choice */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 904; } /* = unique type id SOAP_TYPE_ns1__ConfigurationRequestDetailsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ConfigurationRequestDetailsType() { ns1__ConfigurationRequestDetailsType::soap_default(NULL); }
	virtual ~ns1__ConfigurationRequestDetailsType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfSmtpAddressType
#define SOAP_TYPE__ns1__union_ArrayOfSmtpAddressType (1899)
/* xsd:choice */
union _ns1__union_ArrayOfSmtpAddressType
{
#define SOAP_UNION__ns1__union_ArrayOfSmtpAddressType_SmtpAddress	(1)
	std::string *SmtpAddress;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfSmtpAddressType
#define SOAP_TYPE___ns1__union_ArrayOfSmtpAddressType (1897)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfSmtpAddressType
{
public:
	int __union_ArrayOfSmtpAddressType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfSmtpAddressType union_ArrayOfSmtpAddressType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1897; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfSmtpAddressType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfSmtpAddressType() { __ns1__union_ArrayOfSmtpAddressType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfSmtpAddressType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfSmtpAddressType
#define SOAP_TYPE_ns1__ArrayOfSmtpAddressType (905)
/* ns1:ArrayOfSmtpAddressType */
class SOAP_CMAC ns1__ArrayOfSmtpAddressType
{
public:
	int __size_ArrayOfSmtpAddressType;	/* sequence of elements <-union-ArrayOfSmtpAddressType> */
	__ns1__union_ArrayOfSmtpAddressType *__union_ArrayOfSmtpAddressType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 905; } /* = unique type id SOAP_TYPE_ns1__ArrayOfSmtpAddressType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfSmtpAddressType() { ns1__ArrayOfSmtpAddressType::soap_default(NULL); }
	virtual ~ns1__ArrayOfSmtpAddressType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfEncryptedSharedFolderDataType
#define SOAP_TYPE__ns1__union_ArrayOfEncryptedSharedFolderDataType (1903)
/* xsd:choice */
union _ns1__union_ArrayOfEncryptedSharedFolderDataType
{
#define SOAP_UNION__ns1__union_ArrayOfEncryptedSharedFolderDataType_EncryptedSharedFolderData	(1)
	class ns1__EncryptedSharedFolderDataType *EncryptedSharedFolderData;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfEncryptedSharedFolderDataType
#define SOAP_TYPE___ns1__union_ArrayOfEncryptedSharedFolderDataType (1901)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfEncryptedSharedFolderDataType
{
public:
	int __union_ArrayOfEncryptedSharedFolderDataType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfEncryptedSharedFolderDataType union_ArrayOfEncryptedSharedFolderDataType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1901; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfEncryptedSharedFolderDataType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfEncryptedSharedFolderDataType() { __ns1__union_ArrayOfEncryptedSharedFolderDataType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfEncryptedSharedFolderDataType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfEncryptedSharedFolderDataType
#define SOAP_TYPE_ns1__ArrayOfEncryptedSharedFolderDataType (906)
/* ns1:ArrayOfEncryptedSharedFolderDataType */
class SOAP_CMAC ns1__ArrayOfEncryptedSharedFolderDataType
{
public:
	int __size_ArrayOfEncryptedSharedFolderDataType;	/* sequence of elements <-union-ArrayOfEncryptedSharedFolderDataType> */
	__ns1__union_ArrayOfEncryptedSharedFolderDataType *__union_ArrayOfEncryptedSharedFolderDataType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 906; } /* = unique type id SOAP_TYPE_ns1__ArrayOfEncryptedSharedFolderDataType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfEncryptedSharedFolderDataType() { ns1__ArrayOfEncryptedSharedFolderDataType::soap_default(NULL); }
	virtual ~ns1__ArrayOfEncryptedSharedFolderDataType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__EncryptedSharedFolderDataType
#define SOAP_TYPE_ns1__EncryptedSharedFolderDataType (907)
/* ns1:EncryptedSharedFolderDataType */
class SOAP_CMAC ns1__EncryptedSharedFolderDataType
{
public:
	class ns1__EncryptedDataContainerType *Token;	/* required element of type ns1:EncryptedDataContainerType */
	ns1__EncryptedDataContainerType *Data;	/* required element of type ns1:EncryptedDataContainerType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 907; } /* = unique type id SOAP_TYPE_ns1__EncryptedSharedFolderDataType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__EncryptedSharedFolderDataType() { ns1__EncryptedSharedFolderDataType::soap_default(NULL); }
	virtual ~ns1__EncryptedSharedFolderDataType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__EncryptedDataContainerType
#define SOAP_TYPE_ns1__EncryptedDataContainerType (908)
/* ns1:EncryptedDataContainerType */
class SOAP_CMAC ns1__EncryptedDataContainerType
{
public:
	char *__any;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 908; } /* = unique type id SOAP_TYPE_ns1__EncryptedDataContainerType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__EncryptedDataContainerType() { ns1__EncryptedDataContainerType::soap_default(NULL); }
	virtual ~ns1__EncryptedDataContainerType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfInvalidRecipientsType
#define SOAP_TYPE__ns1__union_ArrayOfInvalidRecipientsType (1908)
/* xsd:choice */
union _ns1__union_ArrayOfInvalidRecipientsType
{
#define SOAP_UNION__ns1__union_ArrayOfInvalidRecipientsType_InvalidRecipient	(1)
	class ns1__InvalidRecipientType *InvalidRecipient;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfInvalidRecipientsType
#define SOAP_TYPE___ns1__union_ArrayOfInvalidRecipientsType (1906)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfInvalidRecipientsType
{
public:
	int __union_ArrayOfInvalidRecipientsType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfInvalidRecipientsType union_ArrayOfInvalidRecipientsType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1906; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfInvalidRecipientsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfInvalidRecipientsType() { __ns1__union_ArrayOfInvalidRecipientsType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfInvalidRecipientsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfInvalidRecipientsType
#define SOAP_TYPE_ns1__ArrayOfInvalidRecipientsType (909)
/* ns1:ArrayOfInvalidRecipientsType */
class SOAP_CMAC ns1__ArrayOfInvalidRecipientsType
{
public:
	int __size_ArrayOfInvalidRecipientsType;	/* sequence of elements <-union-ArrayOfInvalidRecipientsType> */
	__ns1__union_ArrayOfInvalidRecipientsType *__union_ArrayOfInvalidRecipientsType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 909; } /* = unique type id SOAP_TYPE_ns1__ArrayOfInvalidRecipientsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfInvalidRecipientsType() { ns1__ArrayOfInvalidRecipientsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfInvalidRecipientsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__InvalidRecipientType
#define SOAP_TYPE_ns1__InvalidRecipientType (910)
/* ns1:InvalidRecipientType */
class SOAP_CMAC ns1__InvalidRecipientType
{
public:
	std::string SmtpAddress;	/* required element of type ns1:NonEmptyStringType */
	enum ns1__InvalidRecipientResponseCodeType ResponseCode;	/* required element of type ns1:InvalidRecipientResponseCodeType */
	std::string *MessageText;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 910; } /* = unique type id SOAP_TYPE_ns1__InvalidRecipientType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__InvalidRecipientType() { ns1__InvalidRecipientType::soap_default(NULL); }
	virtual ~ns1__InvalidRecipientType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PhoneCallIdType
#define SOAP_TYPE_ns1__PhoneCallIdType (912)
/* ns1:PhoneCallIdType */
class SOAP_CMAC ns1__PhoneCallIdType
{
public:
	std::string Id;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 912; } /* = unique type id SOAP_TYPE_ns1__PhoneCallIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PhoneCallIdType() { ns1__PhoneCallIdType::soap_default(NULL); }
	virtual ~ns1__PhoneCallIdType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PhoneCallInformationType
#define SOAP_TYPE_ns1__PhoneCallInformationType (913)
/* ns1:PhoneCallInformationType */
class SOAP_CMAC ns1__PhoneCallInformationType
{
public:
	enum ns1__PhoneCallStateType PhoneCallState;	/* required element of type ns1:PhoneCallStateType */
	enum ns1__ConnectionFailureCauseType ConnectionFailureCause;	/* required element of type ns1:ConnectionFailureCauseType */
	std::string *SIPResponseText;	/* optional element of type xsd:string */
	int *SIPResponseCode;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 913; } /* = unique type id SOAP_TYPE_ns1__PhoneCallInformationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PhoneCallInformationType() { ns1__PhoneCallInformationType::soap_default(NULL); }
	virtual ~ns1__PhoneCallInformationType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UserConfigurationDictionaryObjectType
#define SOAP_TYPE_ns1__UserConfigurationDictionaryObjectType (915)
/* ns1:UserConfigurationDictionaryObjectType */
class SOAP_CMAC ns1__UserConfigurationDictionaryObjectType
{
public:
	enum ns1__UserConfigurationDictionaryObjectTypesType Type;	/* required element of type ns1:UserConfigurationDictionaryObjectTypesType */
	std::vector<std::string >Value;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 915; } /* = unique type id SOAP_TYPE_ns1__UserConfigurationDictionaryObjectType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UserConfigurationDictionaryObjectType() { ns1__UserConfigurationDictionaryObjectType::soap_default(NULL); }
	virtual ~ns1__UserConfigurationDictionaryObjectType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UserConfigurationDictionaryEntryType
#define SOAP_TYPE_ns1__UserConfigurationDictionaryEntryType (916)
/* ns1:UserConfigurationDictionaryEntryType */
class SOAP_CMAC ns1__UserConfigurationDictionaryEntryType
{
public:
	ns1__UserConfigurationDictionaryObjectType *DictionaryKey;	/* required element of type ns1:UserConfigurationDictionaryObjectType */
	ns1__UserConfigurationDictionaryObjectType *DictionaryValue;	/* required element of type ns1:UserConfigurationDictionaryObjectType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 916; } /* = unique type id SOAP_TYPE_ns1__UserConfigurationDictionaryEntryType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UserConfigurationDictionaryEntryType() { ns1__UserConfigurationDictionaryEntryType::soap_default(NULL); }
	virtual ~ns1__UserConfigurationDictionaryEntryType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UserConfigurationDictionaryType
#define SOAP_TYPE_ns1__UserConfigurationDictionaryType (917)
/* ns1:UserConfigurationDictionaryType */
class SOAP_CMAC ns1__UserConfigurationDictionaryType
{
public:
	std::vector<ns1__UserConfigurationDictionaryEntryType * >DictionaryEntry;	/* optional element of type ns1:UserConfigurationDictionaryEntryType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 917; } /* = unique type id SOAP_TYPE_ns1__UserConfigurationDictionaryType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UserConfigurationDictionaryType() { ns1__UserConfigurationDictionaryType::soap_default(NULL); }
	virtual ~ns1__UserConfigurationDictionaryType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UserConfigurationType
#define SOAP_TYPE_ns1__UserConfigurationType (918)
/* ns1:UserConfigurationType */
class SOAP_CMAC ns1__UserConfigurationType
{
public:
	class ns1__UserConfigurationNameType *UserConfigurationName;	/* required element of type ns1:UserConfigurationNameType */
	ns1__ItemIdType *ItemId;	/* optional element of type ns1:ItemIdType */
	ns1__UserConfigurationDictionaryType *Dictionary;	/* optional element of type ns1:UserConfigurationDictionaryType */
	xsd__base64Binary *XmlData;	/* optional element of type xsd:base64Binary */
	xsd__base64Binary *BinaryData;	/* optional element of type xsd:base64Binary */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 918; } /* = unique type id SOAP_TYPE_ns1__UserConfigurationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UserConfigurationType() { ns1__UserConfigurationType::soap_default(NULL); }
	virtual ~ns1__UserConfigurationType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfProtectionRulesType
#define SOAP_TYPE_ns1__ArrayOfProtectionRulesType (920)
/* ns1:ArrayOfProtectionRulesType */
class SOAP_CMAC ns1__ArrayOfProtectionRulesType
{
public:
	std::vector<class ns1__ProtectionRuleType * >Rule;	/* optional element of type ns1:ProtectionRuleType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 920; } /* = unique type id SOAP_TYPE_ns1__ArrayOfProtectionRulesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfProtectionRulesType() { ns1__ArrayOfProtectionRulesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfProtectionRulesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ProtectionRuleType
#define SOAP_TYPE_ns1__ProtectionRuleType (921)
/* ns1:ProtectionRuleType */
class SOAP_CMAC ns1__ProtectionRuleType
{
public:
	class ns1__ProtectionRuleConditionType *Condition;	/* required element of type ns1:ProtectionRuleConditionType */
	class ns1__ProtectionRuleActionType *Action;	/* required element of type ns1:ProtectionRuleActionType */
	std::string Name;	/* required attribute */
	bool UserOverridable;	/* required attribute */
	int Priority;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 921; } /* = unique type id SOAP_TYPE_ns1__ProtectionRuleType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ProtectionRuleType() { ns1__ProtectionRuleType::soap_default(NULL); }
	virtual ~ns1__ProtectionRuleType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ProtectionRuleConditionType
#define SOAP_TYPE__ns1__union_ProtectionRuleConditionType (1924)
/* xsd:choice */
union _ns1__union_ProtectionRuleConditionType
{
#define SOAP_UNION__ns1__union_ProtectionRuleConditionType_AllInternal	(1)
	std::string *AllInternal;
#define SOAP_UNION__ns1__union_ProtectionRuleConditionType_And	(2)
	class ns1__ProtectionRuleAndType *And;
#define SOAP_UNION__ns1__union_ProtectionRuleConditionType_RecipientIs	(3)
	class ns1__ProtectionRuleRecipientIsType *RecipientIs;
#define SOAP_UNION__ns1__union_ProtectionRuleConditionType_SenderDepartments	(4)
	class ns1__ProtectionRuleSenderDepartmentsType *SenderDepartments;
#define SOAP_UNION__ns1__union_ProtectionRuleConditionType_True	(5)
	std::string *True;
};
#endif

#ifndef SOAP_TYPE_ns1__ProtectionRuleConditionType
#define SOAP_TYPE_ns1__ProtectionRuleConditionType (922)
/* Choice: */
class SOAP_CMAC ns1__ProtectionRuleConditionType
{
public:
	int __union_ProtectionRuleConditionType;	/* union discriminant (of union defined below) */
	union _ns1__union_ProtectionRuleConditionType union_ProtectionRuleConditionType;	/* required element of type xsd:choice */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 922; } /* = unique type id SOAP_TYPE_ns1__ProtectionRuleConditionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ProtectionRuleConditionType() { ns1__ProtectionRuleConditionType::soap_default(NULL); }
	virtual ~ns1__ProtectionRuleConditionType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ProtectionRuleAndType
#define SOAP_TYPE__ns1__union_ProtectionRuleAndType (1926)
/* xsd:choice */
union _ns1__union_ProtectionRuleAndType
{
#define SOAP_UNION__ns1__union_ProtectionRuleAndType_AllInternal	(1)
	std::string *AllInternal;
#define SOAP_UNION__ns1__union_ProtectionRuleAndType_And	(2)
	ns1__ProtectionRuleAndType *And;
#define SOAP_UNION__ns1__union_ProtectionRuleAndType_RecipientIs	(3)
	ns1__ProtectionRuleRecipientIsType *RecipientIs;
#define SOAP_UNION__ns1__union_ProtectionRuleAndType_SenderDepartments	(4)
	ns1__ProtectionRuleSenderDepartmentsType *SenderDepartments;
#define SOAP_UNION__ns1__union_ProtectionRuleAndType_True	(5)
	std::string *True;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ProtectionRuleAndType
#define SOAP_TYPE___ns1__union_ProtectionRuleAndType (1925)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ProtectionRuleAndType
{
public:
	int __union_ProtectionRuleAndType;	/* union discriminant (of union defined below) */
	union _ns1__union_ProtectionRuleAndType union_ProtectionRuleAndType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1925; } /* = unique type id SOAP_TYPE___ns1__union_ProtectionRuleAndType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ProtectionRuleAndType() { __ns1__union_ProtectionRuleAndType::soap_default(NULL); }
	virtual ~__ns1__union_ProtectionRuleAndType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ProtectionRuleAndType
#define SOAP_TYPE_ns1__ProtectionRuleAndType (923)
/* ns1:ProtectionRuleAndType */
class SOAP_CMAC ns1__ProtectionRuleAndType
{
public:
	int __size_ProtectionRuleAndType;	/* sequence of elements <-union-ProtectionRuleAndType> */
	__ns1__union_ProtectionRuleAndType *__union_ProtectionRuleAndType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 923; } /* = unique type id SOAP_TYPE_ns1__ProtectionRuleAndType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ProtectionRuleAndType() { ns1__ProtectionRuleAndType::soap_default(NULL); }
	virtual ~ns1__ProtectionRuleAndType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ProtectionRuleRecipientIsType
#define SOAP_TYPE_ns1__ProtectionRuleRecipientIsType (924)
/* ns1:ProtectionRuleRecipientIsType */
class SOAP_CMAC ns1__ProtectionRuleRecipientIsType
{
public:
	std::vector<std::string >Value;	/* required element of type ns1:ProtectionRuleValueType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 924; } /* = unique type id SOAP_TYPE_ns1__ProtectionRuleRecipientIsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ProtectionRuleRecipientIsType() { ns1__ProtectionRuleRecipientIsType::soap_default(NULL); }
	virtual ~ns1__ProtectionRuleRecipientIsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ProtectionRuleSenderDepartmentsType
#define SOAP_TYPE_ns1__ProtectionRuleSenderDepartmentsType (925)
/* ns1:ProtectionRuleSenderDepartmentsType */
class SOAP_CMAC ns1__ProtectionRuleSenderDepartmentsType
{
public:
	std::vector<std::string >Value;	/* required element of type ns1:ProtectionRuleValueType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 925; } /* = unique type id SOAP_TYPE_ns1__ProtectionRuleSenderDepartmentsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ProtectionRuleSenderDepartmentsType() { ns1__ProtectionRuleSenderDepartmentsType::soap_default(NULL); }
	virtual ~ns1__ProtectionRuleSenderDepartmentsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ProtectionRuleActionType
#define SOAP_TYPE_ns1__ProtectionRuleActionType (926)
/* ns1:ProtectionRuleActionType */
class SOAP_CMAC ns1__ProtectionRuleActionType
{
public:
	std::vector<class ns1__ProtectionRuleArgumentType * >Argument;	/* optional element of type ns1:ProtectionRuleArgumentType */
	enum ns1__ProtectionRuleActionKindType Name;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 926; } /* = unique type id SOAP_TYPE_ns1__ProtectionRuleActionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ProtectionRuleActionType() { ns1__ProtectionRuleActionType::soap_default(NULL); }
	virtual ~ns1__ProtectionRuleActionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ProtectionRuleArgumentType
#define SOAP_TYPE_ns1__ProtectionRuleArgumentType (927)
/* ns1:ProtectionRuleArgumentType */
class SOAP_CMAC ns1__ProtectionRuleArgumentType
{
public:
	std::string Value;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 927; } /* = unique type id SOAP_TYPE_ns1__ProtectionRuleArgumentType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ProtectionRuleArgumentType() { ns1__ProtectionRuleArgumentType::soap_default(NULL); }
	virtual ~ns1__ProtectionRuleArgumentType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PolicyNudgeRulesServiceConfiguration
#define SOAP_TYPE_ns1__PolicyNudgeRulesServiceConfiguration (928)
/* ns1:PolicyNudgeRulesServiceConfiguration */
class SOAP_CMAC ns1__PolicyNudgeRulesServiceConfiguration
{
public:
	std::vector<char * >__any;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 928; } /* = unique type id SOAP_TYPE_ns1__PolicyNudgeRulesServiceConfiguration */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PolicyNudgeRulesServiceConfiguration() { ns1__PolicyNudgeRulesServiceConfiguration::soap_default(NULL); }
	virtual ~ns1__PolicyNudgeRulesServiceConfiguration() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfFolderIdType
#define SOAP_TYPE__ns1__union_ArrayOfFolderIdType (1932)
/* xsd:choice */
union _ns1__union_ArrayOfFolderIdType
{
#define SOAP_UNION__ns1__union_ArrayOfFolderIdType_FolderId	(1)
	ns1__FolderIdType *FolderId;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfFolderIdType
#define SOAP_TYPE___ns1__union_ArrayOfFolderIdType (1931)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfFolderIdType
{
public:
	int __union_ArrayOfFolderIdType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfFolderIdType union_ArrayOfFolderIdType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1931; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfFolderIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfFolderIdType() { __ns1__union_ArrayOfFolderIdType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfFolderIdType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfFolderIdType
#define SOAP_TYPE_ns1__ArrayOfFolderIdType (929)
/* ns1:ArrayOfFolderIdType */
class SOAP_CMAC ns1__ArrayOfFolderIdType
{
public:
	int __size_ArrayOfFolderIdType;	/* sequence of elements <-union-ArrayOfFolderIdType> */
	__ns1__union_ArrayOfFolderIdType *__union_ArrayOfFolderIdType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 929; } /* = unique type id SOAP_TYPE_ns1__ArrayOfFolderIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfFolderIdType() { ns1__ArrayOfFolderIdType::soap_default(NULL); }
	virtual ~ns1__ArrayOfFolderIdType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__FindMessageTrackingSearchResultType
#define SOAP_TYPE_ns1__FindMessageTrackingSearchResultType (930)
/* ns1:FindMessageTrackingSearchResultType */
class SOAP_CMAC ns1__FindMessageTrackingSearchResultType
{
public:
	std::string Subject;	/* required element of type xsd:string */
	ns1__EmailAddressType *Sender;	/* required element of type ns1:EmailAddressType */
	ns1__EmailAddressType *PurportedSender;	/* optional element of type ns1:EmailAddressType */
	ns1__ArrayOfRecipientsType *Recipients;	/* required element of type ns1:ArrayOfRecipientsType */
	time_t SubmittedTime;	/* required element of type xsd:dateTime */
	std::string MessageTrackingReportId;	/* required element of type ns1:NonEmptyStringType */
	std::string *PreviousHopServer;	/* optional element of type ns1:NonEmptyStringType */
	std::string *FirstHopServer;	/* optional element of type ns1:NonEmptyStringType */
	class ns1__ArrayOfTrackingPropertiesType *Properties;	/* optional element of type ns1:ArrayOfTrackingPropertiesType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 930; } /* = unique type id SOAP_TYPE_ns1__FindMessageTrackingSearchResultType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__FindMessageTrackingSearchResultType() { ns1__FindMessageTrackingSearchResultType::soap_default(NULL); }
	virtual ~ns1__FindMessageTrackingSearchResultType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfFindMessageTrackingSearchResultType
#define SOAP_TYPE__ns1__union_ArrayOfFindMessageTrackingSearchResultType (1938)
/* xsd:choice */
union _ns1__union_ArrayOfFindMessageTrackingSearchResultType
{
#define SOAP_UNION__ns1__union_ArrayOfFindMessageTrackingSearchResultType_MessageTrackingSearchResult	(1)
	ns1__FindMessageTrackingSearchResultType *MessageTrackingSearchResult;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfFindMessageTrackingSearchResultType
#define SOAP_TYPE___ns1__union_ArrayOfFindMessageTrackingSearchResultType (1936)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfFindMessageTrackingSearchResultType
{
public:
	int __union_ArrayOfFindMessageTrackingSearchResultType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfFindMessageTrackingSearchResultType union_ArrayOfFindMessageTrackingSearchResultType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1936; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfFindMessageTrackingSearchResultType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfFindMessageTrackingSearchResultType() { __ns1__union_ArrayOfFindMessageTrackingSearchResultType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfFindMessageTrackingSearchResultType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfFindMessageTrackingSearchResultType
#define SOAP_TYPE_ns1__ArrayOfFindMessageTrackingSearchResultType (931)
/* ns1:ArrayOfFindMessageTrackingSearchResultType */
class SOAP_CMAC ns1__ArrayOfFindMessageTrackingSearchResultType
{
public:
	int __size_ArrayOfFindMessageTrackingSearchResultType;	/* sequence of elements <-union-ArrayOfFindMessageTrackingSearchResultType> */
	__ns1__union_ArrayOfFindMessageTrackingSearchResultType *__union_ArrayOfFindMessageTrackingSearchResultType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 931; } /* = unique type id SOAP_TYPE_ns1__ArrayOfFindMessageTrackingSearchResultType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfFindMessageTrackingSearchResultType() { ns1__ArrayOfFindMessageTrackingSearchResultType::soap_default(NULL); }
	virtual ~ns1__ArrayOfFindMessageTrackingSearchResultType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RecipientTrackingEventType
#define SOAP_TYPE_ns1__RecipientTrackingEventType (932)
/* ns1:RecipientTrackingEventType */
class SOAP_CMAC ns1__RecipientTrackingEventType
{
public:
	time_t Date;	/* required element of type xsd:dateTime */
	ns1__EmailAddressType *Recipient;	/* required element of type ns1:EmailAddressType */
	std::string DeliveryStatus;	/* required element of type xsd:string */
	std::string EventDescription;	/* required element of type xsd:string */
	ns1__ArrayOfStringsType *EventData;	/* optional element of type ns1:ArrayOfStringsType */
	std::string Server;	/* required element of type ns1:NonEmptyStringType */
	std::string InternalId;	/* required element of type xsd:nonNegativeInteger */
	bool *BccRecipient;	/* optional element of type xsd:boolean */
	bool *HiddenRecipient;	/* optional element of type xsd:boolean */
	std::string *UniquePathId;	/* optional element of type ns1:NonEmptyStringType */
	std::string *RootAddress;	/* optional element of type ns1:NonEmptyStringType */
	ns1__ArrayOfTrackingPropertiesType *Properties;	/* optional element of type ns1:ArrayOfTrackingPropertiesType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 932; } /* = unique type id SOAP_TYPE_ns1__RecipientTrackingEventType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RecipientTrackingEventType() { ns1__RecipientTrackingEventType::soap_default(NULL); }
	virtual ~ns1__RecipientTrackingEventType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MessageTrackingReportType
#define SOAP_TYPE_ns1__MessageTrackingReportType (933)
/* ns1:MessageTrackingReportType */
class SOAP_CMAC ns1__MessageTrackingReportType
{
public:
	ns1__EmailAddressType *Sender;	/* optional element of type ns1:EmailAddressType */
	ns1__EmailAddressType *PurportedSender;	/* optional element of type ns1:EmailAddressType */
	std::string *Subject;	/* optional element of type xsd:string */
	time_t *SubmitTime;	/* optional element of type xsd:dateTime */
	ns1__ArrayOfEmailAddressesType *OriginalRecipients;	/* optional element of type ns1:ArrayOfEmailAddressesType */
	class ns1__ArrayOfRecipientTrackingEventType *RecipientTrackingEvents;	/* required element of type ns1:ArrayOfRecipientTrackingEventType */
	ns1__ArrayOfTrackingPropertiesType *Properties;	/* optional element of type ns1:ArrayOfTrackingPropertiesType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 933; } /* = unique type id SOAP_TYPE_ns1__MessageTrackingReportType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MessageTrackingReportType() { ns1__MessageTrackingReportType::soap_default(NULL); }
	virtual ~ns1__MessageTrackingReportType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__TrackingPropertyType
#define SOAP_TYPE_ns1__TrackingPropertyType (934)
/* ns1:TrackingPropertyType */
class SOAP_CMAC ns1__TrackingPropertyType
{
public:
	std::string Name;	/* required element of type xsd:string */
	std::string *Value;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 934; } /* = unique type id SOAP_TYPE_ns1__TrackingPropertyType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__TrackingPropertyType() { ns1__TrackingPropertyType::soap_default(NULL); }
	virtual ~ns1__TrackingPropertyType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfTrackingPropertiesType
#define SOAP_TYPE__ns1__union_ArrayOfTrackingPropertiesType (1943)
/* xsd:choice */
union _ns1__union_ArrayOfTrackingPropertiesType
{
#define SOAP_UNION__ns1__union_ArrayOfTrackingPropertiesType_TrackingPropertyType	(1)
	ns1__TrackingPropertyType *TrackingPropertyType;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfTrackingPropertiesType
#define SOAP_TYPE___ns1__union_ArrayOfTrackingPropertiesType (1941)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfTrackingPropertiesType
{
public:
	int __union_ArrayOfTrackingPropertiesType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfTrackingPropertiesType union_ArrayOfTrackingPropertiesType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1941; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfTrackingPropertiesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfTrackingPropertiesType() { __ns1__union_ArrayOfTrackingPropertiesType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfTrackingPropertiesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfTrackingPropertiesType
#define SOAP_TYPE_ns1__ArrayOfTrackingPropertiesType (935)
/* ns1:ArrayOfTrackingPropertiesType */
class SOAP_CMAC ns1__ArrayOfTrackingPropertiesType
{
public:
	int __size_ArrayOfTrackingPropertiesType;	/* sequence of elements <-union-ArrayOfTrackingPropertiesType> */
	__ns1__union_ArrayOfTrackingPropertiesType *__union_ArrayOfTrackingPropertiesType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 935; } /* = unique type id SOAP_TYPE_ns1__ArrayOfTrackingPropertiesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfTrackingPropertiesType() { ns1__ArrayOfTrackingPropertiesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfTrackingPropertiesType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfArraysOfTrackingPropertiesType
#define SOAP_TYPE__ns1__union_ArrayOfArraysOfTrackingPropertiesType (1946)
/* xsd:choice */
union _ns1__union_ArrayOfArraysOfTrackingPropertiesType
{
#define SOAP_UNION__ns1__union_ArrayOfArraysOfTrackingPropertiesType_ArrayOfTrackingPropertiesType	(1)
	ns1__ArrayOfTrackingPropertiesType *ArrayOfTrackingPropertiesType;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfArraysOfTrackingPropertiesType
#define SOAP_TYPE___ns1__union_ArrayOfArraysOfTrackingPropertiesType (1945)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfArraysOfTrackingPropertiesType
{
public:
	int __union_ArrayOfArraysOfTrackingPropertiesType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfArraysOfTrackingPropertiesType union_ArrayOfArraysOfTrackingPropertiesType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1945; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfArraysOfTrackingPropertiesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfArraysOfTrackingPropertiesType() { __ns1__union_ArrayOfArraysOfTrackingPropertiesType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfArraysOfTrackingPropertiesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfArraysOfTrackingPropertiesType
#define SOAP_TYPE_ns1__ArrayOfArraysOfTrackingPropertiesType (936)
/* ns1:ArrayOfArraysOfTrackingPropertiesType */
class SOAP_CMAC ns1__ArrayOfArraysOfTrackingPropertiesType
{
public:
	int __size_ArrayOfArraysOfTrackingPropertiesType;	/* sequence of elements <-union-ArrayOfArraysOfTrackingPropertiesType> */
	__ns1__union_ArrayOfArraysOfTrackingPropertiesType *__union_ArrayOfArraysOfTrackingPropertiesType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 936; } /* = unique type id SOAP_TYPE_ns1__ArrayOfArraysOfTrackingPropertiesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfArraysOfTrackingPropertiesType() { ns1__ArrayOfArraysOfTrackingPropertiesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfArraysOfTrackingPropertiesType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfRecipientTrackingEventType
#define SOAP_TYPE__ns1__union_ArrayOfRecipientTrackingEventType (1950)
/* xsd:choice */
union _ns1__union_ArrayOfRecipientTrackingEventType
{
#define SOAP_UNION__ns1__union_ArrayOfRecipientTrackingEventType_RecipientTrackingEvent	(1)
	ns1__RecipientTrackingEventType *RecipientTrackingEvent;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfRecipientTrackingEventType
#define SOAP_TYPE___ns1__union_ArrayOfRecipientTrackingEventType (1948)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfRecipientTrackingEventType
{
public:
	int __union_ArrayOfRecipientTrackingEventType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfRecipientTrackingEventType union_ArrayOfRecipientTrackingEventType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1948; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfRecipientTrackingEventType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfRecipientTrackingEventType() { __ns1__union_ArrayOfRecipientTrackingEventType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfRecipientTrackingEventType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfRecipientTrackingEventType
#define SOAP_TYPE_ns1__ArrayOfRecipientTrackingEventType (937)
/* ns1:ArrayOfRecipientTrackingEventType */
class SOAP_CMAC ns1__ArrayOfRecipientTrackingEventType
{
public:
	int __size_ArrayOfRecipientTrackingEventType;	/* sequence of elements <-union-ArrayOfRecipientTrackingEventType> */
	__ns1__union_ArrayOfRecipientTrackingEventType *__union_ArrayOfRecipientTrackingEventType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 937; } /* = unique type id SOAP_TYPE_ns1__ArrayOfRecipientTrackingEventType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfRecipientTrackingEventType() { ns1__ArrayOfRecipientTrackingEventType::soap_default(NULL); }
	virtual ~ns1__ArrayOfRecipientTrackingEventType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RulePredicateSizeRangeType
#define SOAP_TYPE_ns1__RulePredicateSizeRangeType (938)
/* ns1:RulePredicateSizeRangeType */
class SOAP_CMAC ns1__RulePredicateSizeRangeType
{
public:
	int *MinimumSize;	/* optional element of type xsd:int */
	int *MaximumSize;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 938; } /* = unique type id SOAP_TYPE_ns1__RulePredicateSizeRangeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RulePredicateSizeRangeType() { ns1__RulePredicateSizeRangeType::soap_default(NULL); }
	virtual ~ns1__RulePredicateSizeRangeType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RulePredicateDateRangeType
#define SOAP_TYPE_ns1__RulePredicateDateRangeType (939)
/* ns1:RulePredicateDateRangeType */
class SOAP_CMAC ns1__RulePredicateDateRangeType
{
public:
	time_t *StartDateTime;	/* optional element of type xsd:dateTime */
	time_t *EndDateTime;	/* optional element of type xsd:dateTime */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 939; } /* = unique type id SOAP_TYPE_ns1__RulePredicateDateRangeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RulePredicateDateRangeType() { ns1__RulePredicateDateRangeType::soap_default(NULL); }
	virtual ~ns1__RulePredicateDateRangeType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RulePredicatesType
#define SOAP_TYPE_ns1__RulePredicatesType (940)
/* ns1:RulePredicatesType */
class SOAP_CMAC ns1__RulePredicatesType
{
public:
	ns1__ArrayOfStringsType *Categories;	/* optional element of type ns1:ArrayOfStringsType */
	ns1__ArrayOfStringsType *ContainsBodyStrings;	/* optional element of type ns1:ArrayOfStringsType */
	ns1__ArrayOfStringsType *ContainsHeaderStrings;	/* optional element of type ns1:ArrayOfStringsType */
	ns1__ArrayOfStringsType *ContainsRecipientStrings;	/* optional element of type ns1:ArrayOfStringsType */
	ns1__ArrayOfStringsType *ContainsSenderStrings;	/* optional element of type ns1:ArrayOfStringsType */
	ns1__ArrayOfStringsType *ContainsSubjectOrBodyStrings;	/* optional element of type ns1:ArrayOfStringsType */
	ns1__ArrayOfStringsType *ContainsSubjectStrings;	/* optional element of type ns1:ArrayOfStringsType */
	enum ns1__FlaggedForActionType *FlaggedForAction;	/* optional element of type ns1:FlaggedForActionType */
	ns1__ArrayOfEmailAddressesType *FromAddresses;	/* optional element of type ns1:ArrayOfEmailAddressesType */
	ns1__ArrayOfStringsType *FromConnectedAccounts;	/* optional element of type ns1:ArrayOfStringsType */
	bool *HasAttachments;	/* optional element of type xsd:boolean */
	enum ns1__ImportanceChoicesType *Importance;	/* optional element of type ns1:ImportanceChoicesType */
	bool *IsApprovalRequest;	/* optional element of type xsd:boolean */
	bool *IsAutomaticForward;	/* optional element of type xsd:boolean */
	bool *IsAutomaticReply;	/* optional element of type xsd:boolean */
	bool *IsEncrypted;	/* optional element of type xsd:boolean */
	bool *IsMeetingRequest;	/* optional element of type xsd:boolean */
	bool *IsMeetingResponse;	/* optional element of type xsd:boolean */
	bool *IsNDR;	/* optional element of type xsd:boolean */
	bool *IsPermissionControlled;	/* optional element of type xsd:boolean */
	bool *IsReadReceipt;	/* optional element of type xsd:boolean */
	bool *IsSigned;	/* optional element of type xsd:boolean */
	bool *IsVoicemail;	/* optional element of type xsd:boolean */
	ns1__ArrayOfStringsType *ItemClasses;	/* optional element of type ns1:ArrayOfStringsType */
	ns1__ArrayOfStringsType *MessageClassifications;	/* optional element of type ns1:ArrayOfStringsType */
	bool *NotSentToMe;	/* optional element of type xsd:boolean */
	bool *SentCcMe;	/* optional element of type xsd:boolean */
	bool *SentOnlyToMe;	/* optional element of type xsd:boolean */
	ns1__ArrayOfEmailAddressesType *SentToAddresses;	/* optional element of type ns1:ArrayOfEmailAddressesType */
	bool *SentToMe;	/* optional element of type xsd:boolean */
	bool *SentToOrCcMe;	/* optional element of type xsd:boolean */
	enum ns1__SensitivityChoicesType *Sensitivity;	/* optional element of type ns1:SensitivityChoicesType */
	ns1__RulePredicateDateRangeType *WithinDateRange;	/* optional element of type ns1:RulePredicateDateRangeType */
	ns1__RulePredicateSizeRangeType *WithinSizeRange;	/* optional element of type ns1:RulePredicateSizeRangeType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 940; } /* = unique type id SOAP_TYPE_ns1__RulePredicatesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RulePredicatesType() { ns1__RulePredicatesType::soap_default(NULL); }
	virtual ~ns1__RulePredicatesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RuleActionsType
#define SOAP_TYPE_ns1__RuleActionsType (941)
/* ns1:RuleActionsType */
class SOAP_CMAC ns1__RuleActionsType
{
public:
	ns1__ArrayOfStringsType *AssignCategories;	/* optional element of type ns1:ArrayOfStringsType */
	ns1__TargetFolderIdType *CopyToFolder;	/* optional element of type ns1:TargetFolderIdType */
	bool *Delete;	/* optional element of type xsd:boolean */
	ns1__ArrayOfEmailAddressesType *ForwardAsAttachmentToRecipients;	/* optional element of type ns1:ArrayOfEmailAddressesType */
	ns1__ArrayOfEmailAddressesType *ForwardToRecipients;	/* optional element of type ns1:ArrayOfEmailAddressesType */
	enum ns1__ImportanceChoicesType *MarkImportance;	/* optional element of type ns1:ImportanceChoicesType */
	bool *MarkAsRead;	/* optional element of type xsd:boolean */
	ns1__TargetFolderIdType *MoveToFolder;	/* optional element of type ns1:TargetFolderIdType */
	bool *PermanentDelete;	/* optional element of type xsd:boolean */
	ns1__ArrayOfEmailAddressesType *RedirectToRecipients;	/* optional element of type ns1:ArrayOfEmailAddressesType */
	ns1__ArrayOfEmailAddressesType *SendSMSAlertToRecipients;	/* optional element of type ns1:ArrayOfEmailAddressesType */
	ns1__ItemIdType *ServerReplyWithMessage;	/* optional element of type ns1:ItemIdType */
	bool *StopProcessingRules;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 941; } /* = unique type id SOAP_TYPE_ns1__RuleActionsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RuleActionsType() { ns1__RuleActionsType::soap_default(NULL); }
	virtual ~ns1__RuleActionsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RuleType
#define SOAP_TYPE_ns1__RuleType (942)
/* ns1:RuleType */
class SOAP_CMAC ns1__RuleType
{
public:
	std::string *RuleId;	/* optional element of type xsd:string */
	std::string DisplayName;	/* required element of type xsd:string */
	int Priority;	/* required element of type xsd:int */
	bool IsEnabled;	/* required element of type xsd:boolean */
	bool *IsNotSupported;	/* optional element of type xsd:boolean */
	bool *IsInError;	/* optional element of type xsd:boolean */
	ns1__RulePredicatesType *Conditions;	/* optional element of type ns1:RulePredicatesType */
	ns1__RulePredicatesType *Exceptions;	/* optional element of type ns1:RulePredicatesType */
	ns1__RuleActionsType *Actions;	/* optional element of type ns1:RuleActionsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 942; } /* = unique type id SOAP_TYPE_ns1__RuleType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RuleType() { ns1__RuleType::soap_default(NULL); }
	virtual ~ns1__RuleType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfRulesType
#define SOAP_TYPE_ns1__ArrayOfRulesType (943)
/* ns1:ArrayOfRulesType */
class SOAP_CMAC ns1__ArrayOfRulesType
{
public:
	std::vector<ns1__RuleType * >Rule;	/* optional element of type ns1:RuleType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 943; } /* = unique type id SOAP_TYPE_ns1__ArrayOfRulesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfRulesType() { ns1__ArrayOfRulesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfRulesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RuleValidationErrorType
#define SOAP_TYPE_ns1__RuleValidationErrorType (944)
/* ns1:RuleValidationErrorType */
class SOAP_CMAC ns1__RuleValidationErrorType
{
public:
	enum ns1__RuleFieldURIType FieldURI;	/* required element of type ns1:RuleFieldURIType */
	enum ns1__RuleValidationErrorCodeType ErrorCode;	/* required element of type ns1:RuleValidationErrorCodeType */
	std::string ErrorMessage;	/* required element of type xsd:string */
	std::string FieldValue;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 944; } /* = unique type id SOAP_TYPE_ns1__RuleValidationErrorType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RuleValidationErrorType() { ns1__RuleValidationErrorType::soap_default(NULL); }
	virtual ~ns1__RuleValidationErrorType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfRuleValidationErrorsType
#define SOAP_TYPE_ns1__ArrayOfRuleValidationErrorsType (945)
/* ns1:ArrayOfRuleValidationErrorsType */
class SOAP_CMAC ns1__ArrayOfRuleValidationErrorsType
{
public:
	std::vector<ns1__RuleValidationErrorType * >Error;	/* required element of type ns1:RuleValidationErrorType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 945; } /* = unique type id SOAP_TYPE_ns1__ArrayOfRuleValidationErrorsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfRuleValidationErrorsType() { ns1__ArrayOfRuleValidationErrorsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfRuleValidationErrorsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RuleOperationType
#define SOAP_TYPE_ns1__RuleOperationType (946)
/* ns1:RuleOperationType */
class SOAP_CMAC ns1__RuleOperationType
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 946; } /* = unique type id SOAP_TYPE_ns1__RuleOperationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RuleOperationType() { ns1__RuleOperationType::soap_default(NULL); }
	virtual ~ns1__RuleOperationType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfRuleOperationsType
#define SOAP_TYPE__ns1__union_ArrayOfRuleOperationsType (1965)
/* xsd:choice */
union _ns1__union_ArrayOfRuleOperationsType
{
#define SOAP_UNION__ns1__union_ArrayOfRuleOperationsType_CreateRuleOperation	(1)
	class ns1__CreateRuleOperationType *CreateRuleOperation;
#define SOAP_UNION__ns1__union_ArrayOfRuleOperationsType_SetRuleOperation	(2)
	class ns1__SetRuleOperationType *SetRuleOperation;
#define SOAP_UNION__ns1__union_ArrayOfRuleOperationsType_DeleteRuleOperation	(3)
	class ns1__DeleteRuleOperationType *DeleteRuleOperation;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfRuleOperationsType
#define SOAP_TYPE___ns1__union_ArrayOfRuleOperationsType (1961)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfRuleOperationsType
{
public:
	int __union_ArrayOfRuleOperationsType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfRuleOperationsType union_ArrayOfRuleOperationsType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1961; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfRuleOperationsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfRuleOperationsType() { __ns1__union_ArrayOfRuleOperationsType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfRuleOperationsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfRuleOperationsType
#define SOAP_TYPE_ns1__ArrayOfRuleOperationsType (947)
/* ns1:ArrayOfRuleOperationsType */
class SOAP_CMAC ns1__ArrayOfRuleOperationsType
{
public:
	int __size_ArrayOfRuleOperationsType;	/* sequence of elements <-union-ArrayOfRuleOperationsType> */
	__ns1__union_ArrayOfRuleOperationsType *__union_ArrayOfRuleOperationsType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 947; } /* = unique type id SOAP_TYPE_ns1__ArrayOfRuleOperationsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfRuleOperationsType() { ns1__ArrayOfRuleOperationsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfRuleOperationsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RuleOperationErrorType
#define SOAP_TYPE_ns1__RuleOperationErrorType (951)
/* ns1:RuleOperationErrorType */
class SOAP_CMAC ns1__RuleOperationErrorType
{
public:
	int OperationIndex;	/* required element of type xsd:int */
	ns1__ArrayOfRuleValidationErrorsType *ValidationErrors;	/* required element of type ns1:ArrayOfRuleValidationErrorsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 951; } /* = unique type id SOAP_TYPE_ns1__RuleOperationErrorType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RuleOperationErrorType() { ns1__RuleOperationErrorType::soap_default(NULL); }
	virtual ~ns1__RuleOperationErrorType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfRuleOperationErrorsType
#define SOAP_TYPE_ns1__ArrayOfRuleOperationErrorsType (952)
/* ns1:ArrayOfRuleOperationErrorsType */
class SOAP_CMAC ns1__ArrayOfRuleOperationErrorsType
{
public:
	std::vector<ns1__RuleOperationErrorType * >RuleOperationError;	/* required element of type ns1:RuleOperationErrorType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 952; } /* = unique type id SOAP_TYPE_ns1__ArrayOfRuleOperationErrorsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfRuleOperationErrorsType() { ns1__ArrayOfRuleOperationErrorsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfRuleOperationErrorsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfSearchItemKindsType
#define SOAP_TYPE_ns1__ArrayOfSearchItemKindsType (953)
/* ns1:ArrayOfSearchItemKindsType */
class SOAP_CMAC ns1__ArrayOfSearchItemKindsType
{
public:
	std::vector<enum ns1__SearchItemKindType >SearchItemKind;	/* required element of type ns1:SearchItemKindType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 953; } /* = unique type id SOAP_TYPE_ns1__ArrayOfSearchItemKindsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfSearchItemKindsType() { ns1__ArrayOfSearchItemKindsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfSearchItemKindsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UserMailboxType
#define SOAP_TYPE_ns1__UserMailboxType (954)
/* ns1:UserMailboxType */
class SOAP_CMAC ns1__UserMailboxType
{
public:
	std::string Id;	/* required attribute */
	bool IsArchive;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 954; } /* = unique type id SOAP_TYPE_ns1__UserMailboxType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UserMailboxType() { ns1__UserMailboxType::soap_default(NULL); }
	virtual ~ns1__UserMailboxType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfUserMailboxesType
#define SOAP_TYPE_ns1__ArrayOfUserMailboxesType (955)
/* ns1:ArrayOfUserMailboxesType */
class SOAP_CMAC ns1__ArrayOfUserMailboxesType
{
public:
	std::vector<ns1__UserMailboxType * >UserMailbox;	/* required element of type ns1:UserMailboxType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 955; } /* = unique type id SOAP_TYPE_ns1__ArrayOfUserMailboxesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfUserMailboxesType() { ns1__ArrayOfUserMailboxesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfUserMailboxesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SearchableMailboxType
#define SOAP_TYPE_ns1__SearchableMailboxType (956)
/* ns1:SearchableMailboxType */
class SOAP_CMAC ns1__SearchableMailboxType
{
public:
	std::string Guid;	/* required element of type ns1:GuidType */
	std::string PrimarySmtpAddress;	/* required element of type xsd:string */
	bool IsExternalMailbox;	/* required element of type xsd:boolean */
	std::string ExternalEmailAddress;	/* required element of type xsd:string */
	std::string DisplayName;	/* required element of type xsd:string */
	bool IsMembershipGroup;	/* required element of type xsd:boolean */
	std::string ReferenceId;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 956; } /* = unique type id SOAP_TYPE_ns1__SearchableMailboxType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SearchableMailboxType() { ns1__SearchableMailboxType::soap_default(NULL); }
	virtual ~ns1__SearchableMailboxType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfSearchableMailboxesType
#define SOAP_TYPE_ns1__ArrayOfSearchableMailboxesType (957)
/* ns1:ArrayOfSearchableMailboxesType */
class SOAP_CMAC ns1__ArrayOfSearchableMailboxesType
{
public:
	std::vector<ns1__SearchableMailboxType * >SearchableMailbox;	/* optional element of type ns1:SearchableMailboxType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 957; } /* = unique type id SOAP_TYPE_ns1__ArrayOfSearchableMailboxesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfSearchableMailboxesType() { ns1__ArrayOfSearchableMailboxesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfSearchableMailboxesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__KeywordStatisticsSearchResultType
#define SOAP_TYPE_ns1__KeywordStatisticsSearchResultType (958)
/* ns1:KeywordStatisticsSearchResultType */
class SOAP_CMAC ns1__KeywordStatisticsSearchResultType
{
public:
	std::string Keyword;	/* required element of type xsd:string */
	int ItemHits;	/* required element of type xsd:int */
	LONG64 Size;	/* required element of type xsd:long */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 958; } /* = unique type id SOAP_TYPE_ns1__KeywordStatisticsSearchResultType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__KeywordStatisticsSearchResultType() { ns1__KeywordStatisticsSearchResultType::soap_default(NULL); }
	virtual ~ns1__KeywordStatisticsSearchResultType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfKeywordStatisticsSearchResultsType
#define SOAP_TYPE_ns1__ArrayOfKeywordStatisticsSearchResultsType (959)
/* ns1:ArrayOfKeywordStatisticsSearchResultsType */
class SOAP_CMAC ns1__ArrayOfKeywordStatisticsSearchResultsType
{
public:
	std::vector<ns1__KeywordStatisticsSearchResultType * >KeywordStat;	/* optional element of type ns1:KeywordStatisticsSearchResultType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 959; } /* = unique type id SOAP_TYPE_ns1__ArrayOfKeywordStatisticsSearchResultsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfKeywordStatisticsSearchResultsType() { ns1__ArrayOfKeywordStatisticsSearchResultsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfKeywordStatisticsSearchResultsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MailboxStatisticsSearchResultType
#define SOAP_TYPE_ns1__MailboxStatisticsSearchResultType (960)
/* ns1:MailboxStatisticsSearchResultType */
class SOAP_CMAC ns1__MailboxStatisticsSearchResultType
{
public:
	ns1__UserMailboxType *UserMailbox;	/* required element of type ns1:UserMailboxType */
	ns1__KeywordStatisticsSearchResultType *KeywordStatisticsSearchResult;	/* optional element of type ns1:KeywordStatisticsSearchResultType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 960; } /* = unique type id SOAP_TYPE_ns1__MailboxStatisticsSearchResultType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MailboxStatisticsSearchResultType() { ns1__MailboxStatisticsSearchResultType::soap_default(NULL); }
	virtual ~ns1__MailboxStatisticsSearchResultType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ExtendedAttributeType
#define SOAP_TYPE_ns1__ExtendedAttributeType (961)
/* ns1:ExtendedAttributeType */
class SOAP_CMAC ns1__ExtendedAttributeType
{
public:
	std::string Name;	/* required element of type xsd:string */
	std::string Value;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 961; } /* = unique type id SOAP_TYPE_ns1__ExtendedAttributeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ExtendedAttributeType() { ns1__ExtendedAttributeType::soap_default(NULL); }
	virtual ~ns1__ExtendedAttributeType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfExtendedAttributesType
#define SOAP_TYPE_ns1__ArrayOfExtendedAttributesType (962)
/* ns1:ArrayOfExtendedAttributesType */
class SOAP_CMAC ns1__ArrayOfExtendedAttributesType
{
public:
	std::vector<ns1__ExtendedAttributeType * >ExtendedAttribute;	/* optional element of type ns1:ExtendedAttributeType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 962; } /* = unique type id SOAP_TYPE_ns1__ArrayOfExtendedAttributesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfExtendedAttributesType() { ns1__ArrayOfExtendedAttributesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfExtendedAttributesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MailboxSearchScopeType
#define SOAP_TYPE_ns1__MailboxSearchScopeType (963)
/* ns1:MailboxSearchScopeType */
class SOAP_CMAC ns1__MailboxSearchScopeType
{
public:
	std::string Mailbox;	/* required element of type xsd:string */
	enum ns1__MailboxSearchLocationType SearchScope;	/* required element of type ns1:MailboxSearchLocationType */
	ns1__ArrayOfExtendedAttributesType *ExtendedAttributes;	/* optional element of type ns1:ArrayOfExtendedAttributesType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 963; } /* = unique type id SOAP_TYPE_ns1__MailboxSearchScopeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MailboxSearchScopeType() { ns1__MailboxSearchScopeType::soap_default(NULL); }
	virtual ~ns1__MailboxSearchScopeType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfMailboxSearchScopesType
#define SOAP_TYPE_ns1__NonEmptyArrayOfMailboxSearchScopesType (964)
/* ns1:NonEmptyArrayOfMailboxSearchScopesType */
class SOAP_CMAC ns1__NonEmptyArrayOfMailboxSearchScopesType
{
public:
	std::vector<ns1__MailboxSearchScopeType * >MailboxSearchScope;	/* required element of type ns1:MailboxSearchScopeType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 964; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfMailboxSearchScopesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfMailboxSearchScopesType() { ns1__NonEmptyArrayOfMailboxSearchScopesType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfMailboxSearchScopesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MailboxQueryType
#define SOAP_TYPE_ns1__MailboxQueryType (965)
/* ns1:MailboxQueryType */
class SOAP_CMAC ns1__MailboxQueryType
{
public:
	std::string Query;	/* required element of type xsd:string */
	ns1__NonEmptyArrayOfMailboxSearchScopesType *MailboxSearchScopes;	/* required element of type ns1:NonEmptyArrayOfMailboxSearchScopesType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 965; } /* = unique type id SOAP_TYPE_ns1__MailboxQueryType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MailboxQueryType() { ns1__MailboxQueryType::soap_default(NULL); }
	virtual ~ns1__MailboxQueryType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PreviewItemMailboxType
#define SOAP_TYPE_ns1__PreviewItemMailboxType (966)
/* ns1:PreviewItemMailboxType */
class SOAP_CMAC ns1__PreviewItemMailboxType
{
public:
	std::string MailboxId;	/* required element of type xsd:string */
	std::string PrimarySmtpAddress;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 966; } /* = unique type id SOAP_TYPE_ns1__PreviewItemMailboxType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PreviewItemMailboxType() { ns1__PreviewItemMailboxType::soap_default(NULL); }
	virtual ~ns1__PreviewItemMailboxType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfMailboxQueriesType
#define SOAP_TYPE_ns1__NonEmptyArrayOfMailboxQueriesType (967)
/* ns1:NonEmptyArrayOfMailboxQueriesType */
class SOAP_CMAC ns1__NonEmptyArrayOfMailboxQueriesType
{
public:
	std::vector<ns1__MailboxQueryType * >MailboxQuery;	/* required element of type ns1:MailboxQueryType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 967; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfMailboxQueriesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfMailboxQueriesType() { ns1__NonEmptyArrayOfMailboxQueriesType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfMailboxQueriesType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_NonEmptyArrayOfExtendedFieldURIsType
#define SOAP_TYPE__ns1__union_NonEmptyArrayOfExtendedFieldURIsType (1986)
/* xsd:choice */
union _ns1__union_NonEmptyArrayOfExtendedFieldURIsType
{
#define SOAP_UNION__ns1__union_NonEmptyArrayOfExtendedFieldURIsType_ExtendedFieldURI	(1)
	ns1__PathToExtendedFieldType *ExtendedFieldURI;
};
#endif

#ifndef SOAP_TYPE___ns1__union_NonEmptyArrayOfExtendedFieldURIsType
#define SOAP_TYPE___ns1__union_NonEmptyArrayOfExtendedFieldURIsType (1985)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_NonEmptyArrayOfExtendedFieldURIsType
{
public:
	int __union_NonEmptyArrayOfExtendedFieldURIsType;	/* union discriminant (of union defined below) */
	union _ns1__union_NonEmptyArrayOfExtendedFieldURIsType union_NonEmptyArrayOfExtendedFieldURIsType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 1985; } /* = unique type id SOAP_TYPE___ns1__union_NonEmptyArrayOfExtendedFieldURIsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_NonEmptyArrayOfExtendedFieldURIsType() { __ns1__union_NonEmptyArrayOfExtendedFieldURIsType::soap_default(NULL); }
	virtual ~__ns1__union_NonEmptyArrayOfExtendedFieldURIsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfExtendedFieldURIsType
#define SOAP_TYPE_ns1__NonEmptyArrayOfExtendedFieldURIsType (968)
/* ns1:NonEmptyArrayOfExtendedFieldURIsType */
class SOAP_CMAC ns1__NonEmptyArrayOfExtendedFieldURIsType
{
public:
	int __size_NonEmptyArrayOfExtendedFieldURIsType;	/* sequence of elements <-union-NonEmptyArrayOfExtendedFieldURIsType> */
	__ns1__union_NonEmptyArrayOfExtendedFieldURIsType *__union_NonEmptyArrayOfExtendedFieldURIsType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 968; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfExtendedFieldURIsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfExtendedFieldURIsType() { ns1__NonEmptyArrayOfExtendedFieldURIsType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfExtendedFieldURIsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PreviewItemResponseShapeType
#define SOAP_TYPE_ns1__PreviewItemResponseShapeType (969)
/* ns1:PreviewItemResponseShapeType */
class SOAP_CMAC ns1__PreviewItemResponseShapeType
{
public:
	enum ns1__PreviewItemBaseShapeType BaseShape;	/* required element of type ns1:PreviewItemBaseShapeType */
	ns1__NonEmptyArrayOfExtendedFieldURIsType *AdditionalProperties;	/* optional element of type ns1:NonEmptyArrayOfExtendedFieldURIsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 969; } /* = unique type id SOAP_TYPE_ns1__PreviewItemResponseShapeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PreviewItemResponseShapeType() { ns1__PreviewItemResponseShapeType::soap_default(NULL); }
	virtual ~ns1__PreviewItemResponseShapeType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SearchPreviewItemType
#define SOAP_TYPE_ns1__SearchPreviewItemType (970)
/* ns1:SearchPreviewItemType */
class SOAP_CMAC ns1__SearchPreviewItemType
{
public:
	ns1__ItemIdType *Id;	/* required element of type ns1:ItemIdType */
	ns1__PreviewItemMailboxType *Mailbox;	/* optional element of type ns1:PreviewItemMailboxType */
	ns1__ItemIdType *ParentId;	/* optional element of type ns1:ItemIdType */
	std::string *ItemClass;	/* optional element of type ns1:ItemClassType */
	std::string *UniqueHash;	/* optional element of type xsd:string */
	std::string *SortValue;	/* optional element of type xsd:string */
	std::string *OwaLink;	/* optional element of type xsd:string */
	std::string *Sender;	/* optional element of type xsd:string */
	ns1__ArrayOfSmtpAddressType *ToRecipients;	/* optional element of type ns1:ArrayOfSmtpAddressType */
	ns1__ArrayOfSmtpAddressType *CcRecipients;	/* optional element of type ns1:ArrayOfSmtpAddressType */
	ns1__ArrayOfSmtpAddressType *BccRecipients;	/* optional element of type ns1:ArrayOfSmtpAddressType */
	time_t *CreatedTime;	/* optional element of type xsd:dateTime */
	time_t *ReceivedTime;	/* optional element of type xsd:dateTime */
	time_t *SentTime;	/* optional element of type xsd:dateTime */
	std::string *Subject;	/* optional element of type xsd:string */
	LONG64 *Size;	/* optional element of type xsd:long */
	std::string *Preview;	/* optional element of type xsd:string */
	enum ns1__ImportanceChoicesType *Importance;	/* optional element of type ns1:ImportanceChoicesType */
	bool *Read;	/* optional element of type xsd:boolean */
	bool *HasAttachment;	/* optional element of type xsd:boolean */
	ns1__NonEmptyArrayOfExtendedPropertyType *ExtendedProperties;	/* optional element of type ns1:NonEmptyArrayOfExtendedPropertyType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 970; } /* = unique type id SOAP_TYPE_ns1__SearchPreviewItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SearchPreviewItemType() { ns1__SearchPreviewItemType::soap_default(NULL); }
	virtual ~ns1__SearchPreviewItemType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfSearchPreviewItemsType
#define SOAP_TYPE_ns1__ArrayOfSearchPreviewItemsType (971)
/* ns1:ArrayOfSearchPreviewItemsType */
class SOAP_CMAC ns1__ArrayOfSearchPreviewItemsType
{
public:
	std::vector<ns1__SearchPreviewItemType * >SearchPreviewItem;	/* optional element of type ns1:SearchPreviewItemType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 971; } /* = unique type id SOAP_TYPE_ns1__ArrayOfSearchPreviewItemsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfSearchPreviewItemsType() { ns1__ArrayOfSearchPreviewItemsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfSearchPreviewItemsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__FailedSearchMailboxType
#define SOAP_TYPE_ns1__FailedSearchMailboxType (972)
/* ns1:FailedSearchMailboxType */
class SOAP_CMAC ns1__FailedSearchMailboxType
{
public:
	std::string Mailbox;	/* required element of type xsd:string */
	int ErrorCode;	/* required element of type xsd:int */
	std::string ErrorMessage;	/* required element of type xsd:string */
	bool IsArchive;	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 972; } /* = unique type id SOAP_TYPE_ns1__FailedSearchMailboxType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__FailedSearchMailboxType() { ns1__FailedSearchMailboxType::soap_default(NULL); }
	virtual ~ns1__FailedSearchMailboxType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfFailedSearchMailboxesType
#define SOAP_TYPE_ns1__ArrayOfFailedSearchMailboxesType (973)
/* ns1:ArrayOfFailedSearchMailboxesType */
class SOAP_CMAC ns1__ArrayOfFailedSearchMailboxesType
{
public:
	std::vector<ns1__FailedSearchMailboxType * >FailedMailbox;	/* optional element of type ns1:FailedSearchMailboxType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 973; } /* = unique type id SOAP_TYPE_ns1__ArrayOfFailedSearchMailboxesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfFailedSearchMailboxesType() { ns1__ArrayOfFailedSearchMailboxesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfFailedSearchMailboxesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SearchMailboxesResultType
#define SOAP_TYPE_ns1__SearchMailboxesResultType (974)
/* ns1:SearchMailboxesResultType */
class SOAP_CMAC ns1__SearchMailboxesResultType
{
public:
	ns1__NonEmptyArrayOfMailboxQueriesType *SearchQueries;	/* required element of type ns1:NonEmptyArrayOfMailboxQueriesType */
	enum ns1__SearchResultType ResultType;	/* required element of type ns1:SearchResultType */
	LONG64 ItemCount;	/* required element of type xsd:long */
	LONG64 Size;	/* required element of type xsd:long */
	int PageItemCount;	/* required element of type xsd:int */
	LONG64 PageItemSize;	/* required element of type xsd:long */
	ns1__ArrayOfKeywordStatisticsSearchResultsType *KeywordStats;	/* optional element of type ns1:ArrayOfKeywordStatisticsSearchResultsType */
	ns1__ArrayOfSearchPreviewItemsType *Items;	/* optional element of type ns1:ArrayOfSearchPreviewItemsType */
	ns1__ArrayOfFailedSearchMailboxesType *FailedMailboxes;	/* optional element of type ns1:ArrayOfFailedSearchMailboxesType */
	class ns1__ArrayOfSearchRefinerItemsType *Refiners;	/* optional element of type ns1:ArrayOfSearchRefinerItemsType */
	class ns1__ArrayOfMailboxStatisticsItemsType *MailboxStats;	/* optional element of type ns1:ArrayOfMailboxStatisticsItemsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 974; } /* = unique type id SOAP_TYPE_ns1__SearchMailboxesResultType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SearchMailboxesResultType() { ns1__SearchMailboxesResultType::soap_default(NULL); }
	virtual ~ns1__SearchMailboxesResultType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SearchRefinerItemType
#define SOAP_TYPE_ns1__SearchRefinerItemType (975)
/* ns1:SearchRefinerItemType */
class SOAP_CMAC ns1__SearchRefinerItemType
{
public:
	std::string Name;	/* required element of type xsd:string */
	std::string Value;	/* required element of type xsd:string */
	LONG64 Count;	/* required element of type xsd:long */
	std::string Token;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 975; } /* = unique type id SOAP_TYPE_ns1__SearchRefinerItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SearchRefinerItemType() { ns1__SearchRefinerItemType::soap_default(NULL); }
	virtual ~ns1__SearchRefinerItemType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfSearchRefinerItemsType
#define SOAP_TYPE_ns1__ArrayOfSearchRefinerItemsType (976)
/* ns1:ArrayOfSearchRefinerItemsType */
class SOAP_CMAC ns1__ArrayOfSearchRefinerItemsType
{
public:
	std::vector<ns1__SearchRefinerItemType * >Refiner;	/* optional element of type ns1:SearchRefinerItemType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 976; } /* = unique type id SOAP_TYPE_ns1__ArrayOfSearchRefinerItemsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfSearchRefinerItemsType() { ns1__ArrayOfSearchRefinerItemsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfSearchRefinerItemsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MailboxStatisticsItemType
#define SOAP_TYPE_ns1__MailboxStatisticsItemType (978)
/* ns1:MailboxStatisticsItemType */
class SOAP_CMAC ns1__MailboxStatisticsItemType
{
public:
	std::string MailboxId;	/* required element of type xsd:string */
	std::string DisplayName;	/* required element of type xsd:string */
	LONG64 ItemCount;	/* required element of type xsd:long */
	LONG64 Size;	/* required element of type xsd:long */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 978; } /* = unique type id SOAP_TYPE_ns1__MailboxStatisticsItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MailboxStatisticsItemType() { ns1__MailboxStatisticsItemType::soap_default(NULL); }
	virtual ~ns1__MailboxStatisticsItemType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfMailboxStatisticsItemsType
#define SOAP_TYPE_ns1__ArrayOfMailboxStatisticsItemsType (979)
/* ns1:ArrayOfMailboxStatisticsItemsType */
class SOAP_CMAC ns1__ArrayOfMailboxStatisticsItemsType
{
public:
	std::vector<ns1__MailboxStatisticsItemType * >MailboxStat;	/* optional element of type ns1:MailboxStatisticsItemType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 979; } /* = unique type id SOAP_TYPE_ns1__ArrayOfMailboxStatisticsItemsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfMailboxStatisticsItemsType() { ns1__ArrayOfMailboxStatisticsItemsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfMailboxStatisticsItemsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MailboxHoldStatusType
#define SOAP_TYPE_ns1__MailboxHoldStatusType (980)
/* ns1:MailboxHoldStatusType */
class SOAP_CMAC ns1__MailboxHoldStatusType
{
public:
	std::string Mailbox;	/* required element of type xsd:string */
	enum ns1__HoldStatusType Status;	/* required element of type ns1:HoldStatusType */
	std::string *AdditionalInfo;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 980; } /* = unique type id SOAP_TYPE_ns1__MailboxHoldStatusType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MailboxHoldStatusType() { ns1__MailboxHoldStatusType::soap_default(NULL); }
	virtual ~ns1__MailboxHoldStatusType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfMailboxHoldStatusType
#define SOAP_TYPE_ns1__ArrayOfMailboxHoldStatusType (981)
/* ns1:ArrayOfMailboxHoldStatusType */
class SOAP_CMAC ns1__ArrayOfMailboxHoldStatusType
{
public:
	std::vector<ns1__MailboxHoldStatusType * >MailboxHoldStatus;	/* optional element of type ns1:MailboxHoldStatusType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 981; } /* = unique type id SOAP_TYPE_ns1__ArrayOfMailboxHoldStatusType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfMailboxHoldStatusType() { ns1__ArrayOfMailboxHoldStatusType::soap_default(NULL); }
	virtual ~ns1__ArrayOfMailboxHoldStatusType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MailboxHoldResultType
#define SOAP_TYPE_ns1__MailboxHoldResultType (982)
/* ns1:MailboxHoldResultType */
class SOAP_CMAC ns1__MailboxHoldResultType
{
public:
	std::string HoldId;	/* required element of type xsd:string */
	std::string *Query;	/* optional element of type xsd:string */
	ns1__ArrayOfMailboxHoldStatusType *MailboxHoldStatuses;	/* required element of type ns1:ArrayOfMailboxHoldStatusType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 982; } /* = unique type id SOAP_TYPE_ns1__MailboxHoldResultType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MailboxHoldResultType() { ns1__MailboxHoldResultType::soap_default(NULL); }
	virtual ~ns1__MailboxHoldResultType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfLegacyDNsType
#define SOAP_TYPE_ns1__NonEmptyArrayOfLegacyDNsType (983)
/* ns1:NonEmptyArrayOfLegacyDNsType */
class SOAP_CMAC ns1__NonEmptyArrayOfLegacyDNsType
{
public:
	std::vector<std::string >LegacyDN;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 983; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfLegacyDNsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfLegacyDNsType() { ns1__NonEmptyArrayOfLegacyDNsType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfLegacyDNsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonIndexableItemStatisticType
#define SOAP_TYPE_ns1__NonIndexableItemStatisticType (984)
/* ns1:NonIndexableItemStatisticType */
class SOAP_CMAC ns1__NonIndexableItemStatisticType
{
public:
	std::string Mailbox;	/* required element of type xsd:string */
	LONG64 ItemCount;	/* required element of type xsd:long */
	std::string *ErrorMessage;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 984; } /* = unique type id SOAP_TYPE_ns1__NonIndexableItemStatisticType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonIndexableItemStatisticType() { ns1__NonIndexableItemStatisticType::soap_default(NULL); }
	virtual ~ns1__NonIndexableItemStatisticType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfNonIndexableItemStatisticsType
#define SOAP_TYPE_ns1__ArrayOfNonIndexableItemStatisticsType (985)
/* ns1:ArrayOfNonIndexableItemStatisticsType */
class SOAP_CMAC ns1__ArrayOfNonIndexableItemStatisticsType
{
public:
	std::vector<ns1__NonIndexableItemStatisticType * >NonIndexableItemStatistic;	/* optional element of type ns1:NonIndexableItemStatisticType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 985; } /* = unique type id SOAP_TYPE_ns1__ArrayOfNonIndexableItemStatisticsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfNonIndexableItemStatisticsType() { ns1__ArrayOfNonIndexableItemStatisticsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfNonIndexableItemStatisticsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonIndexableItemDetailType
#define SOAP_TYPE_ns1__NonIndexableItemDetailType (986)
/* ns1:NonIndexableItemDetailType */
class SOAP_CMAC ns1__NonIndexableItemDetailType
{
public:
	ns1__ItemIdType *ItemId;	/* required element of type ns1:ItemIdType */
	enum ns1__ItemIndexErrorType ErrorCode;	/* required element of type ns1:ItemIndexErrorType */
	std::string ErrorDescription;	/* required element of type xsd:string */
	bool IsPartiallyIndexed;	/* required element of type xsd:boolean */
	bool IsPermanentFailure;	/* required element of type xsd:boolean */
	std::string SortValue;	/* required element of type xsd:string */
	int AttemptCount;	/* required element of type xsd:int */
	time_t *LastAttemptTime;	/* optional element of type xsd:dateTime */
	std::string *AdditionalInfo;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 986; } /* = unique type id SOAP_TYPE_ns1__NonIndexableItemDetailType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonIndexableItemDetailType() { ns1__NonIndexableItemDetailType::soap_default(NULL); }
	virtual ~ns1__NonIndexableItemDetailType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfNonIndexableItemDetailsType
#define SOAP_TYPE_ns1__ArrayOfNonIndexableItemDetailsType (987)
/* ns1:ArrayOfNonIndexableItemDetailsType */
class SOAP_CMAC ns1__ArrayOfNonIndexableItemDetailsType
{
public:
	std::vector<ns1__NonIndexableItemDetailType * >NonIndexableItemDetail;	/* optional element of type ns1:NonIndexableItemDetailType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 987; } /* = unique type id SOAP_TYPE_ns1__ArrayOfNonIndexableItemDetailsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfNonIndexableItemDetailsType() { ns1__ArrayOfNonIndexableItemDetailsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfNonIndexableItemDetailsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonIndexableItemDetailResultType
#define SOAP_TYPE_ns1__NonIndexableItemDetailResultType (988)
/* ns1:NonIndexableItemDetailResultType */
class SOAP_CMAC ns1__NonIndexableItemDetailResultType
{
public:
	ns1__ArrayOfNonIndexableItemDetailsType *Items;	/* optional element of type ns1:ArrayOfNonIndexableItemDetailsType */
	ns1__ArrayOfFailedSearchMailboxesType *FailedMailboxes;	/* optional element of type ns1:ArrayOfFailedSearchMailboxesType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 988; } /* = unique type id SOAP_TYPE_ns1__NonIndexableItemDetailResultType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonIndexableItemDetailResultType() { ns1__NonIndexableItemDetailResultType::soap_default(NULL); }
	virtual ~ns1__NonIndexableItemDetailResultType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__DiscoverySearchConfigurationType
#define SOAP_TYPE_ns1__DiscoverySearchConfigurationType (989)
/* ns1:DiscoverySearchConfigurationType */
class SOAP_CMAC ns1__DiscoverySearchConfigurationType
{
public:
	std::string SearchId;	/* required element of type xsd:string */
	std::string SearchQuery;	/* required element of type xsd:string */
	ns1__ArrayOfSearchableMailboxesType *SearchableMailboxes;	/* optional element of type ns1:ArrayOfSearchableMailboxesType */
	std::string *InPlaceHoldIdentity;	/* optional element of type xsd:string */
	std::string *ManagedByOrganization;	/* optional element of type xsd:string */
	std::string *Language;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 989; } /* = unique type id SOAP_TYPE_ns1__DiscoverySearchConfigurationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__DiscoverySearchConfigurationType() { ns1__DiscoverySearchConfigurationType::soap_default(NULL); }
	virtual ~ns1__DiscoverySearchConfigurationType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfDiscoverySearchConfigurationType
#define SOAP_TYPE_ns1__ArrayOfDiscoverySearchConfigurationType (990)
/* ns1:ArrayOfDiscoverySearchConfigurationType */
class SOAP_CMAC ns1__ArrayOfDiscoverySearchConfigurationType
{
public:
	std::vector<ns1__DiscoverySearchConfigurationType * >DiscoverySearchConfiguration;	/* optional element of type ns1:DiscoverySearchConfigurationType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 990; } /* = unique type id SOAP_TYPE_ns1__ArrayOfDiscoverySearchConfigurationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfDiscoverySearchConfigurationType() { ns1__ArrayOfDiscoverySearchConfigurationType::soap_default(NULL); }
	virtual ~ns1__ArrayOfDiscoverySearchConfigurationType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RetentionPolicyTagType
#define SOAP_TYPE_ns1__RetentionPolicyTagType (992)
/* ns1:RetentionPolicyTagType */
class SOAP_CMAC ns1__RetentionPolicyTagType
{
public:
	std::string DisplayName;	/* required element of type xsd:string */
	std::string RetentionId;	/* required element of type ns1:GuidType */
	int RetentionPeriod;	/* required element of type xsd:int */
	enum ns1__ElcFolderType Type;	/* required element of type ns1:ElcFolderType */
	enum ns1__RetentionActionType RetentionAction;	/* required element of type ns1:RetentionActionType */
	std::string *Description;	/* optional element of type xsd:string */
	bool IsVisible;	/* required element of type xsd:boolean */
	bool OptedInto;	/* required element of type xsd:boolean */
	bool IsArchive;	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 992; } /* = unique type id SOAP_TYPE_ns1__RetentionPolicyTagType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RetentionPolicyTagType() { ns1__RetentionPolicyTagType::soap_default(NULL); }
	virtual ~ns1__RetentionPolicyTagType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfRetentionPolicyTagsType
#define SOAP_TYPE_ns1__ArrayOfRetentionPolicyTagsType (993)
/* ns1:ArrayOfRetentionPolicyTagsType */
class SOAP_CMAC ns1__ArrayOfRetentionPolicyTagsType
{
public:
	std::vector<ns1__RetentionPolicyTagType * >RetentionPolicyTag;	/* optional element of type ns1:RetentionPolicyTagType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 993; } /* = unique type id SOAP_TYPE_ns1__ArrayOfRetentionPolicyTagsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfRetentionPolicyTagsType() { ns1__ArrayOfRetentionPolicyTagsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfRetentionPolicyTagsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ClientExtensionType
#define SOAP_TYPE_ns1__ClientExtensionType (994)
/* ns1:ClientExtensionType */
class SOAP_CMAC ns1__ClientExtensionType
{
public:
	ns1__ArrayOfStringsType *SpecificUsers;	/* optional element of type ns1:ArrayOfStringsType */
	xsd__base64Binary *Manifest;	/* optional element of type xsd:base64Binary */
	bool *IsAvailable;	/* optional attribute */
	bool *IsMandatory;	/* optional attribute */
	bool *IsEnabledByDefault;	/* optional attribute */
	enum ns1__ClientExtensionProvidedToType *ProvidedTo;	/* optional attribute */
	enum ns1__ClientExtensionTypeType *Type;	/* optional attribute */
	enum ns1__ClientExtensionScopeType *Scope;	/* optional attribute */
	std::string *MarketplaceAssetId;	/* optional attribute */
	std::string *MarketplaceContentMarket;	/* optional attribute */
	std::string *AppStatus;	/* optional attribute */
	std::string *Etoken;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 994; } /* = unique type id SOAP_TYPE_ns1__ClientExtensionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ClientExtensionType() { ns1__ClientExtensionType::soap_default(NULL); }
	virtual ~ns1__ClientExtensionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__GetClientExtensionUserParametersType
#define SOAP_TYPE_ns1__GetClientExtensionUserParametersType (995)
/* ns1:GetClientExtensionUserParametersType */
class SOAP_CMAC ns1__GetClientExtensionUserParametersType
{
public:
	ns1__ArrayOfStringsType *UserEnabledExtensions;	/* optional element of type ns1:ArrayOfStringsType */
	ns1__ArrayOfStringsType *UserDisabledExtensions;	/* optional element of type ns1:ArrayOfStringsType */
	std::string UserId;	/* required attribute */
	bool *EnabledOnly;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 995; } /* = unique type id SOAP_TYPE_ns1__GetClientExtensionUserParametersType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__GetClientExtensionUserParametersType() { ns1__GetClientExtensionUserParametersType::soap_default(NULL); }
	virtual ~ns1__GetClientExtensionUserParametersType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfClientExtensionsType
#define SOAP_TYPE_ns1__ArrayOfClientExtensionsType (996)
/* ns1:ArrayOfClientExtensionsType */
class SOAP_CMAC ns1__ArrayOfClientExtensionsType
{
public:
	std::vector<ns1__ClientExtensionType * >ClientExtension;	/* optional element of type ns1:ClientExtensionType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 996; } /* = unique type id SOAP_TYPE_ns1__ArrayOfClientExtensionsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfClientExtensionsType() { ns1__ArrayOfClientExtensionsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfClientExtensionsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SetClientExtensionActionType
#define SOAP_TYPE_ns1__SetClientExtensionActionType (997)
/* ns1:SetClientExtensionActionType */
class SOAP_CMAC ns1__SetClientExtensionActionType
{
public:
	ns1__ClientExtensionType *ClientExtension;	/* optional element of type ns1:ClientExtensionType */
	enum ns1__SetClientExtensionActionIdType ActionId;	/* required attribute */
	std::string *ExtensionId;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 997; } /* = unique type id SOAP_TYPE_ns1__SetClientExtensionActionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SetClientExtensionActionType() { ns1__SetClientExtensionActionType::soap_default(NULL); }
	virtual ~ns1__SetClientExtensionActionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfSetClientExtensionActionsType
#define SOAP_TYPE_ns1__ArrayOfSetClientExtensionActionsType (998)
/* ns1:ArrayOfSetClientExtensionActionsType */
class SOAP_CMAC ns1__ArrayOfSetClientExtensionActionsType
{
public:
	std::vector<ns1__SetClientExtensionActionType * >Action;	/* required element of type ns1:SetClientExtensionActionType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 998; } /* = unique type id SOAP_TYPE_ns1__ArrayOfSetClientExtensionActionsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfSetClientExtensionActionsType() { ns1__ArrayOfSetClientExtensionActionsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfSetClientExtensionActionsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ImGroupType
#define SOAP_TYPE_ns1__ImGroupType (999)
/* ns1:ImGroupType */
class SOAP_CMAC ns1__ImGroupType
{
public:
	std::string DisplayName;	/* required element of type ns1:NonEmptyStringType */
	std::string GroupType;	/* required element of type ns1:NonEmptyStringType */
	ns1__ItemIdType *ExchangeStoreId;	/* optional element of type ns1:ItemIdType */
	ns1__NonEmptyArrayOfItemIdsType *MemberCorrelationKey;	/* optional element of type ns1:NonEmptyArrayOfItemIdsType */
	ns1__NonEmptyArrayOfExtendedPropertyType *ExtendedProperties;	/* optional element of type ns1:NonEmptyArrayOfExtendedPropertyType */
	std::string *SmtpAddress;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 999; } /* = unique type id SOAP_TYPE_ns1__ImGroupType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ImGroupType() { ns1__ImGroupType::soap_default(NULL); }
	virtual ~ns1__ImGroupType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ArrayOfImGroupType
#define SOAP_TYPE__ns1__union_ArrayOfImGroupType (2029)
/* xsd:choice */
union _ns1__union_ArrayOfImGroupType
{
#define SOAP_UNION__ns1__union_ArrayOfImGroupType_ImGroup	(1)
	ns1__ImGroupType *ImGroup;
};
#endif

#ifndef SOAP_TYPE___ns1__union_ArrayOfImGroupType
#define SOAP_TYPE___ns1__union_ArrayOfImGroupType (2027)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_ArrayOfImGroupType
{
public:
	int __union_ArrayOfImGroupType;	/* union discriminant (of union defined below) */
	union _ns1__union_ArrayOfImGroupType union_ArrayOfImGroupType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 2027; } /* = unique type id SOAP_TYPE___ns1__union_ArrayOfImGroupType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_ArrayOfImGroupType() { __ns1__union_ArrayOfImGroupType::soap_default(NULL); }
	virtual ~__ns1__union_ArrayOfImGroupType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfImGroupType
#define SOAP_TYPE_ns1__ArrayOfImGroupType (1000)
/* ns1:ArrayOfImGroupType */
class SOAP_CMAC ns1__ArrayOfImGroupType
{
public:
	int __size_ArrayOfImGroupType;	/* sequence of elements <-union-ArrayOfImGroupType> */
	__ns1__union_ArrayOfImGroupType *__union_ArrayOfImGroupType;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1000; } /* = unique type id SOAP_TYPE_ns1__ArrayOfImGroupType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfImGroupType() { ns1__ArrayOfImGroupType::soap_default(NULL); }
	virtual ~ns1__ArrayOfImGroupType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ImItemListType
#define SOAP_TYPE_ns1__ImItemListType (1001)
/* ns1:ImItemListType */
class SOAP_CMAC ns1__ImItemListType
{
public:
	ns1__ArrayOfImGroupType *Groups;	/* optional element of type ns1:ArrayOfImGroupType */
	ns1__ArrayOfPeopleType *Personas;	/* optional element of type ns1:ArrayOfPeopleType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1001; } /* = unique type id SOAP_TYPE_ns1__ImItemListType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ImItemListType() { ns1__ImItemListType::soap_default(NULL); }
	virtual ~ns1__ImItemListType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_NonEmptyArrayOfExtendedFieldURIs
#define SOAP_TYPE__ns1__union_NonEmptyArrayOfExtendedFieldURIs (2034)
/* xsd:choice */
union _ns1__union_NonEmptyArrayOfExtendedFieldURIs
{
#define SOAP_UNION__ns1__union_NonEmptyArrayOfExtendedFieldURIs_ExtendedProperty	(1)
	ns1__PathToExtendedFieldType *ExtendedProperty;
};
#endif

#ifndef SOAP_TYPE___ns1__union_NonEmptyArrayOfExtendedFieldURIs
#define SOAP_TYPE___ns1__union_NonEmptyArrayOfExtendedFieldURIs (2033)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_NonEmptyArrayOfExtendedFieldURIs
{
public:
	int __union_NonEmptyArrayOfExtendedFieldURIs;	/* union discriminant (of union defined below) */
	union _ns1__union_NonEmptyArrayOfExtendedFieldURIs union_NonEmptyArrayOfExtendedFieldURIs;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 2033; } /* = unique type id SOAP_TYPE___ns1__union_NonEmptyArrayOfExtendedFieldURIs */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_NonEmptyArrayOfExtendedFieldURIs() { __ns1__union_NonEmptyArrayOfExtendedFieldURIs::soap_default(NULL); }
	virtual ~__ns1__union_NonEmptyArrayOfExtendedFieldURIs() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfExtendedFieldURIs
#define SOAP_TYPE_ns1__NonEmptyArrayOfExtendedFieldURIs (1002)
/* ns1:NonEmptyArrayOfExtendedFieldURIs */
class SOAP_CMAC ns1__NonEmptyArrayOfExtendedFieldURIs
{
public:
	int __size_NonEmptyArrayOfExtendedFieldURIs;	/* sequence of elements <-union-NonEmptyArrayOfExtendedFieldURIs> */
	__ns1__union_NonEmptyArrayOfExtendedFieldURIs *__union_NonEmptyArrayOfExtendedFieldURIs;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1002; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfExtendedFieldURIs */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfExtendedFieldURIs() { ns1__NonEmptyArrayOfExtendedFieldURIs::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfExtendedFieldURIs() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RecognitionIdType
#define SOAP_TYPE_ns1__RecognitionIdType (1003)
/* ns1:RecognitionIdType */
class SOAP_CMAC ns1__RecognitionIdType
{
public:
	std::string RequestId;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1003; } /* = unique type id SOAP_TYPE_ns1__RecognitionIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RecognitionIdType() { ns1__RecognitionIdType::soap_default(NULL); }
	virtual ~ns1__RecognitionIdType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RecognitionResultType
#define SOAP_TYPE_ns1__RecognitionResultType (1004)
/* ns1:RecognitionResultType */
class SOAP_CMAC ns1__RecognitionResultType
{
public:
	std::string Result;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1004; } /* = unique type id SOAP_TYPE_ns1__RecognitionResultType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RecognitionResultType() { ns1__RecognitionResultType::soap_default(NULL); }
	virtual ~ns1__RecognitionResultType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CDRDataType
#define SOAP_TYPE_ns1__CDRDataType (1005)
/* ns1:CDRDataType */
class SOAP_CMAC ns1__CDRDataType
{
public:
	time_t CallStartTime;	/* required element of type xsd:dateTime */
	std::string *CallType;	/* optional element of type xsd:string */
	std::string *CallIdentity;	/* optional element of type xsd:string */
	std::string *ParentCallIdentity;	/* optional element of type xsd:string */
	std::string *UMServerName;	/* optional element of type xsd:string */
	std::string *DialPlanGuid;	/* optional element of type ns1:GuidType */
	std::string *DialPlanName;	/* optional element of type xsd:string */
	int CallDuration;	/* required element of type xsd:int */
	std::string *IPGatewayAddress;	/* optional element of type xsd:string */
	std::string *IPGatewayName;	/* optional element of type xsd:string */
	std::string GatewayGuid;	/* required element of type ns1:GuidType */
	std::string *CalledPhoneNumber;	/* optional element of type xsd:string */
	std::string *CallerPhoneNumber;	/* optional element of type xsd:string */
	std::string *OfferResult;	/* optional element of type xsd:string */
	std::string *DropCallReason;	/* optional element of type xsd:string */
	std::string *ReasonForCall;	/* optional element of type xsd:string */
	std::string *TransferredNumber;	/* optional element of type xsd:string */
	std::string *DialedString;	/* optional element of type xsd:string */
	std::string *CallerMailboxAlias;	/* optional element of type xsd:string */
	std::string *CalleeMailboxAlias;	/* optional element of type xsd:string */
	std::string *CallerLegacyExchangeDN;	/* optional element of type xsd:string */
	std::string *CalleeLegacyExchangeDN;	/* optional element of type xsd:string */
	std::string *AutoAttendantName;	/* optional element of type xsd:string */
	class ns1__AudioQualityType *AudioQualityMetrics;	/* optional element of type ns1:AudioQualityType */
	time_t CreationTime;	/* required element of type xsd:dateTime */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1005; } /* = unique type id SOAP_TYPE_ns1__CDRDataType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CDRDataType() { ns1__CDRDataType::soap_default(NULL); }
	virtual ~ns1__CDRDataType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AudioQualityType
#define SOAP_TYPE_ns1__AudioQualityType (1006)
/* ns1:AudioQualityType */
class SOAP_CMAC ns1__AudioQualityType
{
public:
	float NMOS;	/* required element of type xsd:float */
	float NMOSDegradation;	/* required element of type xsd:float */
	float NMOSDegradationPacketLoss;	/* required element of type xsd:float */
	float NMOSDegradationJitter;	/* required element of type xsd:float */
	float Jitter;	/* required element of type xsd:float */
	float PacketLoss;	/* required element of type xsd:float */
	float RoundTrip;	/* required element of type xsd:float */
	float BurstDensity;	/* required element of type xsd:float */
	float BurstDuration;	/* required element of type xsd:float */
	std::string *AudioCodec;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1006; } /* = unique type id SOAP_TYPE_ns1__AudioQualityType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AudioQualityType() { ns1__AudioQualityType::soap_default(NULL); }
	virtual ~ns1__AudioQualityType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UMReportRawCountersType
#define SOAP_TYPE_ns1__UMReportRawCountersType (1007)
/* ns1:UMReportRawCountersType */
class SOAP_CMAC ns1__UMReportRawCountersType
{
public:
	LONG64 AutoAttendantCalls;	/* required element of type xsd:long */
	LONG64 FailedCalls;	/* required element of type xsd:long */
	LONG64 FaxCalls;	/* required element of type xsd:long */
	LONG64 MissedCalls;	/* required element of type xsd:long */
	LONG64 OtherCalls;	/* required element of type xsd:long */
	LONG64 OutboundCalls;	/* required element of type xsd:long */
	LONG64 SubscriberAccessCalls;	/* required element of type xsd:long */
	LONG64 VoiceMailCalls;	/* required element of type xsd:long */
	LONG64 TotalCalls;	/* required element of type xsd:long */
	time_t Date;	/* required element of type xsd:dateTime */
	class ns1__UMReportAudioMetricsAverageCountersType *AudioMetricsAverages;	/* optional element of type ns1:UMReportAudioMetricsAverageCountersType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1007; } /* = unique type id SOAP_TYPE_ns1__UMReportRawCountersType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UMReportRawCountersType() { ns1__UMReportRawCountersType::soap_default(NULL); }
	virtual ~ns1__UMReportRawCountersType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UMReportAudioMetricsAverageCountersType
#define SOAP_TYPE_ns1__UMReportAudioMetricsAverageCountersType (1008)
/* ns1:UMReportAudioMetricsAverageCountersType */
class SOAP_CMAC ns1__UMReportAudioMetricsAverageCountersType
{
public:
	class ns1__AudioMetricsAverageType *NMOS;	/* optional element of type ns1:AudioMetricsAverageType */
	ns1__AudioMetricsAverageType *NMOSDegradation;	/* optional element of type ns1:AudioMetricsAverageType */
	ns1__AudioMetricsAverageType *Jitter;	/* optional element of type ns1:AudioMetricsAverageType */
	ns1__AudioMetricsAverageType *PercentPacketLoss;	/* optional element of type ns1:AudioMetricsAverageType */
	ns1__AudioMetricsAverageType *RoundTrip;	/* optional element of type ns1:AudioMetricsAverageType */
	ns1__AudioMetricsAverageType *BurstLossDuration;	/* optional element of type ns1:AudioMetricsAverageType */
	LONG64 TotalAudioQualityCallsSampled;	/* required element of type xsd:long */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1008; } /* = unique type id SOAP_TYPE_ns1__UMReportAudioMetricsAverageCountersType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UMReportAudioMetricsAverageCountersType() { ns1__UMReportAudioMetricsAverageCountersType::soap_default(NULL); }
	virtual ~ns1__UMReportAudioMetricsAverageCountersType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AudioMetricsAverageType
#define SOAP_TYPE_ns1__AudioMetricsAverageType (1009)
/* ns1:AudioMetricsAverageType */
class SOAP_CMAC ns1__AudioMetricsAverageType
{
public:
	double TotalValue;	/* required element of type xsd:double */
	double TotalCount;	/* required element of type xsd:double */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1009; } /* = unique type id SOAP_TYPE_ns1__AudioMetricsAverageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AudioMetricsAverageType() { ns1__AudioMetricsAverageType::soap_default(NULL); }
	virtual ~ns1__AudioMetricsAverageType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfUMCallDataRecordsType
#define SOAP_TYPE_ns1__ArrayOfUMCallDataRecordsType (1010)
/* ns1:ArrayOfUMCallDataRecordsType */
class SOAP_CMAC ns1__ArrayOfUMCallDataRecordsType
{
public:
	std::vector<ns1__CDRDataType * >CDRData;	/* optional element of type ns1:CDRDataType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1010; } /* = unique type id SOAP_TYPE_ns1__ArrayOfUMCallDataRecordsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfUMCallDataRecordsType() { ns1__ArrayOfUMCallDataRecordsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfUMCallDataRecordsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfUMReportRawCountersType
#define SOAP_TYPE_ns1__ArrayOfUMReportRawCountersType (1011)
/* ns1:ArrayOfUMReportRawCountersType */
class SOAP_CMAC ns1__ArrayOfUMReportRawCountersType
{
public:
	std::vector<ns1__UMReportRawCountersType * >UMReportRawCounters;	/* optional element of type ns1:UMReportRawCountersType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1011; } /* = unique type id SOAP_TYPE_ns1__ArrayOfUMReportRawCountersType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfUMReportRawCountersType() { ns1__ArrayOfUMReportRawCountersType::soap_default(NULL); }
	virtual ~ns1__ArrayOfUMReportRawCountersType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PinInfoType
#define SOAP_TYPE_ns1__PinInfoType (1012)
/* ns1:PinInfoType */
class SOAP_CMAC ns1__PinInfoType
{
public:
	std::string *PIN;	/* optional element of type xsd:string */
	bool IsValid;	/* required element of type xsd:boolean */
	bool PinExpired;	/* required element of type xsd:boolean */
	bool LockedOut;	/* required element of type xsd:boolean */
	bool FirstTimeUser;	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1012; } /* = unique type id SOAP_TYPE_ns1__PinInfoType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PinInfoType() { ns1__PinInfoType::soap_default(NULL); }
	virtual ~ns1__PinInfoType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_NonEmptyStateDefinitionType
#define SOAP_TYPE__ns1__union_NonEmptyStateDefinitionType (2047)
/* xsd:choice */
union _ns1__union_NonEmptyStateDefinitionType
{
#define SOAP_UNION__ns1__union_NonEmptyStateDefinitionType_DeletedOccurrenceStateDefinition	(1)
	class ns1__DeletedOccurrenceStateDefinitionType *DeletedOccurrenceStateDefinition;
#define SOAP_UNION__ns1__union_NonEmptyStateDefinitionType_DeleteFromFolderStateDefinition	(2)
	class ns1__DeleteFromFolderStateDefinitionType *DeleteFromFolderStateDefinition;
#define SOAP_UNION__ns1__union_NonEmptyStateDefinitionType_LocationBasedStateDefinition	(3)
	class ns1__LocationBasedStateDefinitionType *LocationBasedStateDefinition;
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyStateDefinitionType
#define SOAP_TYPE_ns1__NonEmptyStateDefinitionType (1013)
/* Choice: */
class SOAP_CMAC ns1__NonEmptyStateDefinitionType
{
public:
	int __union_NonEmptyStateDefinitionType;	/* union discriminant (of union defined below) */
	union _ns1__union_NonEmptyStateDefinitionType union_NonEmptyStateDefinitionType;	/* required element of type xsd:choice */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1013; } /* = unique type id SOAP_TYPE_ns1__NonEmptyStateDefinitionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyStateDefinitionType() { ns1__NonEmptyStateDefinitionType::soap_default(NULL); }
	virtual ~ns1__NonEmptyStateDefinitionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__BaseCalendarItemStateDefinitionType
#define SOAP_TYPE_ns1__BaseCalendarItemStateDefinitionType (1014)
/* ns1:BaseCalendarItemStateDefinitionType */
class SOAP_CMAC ns1__BaseCalendarItemStateDefinitionType
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1014; } /* = unique type id SOAP_TYPE_ns1__BaseCalendarItemStateDefinitionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__BaseCalendarItemStateDefinitionType() { ns1__BaseCalendarItemStateDefinitionType::soap_default(NULL); }
	virtual ~ns1__BaseCalendarItemStateDefinitionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ClientIntentType
#define SOAP_TYPE_ns1__ClientIntentType (1018)
/* ns1:ClientIntentType */
class SOAP_CMAC ns1__ClientIntentType
{
public:
	ns1__ItemIdType *ItemId;	/* required element of type ns1:ItemIdType */
	int Intent;	/* required element of type xsd:int */
	int ItemVersion;	/* required element of type xsd:int */
	bool WouldRepair;	/* required element of type xsd:boolean */
	enum ns1__ClientIntentMeetingInquiryActionType *PredictedAction;	/* optional element of type ns1:ClientIntentMeetingInquiryActionType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1018; } /* = unique type id SOAP_TYPE_ns1__ClientIntentType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ClientIntentType() { ns1__ClientIntentType::soap_default(NULL); }
	virtual ~ns1__ClientIntentType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UnifiedGroupIdentity
#define SOAP_TYPE_ns1__UnifiedGroupIdentity (1019)
/* ns1:UnifiedGroupIdentity */
class SOAP_CMAC ns1__UnifiedGroupIdentity
{
public:
	enum ns1__UnifiedGroupIdentityType Type;	/* required element of type ns1:UnifiedGroupIdentityType */
	std::string Value;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1019; } /* = unique type id SOAP_TYPE_ns1__UnifiedGroupIdentity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UnifiedGroupIdentity() { ns1__UnifiedGroupIdentity::soap_default(NULL); }
	virtual ~ns1__UnifiedGroupIdentity() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfUnifiedGroupIdentityType
#define SOAP_TYPE_ns1__NonEmptyArrayOfUnifiedGroupIdentityType (1020)
/* ns1:NonEmptyArrayOfUnifiedGroupIdentityType */
class SOAP_CMAC ns1__NonEmptyArrayOfUnifiedGroupIdentityType
{
public:
	std::vector<ns1__UnifiedGroupIdentity * >GroupIdentity;	/* required element of type ns1:UnifiedGroupIdentity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1020; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfUnifiedGroupIdentityType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfUnifiedGroupIdentityType() { ns1__NonEmptyArrayOfUnifiedGroupIdentityType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfUnifiedGroupIdentityType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UnseenDataType
#define SOAP_TYPE_ns1__UnseenDataType (1021)
/* ns1:UnseenDataType */
class SOAP_CMAC ns1__UnseenDataType
{
public:
	ns1__UnifiedGroupIdentity *GroupIdentity;	/* required element of type ns1:UnifiedGroupIdentity */
	int Count;	/* required element of type xsd:int */
	time_t LastVisitedTimeUtc;	/* required element of type xsd:dateTime */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1021; } /* = unique type id SOAP_TYPE_ns1__UnseenDataType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UnseenDataType() { ns1__UnseenDataType::soap_default(NULL); }
	virtual ~ns1__UnseenDataType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfUseenDataType
#define SOAP_TYPE_ns1__NonEmptyArrayOfUseenDataType (1022)
/* ns1:NonEmptyArrayOfUseenDataType */
class SOAP_CMAC ns1__NonEmptyArrayOfUseenDataType
{
public:
	std::vector<ns1__UnseenDataType * >Unseen;	/* required element of type ns1:UnseenDataType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1022; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfUseenDataType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfUseenDataType() { ns1__NonEmptyArrayOfUseenDataType::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfUseenDataType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MeetingSpaceType
#define SOAP_TYPE_ns1__MeetingSpaceType (1023)
/* ns1:MeetingSpaceType */
class SOAP_CMAC ns1__MeetingSpaceType
{
public:
	std::string *Id;	/* optional element of type xsd:string */
	std::string *ChangeKey;	/* optional element of type xsd:string */
	enum ns1__MeetingSpaceTypeEnum *Type;	/* optional element of type ns1:MeetingSpaceTypeEnum */
	std::string *Version;	/* optional element of type xsd:string */
	std::string *JoinUrl;	/* optional element of type xsd:string */
	std::string *DateTimeCreated;	/* optional element of type xsd:string */
	std::string *DateTimeModified;	/* optional element of type xsd:string */
	std::string *ExpiryTime;	/* optional element of type xsd:string */
	std::string *Meadata;	/* optional element of type xsd:string */
	std::string *Tag;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1023; } /* = unique type id SOAP_TYPE_ns1__MeetingSpaceType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MeetingSpaceType() { ns1__MeetingSpaceType::soap_default(NULL); }
	virtual ~ns1__MeetingSpaceType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ParticipantActivity
#define SOAP_TYPE_ns1__ParticipantActivity (1024)
/* ns1:ParticipantActivity */
class SOAP_CMAC ns1__ParticipantActivity
{
public:
	std::string Id;	/* required element of type ns1:GuidType */
	std::string CreatedBy;	/* required element of type xsd:string */
	std::string StartTime;	/* required element of type xsd:string */
	std::string EndTime;	/* required element of type xsd:string */
	std::string ClientVersion;	/* required element of type xsd:string */
	enum ns1__ParticipantActivityRole Role;	/* required element of type ns1:ParticipantActivityRole */
	enum ns1__ParticipantActivityMediaType MediaType;	/* required element of type ns1:ParticipantActivityMediaType */
	std::string *MediaDetails;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1024; } /* = unique type id SOAP_TYPE_ns1__ParticipantActivity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ParticipantActivity() { ns1__ParticipantActivity::soap_default(NULL); }
	virtual ~ns1__ParticipantActivity() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfParticipantActivities
#define SOAP_TYPE_ns1__NonEmptyArrayOfParticipantActivities (1025)
/* ns1:NonEmptyArrayOfParticipantActivities */
class SOAP_CMAC ns1__NonEmptyArrayOfParticipantActivities
{
public:
	std::vector<ns1__ParticipantActivity * >ParticipantActivity;	/* required element of type ns1:ParticipantActivity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1025; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfParticipantActivities */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfParticipantActivities() { ns1__NonEmptyArrayOfParticipantActivities::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfParticipantActivities() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ContentActivity
#define SOAP_TYPE_ns1__ContentActivity (1026)
/* ns1:ContentActivity */
class SOAP_CMAC ns1__ContentActivity
{
public:
	std::string Id;	/* required element of type ns1:GuidType */
	std::string SharedBy;	/* required element of type xsd:string */
	std::string ContentLocation;	/* required element of type xsd:string */
	std::string StartTime;	/* required element of type xsd:string */
	std::string EndTime;	/* required element of type xsd:string */
	enum ns1__ContentActivityType Type;	/* required element of type ns1:ContentActivityType */
	enum ns1__ContentActivityMediaType MediaType;	/* required element of type ns1:ContentActivityMediaType */
	enum ns1__ContentActivityAcl Acl;	/* required element of type ns1:ContentActivityAcl */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1026; } /* = unique type id SOAP_TYPE_ns1__ContentActivity */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ContentActivity() { ns1__ContentActivity::soap_default(NULL); }
	virtual ~ns1__ContentActivity() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyArrayOfContentActivities
#define SOAP_TYPE_ns1__NonEmptyArrayOfContentActivities (1027)
/* ns1:NonEmptyArrayOfContentActivities */
class SOAP_CMAC ns1__NonEmptyArrayOfContentActivities
{
public:
	std::vector<ns1__ContentActivity * >ContentActivity;	/* required element of type ns1:ContentActivity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1027; } /* = unique type id SOAP_TYPE_ns1__NonEmptyArrayOfContentActivities */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NonEmptyArrayOfContentActivities() { ns1__NonEmptyArrayOfContentActivities::soap_default(NULL); }
	virtual ~ns1__NonEmptyArrayOfContentActivities() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MeetingInstanceType
#define SOAP_TYPE_ns1__MeetingInstanceType (1028)
/* ns1:MeetingInstanceType */
class SOAP_CMAC ns1__MeetingInstanceType
{
public:
	std::string *Id;	/* optional element of type xsd:string */
	std::string *ChangeKey;	/* optional element of type xsd:string */
	std::string *Version;	/* optional element of type xsd:string */
	std::string *JoinUrl;	/* optional element of type xsd:string */
	std::string *DateTimeCreated;	/* optional element of type xsd:string */
	std::string *DateTimeModified;	/* optional element of type xsd:string */
	std::string *Meadata;	/* optional element of type xsd:string */
	std::string *Tag;	/* optional element of type xsd:string */
	std::string *ParentGoid;	/* optional element of type xsd:string */
	ns1__NonEmptyArrayOfParticipantActivities *ParticipantActivities;	/* optional element of type ns1:NonEmptyArrayOfParticipantActivities */
	ns1__NonEmptyArrayOfContentActivities *ContentActivities;	/* optional element of type ns1:NonEmptyArrayOfContentActivities */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1028; } /* = unique type id SOAP_TYPE_ns1__MeetingInstanceType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MeetingInstanceType() { ns1__MeetingInstanceType::soap_default(NULL); }
	virtual ~ns1__MeetingInstanceType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ConsumerCalendarSharedInformation
#define SOAP_TYPE_ns1__ConsumerCalendarSharedInformation (1030)
/* ns1:ConsumerCalendarSharedInformation */
class SOAP_CMAC ns1__ConsumerCalendarSharedInformation
{
public:
	ns1__FolderIdType *FolderId;	/* optional element of type ns1:FolderIdType */
	enum ns1__SharingInvitationPermissionLevel *PermissionLevel;	/* optional element of type ns1:SharingInvitationPermissionLevel */
	std::string *Description;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1030; } /* = unique type id SOAP_TYPE_ns1__ConsumerCalendarSharedInformation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ConsumerCalendarSharedInformation() { ns1__ConsumerCalendarSharedInformation::soap_default(NULL); }
	virtual ~ns1__ConsumerCalendarSharedInformation() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SharingInvitation
#define SOAP_TYPE_ns1__SharingInvitation (1031)
/* ns1:SharingInvitation */
class SOAP_CMAC ns1__SharingInvitation
{
public:
	std::string *Id;	/* optional attribute */
	bool *Active;	/* optional attribute */
	std::string *EmailAddress;	/* optional attribute */
	std::string *DisplayName;	/* optional attribute */
	enum ns1__SharingInvitationPermissionLevel *PermissionLevel;	/* optional attribute */
	bool *ReadOnly;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1031; } /* = unique type id SOAP_TYPE_ns1__SharingInvitation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SharingInvitation() { ns1__SharingInvitation::soap_default(NULL); }
	virtual ~ns1__SharingInvitation() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfSharingInvitation
#define SOAP_TYPE_ns1__ArrayOfSharingInvitation (1032)
/* ns1:ArrayOfSharingInvitation */
class SOAP_CMAC ns1__ArrayOfSharingInvitation
{
public:
	std::vector<ns1__SharingInvitation * >SharingInvitation;	/* required element of type ns1:SharingInvitation */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1032; } /* = unique type id SOAP_TYPE_ns1__ArrayOfSharingInvitation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfSharingInvitation() { ns1__ArrayOfSharingInvitation::soap_default(NULL); }
	virtual ~ns1__ArrayOfSharingInvitation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_SearchFolderScopeType
#define SOAP_TYPE__ns1__union_SearchFolderScopeType (2063)
/* xsd:choice */
union _ns1__union_SearchFolderScopeType
{
#define SOAP_UNION__ns1__union_SearchFolderScopeType_FolderId	(1)
	ns1__FolderIdType *FolderId;
#define SOAP_UNION__ns1__union_SearchFolderScopeType_WellKnownFolder	(2)
	ns1__DistinguishedFolderIdType *WellKnownFolder;
};
#endif

#ifndef SOAP_TYPE_ns1__SearchFolderScopeType
#define SOAP_TYPE_ns1__SearchFolderScopeType (1033)
/* Choice: */
class SOAP_CMAC ns1__SearchFolderScopeType
{
public:
	int __union_SearchFolderScopeType;	/* union discriminant (of union defined below) */
	union _ns1__union_SearchFolderScopeType union_SearchFolderScopeType;	/* required element of type xsd:choice */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1033; } /* = unique type id SOAP_TYPE_ns1__SearchFolderScopeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SearchFolderScopeType() { ns1__SearchFolderScopeType::soap_default(NULL); }
	virtual ~ns1__SearchFolderScopeType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PrimaryMailboxSearchScopeType
#define SOAP_TYPE_ns1__PrimaryMailboxSearchScopeType (1034)
/* ns1:PrimaryMailboxSearchScopeType */
class SOAP_CMAC ns1__PrimaryMailboxSearchScopeType
{
public:
	ns1__SearchFolderScopeType *FolderScope;	/* optional element of type ns1:SearchFolderScopeType */
	bool *IsDeepTraversal;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1034; } /* = unique type id SOAP_TYPE_ns1__PrimaryMailboxSearchScopeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PrimaryMailboxSearchScopeType() { ns1__PrimaryMailboxSearchScopeType::soap_default(NULL); }
	virtual ~ns1__PrimaryMailboxSearchScopeType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__LargeArchiveSearchScopeType
#define SOAP_TYPE_ns1__LargeArchiveSearchScopeType (1035)
/* ns1:LargeArchiveSearchScopeType */
class SOAP_CMAC ns1__LargeArchiveSearchScopeType
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1035; } /* = unique type id SOAP_TYPE_ns1__LargeArchiveSearchScopeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__LargeArchiveSearchScopeType() { ns1__LargeArchiveSearchScopeType::soap_default(NULL); }
	virtual ~ns1__LargeArchiveSearchScopeType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__GroupSearchScopeType
#define SOAP_TYPE_ns1__GroupSearchScopeType (1036)
/* ns1:GroupSearchScopeType */
class SOAP_CMAC ns1__GroupSearchScopeType
{
public:
	enum ns1__SearchScopeGroupsType GroupTypes;	/* required element of type ns1:SearchScopeGroupsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1036; } /* = unique type id SOAP_TYPE_ns1__GroupSearchScopeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__GroupSearchScopeType() { ns1__GroupSearchScopeType::soap_default(NULL); }
	virtual ~ns1__GroupSearchScopeType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SingleGroupSearchScopeType
#define SOAP_TYPE_ns1__SingleGroupSearchScopeType (1037)
/* ns1:SingleGroupSearchScopeType */
class SOAP_CMAC ns1__SingleGroupSearchScopeType
{
public:
	ns1__UnifiedGroupIdentity *GroupIdentity;	/* required element of type ns1:UnifiedGroupIdentity */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1037; } /* = unique type id SOAP_TYPE_ns1__SingleGroupSearchScopeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SingleGroupSearchScopeType() { ns1__SingleGroupSearchScopeType::soap_default(NULL); }
	virtual ~ns1__SingleGroupSearchScopeType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__OneDriveSearchScopeType
#define SOAP_TYPE_ns1__OneDriveSearchScopeType (1038)
/* ns1:OneDriveSearchScopeType */
class SOAP_CMAC ns1__OneDriveSearchScopeType
{
public:
	enum ns1__OneDriveViewType OneDriveView;	/* required element of type ns1:OneDriveViewType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1038; } /* = unique type id SOAP_TYPE_ns1__OneDriveSearchScopeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__OneDriveSearchScopeType() { ns1__OneDriveSearchScopeType::soap_default(NULL); }
	virtual ~ns1__OneDriveSearchScopeType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CustomSearchScopeType
#define SOAP_TYPE_ns1__CustomSearchScopeType (1039)
/* ns1:CustomSearchScopeType */
class SOAP_CMAC ns1__CustomSearchScopeType
{
public:
	std::string MailboxGuid;	/* required element of type ns1:GuidType */
	ns1__SearchFolderScopeType *FolderScope;	/* required element of type ns1:SearchFolderScopeType */
	bool IsDeepTraversal;	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1039; } /* = unique type id SOAP_TYPE_ns1__CustomSearchScopeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CustomSearchScopeType() { ns1__CustomSearchScopeType::soap_default(NULL); }
	virtual ~ns1__CustomSearchScopeType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfSearchScopeType
#define SOAP_TYPE_ns1__ArrayOfSearchScopeType (1040)
/* ns1:ArrayOfSearchScopeType */
class SOAP_CMAC ns1__ArrayOfSearchScopeType
{
public:
	ns1__PrimaryMailboxSearchScopeType *PrimaryMailboxSearchScope;	/* optional element of type ns1:PrimaryMailboxSearchScopeType */
	ns1__LargeArchiveSearchScopeType *LargeArchiveSearchScope;	/* optional element of type ns1:LargeArchiveSearchScopeType */
	ns1__GroupSearchScopeType *GroupSearchScope;	/* optional element of type ns1:GroupSearchScopeType */
	std::vector<ns1__CustomSearchScopeType * >CustomSearchScope;	/* sequence of 0 to 4 elements */
	ns1__SingleGroupSearchScopeType *SingleGroupSearchScope;	/* optional element of type ns1:SingleGroupSearchScopeType */
	ns1__OneDriveSearchScopeType *OneDriveSearchScope;	/* optional element of type ns1:OneDriveSearchScopeType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1040; } /* = unique type id SOAP_TYPE_ns1__ArrayOfSearchScopeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfSearchScopeType() { ns1__ArrayOfSearchScopeType::soap_default(NULL); }
	virtual ~ns1__ArrayOfSearchScopeType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__DynamicRefinerQueryType
#define SOAP_TYPE_ns1__DynamicRefinerQueryType (1041)
/* ns1:DynamicRefinerQueryType */
class SOAP_CMAC ns1__DynamicRefinerQueryType
{
public:
	std::string RefinerQuery;	/* required element of type xsd:string */
	int TDRefinerId;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1041; } /* = unique type id SOAP_TYPE_ns1__DynamicRefinerQueryType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__DynamicRefinerQueryType() { ns1__DynamicRefinerQueryType::soap_default(NULL); }
	virtual ~ns1__DynamicRefinerQueryType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SuggestionType
#define SOAP_TYPE_ns1__SuggestionType (1042)
/* ns1:SuggestionType */
class SOAP_CMAC ns1__SuggestionType
{
public:
	std::string SuggestedQuery;	/* required element of type xsd:string */
	std::string DisplayText;	/* required element of type xsd:string */
	enum ns1__SuggestionKindType SuggestionType;	/* required element of type ns1:SuggestionKindType */
	std::string *Trigger;	/* optional element of type xsd:string */
	int TDSuggestionId;	/* required element of type xsd:int */
	bool IsDeletable;	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1042; } /* = unique type id SOAP_TYPE_ns1__SuggestionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SuggestionType() { ns1__SuggestionType::soap_default(NULL); }
	virtual ~ns1__SuggestionType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__SearchSuggestionsType_Suggestions
#define SOAP_TYPE__ns1__SearchSuggestionsType_Suggestions (2072)
/* ns1:SearchSuggestionsType-Suggestions */
class SOAP_CMAC _ns1__SearchSuggestionsType_Suggestions
{
public:
	std::vector<ns1__SuggestionType * >Suggestion;	/* optional element of type ns1:SuggestionType */
public:
	virtual int soap_type() const { return 2072; } /* = unique type id SOAP_TYPE__ns1__SearchSuggestionsType_Suggestions */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__SearchSuggestionsType_Suggestions() { _ns1__SearchSuggestionsType_Suggestions::soap_default(NULL); }
	virtual ~_ns1__SearchSuggestionsType_Suggestions() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SearchSuggestionsType
#define SOAP_TYPE_ns1__SearchSuggestionsType (1044)
/* ns1:SearchSuggestionsType */
class SOAP_CMAC ns1__SearchSuggestionsType
{
public:
	LONG64 TDSuggestionsBatchId;	/* required element of type xsd:long */
	std::string TDSuggestionsInstanceId;	/* required element of type ns1:GuidType */
	_ns1__SearchSuggestionsType_Suggestions *Suggestions;	/* optional element of type ns1:SearchSuggestionsType-Suggestions */
	class ns1__SearchDiagnosticsType *DiagnosticsData;	/* optional element of type ns1:SearchDiagnosticsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1044; } /* = unique type id SOAP_TYPE_ns1__SearchSuggestionsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SearchSuggestionsType() { ns1__SearchSuggestionsType::soap_default(NULL); }
	virtual ~ns1__SearchSuggestionsType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__SearchDiagnosticsStepType_AdditionalEntries
#define SOAP_TYPE__ns1__SearchDiagnosticsStepType_AdditionalEntries (2077)
/* ns1:SearchDiagnosticsStepType-AdditionalEntries */
class SOAP_CMAC _ns1__SearchDiagnosticsStepType_AdditionalEntries
{
public:
	std::vector<std::string >Entry;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 2077; } /* = unique type id SOAP_TYPE__ns1__SearchDiagnosticsStepType_AdditionalEntries */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__SearchDiagnosticsStepType_AdditionalEntries() { _ns1__SearchDiagnosticsStepType_AdditionalEntries::soap_default(NULL); }
	virtual ~_ns1__SearchDiagnosticsStepType_AdditionalEntries() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SearchDiagnosticsStepType
#define SOAP_TYPE_ns1__SearchDiagnosticsStepType (1045)
/* ns1:SearchDiagnosticsStepType */
class SOAP_CMAC ns1__SearchDiagnosticsStepType
{
public:
	std::string StartTime;	/* required element of type xsd:string */
	LONG64 StepTime;	/* required element of type xsd:long */
	std::string StepType;	/* required element of type xsd:string */
	_ns1__SearchDiagnosticsStepType_AdditionalEntries AdditionalEntries;	/* required element of type ns1:SearchDiagnosticsStepType-AdditionalEntries */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1045; } /* = unique type id SOAP_TYPE_ns1__SearchDiagnosticsStepType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SearchDiagnosticsStepType() { ns1__SearchDiagnosticsStepType::soap_default(NULL); }
	virtual ~ns1__SearchDiagnosticsStepType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SearchRefinerType
#define SOAP_TYPE_ns1__SearchRefinerType (1046)
/* ns1:SearchRefinerType */
class SOAP_CMAC ns1__SearchRefinerType
{
public:
	enum ns1__RefinerTypeType RefinerType;	/* required element of type ns1:RefinerTypeType */
	ns1__DynamicRefinerQueryType *Refiner;	/* required element of type ns1:DynamicRefinerQueryType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1046; } /* = unique type id SOAP_TYPE_ns1__SearchRefinerType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SearchRefinerType() { ns1__SearchRefinerType::soap_default(NULL); }
	virtual ~ns1__SearchRefinerType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__SearchDiagnosticsType_Steps
#define SOAP_TYPE__ns1__SearchDiagnosticsType_Steps (2079)
/* ns1:SearchDiagnosticsType-Steps */
class SOAP_CMAC _ns1__SearchDiagnosticsType_Steps
{
public:
	std::vector<ns1__SearchDiagnosticsStepType * >Step;	/* optional element of type ns1:SearchDiagnosticsStepType */
public:
	virtual int soap_type() const { return 2079; } /* = unique type id SOAP_TYPE__ns1__SearchDiagnosticsType_Steps */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__SearchDiagnosticsType_Steps() { _ns1__SearchDiagnosticsType_Steps::soap_default(NULL); }
	virtual ~_ns1__SearchDiagnosticsType_Steps() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SearchDiagnosticsType
#define SOAP_TYPE_ns1__SearchDiagnosticsType (1051)
/* ns1:SearchDiagnosticsType */
class SOAP_CMAC ns1__SearchDiagnosticsType
{
public:
	bool StoreByPassed;	/* required element of type xsd:boolean */
	int Version;	/* required element of type xsd:int */
	std::string StartTime;	/* required element of type xsd:string */
	LONG64 QueryTime;	/* required element of type xsd:long */
	int QueryStepsCount;	/* required element of type xsd:int */
	_ns1__SearchDiagnosticsType_Steps Steps;	/* required element of type ns1:SearchDiagnosticsType-Steps */
	bool IsColdSessionUsed;	/* required element of type xsd:boolean */
	LONG64 CoreServiceMethodExecutionTime;	/* required element of type xsd:long */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1051; } /* = unique type id SOAP_TYPE_ns1__SearchDiagnosticsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SearchDiagnosticsType() { ns1__SearchDiagnosticsType::soap_default(NULL); }
	virtual ~ns1__SearchDiagnosticsType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__SearchResultsType_Items
#define SOAP_TYPE__ns1__SearchResultsType_Items (2082)
/* ns1:SearchResultsType-Items */
class SOAP_CMAC _ns1__SearchResultsType_Items
{
public:
	std::vector<ns1__ItemType * >Item;	/* optional element of type ns1:ItemType */
public:
	virtual int soap_type() const { return 2082; } /* = unique type id SOAP_TYPE__ns1__SearchResultsType_Items */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__SearchResultsType_Items() { _ns1__SearchResultsType_Items::soap_default(NULL); }
	virtual ~_ns1__SearchResultsType_Items() { }
};
#endif

#ifndef SOAP_TYPE__ns1__SearchResultsType_Conversations
#define SOAP_TYPE__ns1__SearchResultsType_Conversations (2085)
/* ns1:SearchResultsType-Conversations */
class SOAP_CMAC _ns1__SearchResultsType_Conversations
{
public:
	std::vector<ns1__ConversationType * >Conversation;	/* optional element of type ns1:ConversationType */
public:
	virtual int soap_type() const { return 2085; } /* = unique type id SOAP_TYPE__ns1__SearchResultsType_Conversations */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__SearchResultsType_Conversations() { _ns1__SearchResultsType_Conversations::soap_default(NULL); }
	virtual ~_ns1__SearchResultsType_Conversations() { }
};
#endif

#ifndef SOAP_TYPE__ns1__SearchResultsType_People
#define SOAP_TYPE__ns1__SearchResultsType_People (2088)
/* ns1:SearchResultsType-People */
class SOAP_CMAC _ns1__SearchResultsType_People
{
public:
	std::vector<ns1__PersonaType * >Persona;	/* optional element of type ns1:PersonaType */
public:
	virtual int soap_type() const { return 2088; } /* = unique type id SOAP_TYPE__ns1__SearchResultsType_People */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__SearchResultsType_People() { _ns1__SearchResultsType_People::soap_default(NULL); }
	virtual ~_ns1__SearchResultsType_People() { }
};
#endif

#ifndef SOAP_TYPE__ns1__SearchResultsType_SearchRefiners
#define SOAP_TYPE__ns1__SearchResultsType_SearchRefiners (2091)
/* ns1:SearchResultsType-SearchRefiners */
class SOAP_CMAC _ns1__SearchResultsType_SearchRefiners
{
public:
	std::vector<ns1__SearchRefinerType * >SearchRefiner;	/* required element of type ns1:SearchRefinerType */
public:
	virtual int soap_type() const { return 2091; } /* = unique type id SOAP_TYPE__ns1__SearchResultsType_SearchRefiners */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__SearchResultsType_SearchRefiners() { _ns1__SearchResultsType_SearchRefiners::soap_default(NULL); }
	virtual ~_ns1__SearchResultsType_SearchRefiners() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SearchResultsType
#define SOAP_TYPE_ns1__SearchResultsType (1052)
/* ns1:SearchResultsType */
class SOAP_CMAC ns1__SearchResultsType
{
public:
	_ns1__SearchResultsType_Items *Items;	/* optional element of type ns1:SearchResultsType-Items */
	_ns1__SearchResultsType_Conversations *Conversations;	/* optional element of type ns1:SearchResultsType-Conversations */
	_ns1__SearchResultsType_People *People;	/* optional element of type ns1:SearchResultsType-People */
	bool MoreResultsAvailable;	/* required element of type xsd:boolean */
	int RefinerTelemetryBatchId;	/* required element of type xsd:int */
	int SearchResultsCount;	/* required element of type xsd:int */
	int TotalResultsCount;	/* required element of type xsd:int */
	_ns1__SearchResultsType_SearchRefiners *SearchRefiners;	/* optional element of type ns1:SearchResultsType-SearchRefiners */
	ns1__SearchDiagnosticsType *DiagnosticsData;	/* optional element of type ns1:SearchDiagnosticsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1052; } /* = unique type id SOAP_TYPE_ns1__SearchResultsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SearchResultsType() { ns1__SearchResultsType::soap_default(NULL); }
	virtual ~ns1__SearchResultsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MeetingParticipantAvailability
#define SOAP_TYPE_ns1__MeetingParticipantAvailability (1053)
/* ns1:MeetingParticipantAvailability */
class SOAP_CMAC ns1__MeetingParticipantAvailability
{
public:
	ns1__TimeSlot *TimeSlot;	/* required element of type ns1:TimeSlot */
	std::string *Id;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1053; } /* = unique type id SOAP_TYPE_ns1__MeetingParticipantAvailability */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MeetingParticipantAvailability() { ns1__MeetingParticipantAvailability::soap_default(NULL); }
	virtual ~ns1__MeetingParticipantAvailability() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfMeetingParticipantAvailability
#define SOAP_TYPE_ns1__ArrayOfMeetingParticipantAvailability (1054)
/* ns1:ArrayOfMeetingParticipantAvailability */
class SOAP_CMAC ns1__ArrayOfMeetingParticipantAvailability
{
public:
	std::vector<ns1__MeetingParticipantAvailability * >MeetingParticipantAvailability;	/* required element of type ns1:MeetingParticipantAvailability */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1054; } /* = unique type id SOAP_TYPE_ns1__ArrayOfMeetingParticipantAvailability */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfMeetingParticipantAvailability() { ns1__ArrayOfMeetingParticipantAvailability::soap_default(NULL); }
	virtual ~ns1__ArrayOfMeetingParticipantAvailability() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UnifiedGroupBaseType
#define SOAP_TYPE_ns1__UnifiedGroupBaseType (1055)
/* ns1:UnifiedGroupBaseType */
class SOAP_CMAC ns1__UnifiedGroupBaseType
{
public:
	std::string *SmtpAddress;	/* optional element of type xsd:string */
	std::string *LegacyDN;	/* optional element of type xsd:string */
	std::string *DisplayName;	/* optional element of type xsd:string */
	enum ns1__UnifiedGroupAccessType *AccessType;	/* optional element of type ns1:UnifiedGroupAccessType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1055; } /* = unique type id SOAP_TYPE_ns1__UnifiedGroupBaseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UnifiedGroupBaseType() { ns1__UnifiedGroupBaseType::soap_default(NULL); }
	virtual ~ns1__UnifiedGroupBaseType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfUnifiedGroupsType
#define SOAP_TYPE_ns1__ArrayOfUnifiedGroupsType (1057)
/* ns1:ArrayOfUnifiedGroupsType */
class SOAP_CMAC ns1__ArrayOfUnifiedGroupsType
{
public:
	std::vector<class ns1__UnifiedGroupType * >UnifiedGroup;	/* optional element of type ns1:UnifiedGroupType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1057; } /* = unique type id SOAP_TYPE_ns1__ArrayOfUnifiedGroupsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfUnifiedGroupsType() { ns1__ArrayOfUnifiedGroupsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfUnifiedGroupsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UnifiedGroupsSetType
#define SOAP_TYPE_ns1__UnifiedGroupsSetType (1058)
/* ns1:UnifiedGroupsSetType */
class SOAP_CMAC ns1__UnifiedGroupsSetType
{
public:
	enum ns1__UnifiedGroupsFilterType *FilterType;	/* optional element of type ns1:UnifiedGroupsFilterType */
	int *TotalGroups;	/* optional element of type xsd:int */
	ns1__ArrayOfUnifiedGroupsType *Groups;	/* optional element of type ns1:ArrayOfUnifiedGroupsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1058; } /* = unique type id SOAP_TYPE_ns1__UnifiedGroupsSetType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UnifiedGroupsSetType() { ns1__UnifiedGroupsSetType::soap_default(NULL); }
	virtual ~ns1__UnifiedGroupsSetType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfUnifiedGroupsSetsType
#define SOAP_TYPE_ns1__ArrayOfUnifiedGroupsSetsType (1059)
/* ns1:ArrayOfUnifiedGroupsSetsType */
class SOAP_CMAC ns1__ArrayOfUnifiedGroupsSetsType
{
public:
	std::vector<ns1__UnifiedGroupsSetType * >UnifiedGroupsSet;	/* optional element of type ns1:UnifiedGroupsSetType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1059; } /* = unique type id SOAP_TYPE_ns1__ArrayOfUnifiedGroupsSetsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfUnifiedGroupsSetsType() { ns1__ArrayOfUnifiedGroupsSetsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfUnifiedGroupsSetsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RequestedUnifiedGroupsSetType
#define SOAP_TYPE_ns1__RequestedUnifiedGroupsSetType (1060)
/* ns1:RequestedUnifiedGroupsSetType */
class SOAP_CMAC ns1__RequestedUnifiedGroupsSetType
{
public:
	enum ns1__UnifiedGroupsFilterType FilterType;	/* required element of type ns1:UnifiedGroupsFilterType */
	enum ns1__UnifiedGroupsSortType *SortType;	/* optional element of type ns1:UnifiedGroupsSortType */
	enum ns1__SortDirectionType *SortDirection;	/* optional element of type ns1:SortDirectionType */
	int *GroupsLimit;	/* optional element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1060; } /* = unique type id SOAP_TYPE_ns1__RequestedUnifiedGroupsSetType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RequestedUnifiedGroupsSetType() { ns1__RequestedUnifiedGroupsSetType::soap_default(NULL); }
	virtual ~ns1__RequestedUnifiedGroupsSetType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfRequestedUnifiedGroupsSetsType
#define SOAP_TYPE_ns1__ArrayOfRequestedUnifiedGroupsSetsType (1061)
/* ns1:ArrayOfRequestedUnifiedGroupsSetsType */
class SOAP_CMAC ns1__ArrayOfRequestedUnifiedGroupsSetsType
{
public:
	std::vector<ns1__RequestedUnifiedGroupsSetType * >RequestedUnifiedGroupsSet;	/* optional element of type ns1:RequestedUnifiedGroupsSetType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1061; } /* = unique type id SOAP_TYPE_ns1__ArrayOfRequestedUnifiedGroupsSetsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfRequestedUnifiedGroupsSetsType() { ns1__ArrayOfRequestedUnifiedGroupsSetsType::soap_default(NULL); }
	virtual ~ns1__ArrayOfRequestedUnifiedGroupsSetsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CultureInfoDataType
#define SOAP_TYPE_ns1__CultureInfoDataType (1062)
/* ns1:CultureInfoDataType */
class SOAP_CMAC ns1__CultureInfoDataType
{
public:
	std::string Name;	/* required element of type xsd:string */
	std::string NativeName;	/* required element of type xsd:string */
	int LCID;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1062; } /* = unique type id SOAP_TYPE_ns1__CultureInfoDataType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CultureInfoDataType() { ns1__CultureInfoDataType::soap_default(NULL); }
	virtual ~ns1__CultureInfoDataType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UnifiedGroupResourceType
#define SOAP_TYPE_ns1__UnifiedGroupResourceType (1063)
/* ns1:UnifiedGroupResourceType */
class SOAP_CMAC ns1__UnifiedGroupResourceType
{
public:
	std::string *Name;	/* optional element of type xsd:string */
	std::string *Url;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1063; } /* = unique type id SOAP_TYPE_ns1__UnifiedGroupResourceType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UnifiedGroupResourceType() { ns1__UnifiedGroupResourceType::soap_default(NULL); }
	virtual ~ns1__UnifiedGroupResourceType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfUnifiedGroupResourcesType
#define SOAP_TYPE_ns1__ArrayOfUnifiedGroupResourcesType (1064)
/* ns1:ArrayOfUnifiedGroupResourcesType */
class SOAP_CMAC ns1__ArrayOfUnifiedGroupResourcesType
{
public:
	std::vector<ns1__UnifiedGroupResourceType * >Resource;	/* optional element of type ns1:UnifiedGroupResourceType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1064; } /* = unique type id SOAP_TYPE_ns1__ArrayOfUnifiedGroupResourcesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfUnifiedGroupResourcesType() { ns1__ArrayOfUnifiedGroupResourcesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfUnifiedGroupResourcesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfAvailableCulturesType
#define SOAP_TYPE_ns1__ArrayOfAvailableCulturesType (1065)
/* ns1:ArrayOfAvailableCulturesType */
class SOAP_CMAC ns1__ArrayOfAvailableCulturesType
{
public:
	std::vector<ns1__CultureInfoDataType * >AvailableCulture;	/* optional element of type ns1:CultureInfoDataType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1065; } /* = unique type id SOAP_TYPE_ns1__ArrayOfAvailableCulturesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfAvailableCulturesType() { ns1__ArrayOfAvailableCulturesType::soap_default(NULL); }
	virtual ~ns1__ArrayOfAvailableCulturesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UserUnifiedGroupRelationshipType
#define SOAP_TYPE_ns1__UserUnifiedGroupRelationshipType (1066)
/* ns1:UserUnifiedGroupRelationshipType */
class SOAP_CMAC ns1__UserUnifiedGroupRelationshipType
{
public:
	bool *IsMember;	/* optional element of type xsd:boolean */
	bool *IsOwner;	/* optional element of type xsd:boolean */
	bool *IsSubscribed;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1066; } /* = unique type id SOAP_TYPE_ns1__UserUnifiedGroupRelationshipType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UserUnifiedGroupRelationshipType() { ns1__UserUnifiedGroupRelationshipType::soap_default(NULL); }
	virtual ~ns1__UserUnifiedGroupRelationshipType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UnifiedGroupMailboxSettingsType
#define SOAP_TYPE_ns1__UnifiedGroupMailboxSettingsType (1067)
/* ns1:UnifiedGroupMailboxSettingsType */
class SOAP_CMAC ns1__UnifiedGroupMailboxSettingsType
{
public:
	bool *ExternalSendersEnabled;	/* optional element of type xsd:boolean */
	bool *AutoSubscribeNewMembers;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1067; } /* = unique type id SOAP_TYPE_ns1__UnifiedGroupMailboxSettingsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UnifiedGroupMailboxSettingsType() { ns1__UnifiedGroupMailboxSettingsType::soap_default(NULL); }
	virtual ~ns1__UnifiedGroupMailboxSettingsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UnifiedGroupMemberType
#define SOAP_TYPE_ns1__UnifiedGroupMemberType (1069)
/* ns1:UnifiedGroupMemberType */
class SOAP_CMAC ns1__UnifiedGroupMemberType
{
public:
	ns1__PersonaType *Persona;	/* optional element of type ns1:PersonaType */
	bool *IsOwner;	/* optional element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1069; } /* = unique type id SOAP_TYPE_ns1__UnifiedGroupMemberType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UnifiedGroupMemberType() { ns1__UnifiedGroupMemberType::soap_default(NULL); }
	virtual ~ns1__UnifiedGroupMemberType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfUnifiedGroupMembersType
#define SOAP_TYPE_ns1__ArrayOfUnifiedGroupMembersType (1070)
/* ns1:ArrayOfUnifiedGroupMembersType */
class SOAP_CMAC ns1__ArrayOfUnifiedGroupMembersType
{
public:
	std::vector<ns1__UnifiedGroupMemberType * >Member;	/* optional element of type ns1:UnifiedGroupMemberType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1070; } /* = unique type id SOAP_TYPE_ns1__ArrayOfUnifiedGroupMembersType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfUnifiedGroupMembersType() { ns1__ArrayOfUnifiedGroupMembersType::soap_default(NULL); }
	virtual ~ns1__ArrayOfUnifiedGroupMembersType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UnifiedGroupMembersResponseType
#define SOAP_TYPE_ns1__UnifiedGroupMembersResponseType (1071)
/* ns1:UnifiedGroupMembersResponseType */
class SOAP_CMAC ns1__UnifiedGroupMembersResponseType
{
public:
	int *TotalCount;	/* optional element of type xsd:int */
	ns1__ArrayOfUnifiedGroupMembersType *Members;	/* optional element of type ns1:ArrayOfUnifiedGroupMembersType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1071; } /* = unique type id SOAP_TYPE_ns1__UnifiedGroupMembersResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UnifiedGroupMembersResponseType() { ns1__UnifiedGroupMembersResponseType::soap_default(NULL); }
	virtual ~ns1__UnifiedGroupMembersResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UnifiedGroupSenderRestrictionsDataType
#define SOAP_TYPE_ns1__UnifiedGroupSenderRestrictionsDataType (1072)
/* ns1:UnifiedGroupSenderRestrictionsDataType */
class SOAP_CMAC ns1__UnifiedGroupSenderRestrictionsDataType
{
public:
	ns1__PersonaType *Persona;	/* required element of type ns1:PersonaType */
	std::string *ExternalDirectoryObjectId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1072; } /* = unique type id SOAP_TYPE_ns1__UnifiedGroupSenderRestrictionsDataType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UnifiedGroupSenderRestrictionsDataType() { ns1__UnifiedGroupSenderRestrictionsDataType::soap_default(NULL); }
	virtual ~ns1__UnifiedGroupSenderRestrictionsDataType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfUnifiedGroupSenderRestrictionsDataType
#define SOAP_TYPE_ns1__ArrayOfUnifiedGroupSenderRestrictionsDataType (1073)
/* ns1:ArrayOfUnifiedGroupSenderRestrictionsDataType */
class SOAP_CMAC ns1__ArrayOfUnifiedGroupSenderRestrictionsDataType
{
public:
	std::vector<ns1__UnifiedGroupSenderRestrictionsDataType * >Sender;	/* optional element of type ns1:UnifiedGroupSenderRestrictionsDataType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1073; } /* = unique type id SOAP_TYPE_ns1__ArrayOfUnifiedGroupSenderRestrictionsDataType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfUnifiedGroupSenderRestrictionsDataType() { ns1__ArrayOfUnifiedGroupSenderRestrictionsDataType::soap_default(NULL); }
	virtual ~ns1__ArrayOfUnifiedGroupSenderRestrictionsDataType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UnifiedGroupSenderRestrictionsType
#define SOAP_TYPE_ns1__UnifiedGroupSenderRestrictionsType (1074)
/* ns1:UnifiedGroupSenderRestrictionsType */
class SOAP_CMAC ns1__UnifiedGroupSenderRestrictionsType
{
public:
	ns1__ArrayOfUnifiedGroupSenderRestrictionsDataType *AllowedSenders;	/* optional element of type ns1:ArrayOfUnifiedGroupSenderRestrictionsDataType */
	ns1__ArrayOfUnifiedGroupSenderRestrictionsDataType *RejectedSenders;	/* optional element of type ns1:ArrayOfUnifiedGroupSenderRestrictionsDataType */
	ns1__ArrayOfUnifiedGroupSenderRestrictionsDataType *AllowedDistributionLists;	/* optional element of type ns1:ArrayOfUnifiedGroupSenderRestrictionsDataType */
	ns1__ArrayOfUnifiedGroupSenderRestrictionsDataType *RejectedDistributionLists;	/* optional element of type ns1:ArrayOfUnifiedGroupSenderRestrictionsDataType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1074; } /* = unique type id SOAP_TYPE_ns1__UnifiedGroupSenderRestrictionsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UnifiedGroupSenderRestrictionsType() { ns1__UnifiedGroupSenderRestrictionsType::soap_default(NULL); }
	virtual ~ns1__UnifiedGroupSenderRestrictionsType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__GetUnifiedGroupSenderRestrictionsResponseMessageType
#define SOAP_TYPE_ns1__GetUnifiedGroupSenderRestrictionsResponseMessageType (1075)
/* ns1:GetUnifiedGroupSenderRestrictionsResponseMessageType */
class SOAP_CMAC ns1__GetUnifiedGroupSenderRestrictionsResponseMessageType
{
public:
	ns1__UnifiedGroupIdentity *GroupIdentity;	/* required element of type ns1:UnifiedGroupIdentity */
	ns1__UnifiedGroupSenderRestrictionsType *SenderRestrictions;	/* optional element of type ns1:UnifiedGroupSenderRestrictionsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1075; } /* = unique type id SOAP_TYPE_ns1__GetUnifiedGroupSenderRestrictionsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__GetUnifiedGroupSenderRestrictionsResponseMessageType() { ns1__GetUnifiedGroupSenderRestrictionsResponseMessageType::soap_default(NULL); }
	virtual ~ns1__GetUnifiedGroupSenderRestrictionsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SocialActivityAggregatedNotificationType
#define SOAP_TYPE_ns1__SocialActivityAggregatedNotificationType (1076)
/* ns1:SocialActivityAggregatedNotificationType */
class SOAP_CMAC ns1__SocialActivityAggregatedNotificationType
{
public:
	std::string LatestTimestamp;	/* required element of type xsd:string */
	bool IsSeen;	/* required element of type xsd:boolean */
	ns1__ArrayOfPeopleType *Actors;	/* required element of type ns1:ArrayOfPeopleType */
	enum ns1__UserSocialActivityActionTypeEnum SocialActivityActionType;	/* required element of type ns1:UserSocialActivityActionTypeEnum */
	ns1__ItemIdType *TargetConversationId;	/* required element of type ns1:ItemIdType */
	ns1__ItemIdType *TargetItemId;	/* required element of type ns1:ItemIdType */
	std::string TargetMailboxGuid;	/* required element of type ns1:GuidType */
	std::string TargetMailboxSmtpAddress;	/* required element of type xsd:string */
	std::string TargetItemType;	/* required element of type xsd:string */
	std::string TargetGroupName;	/* required element of type xsd:string */
	std::string TargetMessagePreview;	/* required element of type xsd:string */
	ns1__ArrayOfItemIdsType *UnseenItemIDs;	/* required element of type ns1:ArrayOfItemIdsType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1076; } /* = unique type id SOAP_TYPE_ns1__SocialActivityAggregatedNotificationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SocialActivityAggregatedNotificationType() { ns1__SocialActivityAggregatedNotificationType::soap_default(NULL); }
	virtual ~ns1__SocialActivityAggregatedNotificationType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfAggregatedSocialNotifications
#define SOAP_TYPE_ns1__ArrayOfAggregatedSocialNotifications (1077)
/* ns1:ArrayOfAggregatedSocialNotifications */
class SOAP_CMAC ns1__ArrayOfAggregatedSocialNotifications
{
public:
	std::vector<ns1__SocialActivityAggregatedNotificationType * >AggregatedNotification;	/* optional element of type ns1:SocialActivityAggregatedNotificationType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1077; } /* = unique type id SOAP_TYPE_ns1__ArrayOfAggregatedSocialNotifications */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfAggregatedSocialNotifications() { ns1__ArrayOfAggregatedSocialNotifications::soap_default(NULL); }
	virtual ~ns1__ArrayOfAggregatedSocialNotifications() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfActivityLogCustomPropertyType
#define SOAP_TYPE_ns1__ArrayOfActivityLogCustomPropertyType (1078)
/* ns1:ArrayOfActivityLogCustomPropertyType */
class SOAP_CMAC ns1__ArrayOfActivityLogCustomPropertyType
{
public:
	std::vector<class ns1__ActivityLogCustomPropertyType * >CustomProperty;	/* optional element of type ns1:ActivityLogCustomPropertyType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1078; } /* = unique type id SOAP_TYPE_ns1__ArrayOfActivityLogCustomPropertyType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfActivityLogCustomPropertyType() { ns1__ArrayOfActivityLogCustomPropertyType::soap_default(NULL); }
	virtual ~ns1__ArrayOfActivityLogCustomPropertyType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ActivityLogCustomPropertyType
#define SOAP_TYPE_ns1__ActivityLogCustomPropertyType (1079)
/* ns1:ActivityLogCustomPropertyType */
class SOAP_CMAC ns1__ActivityLogCustomPropertyType
{
public:
	std::string Name;	/* required element of type xsd:string */
	std::string Value;	/* required element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1079; } /* = unique type id SOAP_TYPE_ns1__ActivityLogCustomPropertyType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ActivityLogCustomPropertyType() { ns1__ActivityLogCustomPropertyType::soap_default(NULL); }
	virtual ~ns1__ActivityLogCustomPropertyType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfActivityLogEntry
#define SOAP_TYPE_ns1__ArrayOfActivityLogEntry (1080)
/* ns1:ArrayOfActivityLogEntry */
class SOAP_CMAC ns1__ArrayOfActivityLogEntry
{
public:
	std::vector<class ns1__ActivityLogEntryType * >ActivityLogEntry;	/* required element of type ns1:ActivityLogEntryType */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1080; } /* = unique type id SOAP_TYPE_ns1__ArrayOfActivityLogEntry */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfActivityLogEntry() { ns1__ArrayOfActivityLogEntry::soap_default(NULL); }
	virtual ~ns1__ArrayOfActivityLogEntry() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ActivityLogEntryType
#define SOAP_TYPE_ns1__ActivityLogEntryType (1081)
/* ns1:ActivityLogEntryType */
class SOAP_CMAC ns1__ActivityLogEntryType
{
public:
	time_t *ActivityCreationTime;	/* optional element of type xsd:dateTime */
	enum ns1__ActivityIdType ActivityId;	/* required element of type ns1:ActivityIdType */
	enum ns1__ClientIdType ClientId;	/* required element of type ns1:ClientIdType */
	std::string ClientVersion;	/* required element of type xsd:string */
	std::string ClientSessionId;	/* required element of type ns1:GuidType */
	ns1__ArrayOfActivityLogCustomPropertyType *CustomProperties;	/* optional element of type ns1:ArrayOfActivityLogCustomPropertyType */
	std::string *Id;	/* optional element of type xsd:string */
	std::string *ItemId;	/* optional element of type xsd:string */
	int *LocaleId;	/* optional element of type xsd:int */
	std::string *LocaleName;	/* optional element of type xsd:string */
	std::string *MailboxGuid;	/* optional element of type ns1:GuidType */
	LONG64 *MailboxType;	/* optional element of type xsd:long */
	std::string *NetId;	/* optional element of type xsd:string */
	std::string *PreviousItemId;	/* optional element of type xsd:string */
	LONG64 SequenceNumber;	/* required element of type xsd:long */
	time_t TimeStamp;	/* required element of type xsd:dateTime */
	std::string *TenantId;	/* optional element of type xsd:string */
	std::string *TenantName;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1081; } /* = unique type id SOAP_TYPE_ns1__ActivityLogEntryType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ActivityLogEntryType() { ns1__ActivityLogEntryType::soap_default(NULL); }
	virtual ~ns1__ActivityLogEntryType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__ServerVersionInfo
#define SOAP_TYPE__ns1__ServerVersionInfo (1082)
/* ns1:ServerVersionInfo */
class SOAP_CMAC _ns1__ServerVersionInfo
{
public:
	int *MajorVersion;	/* optional attribute */
	int *MinorVersion;	/* optional attribute */
	int *MajorBuildNumber;	/* optional attribute */
	int *MinorBuildNumber;	/* optional attribute */
	std::string *Version;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1082; } /* = unique type id SOAP_TYPE__ns1__ServerVersionInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__ServerVersionInfo() { _ns1__ServerVersionInfo::soap_default(NULL); }
	virtual ~_ns1__ServerVersionInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__RequestServerVersion
#define SOAP_TYPE__ns1__RequestServerVersion (1083)
/* ns1:RequestServerVersion */
class SOAP_CMAC _ns1__RequestServerVersion
{
public:
	enum ns1__ExchangeVersionType Version;	/* required attribute */
	char *__anyAttribute;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 1083; } /* = unique type id SOAP_TYPE__ns1__RequestServerVersion */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__RequestServerVersion() { _ns1__RequestServerVersion::soap_default(NULL); }
	virtual ~_ns1__RequestServerVersion() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetFolderType
#define SOAP_TYPE_ews__GetFolderType (29)
/* ews:GetFolderType */
class SOAP_CMAC ews__GetFolderType : public ews__BaseRequestType
{
public:
	ns1__FolderResponseShapeType *FolderShape;	/* required element of type ns1:FolderResponseShapeType */
	ns1__NonEmptyArrayOfBaseFolderIdsType *FolderIds;	/* required element of type ns1:NonEmptyArrayOfBaseFolderIdsType */
public:
	virtual int soap_type() const { return 29; } /* = unique type id SOAP_TYPE_ews__GetFolderType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetFolderType() { ews__GetFolderType::soap_default(NULL); }
	virtual ~ews__GetFolderType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UploadItemsType
#define SOAP_TYPE_ews__UploadItemsType (30)
/* ews:UploadItemsType */
class SOAP_CMAC ews__UploadItemsType : public ews__BaseRequestType
{
public:
	ns1__NonEmptyArrayOfUploadItemsType *Items;	/* required element of type ns1:NonEmptyArrayOfUploadItemsType */
public:
	virtual int soap_type() const { return 30; } /* = unique type id SOAP_TYPE_ews__UploadItemsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UploadItemsType() { ews__UploadItemsType::soap_default(NULL); }
	virtual ~ews__UploadItemsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UploadItemsResponseMessageType
#define SOAP_TYPE_ews__UploadItemsResponseMessageType (31)
/* ews:UploadItemsResponseMessageType */
class SOAP_CMAC ews__UploadItemsResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ItemIdType *ItemId;	/* optional element of type ns1:ItemIdType */
public:
	virtual int soap_type() const { return 31; } /* = unique type id SOAP_TYPE_ews__UploadItemsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UploadItemsResponseMessageType() { ews__UploadItemsResponseMessageType::soap_default(NULL); }
	virtual ~ews__UploadItemsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UploadItemsResponseType
#define SOAP_TYPE_ews__UploadItemsResponseType (32)
/* ews:UploadItemsResponseType */
class SOAP_CMAC ews__UploadItemsResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 32; } /* = unique type id SOAP_TYPE_ews__UploadItemsResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UploadItemsResponseType() { ews__UploadItemsResponseType::soap_default(NULL); }
	virtual ~ews__UploadItemsResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ExportItemsType
#define SOAP_TYPE_ews__ExportItemsType (33)
/* ews:ExportItemsType */
class SOAP_CMAC ews__ExportItemsType : public ews__BaseRequestType
{
public:
	ns1__NonEmptyArrayOfItemIdsType *ItemIds;	/* required element of type ns1:NonEmptyArrayOfItemIdsType */
public:
	virtual int soap_type() const { return 33; } /* = unique type id SOAP_TYPE_ews__ExportItemsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ExportItemsType() { ews__ExportItemsType::soap_default(NULL); }
	virtual ~ews__ExportItemsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ExportItemsResponseMessageType
#define SOAP_TYPE_ews__ExportItemsResponseMessageType (34)
/* ews:ExportItemsResponseMessageType */
class SOAP_CMAC ews__ExportItemsResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ItemIdType *ItemId;	/* optional element of type ns1:ItemIdType */
	xsd__base64Binary *Data;	/* optional element of type xsd:base64Binary */
public:
	virtual int soap_type() const { return 34; } /* = unique type id SOAP_TYPE_ews__ExportItemsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ExportItemsResponseMessageType() { ews__ExportItemsResponseMessageType::soap_default(NULL); }
	virtual ~ews__ExportItemsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ExportItemsResponseType
#define SOAP_TYPE_ews__ExportItemsResponseType (35)
/* ews:ExportItemsResponseType */
class SOAP_CMAC ews__ExportItemsResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 35; } /* = unique type id SOAP_TYPE_ews__ExportItemsResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ExportItemsResponseType() { ews__ExportItemsResponseType::soap_default(NULL); }
	virtual ~ews__ExportItemsResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CreateFolderType
#define SOAP_TYPE_ews__CreateFolderType (36)
/* ews:CreateFolderType */
class SOAP_CMAC ews__CreateFolderType : public ews__BaseRequestType
{
public:
	ns1__TargetFolderIdType *ParentFolderId;	/* required element of type ns1:TargetFolderIdType */
	ns1__NonEmptyArrayOfFoldersType *Folders;	/* required element of type ns1:NonEmptyArrayOfFoldersType */
public:
	virtual int soap_type() const { return 36; } /* = unique type id SOAP_TYPE_ews__CreateFolderType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CreateFolderType() { ews__CreateFolderType::soap_default(NULL); }
	virtual ~ews__CreateFolderType() { }
};
#endif

#ifndef SOAP_TYPE__ews__union_FindFolderType
#define SOAP_TYPE__ews__union_FindFolderType (2131)
/* xsd:choice */
union _ews__union_FindFolderType
{
#define SOAP_UNION__ews__union_FindFolderType_IndexedPageFolderView	(1)
	class ns1__IndexedPageViewType *IndexedPageFolderView;
#define SOAP_UNION__ews__union_FindFolderType_FractionalPageFolderView	(2)
	class ns1__FractionalPageViewType *FractionalPageFolderView;
};
#endif

#ifndef SOAP_TYPE_ews__FindFolderType
#define SOAP_TYPE_ews__FindFolderType (37)
/* ews:FindFolderType */
class SOAP_CMAC ews__FindFolderType : public ews__BaseRequestType
{
public:
	ns1__FolderResponseShapeType *FolderShape;	/* required element of type ns1:FolderResponseShapeType */
	int __union_FindFolderType;	/* union discriminant (of union defined below) */
	union _ews__union_FindFolderType union_FindFolderType;	/* required element of type xsd:choice */
	ns1__RestrictionType *Restriction;	/* optional element of type ns1:RestrictionType */
	ns1__NonEmptyArrayOfBaseFolderIdsType *ParentFolderIds;	/* required element of type ns1:NonEmptyArrayOfBaseFolderIdsType */
	enum ns1__FolderQueryTraversalType Traversal;	/* required attribute */
public:
	virtual int soap_type() const { return 37; } /* = unique type id SOAP_TYPE_ews__FindFolderType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__FindFolderType() { ews__FindFolderType::soap_default(NULL); }
	virtual ~ews__FindFolderType() { }
};
#endif

#ifndef SOAP_TYPE_ews__FolderInfoResponseMessageType
#define SOAP_TYPE_ews__FolderInfoResponseMessageType (38)
/* ews:FolderInfoResponseMessageType */
class SOAP_CMAC ews__FolderInfoResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfFoldersType *Folders;	/* optional element of type ns1:ArrayOfFoldersType */
public:
	virtual int soap_type() const { return 38; } /* = unique type id SOAP_TYPE_ews__FolderInfoResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__FolderInfoResponseMessageType() { ews__FolderInfoResponseMessageType::soap_default(NULL); }
	virtual ~ews__FolderInfoResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__FindFolderResponseMessageType
#define SOAP_TYPE_ews__FindFolderResponseMessageType (39)
/* ews:FindFolderResponseMessageType */
class SOAP_CMAC ews__FindFolderResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__FindFolderParentType *RootFolder;	/* optional element of type ns1:FindFolderParentType */
public:
	virtual int soap_type() const { return 39; } /* = unique type id SOAP_TYPE_ews__FindFolderResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__FindFolderResponseMessageType() { ews__FindFolderResponseMessageType::soap_default(NULL); }
	virtual ~ews__FindFolderResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__FindFolderResponseType
#define SOAP_TYPE_ews__FindFolderResponseType (40)
/* ews:FindFolderResponseType */
class SOAP_CMAC ews__FindFolderResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 40; } /* = unique type id SOAP_TYPE_ews__FindFolderResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__FindFolderResponseType() { ews__FindFolderResponseType::soap_default(NULL); }
	virtual ~ews__FindFolderResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__DeleteFolderType
#define SOAP_TYPE_ews__DeleteFolderType (41)
/* ews:DeleteFolderType */
class SOAP_CMAC ews__DeleteFolderType : public ews__BaseRequestType
{
public:
	ns1__NonEmptyArrayOfBaseFolderIdsType *FolderIds;	/* required element of type ns1:NonEmptyArrayOfBaseFolderIdsType */
	enum ns1__DisposalType DeleteType;	/* required attribute */
public:
	virtual int soap_type() const { return 41; } /* = unique type id SOAP_TYPE_ews__DeleteFolderType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__DeleteFolderType() { ews__DeleteFolderType::soap_default(NULL); }
	virtual ~ews__DeleteFolderType() { }
};
#endif

#ifndef SOAP_TYPE_ews__DeleteFolderResponseType
#define SOAP_TYPE_ews__DeleteFolderResponseType (42)
/* ews:DeleteFolderResponseType */
class SOAP_CMAC ews__DeleteFolderResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 42; } /* = unique type id SOAP_TYPE_ews__DeleteFolderResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__DeleteFolderResponseType() { ews__DeleteFolderResponseType::soap_default(NULL); }
	virtual ~ews__DeleteFolderResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__EmptyFolderType
#define SOAP_TYPE_ews__EmptyFolderType (43)
/* ews:EmptyFolderType */
class SOAP_CMAC ews__EmptyFolderType : public ews__BaseRequestType
{
public:
	ns1__NonEmptyArrayOfBaseFolderIdsType *FolderIds;	/* required element of type ns1:NonEmptyArrayOfBaseFolderIdsType */
	enum ns1__DisposalType DeleteType;	/* required attribute */
	bool DeleteSubFolders;	/* required attribute */
public:
	virtual int soap_type() const { return 43; } /* = unique type id SOAP_TYPE_ews__EmptyFolderType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__EmptyFolderType() { ews__EmptyFolderType::soap_default(NULL); }
	virtual ~ews__EmptyFolderType() { }
};
#endif

#ifndef SOAP_TYPE_ews__EmptyFolderResponseType
#define SOAP_TYPE_ews__EmptyFolderResponseType (44)
/* ews:EmptyFolderResponseType */
class SOAP_CMAC ews__EmptyFolderResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 44; } /* = unique type id SOAP_TYPE_ews__EmptyFolderResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__EmptyFolderResponseType() { ews__EmptyFolderResponseType::soap_default(NULL); }
	virtual ~ews__EmptyFolderResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__BaseMoveCopyFolderType
#define SOAP_TYPE_ews__BaseMoveCopyFolderType (45)
/* ews:BaseMoveCopyFolderType */
class SOAP_CMAC ews__BaseMoveCopyFolderType : public ews__BaseRequestType
{
public:
	ns1__TargetFolderIdType *ToFolderId;	/* required element of type ns1:TargetFolderIdType */
	ns1__NonEmptyArrayOfBaseFolderIdsType *FolderIds;	/* required element of type ns1:NonEmptyArrayOfBaseFolderIdsType */
public:
	virtual int soap_type() const { return 45; } /* = unique type id SOAP_TYPE_ews__BaseMoveCopyFolderType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__BaseMoveCopyFolderType() { ews__BaseMoveCopyFolderType::soap_default(NULL); }
	virtual ~ews__BaseMoveCopyFolderType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UpdateFolderType
#define SOAP_TYPE_ews__UpdateFolderType (48)
/* ews:UpdateFolderType */
class SOAP_CMAC ews__UpdateFolderType : public ews__BaseRequestType
{
public:
	ns1__NonEmptyArrayOfFolderChangesType *FolderChanges;	/* required element of type ns1:NonEmptyArrayOfFolderChangesType */
public:
	virtual int soap_type() const { return 48; } /* = unique type id SOAP_TYPE_ews__UpdateFolderType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UpdateFolderType() { ews__UpdateFolderType::soap_default(NULL); }
	virtual ~ews__UpdateFolderType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CreateFolderResponseType
#define SOAP_TYPE_ews__CreateFolderResponseType (49)
/* ews:CreateFolderResponseType */
class SOAP_CMAC ews__CreateFolderResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 49; } /* = unique type id SOAP_TYPE_ews__CreateFolderResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CreateFolderResponseType() { ews__CreateFolderResponseType::soap_default(NULL); }
	virtual ~ews__CreateFolderResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetFolderResponseType
#define SOAP_TYPE_ews__GetFolderResponseType (50)
/* ews:GetFolderResponseType */
class SOAP_CMAC ews__GetFolderResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 50; } /* = unique type id SOAP_TYPE_ews__GetFolderResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetFolderResponseType() { ews__GetFolderResponseType::soap_default(NULL); }
	virtual ~ews__GetFolderResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UpdateFolderResponseType
#define SOAP_TYPE_ews__UpdateFolderResponseType (51)
/* ews:UpdateFolderResponseType */
class SOAP_CMAC ews__UpdateFolderResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 51; } /* = unique type id SOAP_TYPE_ews__UpdateFolderResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UpdateFolderResponseType() { ews__UpdateFolderResponseType::soap_default(NULL); }
	virtual ~ews__UpdateFolderResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__MoveFolderResponseType
#define SOAP_TYPE_ews__MoveFolderResponseType (52)
/* ews:MoveFolderResponseType */
class SOAP_CMAC ews__MoveFolderResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 52; } /* = unique type id SOAP_TYPE_ews__MoveFolderResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__MoveFolderResponseType() { ews__MoveFolderResponseType::soap_default(NULL); }
	virtual ~ews__MoveFolderResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CopyFolderResponseType
#define SOAP_TYPE_ews__CopyFolderResponseType (53)
/* ews:CopyFolderResponseType */
class SOAP_CMAC ews__CopyFolderResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 53; } /* = unique type id SOAP_TYPE_ews__CopyFolderResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CopyFolderResponseType() { ews__CopyFolderResponseType::soap_default(NULL); }
	virtual ~ews__CopyFolderResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CreateFolderPathType
#define SOAP_TYPE_ews__CreateFolderPathType (54)
/* ews:CreateFolderPathType */
class SOAP_CMAC ews__CreateFolderPathType : public ews__BaseRequestType
{
public:
	ns1__TargetFolderIdType *ParentFolderId;	/* required element of type ns1:TargetFolderIdType */
	ns1__NonEmptyArrayOfFoldersType *RelativeFolderPath;	/* required element of type ns1:NonEmptyArrayOfFoldersType */
public:
	virtual int soap_type() const { return 54; } /* = unique type id SOAP_TYPE_ews__CreateFolderPathType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CreateFolderPathType() { ews__CreateFolderPathType::soap_default(NULL); }
	virtual ~ews__CreateFolderPathType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CreateFolderPathResponseType
#define SOAP_TYPE_ews__CreateFolderPathResponseType (55)
/* ews:CreateFolderPathResponseType */
class SOAP_CMAC ews__CreateFolderPathResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 55; } /* = unique type id SOAP_TYPE_ews__CreateFolderPathResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CreateFolderPathResponseType() { ews__CreateFolderPathResponseType::soap_default(NULL); }
	virtual ~ews__CreateFolderPathResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetItemType
#define SOAP_TYPE_ews__GetItemType (56)
/* ews:GetItemType */
class SOAP_CMAC ews__GetItemType : public ews__BaseRequestType
{
public:
	ns1__ItemResponseShapeType *ItemShape;	/* required element of type ns1:ItemResponseShapeType */
	ns1__NonEmptyArrayOfBaseItemIdsType *ItemIds;	/* required element of type ns1:NonEmptyArrayOfBaseItemIdsType */
public:
	virtual int soap_type() const { return 56; } /* = unique type id SOAP_TYPE_ews__GetItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetItemType() { ews__GetItemType::soap_default(NULL); }
	virtual ~ews__GetItemType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CreateItemType
#define SOAP_TYPE_ews__CreateItemType (57)
/* ews:CreateItemType */
class SOAP_CMAC ews__CreateItemType : public ews__BaseRequestType
{
public:
	ns1__TargetFolderIdType *SavedItemFolderId;	/* optional element of type ns1:TargetFolderIdType */
	ns1__NonEmptyArrayOfAllItemsType *Items;	/* required element of type ns1:NonEmptyArrayOfAllItemsType */
	enum ns1__MessageDispositionType *MessageDisposition;	/* optional attribute */
	enum ns1__CalendarItemCreateOrDeleteOperationType *SendMeetingInvitations;	/* optional attribute */
public:
	virtual int soap_type() const { return 57; } /* = unique type id SOAP_TYPE_ews__CreateItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CreateItemType() { ews__CreateItemType::soap_default(NULL); }
	virtual ~ews__CreateItemType() { }
};
#endif

#ifndef SOAP_TYPE_ews__PostModernGroupItemType
#define SOAP_TYPE_ews__PostModernGroupItemType (58)
/* ews:PostModernGroupItemType */
class SOAP_CMAC ews__PostModernGroupItemType : public ews__BaseRequestType
{
public:
	ns1__EmailAddressType *ModernGroupEmailAddress;	/* required element of type ns1:EmailAddressType */
	ns1__NonEmptyArrayOfAllItemsType *Items;	/* required element of type ns1:NonEmptyArrayOfAllItemsType */
public:
	virtual int soap_type() const { return 58; } /* = unique type id SOAP_TYPE_ews__PostModernGroupItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__PostModernGroupItemType() { ews__PostModernGroupItemType::soap_default(NULL); }
	virtual ~ews__PostModernGroupItemType() { }
};
#endif

#ifndef SOAP_TYPE_ews__PostModernGroupItemResponseType
#define SOAP_TYPE_ews__PostModernGroupItemResponseType (59)
/* ews:PostModernGroupItemResponseType */
class SOAP_CMAC ews__PostModernGroupItemResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 59; } /* = unique type id SOAP_TYPE_ews__PostModernGroupItemResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__PostModernGroupItemResponseType() { ews__PostModernGroupItemResponseType::soap_default(NULL); }
	virtual ~ews__PostModernGroupItemResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__LikeItemType
#define SOAP_TYPE_ews__LikeItemType (60)
/* ews:LikeItemType */
class SOAP_CMAC ews__LikeItemType : public ews__BaseRequestType
{
public:
	ns1__ItemIdType *ItemId;	/* required element of type ns1:ItemIdType */
	bool IsUnlike;	/* required element of type xsd:boolean */
public:
	virtual int soap_type() const { return 60; } /* = unique type id SOAP_TYPE_ews__LikeItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__LikeItemType() { ews__LikeItemType::soap_default(NULL); }
	virtual ~ews__LikeItemType() { }
};
#endif

#ifndef SOAP_TYPE_ews__LikeItemResponseType
#define SOAP_TYPE_ews__LikeItemResponseType (61)
/* ews:LikeItemResponseType */
class SOAP_CMAC ews__LikeItemResponseType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 61; } /* = unique type id SOAP_TYPE_ews__LikeItemResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__LikeItemResponseType() { ews__LikeItemResponseType::soap_default(NULL); }
	virtual ~ews__LikeItemResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetSocialActivityNotificationsType
#define SOAP_TYPE_ews__GetSocialActivityNotificationsType (62)
/* ews:GetSocialActivityNotificationsType */
class SOAP_CMAC ews__GetSocialActivityNotificationsType : public ews__BaseRequestType
{
public:
	std::string OldestTimeStamp;	/* required element of type xsd:string */
	int MaxItems;	/* required element of type xsd:int */
	enum ns1__UserSocialActivityActionTypeEnum SocialActivityActionType;	/* required element of type ns1:UserSocialActivityActionTypeEnum */
public:
	virtual int soap_type() const { return 62; } /* = unique type id SOAP_TYPE_ews__GetSocialActivityNotificationsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetSocialActivityNotificationsType() { ews__GetSocialActivityNotificationsType::soap_default(NULL); }
	virtual ~ews__GetSocialActivityNotificationsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetSocialActivityNotificationsResponseType
#define SOAP_TYPE_ews__GetSocialActivityNotificationsResponseType (63)
/* ews:GetSocialActivityNotificationsResponseType */
class SOAP_CMAC ews__GetSocialActivityNotificationsResponseType : public ews__ResponseMessageType
{
public:
	std::vector<ns1__SocialActivityAggregatedNotificationType * >AggregatedNotification;	/* optional element of type ns1:SocialActivityAggregatedNotificationType */
public:
	virtual int soap_type() const { return 63; } /* = unique type id SOAP_TYPE_ews__GetSocialActivityNotificationsResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetSocialActivityNotificationsResponseType() { ews__GetSocialActivityNotificationsResponseType::soap_default(NULL); }
	virtual ~ews__GetSocialActivityNotificationsResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__MarkSocialActivityNotificationsAsSeenRequest
#define SOAP_TYPE_ews__MarkSocialActivityNotificationsAsSeenRequest (64)
/* ews:MarkSocialActivityNotificationsAsSeenRequest */
class SOAP_CMAC ews__MarkSocialActivityNotificationsAsSeenRequest : public ews__BaseRequestType
{
public:
	ns1__NonEmptyArrayOfItemIdsType *ItemIds;	/* required element of type ns1:NonEmptyArrayOfItemIdsType */
public:
	virtual int soap_type() const { return 64; } /* = unique type id SOAP_TYPE_ews__MarkSocialActivityNotificationsAsSeenRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__MarkSocialActivityNotificationsAsSeenRequest() { ews__MarkSocialActivityNotificationsAsSeenRequest::soap_default(NULL); }
	virtual ~ews__MarkSocialActivityNotificationsAsSeenRequest() { }
};
#endif

#ifndef SOAP_TYPE_ews__MarkSocialActivityAsSeenResponseType
#define SOAP_TYPE_ews__MarkSocialActivityAsSeenResponseType (65)
/* ews:MarkSocialActivityAsSeenResponseType */
class SOAP_CMAC ews__MarkSocialActivityAsSeenResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 65; } /* = unique type id SOAP_TYPE_ews__MarkSocialActivityAsSeenResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__MarkSocialActivityAsSeenResponseType() { ews__MarkSocialActivityAsSeenResponseType::soap_default(NULL); }
	virtual ~ews__MarkSocialActivityAsSeenResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__AddEventToMyCalanderType
#define SOAP_TYPE_ews__AddEventToMyCalanderType (66)
/* ews:AddEventToMyCalanderType */
class SOAP_CMAC ews__AddEventToMyCalanderType : public ews__BaseRequestType
{
public:
	ns1__ItemIdType *ItemId;	/* required element of type ns1:ItemIdType */
public:
	virtual int soap_type() const { return 66; } /* = unique type id SOAP_TYPE_ews__AddEventToMyCalanderType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__AddEventToMyCalanderType() { ews__AddEventToMyCalanderType::soap_default(NULL); }
	virtual ~ews__AddEventToMyCalanderType() { }
};
#endif

#ifndef SOAP_TYPE_ews__AddEventToMyCalanderResponseType
#define SOAP_TYPE_ews__AddEventToMyCalanderResponseType (67)
/* ews:AddEventToMyCalanderResponseType */
class SOAP_CMAC ews__AddEventToMyCalanderResponseType : public ews__ResponseMessageType
{
public:
	bool WasSuccessful;	/* required element of type xsd:boolean */
public:
	virtual int soap_type() const { return 67; } /* = unique type id SOAP_TYPE_ews__AddEventToMyCalanderResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__AddEventToMyCalanderResponseType() { ews__AddEventToMyCalanderResponseType::soap_default(NULL); }
	virtual ~ews__AddEventToMyCalanderResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UpdateItemType
#define SOAP_TYPE_ews__UpdateItemType (68)
/* ews:UpdateItemType */
class SOAP_CMAC ews__UpdateItemType : public ews__BaseRequestType
{
public:
	ns1__TargetFolderIdType *SavedItemFolderId;	/* optional element of type ns1:TargetFolderIdType */
	ns1__NonEmptyArrayOfItemChangesType *ItemChanges;	/* required element of type ns1:NonEmptyArrayOfItemChangesType */
	enum ns1__ConflictResolutionType ConflictResolution;	/* required attribute */
	enum ns1__MessageDispositionType *MessageDisposition;	/* optional attribute */
	enum ns1__CalendarItemUpdateOperationType *SendMeetingInvitationsOrCancellations;	/* optional attribute */
	bool *SuppressReadReceipts;	/* optional attribute */
public:
	virtual int soap_type() const { return 68; } /* = unique type id SOAP_TYPE_ews__UpdateItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UpdateItemType() { ews__UpdateItemType::soap_default(NULL); }
	virtual ~ews__UpdateItemType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ItemInfoResponseMessageType
#define SOAP_TYPE_ews__ItemInfoResponseMessageType (69)
/* ews:ItemInfoResponseMessageType */
class SOAP_CMAC ews__ItemInfoResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfRealItemsType *Items;	/* required element of type ns1:ArrayOfRealItemsType */
public:
	virtual int soap_type() const { return 69; } /* = unique type id SOAP_TYPE_ews__ItemInfoResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ItemInfoResponseMessageType() { ews__ItemInfoResponseMessageType::soap_default(NULL); }
	virtual ~ews__ItemInfoResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UpdateItemInRecoverableItemsType
#define SOAP_TYPE_ews__UpdateItemInRecoverableItemsType (71)
/* ews:UpdateItemInRecoverableItemsType */
class SOAP_CMAC ews__UpdateItemInRecoverableItemsType : public ews__BaseRequestType
{
public:
	ns1__ItemIdType *ItemId;	/* required element of type ns1:ItemIdType */
	ns1__NonEmptyArrayOfItemChangeDescriptionsType *Updates;	/* optional element of type ns1:NonEmptyArrayOfItemChangeDescriptionsType */
	ns1__NonEmptyArrayOfAttachmentsType *Attachments;	/* optional element of type ns1:NonEmptyArrayOfAttachmentsType */
	bool *MakeItemImmutable;	/* optional element of type xsd:boolean */
public:
	virtual int soap_type() const { return 71; } /* = unique type id SOAP_TYPE_ews__UpdateItemInRecoverableItemsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UpdateItemInRecoverableItemsType() { ews__UpdateItemInRecoverableItemsType::soap_default(NULL); }
	virtual ~ews__UpdateItemInRecoverableItemsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__DeleteItemType
#define SOAP_TYPE_ews__DeleteItemType (73)
/* ews:DeleteItemType */
class SOAP_CMAC ews__DeleteItemType : public ews__BaseRequestType
{
public:
	ns1__NonEmptyArrayOfBaseItemIdsType *ItemIds;	/* required element of type ns1:NonEmptyArrayOfBaseItemIdsType */
	enum ns1__DisposalType DeleteType;	/* required attribute */
	enum ns1__CalendarItemCreateOrDeleteOperationType *SendMeetingCancellations;	/* optional attribute */
	enum ns1__AffectedTaskOccurrencesType *AffectedTaskOccurrences;	/* optional attribute */
	bool *SuppressReadReceipts;	/* optional attribute */
public:
	virtual int soap_type() const { return 73; } /* = unique type id SOAP_TYPE_ews__DeleteItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__DeleteItemType() { ews__DeleteItemType::soap_default(NULL); }
	virtual ~ews__DeleteItemType() { }
};
#endif

#ifndef SOAP_TYPE_ews__AttachmentInfoResponseMessageType
#define SOAP_TYPE_ews__AttachmentInfoResponseMessageType (74)
/* ews:AttachmentInfoResponseMessageType */
class SOAP_CMAC ews__AttachmentInfoResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfAttachmentsType *Attachments;	/* required element of type ns1:ArrayOfAttachmentsType */
public:
	virtual int soap_type() const { return 74; } /* = unique type id SOAP_TYPE_ews__AttachmentInfoResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__AttachmentInfoResponseMessageType() { ews__AttachmentInfoResponseMessageType::soap_default(NULL); }
	virtual ~ews__AttachmentInfoResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__DeleteAttachmentResponseMessageType
#define SOAP_TYPE_ews__DeleteAttachmentResponseMessageType (75)
/* ews:DeleteAttachmentResponseMessageType */
class SOAP_CMAC ews__DeleteAttachmentResponseMessageType : public ews__ResponseMessageType
{
public:
	class ns1__RootItemIdType *RootItemId;	/* optional element of type ns1:RootItemIdType */
public:
	virtual int soap_type() const { return 75; } /* = unique type id SOAP_TYPE_ews__DeleteAttachmentResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__DeleteAttachmentResponseMessageType() { ews__DeleteAttachmentResponseMessageType::soap_default(NULL); }
	virtual ~ews__DeleteAttachmentResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__BaseMoveCopyItemType
#define SOAP_TYPE_ews__BaseMoveCopyItemType (76)
/* ews:BaseMoveCopyItemType */
class SOAP_CMAC ews__BaseMoveCopyItemType : public ews__BaseRequestType
{
public:
	ns1__TargetFolderIdType *ToFolderId;	/* required element of type ns1:TargetFolderIdType */
	ns1__NonEmptyArrayOfBaseItemIdsType *ItemIds;	/* required element of type ns1:NonEmptyArrayOfBaseItemIdsType */
	bool *ReturnNewItemIds;	/* optional element of type xsd:boolean */
public:
	virtual int soap_type() const { return 76; } /* = unique type id SOAP_TYPE_ews__BaseMoveCopyItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__BaseMoveCopyItemType() { ews__BaseMoveCopyItemType::soap_default(NULL); }
	virtual ~ews__BaseMoveCopyItemType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ArchiveItemType
#define SOAP_TYPE_ews__ArchiveItemType (79)
/* ews:ArchiveItemType */
class SOAP_CMAC ews__ArchiveItemType : public ews__BaseRequestType
{
public:
	ns1__TargetFolderIdType *ArchiveSourceFolderId;	/* required element of type ns1:TargetFolderIdType */
	ns1__NonEmptyArrayOfBaseItemIdsType *ItemIds;	/* required element of type ns1:NonEmptyArrayOfBaseItemIdsType */
public:
	virtual int soap_type() const { return 79; } /* = unique type id SOAP_TYPE_ews__ArchiveItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ArchiveItemType() { ews__ArchiveItemType::soap_default(NULL); }
	virtual ~ews__ArchiveItemType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SendItemType
#define SOAP_TYPE_ews__SendItemType (80)
/* ews:SendItemType */
class SOAP_CMAC ews__SendItemType : public ews__BaseRequestType
{
public:
	ns1__NonEmptyArrayOfBaseItemIdsType *ItemIds;	/* required element of type ns1:NonEmptyArrayOfBaseItemIdsType */
	ns1__TargetFolderIdType *SavedItemFolderId;	/* optional element of type ns1:TargetFolderIdType */
	bool SaveItemToFolder;	/* required attribute */
public:
	virtual int soap_type() const { return 80; } /* = unique type id SOAP_TYPE_ews__SendItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SendItemType() { ews__SendItemType::soap_default(NULL); }
	virtual ~ews__SendItemType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SendItemResponseType
#define SOAP_TYPE_ews__SendItemResponseType (81)
/* ews:SendItemResponseType */
class SOAP_CMAC ews__SendItemResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 81; } /* = unique type id SOAP_TYPE_ews__SendItemResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SendItemResponseType() { ews__SendItemResponseType::soap_default(NULL); }
	virtual ~ews__SendItemResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__QueryStringType
#define SOAP_TYPE_ews__QueryStringType (82)
/* Primitive ews:QueryStringType schema type: */
class SOAP_CMAC ews__QueryStringType
{
public:
	std::string __item;
	bool *ResetCache;	/* optional attribute */
	bool *ReturnHighlightTerms;	/* optional attribute */
	bool *ReturnDeletedItems;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 82; } /* = unique type id SOAP_TYPE_ews__QueryStringType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__QueryStringType() { ews__QueryStringType::soap_default(NULL); }
	virtual ~ews__QueryStringType() { }
};
#endif

#ifndef SOAP_TYPE__ews__union_FindItemType
#define SOAP_TYPE__ews__union_FindItemType (2145)
/* xsd:choice */
union _ews__union_FindItemType
{
#define SOAP_UNION__ews__union_FindItemType_IndexedPageItemView	(1)
	ns1__IndexedPageViewType *IndexedPageItemView;
#define SOAP_UNION__ews__union_FindItemType_FractionalPageItemView	(2)
	ns1__FractionalPageViewType *FractionalPageItemView;
#define SOAP_UNION__ews__union_FindItemType_SeekToConditionPageItemView	(3)
	class ns1__SeekToConditionPageViewType *SeekToConditionPageItemView;
#define SOAP_UNION__ews__union_FindItemType_CalendarView	(4)
	class ns1__CalendarViewType *CalendarView;
#define SOAP_UNION__ews__union_FindItemType_ContactsView	(5)
	class ns1__ContactsViewType *ContactsView;
};
#endif

#ifndef SOAP_TYPE__ews__union_FindItemType_
#define SOAP_TYPE__ews__union_FindItemType_ (2148)
/* xsd:choice */
union _ews__union_FindItemType_
{
#define SOAP_UNION__ews__union_FindItemType__GroupBy	(1)
	class ns1__GroupByType *GroupBy;
#define SOAP_UNION__ews__union_FindItemType__DistinguishedGroupBy	(2)
	class ns1__DistinguishedGroupByType *DistinguishedGroupBy;
};
#endif

#ifndef SOAP_TYPE_ews__FindItemType
#define SOAP_TYPE_ews__FindItemType (83)
/* ews:FindItemType */
class SOAP_CMAC ews__FindItemType : public ews__BaseRequestType
{
public:
	ns1__ItemResponseShapeType *ItemShape;	/* required element of type ns1:ItemResponseShapeType */
	int __union_FindItemType;	/* union discriminant (of union defined below) */
	union _ews__union_FindItemType union_FindItemType;	/* required element of type xsd:choice */
	int __union_FindItemType_;	/* union discriminant (of union defined below) */
	union _ews__union_FindItemType_ union_FindItemType_;	/* required element of type xsd:choice */
	ns1__RestrictionType *Restriction;	/* optional element of type ns1:RestrictionType */
	ns1__NonEmptyArrayOfFieldOrdersType *SortOrder;	/* optional element of type ns1:NonEmptyArrayOfFieldOrdersType */
	ns1__NonEmptyArrayOfBaseFolderIdsType *ParentFolderIds;	/* required element of type ns1:NonEmptyArrayOfBaseFolderIdsType */
	ews__QueryStringType *QueryString;	/* optional element of type ews:QueryStringType */
	enum ns1__ItemQueryTraversalType Traversal;	/* required attribute */
public:
	virtual int soap_type() const { return 83; } /* = unique type id SOAP_TYPE_ews__FindItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__FindItemType() { ews__FindItemType::soap_default(NULL); }
	virtual ~ews__FindItemType() { }
};
#endif

#ifndef SOAP_TYPE__ews__union_FindConversationType
#define SOAP_TYPE__ews__union_FindConversationType (2151)
/* xsd:choice */
union _ews__union_FindConversationType
{
#define SOAP_UNION__ews__union_FindConversationType_IndexedPageItemView	(1)
	ns1__IndexedPageViewType *IndexedPageItemView;
#define SOAP_UNION__ews__union_FindConversationType_SeekToConditionPageItemView	(2)
	ns1__SeekToConditionPageViewType *SeekToConditionPageItemView;
};
#endif

#ifndef SOAP_TYPE_ews__FindConversationType
#define SOAP_TYPE_ews__FindConversationType (84)
/* ews:FindConversationType */
class SOAP_CMAC ews__FindConversationType : public ews__BaseRequestType
{
public:
	int __union_FindConversationType;	/* union discriminant (of union defined below) */
	union _ews__union_FindConversationType union_FindConversationType;	/* required element of type xsd:choice */
	ns1__NonEmptyArrayOfFieldOrdersType *SortOrder;	/* optional element of type ns1:NonEmptyArrayOfFieldOrdersType */
	ns1__TargetFolderIdType *ParentFolderId;	/* required element of type ns1:TargetFolderIdType */
	enum ns1__MailboxSearchLocationType *MailboxScope;	/* optional element of type ns1:MailboxSearchLocationType */
	ews__QueryStringType *QueryString;	/* optional element of type ews:QueryStringType */
	ns1__ConversationResponseShapeType *ConversationShape;	/* optional element of type ns1:ConversationResponseShapeType */
	enum ns1__ConversationQueryTraversalType *Traversal;	/* optional attribute */
	enum ns1__ViewFilterType *ViewFilter;	/* optional attribute */
public:
	virtual int soap_type() const { return 84; } /* = unique type id SOAP_TYPE_ews__FindConversationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__FindConversationType() { ews__FindConversationType::soap_default(NULL); }
	virtual ~ews__FindConversationType() { }
};
#endif

#ifndef SOAP_TYPE_ews__FindConversationResponseMessageType
#define SOAP_TYPE_ews__FindConversationResponseMessageType (85)
/* ews:FindConversationResponseMessageType */
class SOAP_CMAC ews__FindConversationResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfConversationsType *Conversations;	/* optional element of type ns1:ArrayOfConversationsType */
	ns1__ArrayOfHighlightTermsType *HighlightTerms;	/* optional element of type ns1:ArrayOfHighlightTermsType */
	int *TotalConversationsInView;	/* optional element of type xsd:int */
	int *IndexedOffset;	/* optional element of type xsd:int */
public:
	virtual int soap_type() const { return 85; } /* = unique type id SOAP_TYPE_ews__FindConversationResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__FindConversationResponseMessageType() { ews__FindConversationResponseMessageType::soap_default(NULL); }
	virtual ~ews__FindConversationResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__PerformInstantSearchRequest
#define SOAP_TYPE_ews__PerformInstantSearchRequest (86)
/* ews:PerformInstantSearchRequest */
class SOAP_CMAC ews__PerformInstantSearchRequest : public ews__BaseRequestType
{
public:
	std::string SearchSessionId;	/* required element of type xsd:string */
	enum ns1__InstantSearchItemType ItemType;	/* required element of type ns1:InstantSearchItemType */
	enum ns1__QueryOptionsType QueryOptions;	/* required element of type ns1:QueryOptionsType */
	LONG64 SearchRequestId;	/* required element of type xsd:long */
	std::string KqlQuery;	/* required element of type xsd:string */
	ns1__ArrayOfFolderIdType *FolderScope;	/* required element of type ns1:ArrayOfFolderIdType */
	ns1__ArrayOfDistinguishedFolderIdType *DistinguishedFolderScope;	/* optional element of type ns1:ArrayOfDistinguishedFolderIdType */
	bool *IsDeepTraversal;	/* optional element of type xsd:boolean */
	bool *WaitOnSearchResults;	/* optional element of type xsd:boolean */
public:
	virtual int soap_type() const { return 86; } /* = unique type id SOAP_TYPE_ews__PerformInstantSearchRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__PerformInstantSearchRequest() { ews__PerformInstantSearchRequest::soap_default(NULL); }
	virtual ~ews__PerformInstantSearchRequest() { }
};
#endif

#ifndef SOAP_TYPE_ews__PerformInstantSearchResponse
#define SOAP_TYPE_ews__PerformInstantSearchResponse (87)
/* ews:PerformInstantSearchResponse */
class SOAP_CMAC ews__PerformInstantSearchResponse : public ews__ResponseMessageType
{
public:
	ns1__InstantSearchPayloadType *Payload;	/* optional element of type ns1:InstantSearchPayloadType */
public:
	virtual int soap_type() const { return 87; } /* = unique type id SOAP_TYPE_ews__PerformInstantSearchResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__PerformInstantSearchResponse() { ews__PerformInstantSearchResponse::soap_default(NULL); }
	virtual ~ews__PerformInstantSearchResponse() { }
};
#endif

#ifndef SOAP_TYPE_ews__EndInstantSearchSessionRequest
#define SOAP_TYPE_ews__EndInstantSearchSessionRequest (88)
/* ews:EndInstantSearchSessionRequest */
class SOAP_CMAC ews__EndInstantSearchSessionRequest : public ews__BaseRequestType
{
public:
	std::string SessionId;	/* required element of type xsd:string */
public:
	virtual int soap_type() const { return 88; } /* = unique type id SOAP_TYPE_ews__EndInstantSearchSessionRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__EndInstantSearchSessionRequest() { ews__EndInstantSearchSessionRequest::soap_default(NULL); }
	virtual ~ews__EndInstantSearchSessionRequest() { }
};
#endif

#ifndef SOAP_TYPE_ews__StartSearchSession
#define SOAP_TYPE_ews__StartSearchSession (89)
/* ews:StartSearchSession */
class SOAP_CMAC ews__StartSearchSession : public ews__BaseRequestType
{
public:
	std::string SearchSessionId;	/* required element of type ns1:GuidType */
	enum ns1__WarmupOptionsType WarmupOptions;	/* required element of type ns1:WarmupOptionsType */
	enum ns1__SuggestionKindType SuggestionTypes;	/* required element of type ns1:SuggestionKindType */
	ns1__ArrayOfSearchScopeType *SearchScope;	/* required element of type ns1:ArrayOfSearchScopeType */
	enum ns1__IdFormatType *IdFormat;	/* optional element of type ns1:IdFormatType */
public:
	virtual int soap_type() const { return 89; } /* = unique type id SOAP_TYPE_ews__StartSearchSession */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__StartSearchSession() { ews__StartSearchSession::soap_default(NULL); }
	virtual ~ews__StartSearchSession() { }
};
#endif

#ifndef SOAP_TYPE_ews__StartSearchSessionResponseMessage
#define SOAP_TYPE_ews__StartSearchSessionResponseMessage (90)
/* ews:StartSearchSessionResponseMessage */
class SOAP_CMAC ews__StartSearchSessionResponseMessage : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 90; } /* = unique type id SOAP_TYPE_ews__StartSearchSessionResponseMessage */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__StartSearchSessionResponseMessage() { ews__StartSearchSessionResponseMessage::soap_default(NULL); }
	virtual ~ews__StartSearchSessionResponseMessage() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetSearchSuggestions
#define SOAP_TYPE_ews__GetSearchSuggestions (91)
/* ews:GetSearchSuggestions */
class SOAP_CMAC ews__GetSearchSuggestions : public ews__BaseRequestType
{
public:
	std::string SearchSessionId;	/* required element of type ns1:GuidType */
	std::string *Query;	/* optional element of type xsd:string */
	enum ns1__SuggestionKindType *SuggestionTypes;	/* optional element of type ns1:SuggestionKindType */
	bool *SuggestionsPrimer;	/* optional element of type xsd:boolean */
	LONG64 *MaxSuggestionsCountPerSuggestionType;	/* optional element of type xsd:long */
public:
	virtual int soap_type() const { return 91; } /* = unique type id SOAP_TYPE_ews__GetSearchSuggestions */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetSearchSuggestions() { ews__GetSearchSuggestions::soap_default(NULL); }
	virtual ~ews__GetSearchSuggestions() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetSearchSuggestionsResponseMessage
#define SOAP_TYPE_ews__GetSearchSuggestionsResponseMessage (92)
/* ews:GetSearchSuggestionsResponseMessage */
class SOAP_CMAC ews__GetSearchSuggestionsResponseMessage : public ews__ResponseMessageType
{
public:
	ns1__SearchSuggestionsType *SearchSuggestions;	/* required element of type ns1:SearchSuggestionsType */
public:
	virtual int soap_type() const { return 92; } /* = unique type id SOAP_TYPE_ews__GetSearchSuggestionsResponseMessage */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetSearchSuggestionsResponseMessage() { ews__GetSearchSuggestionsResponseMessage::soap_default(NULL); }
	virtual ~ews__GetSearchSuggestionsResponseMessage() { }
};
#endif

#ifndef SOAP_TYPE__ews__ExecuteSearch_SearchRefiners
#define SOAP_TYPE__ews__ExecuteSearch_SearchRefiners (2162)
/* ews:ExecuteSearch-SearchRefiners */
class SOAP_CMAC _ews__ExecuteSearch_SearchRefiners
{
public:
	std::vector<ns1__DynamicRefinerQueryType * >SearchRefiner;	/* optional element of type ns1:DynamicRefinerQueryType */
public:
	virtual int soap_type() const { return 2162; } /* = unique type id SOAP_TYPE__ews__ExecuteSearch_SearchRefiners */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ews__ExecuteSearch_SearchRefiners() { _ews__ExecuteSearch_SearchRefiners::soap_default(NULL); }
	virtual ~_ews__ExecuteSearch_SearchRefiners() { }
};
#endif

#ifndef SOAP_TYPE_ews__ExecuteSearch
#define SOAP_TYPE_ews__ExecuteSearch (93)
/* ews:ExecuteSearch */
class SOAP_CMAC ews__ExecuteSearch : public ews__BaseRequestType
{
public:
	std::string SearchSessionId;	/* required element of type ns1:GuidType */
	ns1__ArrayOfSearchScopeType *SearchScope;	/* required element of type ns1:ArrayOfSearchScopeType */
	std::string Query;	/* required element of type xsd:string */
	LONG64 *ResultRowCount;	/* optional element of type xsd:long */
	LONG64 *ResultRowOffset;	/* optional element of type xsd:long */
	LONG64 *MaxResultsCountHint;	/* optional element of type xsd:long */
	LONG64 *MaxPreviewLength;	/* optional element of type xsd:long */
	_ews__ExecuteSearch_SearchRefiners *SearchRefiners;	/* optional element of type ews:ExecuteSearch-SearchRefiners */
	bool *RetrieveRefiners;	/* optional element of type xsd:boolean */
	LONG64 *MaxRefinersCountPerRefinerType;	/* optional element of type xsd:long */
	enum ns1__IdFormatType *IdFormat;	/* optional element of type ns1:IdFormatType */
	enum ns1__ItemTypesFilterType ItemTypes;	/* required element of type ns1:ItemTypesFilterType */
	enum ns1__SearchResultsPropertySetNameType *PropertySetName;	/* optional element of type ns1:SearchResultsPropertySetNameType */
	ns1__RestrictionType *SearchRestrictions;	/* optional element of type ns1:RestrictionType */
public:
	virtual int soap_type() const { return 93; } /* = unique type id SOAP_TYPE_ews__ExecuteSearch */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ExecuteSearch() { ews__ExecuteSearch::soap_default(NULL); }
	virtual ~ews__ExecuteSearch() { }
};
#endif

#ifndef SOAP_TYPE_ews__ExecuteSearchResponseMessage
#define SOAP_TYPE_ews__ExecuteSearchResponseMessage (94)
/* ews:ExecuteSearchResponseMessage */
class SOAP_CMAC ews__ExecuteSearchResponseMessage : public ews__ResponseMessageType
{
public:
	ns1__SearchResultsType *SearchResults;	/* required element of type ns1:SearchResultsType */
public:
	virtual int soap_type() const { return 94; } /* = unique type id SOAP_TYPE_ews__ExecuteSearchResponseMessage */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ExecuteSearchResponseMessage() { ews__ExecuteSearchResponseMessage::soap_default(NULL); }
	virtual ~ews__ExecuteSearchResponseMessage() { }
};
#endif

#ifndef SOAP_TYPE_ews__EndSearchSession
#define SOAP_TYPE_ews__EndSearchSession (95)
/* ews:EndSearchSession */
class SOAP_CMAC ews__EndSearchSession : public ews__BaseRequestType
{
public:
	std::string SearchSessionId;	/* required element of type ns1:GuidType */
public:
	virtual int soap_type() const { return 95; } /* = unique type id SOAP_TYPE_ews__EndSearchSession */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__EndSearchSession() { ews__EndSearchSession::soap_default(NULL); }
	virtual ~ews__EndSearchSession() { }
};
#endif

#ifndef SOAP_TYPE_ews__EndSearchSessionResponseMessage
#define SOAP_TYPE_ews__EndSearchSessionResponseMessage (96)
/* ews:EndSearchSessionResponseMessage */
class SOAP_CMAC ews__EndSearchSessionResponseMessage : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 96; } /* = unique type id SOAP_TYPE_ews__EndSearchSessionResponseMessage */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__EndSearchSessionResponseMessage() { ews__EndSearchSessionResponseMessage::soap_default(NULL); }
	virtual ~ews__EndSearchSessionResponseMessage() { }
};
#endif

#ifndef SOAP_TYPE_ews__ApplyConversationActionType
#define SOAP_TYPE_ews__ApplyConversationActionType (97)
/* ews:ApplyConversationActionType */
class SOAP_CMAC ews__ApplyConversationActionType : public ews__BaseRequestType
{
public:
	ns1__NonEmptyArrayOfApplyConversationActionType *ConversationActions;	/* required element of type ns1:NonEmptyArrayOfApplyConversationActionType */
public:
	virtual int soap_type() const { return 97; } /* = unique type id SOAP_TYPE_ews__ApplyConversationActionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ApplyConversationActionType() { ews__ApplyConversationActionType::soap_default(NULL); }
	virtual ~ews__ApplyConversationActionType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ApplyConversationActionResponseType
#define SOAP_TYPE_ews__ApplyConversationActionResponseType (98)
/* ews:ApplyConversationActionResponseType */
class SOAP_CMAC ews__ApplyConversationActionResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 98; } /* = unique type id SOAP_TYPE_ews__ApplyConversationActionResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ApplyConversationActionResponseType() { ews__ApplyConversationActionResponseType::soap_default(NULL); }
	virtual ~ews__ApplyConversationActionResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ApplyConversationActionResponseMessageType
#define SOAP_TYPE_ews__ApplyConversationActionResponseMessageType (99)
/* ews:ApplyConversationActionResponseMessageType */
class SOAP_CMAC ews__ApplyConversationActionResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 99; } /* = unique type id SOAP_TYPE_ews__ApplyConversationActionResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ApplyConversationActionResponseMessageType() { ews__ApplyConversationActionResponseMessageType::soap_default(NULL); }
	virtual ~ews__ApplyConversationActionResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__FindPeopleType
#define SOAP_TYPE_ews__FindPeopleType (100)
/* ews:FindPeopleType */
class SOAP_CMAC ews__FindPeopleType : public ews__BaseRequestType
{
public:
	ns1__PersonaResponseShapeType *PersonaShape;	/* optional element of type ns1:PersonaResponseShapeType */
	ns1__IndexedPageViewType *IndexedPageItemView;	/* required element of type ns1:IndexedPageViewType */
	ns1__RestrictionType *Restriction;	/* optional element of type ns1:RestrictionType */
	ns1__RestrictionType *AggregationRestriction;	/* optional element of type ns1:RestrictionType */
	ns1__NonEmptyArrayOfFieldOrdersType *SortOrder;	/* optional element of type ns1:NonEmptyArrayOfFieldOrdersType */
	ns1__TargetFolderIdType *ParentFolderId;	/* optional element of type ns1:TargetFolderIdType */
	std::string *QueryString;	/* optional element of type xsd:string */
	bool *SearchPeopleSuggestionIndex;	/* optional element of type xsd:boolean */
	std::string *TopicQueryString;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 100; } /* = unique type id SOAP_TYPE_ews__FindPeopleType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__FindPeopleType() { ews__FindPeopleType::soap_default(NULL); }
	virtual ~ews__FindPeopleType() { }
};
#endif

#ifndef SOAP_TYPE_ews__FindPeopleResponseMessageType
#define SOAP_TYPE_ews__FindPeopleResponseMessageType (101)
/* ews:FindPeopleResponseMessageType */
class SOAP_CMAC ews__FindPeopleResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfPeopleType *People;	/* optional element of type ns1:ArrayOfPeopleType */
	int *TotalNumberOfPeopleInView;	/* optional element of type xsd:int */
	int *FirstMatchingRowIndex;	/* optional element of type xsd:int */
	int *FirstLoadedRowIndex;	/* optional element of type xsd:int */
public:
	virtual int soap_type() const { return 101; } /* = unique type id SOAP_TYPE_ews__FindPeopleResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__FindPeopleResponseMessageType() { ews__FindPeopleResponseMessageType::soap_default(NULL); }
	virtual ~ews__FindPeopleResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetPersonaType
#define SOAP_TYPE_ews__GetPersonaType (102)
/* ews:GetPersonaType */
class SOAP_CMAC ews__GetPersonaType : public ews__BaseRequestType
{
public:
	ns1__ItemIdType *PersonaId;	/* optional element of type ns1:ItemIdType */
	ns1__EmailAddressType *EmailAddress;	/* optional element of type ns1:EmailAddressType */
public:
	virtual int soap_type() const { return 102; } /* = unique type id SOAP_TYPE_ews__GetPersonaType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetPersonaType() { ews__GetPersonaType::soap_default(NULL); }
	virtual ~ews__GetPersonaType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetPersonaResponseMessageType
#define SOAP_TYPE_ews__GetPersonaResponseMessageType (103)
/* ews:GetPersonaResponseMessageType */
class SOAP_CMAC ews__GetPersonaResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__PersonaType *Persona;	/* required element of type ns1:PersonaType */
public:
	virtual int soap_type() const { return 103; } /* = unique type id SOAP_TYPE_ews__GetPersonaResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetPersonaResponseMessageType() { ews__GetPersonaResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetPersonaResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UpdateMailboxAssociationType
#define SOAP_TYPE_ews__UpdateMailboxAssociationType (104)
/* ews:UpdateMailboxAssociationType */
class SOAP_CMAC ews__UpdateMailboxAssociationType : public ews__BaseRequestType
{
public:
	ns1__MailboxAssociationType *Association;	/* required element of type ns1:MailboxAssociationType */
	ns1__MasterMailboxType *Master;	/* required element of type ns1:MasterMailboxType */
public:
	virtual int soap_type() const { return 104; } /* = unique type id SOAP_TYPE_ews__UpdateMailboxAssociationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UpdateMailboxAssociationType() { ews__UpdateMailboxAssociationType::soap_default(NULL); }
	virtual ~ews__UpdateMailboxAssociationType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UpdateMailboxAssociationResponseType
#define SOAP_TYPE_ews__UpdateMailboxAssociationResponseType (105)
/* ews:UpdateMailboxAssociationResponseType */
class SOAP_CMAC ews__UpdateMailboxAssociationResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 105; } /* = unique type id SOAP_TYPE_ews__UpdateMailboxAssociationResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UpdateMailboxAssociationResponseType() { ews__UpdateMailboxAssociationResponseType::soap_default(NULL); }
	virtual ~ews__UpdateMailboxAssociationResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UpdateGroupMailboxType
#define SOAP_TYPE_ews__UpdateGroupMailboxType (106)
/* ews:UpdateGroupMailboxType */
class SOAP_CMAC ews__UpdateGroupMailboxType : public ews__BaseRequestType
{
public:
	std::string GroupSmtpAddress;	/* required element of type ns1:NonEmptyStringType */
	std::string *ExecutingUserSmtpAddress;	/* optional element of type ns1:NonEmptyStringType */
	std::string *DomainController;	/* optional element of type xsd:string */
	enum ns1__GroupMailboxConfigurationActionType ForceConfigurationAction;	/* required element of type ns1:GroupMailboxConfigurationActionType */
	enum ns1__GroupMemberIdentifierType *MemberIdentifierType;	/* optional element of type ns1:GroupMemberIdentifierType */
	ns1__ArrayOfStringsType *AddedMembers;	/* optional element of type ns1:ArrayOfStringsType */
	ns1__ArrayOfStringsType *RemovedMembers;	/* optional element of type ns1:ArrayOfStringsType */
	ns1__ArrayOfStringsType *AddedPendingMembers;	/* optional element of type ns1:ArrayOfStringsType */
	ns1__ArrayOfStringsType *RemovedPendingMembers;	/* optional element of type ns1:ArrayOfStringsType */
	bool *CalendarMemberReadOnly;	/* optional element of type xsd:boolean */
public:
	virtual int soap_type() const { return 106; } /* = unique type id SOAP_TYPE_ews__UpdateGroupMailboxType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UpdateGroupMailboxType() { ews__UpdateGroupMailboxType::soap_default(NULL); }
	virtual ~ews__UpdateGroupMailboxType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UpdateGroupMailboxResponseType
#define SOAP_TYPE_ews__UpdateGroupMailboxResponseType (107)
/* ews:UpdateGroupMailboxResponseType */
class SOAP_CMAC ews__UpdateGroupMailboxResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 107; } /* = unique type id SOAP_TYPE_ews__UpdateGroupMailboxResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UpdateGroupMailboxResponseType() { ews__UpdateGroupMailboxResponseType::soap_default(NULL); }
	virtual ~ews__UpdateGroupMailboxResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CreateAttachmentType
#define SOAP_TYPE_ews__CreateAttachmentType (108)
/* ews:CreateAttachmentType */
class SOAP_CMAC ews__CreateAttachmentType : public ews__BaseRequestType
{
public:
	ns1__ItemIdType *ParentItemId;	/* required element of type ns1:ItemIdType */
	ns1__NonEmptyArrayOfAttachmentsType *Attachments;	/* required element of type ns1:NonEmptyArrayOfAttachmentsType */
public:
	virtual int soap_type() const { return 108; } /* = unique type id SOAP_TYPE_ews__CreateAttachmentType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CreateAttachmentType() { ews__CreateAttachmentType::soap_default(NULL); }
	virtual ~ews__CreateAttachmentType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CreateAttachmentResponseType
#define SOAP_TYPE_ews__CreateAttachmentResponseType (109)
/* ews:CreateAttachmentResponseType */
class SOAP_CMAC ews__CreateAttachmentResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 109; } /* = unique type id SOAP_TYPE_ews__CreateAttachmentResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CreateAttachmentResponseType() { ews__CreateAttachmentResponseType::soap_default(NULL); }
	virtual ~ews__CreateAttachmentResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__DeleteAttachmentType
#define SOAP_TYPE_ews__DeleteAttachmentType (110)
/* ews:DeleteAttachmentType */
class SOAP_CMAC ews__DeleteAttachmentType : public ews__BaseRequestType
{
public:
	ns1__NonEmptyArrayOfRequestAttachmentIdsType *AttachmentIds;	/* required element of type ns1:NonEmptyArrayOfRequestAttachmentIdsType */
public:
	virtual int soap_type() const { return 110; } /* = unique type id SOAP_TYPE_ews__DeleteAttachmentType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__DeleteAttachmentType() { ews__DeleteAttachmentType::soap_default(NULL); }
	virtual ~ews__DeleteAttachmentType() { }
};
#endif

#ifndef SOAP_TYPE_ews__DeleteAttachmentResponseType
#define SOAP_TYPE_ews__DeleteAttachmentResponseType (111)
/* ews:DeleteAttachmentResponseType */
class SOAP_CMAC ews__DeleteAttachmentResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 111; } /* = unique type id SOAP_TYPE_ews__DeleteAttachmentResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__DeleteAttachmentResponseType() { ews__DeleteAttachmentResponseType::soap_default(NULL); }
	virtual ~ews__DeleteAttachmentResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetAttachmentType
#define SOAP_TYPE_ews__GetAttachmentType (112)
/* ews:GetAttachmentType */
class SOAP_CMAC ews__GetAttachmentType : public ews__BaseRequestType
{
public:
	ns1__AttachmentResponseShapeType *AttachmentShape;	/* optional element of type ns1:AttachmentResponseShapeType */
	ns1__NonEmptyArrayOfRequestAttachmentIdsType *AttachmentIds;	/* required element of type ns1:NonEmptyArrayOfRequestAttachmentIdsType */
public:
	virtual int soap_type() const { return 112; } /* = unique type id SOAP_TYPE_ews__GetAttachmentType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetAttachmentType() { ews__GetAttachmentType::soap_default(NULL); }
	virtual ~ews__GetAttachmentType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetAttachmentResponseType
#define SOAP_TYPE_ews__GetAttachmentResponseType (113)
/* ews:GetAttachmentResponseType */
class SOAP_CMAC ews__GetAttachmentResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 113; } /* = unique type id SOAP_TYPE_ews__GetAttachmentResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetAttachmentResponseType() { ews__GetAttachmentResponseType::soap_default(NULL); }
	virtual ~ews__GetAttachmentResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CreateItemResponseType
#define SOAP_TYPE_ews__CreateItemResponseType (114)
/* ews:CreateItemResponseType */
class SOAP_CMAC ews__CreateItemResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 114; } /* = unique type id SOAP_TYPE_ews__CreateItemResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CreateItemResponseType() { ews__CreateItemResponseType::soap_default(NULL); }
	virtual ~ews__CreateItemResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UpdateItemResponseType
#define SOAP_TYPE_ews__UpdateItemResponseType (115)
/* ews:UpdateItemResponseType */
class SOAP_CMAC ews__UpdateItemResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 115; } /* = unique type id SOAP_TYPE_ews__UpdateItemResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UpdateItemResponseType() { ews__UpdateItemResponseType::soap_default(NULL); }
	virtual ~ews__UpdateItemResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UpdateItemInRecoverableItemsResponseType
#define SOAP_TYPE_ews__UpdateItemInRecoverableItemsResponseType (116)
/* ews:UpdateItemInRecoverableItemsResponseType */
class SOAP_CMAC ews__UpdateItemInRecoverableItemsResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 116; } /* = unique type id SOAP_TYPE_ews__UpdateItemInRecoverableItemsResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UpdateItemInRecoverableItemsResponseType() { ews__UpdateItemInRecoverableItemsResponseType::soap_default(NULL); }
	virtual ~ews__UpdateItemInRecoverableItemsResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetItemResponseType
#define SOAP_TYPE_ews__GetItemResponseType (117)
/* ews:GetItemResponseType */
class SOAP_CMAC ews__GetItemResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 117; } /* = unique type id SOAP_TYPE_ews__GetItemResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetItemResponseType() { ews__GetItemResponseType::soap_default(NULL); }
	virtual ~ews__GetItemResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__MoveItemResponseType
#define SOAP_TYPE_ews__MoveItemResponseType (118)
/* ews:MoveItemResponseType */
class SOAP_CMAC ews__MoveItemResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 118; } /* = unique type id SOAP_TYPE_ews__MoveItemResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__MoveItemResponseType() { ews__MoveItemResponseType::soap_default(NULL); }
	virtual ~ews__MoveItemResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CopyItemResponseType
#define SOAP_TYPE_ews__CopyItemResponseType (119)
/* ews:CopyItemResponseType */
class SOAP_CMAC ews__CopyItemResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 119; } /* = unique type id SOAP_TYPE_ews__CopyItemResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CopyItemResponseType() { ews__CopyItemResponseType::soap_default(NULL); }
	virtual ~ews__CopyItemResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__DeleteItemResponseType
#define SOAP_TYPE_ews__DeleteItemResponseType (120)
/* ews:DeleteItemResponseType */
class SOAP_CMAC ews__DeleteItemResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 120; } /* = unique type id SOAP_TYPE_ews__DeleteItemResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__DeleteItemResponseType() { ews__DeleteItemResponseType::soap_default(NULL); }
	virtual ~ews__DeleteItemResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__DeleteItemResponseMessageType
#define SOAP_TYPE_ews__DeleteItemResponseMessageType (121)
/* ews:DeleteItemResponseMessageType */
class SOAP_CMAC ews__DeleteItemResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 121; } /* = unique type id SOAP_TYPE_ews__DeleteItemResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__DeleteItemResponseMessageType() { ews__DeleteItemResponseMessageType::soap_default(NULL); }
	virtual ~ews__DeleteItemResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__FindItemResponseMessageType
#define SOAP_TYPE_ews__FindItemResponseMessageType (122)
/* ews:FindItemResponseMessageType */
class SOAP_CMAC ews__FindItemResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__FindItemParentType *RootFolder;	/* optional element of type ns1:FindItemParentType */
	ns1__ArrayOfHighlightTermsType *HighlightTerms;	/* optional element of type ns1:ArrayOfHighlightTermsType */
public:
	virtual int soap_type() const { return 122; } /* = unique type id SOAP_TYPE_ews__FindItemResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__FindItemResponseMessageType() { ews__FindItemResponseMessageType::soap_default(NULL); }
	virtual ~ews__FindItemResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__FindItemResponseType
#define SOAP_TYPE_ews__FindItemResponseType (123)
/* ews:FindItemResponseType */
class SOAP_CMAC ews__FindItemResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 123; } /* = unique type id SOAP_TYPE_ews__FindItemResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__FindItemResponseType() { ews__FindItemResponseType::soap_default(NULL); }
	virtual ~ews__FindItemResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ArchiveItemResponseType
#define SOAP_TYPE_ews__ArchiveItemResponseType (124)
/* ews:ArchiveItemResponseType */
class SOAP_CMAC ews__ArchiveItemResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 124; } /* = unique type id SOAP_TYPE_ews__ArchiveItemResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ArchiveItemResponseType() { ews__ArchiveItemResponseType::soap_default(NULL); }
	virtual ~ews__ArchiveItemResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetClientAccessTokenType
#define SOAP_TYPE_ews__GetClientAccessTokenType (125)
/* ews:GetClientAccessTokenType */
class SOAP_CMAC ews__GetClientAccessTokenType : public ews__BaseRequestType
{
public:
	ns1__NonEmptyArrayOfClientAccessTokenRequestsType *TokenRequests;	/* required element of type ns1:NonEmptyArrayOfClientAccessTokenRequestsType */
public:
	virtual int soap_type() const { return 125; } /* = unique type id SOAP_TYPE_ews__GetClientAccessTokenType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetClientAccessTokenType() { ews__GetClientAccessTokenType::soap_default(NULL); }
	virtual ~ews__GetClientAccessTokenType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetClientAccessTokenResponseMessageType
#define SOAP_TYPE_ews__GetClientAccessTokenResponseMessageType (126)
/* ews:GetClientAccessTokenResponseMessageType */
class SOAP_CMAC ews__GetClientAccessTokenResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ClientAccessTokenType *Token;	/* optional element of type ns1:ClientAccessTokenType */
public:
	virtual int soap_type() const { return 126; } /* = unique type id SOAP_TYPE_ews__GetClientAccessTokenResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetClientAccessTokenResponseMessageType() { ews__GetClientAccessTokenResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetClientAccessTokenResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetClientAccessTokenResponseType
#define SOAP_TYPE_ews__GetClientAccessTokenResponseType (127)
/* ews:GetClientAccessTokenResponseType */
class SOAP_CMAC ews__GetClientAccessTokenResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 127; } /* = unique type id SOAP_TYPE_ews__GetClientAccessTokenResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetClientAccessTokenResponseType() { ews__GetClientAccessTokenResponseType::soap_default(NULL); }
	virtual ~ews__GetClientAccessTokenResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ResolveNamesType
#define SOAP_TYPE_ews__ResolveNamesType (128)
/* ews:ResolveNamesType */
class SOAP_CMAC ews__ResolveNamesType : public ews__BaseRequestType
{
public:
	ns1__NonEmptyArrayOfBaseFolderIdsType *ParentFolderIds;	/* optional element of type ns1:NonEmptyArrayOfBaseFolderIdsType */
	std::string UnresolvedEntry;	/* required element of type ns1:NonEmptyStringType */
	bool ReturnFullContactData;	/* required attribute */
	enum ns1__ResolveNamesSearchScopeType SearchScope;	/* optional attribute */
	enum ns1__DefaultShapeNamesType *ContactDataShape;	/* optional attribute */
public:
	virtual int soap_type() const { return 128; } /* = unique type id SOAP_TYPE_ews__ResolveNamesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ResolveNamesType() { ews__ResolveNamesType::soap_default(NULL); }
	virtual ~ews__ResolveNamesType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ResolveNamesResponseMessageType
#define SOAP_TYPE_ews__ResolveNamesResponseMessageType (129)
/* ews:ResolveNamesResponseMessageType */
class SOAP_CMAC ews__ResolveNamesResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfResolutionType *ResolutionSet;	/* optional element of type ns1:ArrayOfResolutionType */
public:
	virtual int soap_type() const { return 129; } /* = unique type id SOAP_TYPE_ews__ResolveNamesResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ResolveNamesResponseMessageType() { ews__ResolveNamesResponseMessageType::soap_default(NULL); }
	virtual ~ews__ResolveNamesResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ResolveNamesResponseType
#define SOAP_TYPE_ews__ResolveNamesResponseType (130)
/* ews:ResolveNamesResponseType */
class SOAP_CMAC ews__ResolveNamesResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 130; } /* = unique type id SOAP_TYPE_ews__ResolveNamesResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ResolveNamesResponseType() { ews__ResolveNamesResponseType::soap_default(NULL); }
	virtual ~ews__ResolveNamesResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetPasswordExpirationDateType
#define SOAP_TYPE_ews__GetPasswordExpirationDateType (131)
/* ews:GetPasswordExpirationDateType */
class SOAP_CMAC ews__GetPasswordExpirationDateType : public ews__BaseRequestType
{
public:
	std::string *MailboxSmtpAddress;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 131; } /* = unique type id SOAP_TYPE_ews__GetPasswordExpirationDateType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetPasswordExpirationDateType() { ews__GetPasswordExpirationDateType::soap_default(NULL); }
	virtual ~ews__GetPasswordExpirationDateType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetPasswordExpirationDateResponseMessageType
#define SOAP_TYPE_ews__GetPasswordExpirationDateResponseMessageType (132)
/* ews:GetPasswordExpirationDateResponseMessageType */
class SOAP_CMAC ews__GetPasswordExpirationDateResponseMessageType : public ews__ResponseMessageType
{
public:
	time_t PasswordExpirationDate;	/* required element of type xsd:dateTime */
public:
	virtual int soap_type() const { return 132; } /* = unique type id SOAP_TYPE_ews__GetPasswordExpirationDateResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetPasswordExpirationDateResponseMessageType() { ews__GetPasswordExpirationDateResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetPasswordExpirationDateResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetMailTipsType
#define SOAP_TYPE_ews__GetMailTipsType (133)
/* ews:GetMailTipsType */
class SOAP_CMAC ews__GetMailTipsType : public ews__BaseRequestType
{
public:
	ns1__EmailAddressType *SendingAs;	/* required element of type ns1:EmailAddressType */
	ns1__ArrayOfRecipientsType *Recipients;	/* required element of type ns1:ArrayOfRecipientsType */
	enum ns1__MailTipTypes MailTipsRequested;	/* required element of type ns1:MailTipTypes */
public:
	virtual int soap_type() const { return 133; } /* = unique type id SOAP_TYPE_ews__GetMailTipsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetMailTipsType() { ews__GetMailTipsType::soap_default(NULL); }
	virtual ~ews__GetMailTipsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetMailTipsResponseMessageType
#define SOAP_TYPE_ews__GetMailTipsResponseMessageType (134)
/* ews:GetMailTipsResponseMessageType */
class SOAP_CMAC ews__GetMailTipsResponseMessageType : public ews__ResponseMessageType
{
public:
	ews__ArrayOfMailTipsResponseMessageType *ResponseMessages;	/* optional element of type ews:ArrayOfMailTipsResponseMessageType */
public:
	virtual int soap_type() const { return 134; } /* = unique type id SOAP_TYPE_ews__GetMailTipsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetMailTipsResponseMessageType() { ews__GetMailTipsResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetMailTipsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__MailTipsResponseMessageType
#define SOAP_TYPE_ews__MailTipsResponseMessageType (136)
/* ews:MailTipsResponseMessageType */
class SOAP_CMAC ews__MailTipsResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__MailTips *MailTips;	/* optional element of type ns1:MailTips */
public:
	virtual int soap_type() const { return 136; } /* = unique type id SOAP_TYPE_ews__MailTipsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__MailTipsResponseMessageType() { ews__MailTipsResponseMessageType::soap_default(NULL); }
	virtual ~ews__MailTipsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__PlayOnPhoneType
#define SOAP_TYPE_ews__PlayOnPhoneType (137)
/* ews:PlayOnPhoneType */
class SOAP_CMAC ews__PlayOnPhoneType : public ews__BaseRequestType
{
public:
	ns1__ItemIdType *ItemId;	/* required element of type ns1:ItemIdType */
	std::string DialString;	/* required element of type xsd:string */
public:
	virtual int soap_type() const { return 137; } /* = unique type id SOAP_TYPE_ews__PlayOnPhoneType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__PlayOnPhoneType() { ews__PlayOnPhoneType::soap_default(NULL); }
	virtual ~ews__PlayOnPhoneType() { }
};
#endif

#ifndef SOAP_TYPE_ews__PlayOnPhoneResponseMessageType
#define SOAP_TYPE_ews__PlayOnPhoneResponseMessageType (138)
/* ews:PlayOnPhoneResponseMessageType */
class SOAP_CMAC ews__PlayOnPhoneResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__PhoneCallIdType *PhoneCallId;	/* optional element of type ns1:PhoneCallIdType */
public:
	virtual int soap_type() const { return 138; } /* = unique type id SOAP_TYPE_ews__PlayOnPhoneResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__PlayOnPhoneResponseMessageType() { ews__PlayOnPhoneResponseMessageType::soap_default(NULL); }
	virtual ~ews__PlayOnPhoneResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetPhoneCallInformationType
#define SOAP_TYPE_ews__GetPhoneCallInformationType (139)
/* ews:GetPhoneCallInformationType */
class SOAP_CMAC ews__GetPhoneCallInformationType : public ews__BaseRequestType
{
public:
	ns1__PhoneCallIdType *PhoneCallId;	/* required element of type ns1:PhoneCallIdType */
public:
	virtual int soap_type() const { return 139; } /* = unique type id SOAP_TYPE_ews__GetPhoneCallInformationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetPhoneCallInformationType() { ews__GetPhoneCallInformationType::soap_default(NULL); }
	virtual ~ews__GetPhoneCallInformationType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetPhoneCallInformationResponseMessageType
#define SOAP_TYPE_ews__GetPhoneCallInformationResponseMessageType (140)
/* ews:GetPhoneCallInformationResponseMessageType */
class SOAP_CMAC ews__GetPhoneCallInformationResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__PhoneCallInformationType *PhoneCallInformation;	/* optional element of type ns1:PhoneCallInformationType */
public:
	virtual int soap_type() const { return 140; } /* = unique type id SOAP_TYPE_ews__GetPhoneCallInformationResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetPhoneCallInformationResponseMessageType() { ews__GetPhoneCallInformationResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetPhoneCallInformationResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__DisconnectPhoneCallType
#define SOAP_TYPE_ews__DisconnectPhoneCallType (141)
/* ews:DisconnectPhoneCallType */
class SOAP_CMAC ews__DisconnectPhoneCallType : public ews__BaseRequestType
{
public:
	ns1__PhoneCallIdType *PhoneCallId;	/* required element of type ns1:PhoneCallIdType */
public:
	virtual int soap_type() const { return 141; } /* = unique type id SOAP_TYPE_ews__DisconnectPhoneCallType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__DisconnectPhoneCallType() { ews__DisconnectPhoneCallType::soap_default(NULL); }
	virtual ~ews__DisconnectPhoneCallType() { }
};
#endif

#ifndef SOAP_TYPE_ews__DisconnectPhoneCallResponseMessageType
#define SOAP_TYPE_ews__DisconnectPhoneCallResponseMessageType (142)
/* ews:DisconnectPhoneCallResponseMessageType */
class SOAP_CMAC ews__DisconnectPhoneCallResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 142; } /* = unique type id SOAP_TYPE_ews__DisconnectPhoneCallResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__DisconnectPhoneCallResponseMessageType() { ews__DisconnectPhoneCallResponseMessageType::soap_default(NULL); }
	virtual ~ews__DisconnectPhoneCallResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__DeleteUMPromptsType
#define SOAP_TYPE_ews__DeleteUMPromptsType (143)
/* ews:DeleteUMPromptsType */
class SOAP_CMAC ews__DeleteUMPromptsType : public ews__BaseRequestType
{
public:
	std::string ConfigurationObject;	/* required element of type ns1:GuidType */
	ns1__ArrayOfStringsType *PromptNames;	/* optional element of type ns1:ArrayOfStringsType */
public:
	virtual int soap_type() const { return 143; } /* = unique type id SOAP_TYPE_ews__DeleteUMPromptsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__DeleteUMPromptsType() { ews__DeleteUMPromptsType::soap_default(NULL); }
	virtual ~ews__DeleteUMPromptsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__DeleteUMPromptsResponseMessageType
#define SOAP_TYPE_ews__DeleteUMPromptsResponseMessageType (144)
/* ews:DeleteUMPromptsResponseMessageType */
class SOAP_CMAC ews__DeleteUMPromptsResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 144; } /* = unique type id SOAP_TYPE_ews__DeleteUMPromptsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__DeleteUMPromptsResponseMessageType() { ews__DeleteUMPromptsResponseMessageType::soap_default(NULL); }
	virtual ~ews__DeleteUMPromptsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CreateUMPromptType
#define SOAP_TYPE_ews__CreateUMPromptType (145)
/* ews:CreateUMPromptType */
class SOAP_CMAC ews__CreateUMPromptType : public ews__BaseRequestType
{
public:
	std::string ConfigurationObject;	/* required element of type ns1:GuidType */
	std::string PromptName;	/* required element of type xsd:string */
	xsd__base64Binary AudioData;	/* required element of type xsd:base64Binary */
public:
	virtual int soap_type() const { return 145; } /* = unique type id SOAP_TYPE_ews__CreateUMPromptType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CreateUMPromptType() { ews__CreateUMPromptType::soap_default(NULL); }
	virtual ~ews__CreateUMPromptType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CreateUMPromptResponseMessageType
#define SOAP_TYPE_ews__CreateUMPromptResponseMessageType (146)
/* ews:CreateUMPromptResponseMessageType */
class SOAP_CMAC ews__CreateUMPromptResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 146; } /* = unique type id SOAP_TYPE_ews__CreateUMPromptResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CreateUMPromptResponseMessageType() { ews__CreateUMPromptResponseMessageType::soap_default(NULL); }
	virtual ~ews__CreateUMPromptResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUMPromptNamesType
#define SOAP_TYPE_ews__GetUMPromptNamesType (147)
/* ews:GetUMPromptNamesType */
class SOAP_CMAC ews__GetUMPromptNamesType : public ews__BaseRequestType
{
public:
	std::string ConfigurationObject;	/* required element of type ns1:GuidType */
	int HoursElapsedSinceLastModified;	/* required element of type xsd:int */
public:
	virtual int soap_type() const { return 147; } /* = unique type id SOAP_TYPE_ews__GetUMPromptNamesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUMPromptNamesType() { ews__GetUMPromptNamesType::soap_default(NULL); }
	virtual ~ews__GetUMPromptNamesType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUMPromptNamesResponseMessageType
#define SOAP_TYPE_ews__GetUMPromptNamesResponseMessageType (148)
/* ews:GetUMPromptNamesResponseMessageType */
class SOAP_CMAC ews__GetUMPromptNamesResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfStringsType *PromptNames;	/* optional element of type ns1:ArrayOfStringsType */
public:
	virtual int soap_type() const { return 148; } /* = unique type id SOAP_TYPE_ews__GetUMPromptNamesResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUMPromptNamesResponseMessageType() { ews__GetUMPromptNamesResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetUMPromptNamesResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUMPromptType
#define SOAP_TYPE_ews__GetUMPromptType (149)
/* ews:GetUMPromptType */
class SOAP_CMAC ews__GetUMPromptType : public ews__BaseRequestType
{
public:
	std::string ConfigurationObject;	/* required element of type ns1:GuidType */
	std::string PromptName;	/* required element of type xsd:string */
public:
	virtual int soap_type() const { return 149; } /* = unique type id SOAP_TYPE_ews__GetUMPromptType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUMPromptType() { ews__GetUMPromptType::soap_default(NULL); }
	virtual ~ews__GetUMPromptType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUMPromptResponseMessageType
#define SOAP_TYPE_ews__GetUMPromptResponseMessageType (150)
/* ews:GetUMPromptResponseMessageType */
class SOAP_CMAC ews__GetUMPromptResponseMessageType : public ews__ResponseMessageType
{
public:
	xsd__base64Binary *AudioData;	/* optional element of type xsd:base64Binary */
public:
	virtual int soap_type() const { return 150; } /* = unique type id SOAP_TYPE_ews__GetUMPromptResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUMPromptResponseMessageType() { ews__GetUMPromptResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetUMPromptResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ExpandDLType
#define SOAP_TYPE_ews__ExpandDLType (151)
/* ews:ExpandDLType */
class SOAP_CMAC ews__ExpandDLType : public ews__BaseRequestType
{
public:
	ns1__EmailAddressType *Mailbox;	/* required element of type ns1:EmailAddressType */
public:
	virtual int soap_type() const { return 151; } /* = unique type id SOAP_TYPE_ews__ExpandDLType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ExpandDLType() { ews__ExpandDLType::soap_default(NULL); }
	virtual ~ews__ExpandDLType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ExpandDLResponseMessageType
#define SOAP_TYPE_ews__ExpandDLResponseMessageType (152)
/* ews:ExpandDLResponseMessageType */
class SOAP_CMAC ews__ExpandDLResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfDLExpansionType *DLExpansion;	/* optional element of type ns1:ArrayOfDLExpansionType */
	int *IndexedPagingOffset;	/* optional attribute */
	int *NumeratorOffset;	/* optional attribute */
	int *AbsoluteDenominator;	/* optional attribute */
	bool *IncludesLastItemInRange;	/* optional attribute */
	int *TotalItemsInView;	/* optional attribute */
public:
	virtual int soap_type() const { return 152; } /* = unique type id SOAP_TYPE_ews__ExpandDLResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ExpandDLResponseMessageType() { ews__ExpandDLResponseMessageType::soap_default(NULL); }
	virtual ~ews__ExpandDLResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ExpandDLResponseType
#define SOAP_TYPE_ews__ExpandDLResponseType (153)
/* ews:ExpandDLResponseType */
class SOAP_CMAC ews__ExpandDLResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 153; } /* = unique type id SOAP_TYPE_ews__ExpandDLResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ExpandDLResponseType() { ews__ExpandDLResponseType::soap_default(NULL); }
	virtual ~ews__ExpandDLResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetServerTimeZonesType
#define SOAP_TYPE_ews__GetServerTimeZonesType (154)
/* ews:GetServerTimeZonesType */
class SOAP_CMAC ews__GetServerTimeZonesType : public ews__BaseRequestType
{
public:
	ns1__NonEmptyArrayOfTimeZoneIdType *Ids;	/* optional element of type ns1:NonEmptyArrayOfTimeZoneIdType */
	bool *ReturnFullTimeZoneData;	/* optional attribute */
public:
	virtual int soap_type() const { return 154; } /* = unique type id SOAP_TYPE_ews__GetServerTimeZonesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetServerTimeZonesType() { ews__GetServerTimeZonesType::soap_default(NULL); }
	virtual ~ews__GetServerTimeZonesType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetServerTimeZonesResponseMessageType
#define SOAP_TYPE_ews__GetServerTimeZonesResponseMessageType (155)
/* ews:GetServerTimeZonesResponseMessageType */
class SOAP_CMAC ews__GetServerTimeZonesResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfTimeZoneDefinitionType *TimeZoneDefinitions;	/* required element of type ns1:ArrayOfTimeZoneDefinitionType */
public:
	virtual int soap_type() const { return 155; } /* = unique type id SOAP_TYPE_ews__GetServerTimeZonesResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetServerTimeZonesResponseMessageType() { ews__GetServerTimeZonesResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetServerTimeZonesResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetServerTimeZonesResponseType
#define SOAP_TYPE_ews__GetServerTimeZonesResponseType (156)
/* ews:GetServerTimeZonesResponseType */
class SOAP_CMAC ews__GetServerTimeZonesResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 156; } /* = unique type id SOAP_TYPE_ews__GetServerTimeZonesResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetServerTimeZonesResponseType() { ews__GetServerTimeZonesResponseType::soap_default(NULL); }
	virtual ~ews__GetServerTimeZonesResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CreateManagedFolderRequestType
#define SOAP_TYPE_ews__CreateManagedFolderRequestType (157)
/* ews:CreateManagedFolderRequestType */
class SOAP_CMAC ews__CreateManagedFolderRequestType : public ews__BaseRequestType
{
public:
	ns1__NonEmptyArrayOfFolderNamesType *FolderNames;	/* required element of type ns1:NonEmptyArrayOfFolderNamesType */
	ns1__EmailAddressType *Mailbox;	/* optional element of type ns1:EmailAddressType */
public:
	virtual int soap_type() const { return 157; } /* = unique type id SOAP_TYPE_ews__CreateManagedFolderRequestType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CreateManagedFolderRequestType() { ews__CreateManagedFolderRequestType::soap_default(NULL); }
	virtual ~ews__CreateManagedFolderRequestType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CreateManagedFolderResponseType
#define SOAP_TYPE_ews__CreateManagedFolderResponseType (158)
/* ews:CreateManagedFolderResponseType */
class SOAP_CMAC ews__CreateManagedFolderResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 158; } /* = unique type id SOAP_TYPE_ews__CreateManagedFolderResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CreateManagedFolderResponseType() { ews__CreateManagedFolderResponseType::soap_default(NULL); }
	virtual ~ews__CreateManagedFolderResponseType() { }
};
#endif

#ifndef SOAP_TYPE__ews__union_SubscribeType
#define SOAP_TYPE__ews__union_SubscribeType (2190)
/* xsd:choice */
union _ews__union_SubscribeType
{
#define SOAP_UNION__ews__union_SubscribeType_PullSubscriptionRequest	(1)
	class ns1__PullSubscriptionRequestType *PullSubscriptionRequest;
#define SOAP_UNION__ews__union_SubscribeType_PushSubscriptionRequest	(2)
	class ns1__PushSubscriptionRequestType *PushSubscriptionRequest;
#define SOAP_UNION__ews__union_SubscribeType_StreamingSubscriptionRequest	(3)
	ns1__StreamingSubscriptionRequestType *StreamingSubscriptionRequest;
};
#endif

#ifndef SOAP_TYPE_ews__SubscribeType
#define SOAP_TYPE_ews__SubscribeType (159)
/* ews:SubscribeType */
class SOAP_CMAC ews__SubscribeType : public ews__BaseRequestType
{
public:
	int __union_SubscribeType;	/* union discriminant (of union defined below) */
	union _ews__union_SubscribeType union_SubscribeType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 159; } /* = unique type id SOAP_TYPE_ews__SubscribeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SubscribeType() { ews__SubscribeType::soap_default(NULL); }
	virtual ~ews__SubscribeType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SubscribeResponseMessageType
#define SOAP_TYPE_ews__SubscribeResponseMessageType (160)
/* ews:SubscribeResponseMessageType */
class SOAP_CMAC ews__SubscribeResponseMessageType : public ews__ResponseMessageType
{
public:
	std::string *SubscriptionId;	/* optional element of type ns1:SubscriptionIdType */
	std::string *Watermark;	/* optional element of type ns1:WatermarkType */
public:
	virtual int soap_type() const { return 160; } /* = unique type id SOAP_TYPE_ews__SubscribeResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SubscribeResponseMessageType() { ews__SubscribeResponseMessageType::soap_default(NULL); }
	virtual ~ews__SubscribeResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SubscribeResponseType
#define SOAP_TYPE_ews__SubscribeResponseType (161)
/* ews:SubscribeResponseType */
class SOAP_CMAC ews__SubscribeResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 161; } /* = unique type id SOAP_TYPE_ews__SubscribeResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SubscribeResponseType() { ews__SubscribeResponseType::soap_default(NULL); }
	virtual ~ews__SubscribeResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UnsubscribeType
#define SOAP_TYPE_ews__UnsubscribeType (162)
/* ews:UnsubscribeType */
class SOAP_CMAC ews__UnsubscribeType : public ews__BaseRequestType
{
public:
	std::string SubscriptionId;	/* required element of type ns1:SubscriptionIdType */
public:
	virtual int soap_type() const { return 162; } /* = unique type id SOAP_TYPE_ews__UnsubscribeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UnsubscribeType() { ews__UnsubscribeType::soap_default(NULL); }
	virtual ~ews__UnsubscribeType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UnsubscribeResponseType
#define SOAP_TYPE_ews__UnsubscribeResponseType (163)
/* ews:UnsubscribeResponseType */
class SOAP_CMAC ews__UnsubscribeResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 163; } /* = unique type id SOAP_TYPE_ews__UnsubscribeResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UnsubscribeResponseType() { ews__UnsubscribeResponseType::soap_default(NULL); }
	virtual ~ews__UnsubscribeResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetEventsType
#define SOAP_TYPE_ews__GetEventsType (164)
/* ews:GetEventsType */
class SOAP_CMAC ews__GetEventsType : public ews__BaseRequestType
{
public:
	std::string SubscriptionId;	/* required element of type ns1:SubscriptionIdType */
	std::string Watermark;	/* required element of type ns1:WatermarkType */
public:
	virtual int soap_type() const { return 164; } /* = unique type id SOAP_TYPE_ews__GetEventsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetEventsType() { ews__GetEventsType::soap_default(NULL); }
	virtual ~ews__GetEventsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetEventsResponseMessageType
#define SOAP_TYPE_ews__GetEventsResponseMessageType (165)
/* ews:GetEventsResponseMessageType */
class SOAP_CMAC ews__GetEventsResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__NotificationType *Notification;	/* optional element of type ns1:NotificationType */
public:
	virtual int soap_type() const { return 165; } /* = unique type id SOAP_TYPE_ews__GetEventsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetEventsResponseMessageType() { ews__GetEventsResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetEventsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetEventsResponseType
#define SOAP_TYPE_ews__GetEventsResponseType (166)
/* ews:GetEventsResponseType */
class SOAP_CMAC ews__GetEventsResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 166; } /* = unique type id SOAP_TYPE_ews__GetEventsResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetEventsResponseType() { ews__GetEventsResponseType::soap_default(NULL); }
	virtual ~ews__GetEventsResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetStreamingEventsType
#define SOAP_TYPE_ews__GetStreamingEventsType (167)
/* ews:GetStreamingEventsType */
class SOAP_CMAC ews__GetStreamingEventsType : public ews__BaseRequestType
{
public:
	ns1__NonEmptyArrayOfSubscriptionIdsType *SubscriptionIds;	/* required element of type ns1:NonEmptyArrayOfSubscriptionIdsType */
	int ConnectionTimeout;	/* required element of type ns1:StreamingSubscriptionConnectionTimeoutType */
public:
	virtual int soap_type() const { return 167; } /* = unique type id SOAP_TYPE_ews__GetStreamingEventsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetStreamingEventsType() { ews__GetStreamingEventsType::soap_default(NULL); }
	virtual ~ews__GetStreamingEventsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetStreamingEventsResponseMessageType
#define SOAP_TYPE_ews__GetStreamingEventsResponseMessageType (168)
/* ews:GetStreamingEventsResponseMessageType */
class SOAP_CMAC ews__GetStreamingEventsResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__NonEmptyArrayOfNotificationsType *Notifications;	/* optional element of type ns1:NonEmptyArrayOfNotificationsType */
	ns1__NonEmptyArrayOfSubscriptionIdsType *ErrorSubscriptionIds;	/* optional element of type ns1:NonEmptyArrayOfSubscriptionIdsType */
	enum ns1__ConnectionStatusType *ConnectionStatus;	/* optional element of type ns1:ConnectionStatusType */
public:
	virtual int soap_type() const { return 168; } /* = unique type id SOAP_TYPE_ews__GetStreamingEventsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetStreamingEventsResponseMessageType() { ews__GetStreamingEventsResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetStreamingEventsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetStreamingEventsResponseType
#define SOAP_TYPE_ews__GetStreamingEventsResponseType (169)
/* ews:GetStreamingEventsResponseType */
class SOAP_CMAC ews__GetStreamingEventsResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 169; } /* = unique type id SOAP_TYPE_ews__GetStreamingEventsResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetStreamingEventsResponseType() { ews__GetStreamingEventsResponseType::soap_default(NULL); }
	virtual ~ews__GetStreamingEventsResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ChannelSubscribeType
#define SOAP_TYPE_ews__ChannelSubscribeType (170)
/* ews:ChannelSubscribeType */
class SOAP_CMAC ews__ChannelSubscribeType : public ews__BaseRequestType
{
public:
	std::string ChannelId;	/* required element of type ns1:GuidType */
	ns1__NonEmptyArrayOfChannelSubscriptionsType *Subscriptions;	/* required element of type ns1:NonEmptyArrayOfChannelSubscriptionsType */
public:
	virtual int soap_type() const { return 170; } /* = unique type id SOAP_TYPE_ews__ChannelSubscribeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ChannelSubscribeType() { ews__ChannelSubscribeType::soap_default(NULL); }
	virtual ~ews__ChannelSubscribeType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ChannelSubscribeResponseType
#define SOAP_TYPE_ews__ChannelSubscribeResponseType (171)
/* ews:ChannelSubscribeResponseType */
class SOAP_CMAC ews__ChannelSubscribeResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 171; } /* = unique type id SOAP_TYPE_ews__ChannelSubscribeResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ChannelSubscribeResponseType() { ews__ChannelSubscribeResponseType::soap_default(NULL); }
	virtual ~ews__ChannelSubscribeResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ChannelSubscribeResponseMessageType
#define SOAP_TYPE_ews__ChannelSubscribeResponseMessageType (172)
/* ews:ChannelSubscribeResponseMessageType */
class SOAP_CMAC ews__ChannelSubscribeResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 172; } /* = unique type id SOAP_TYPE_ews__ChannelSubscribeResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ChannelSubscribeResponseMessageType() { ews__ChannelSubscribeResponseMessageType::soap_default(NULL); }
	virtual ~ews__ChannelSubscribeResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ChannelUnsubscribeType
#define SOAP_TYPE_ews__ChannelUnsubscribeType (173)
/* ews:ChannelUnsubscribeType */
class SOAP_CMAC ews__ChannelUnsubscribeType : public ews__BaseRequestType
{
public:
	std::string ChannelId;	/* required element of type ns1:GuidType */
	ns1__NonEmptyArrayOfChannelSubscriptionsType *Subscriptions;	/* required element of type ns1:NonEmptyArrayOfChannelSubscriptionsType */
public:
	virtual int soap_type() const { return 173; } /* = unique type id SOAP_TYPE_ews__ChannelUnsubscribeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ChannelUnsubscribeType() { ews__ChannelUnsubscribeType::soap_default(NULL); }
	virtual ~ews__ChannelUnsubscribeType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ChannelUnsubscribeResponseType
#define SOAP_TYPE_ews__ChannelUnsubscribeResponseType (174)
/* ews:ChannelUnsubscribeResponseType */
class SOAP_CMAC ews__ChannelUnsubscribeResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 174; } /* = unique type id SOAP_TYPE_ews__ChannelUnsubscribeResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ChannelUnsubscribeResponseType() { ews__ChannelUnsubscribeResponseType::soap_default(NULL); }
	virtual ~ews__ChannelUnsubscribeResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ChannelUnsubscribeResponseMessageType
#define SOAP_TYPE_ews__ChannelUnsubscribeResponseMessageType (175)
/* ews:ChannelUnsubscribeResponseMessageType */
class SOAP_CMAC ews__ChannelUnsubscribeResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 175; } /* = unique type id SOAP_TYPE_ews__ChannelUnsubscribeResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ChannelUnsubscribeResponseMessageType() { ews__ChannelUnsubscribeResponseMessageType::soap_default(NULL); }
	virtual ~ews__ChannelUnsubscribeResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetChannelEventsType
#define SOAP_TYPE_ews__GetChannelEventsType (176)
/* ews:GetChannelEventsType */
class SOAP_CMAC ews__GetChannelEventsType : public ews__BaseRequestType
{
public:
	std::string ChannelId;	/* required element of type ns1:GuidType */
	int ConnectionTimeout;	/* required element of type ns1:ChannelConnectionTimeoutType */
	std::string *LastNotificationId;	/* optional element of type ns1:GuidType */
public:
	virtual int soap_type() const { return 176; } /* = unique type id SOAP_TYPE_ews__GetChannelEventsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetChannelEventsType() { ews__GetChannelEventsType::soap_default(NULL); }
	virtual ~ews__GetChannelEventsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetChannelEventsResponseMessageType
#define SOAP_TYPE_ews__GetChannelEventsResponseMessageType (177)
/* ews:GetChannelEventsResponseMessageType */
class SOAP_CMAC ews__GetChannelEventsResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__NonEmptyArrayOfChannelEventsType *Notifications;	/* optional element of type ns1:NonEmptyArrayOfChannelEventsType */
	enum ns1__ConnectionStatusType *ConnectionStatus;	/* optional element of type ns1:ConnectionStatusType */
public:
	virtual int soap_type() const { return 177; } /* = unique type id SOAP_TYPE_ews__GetChannelEventsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetChannelEventsResponseMessageType() { ews__GetChannelEventsResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetChannelEventsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetChannelEventsResponseType
#define SOAP_TYPE_ews__GetChannelEventsResponseType (178)
/* ews:GetChannelEventsResponseType */
class SOAP_CMAC ews__GetChannelEventsResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 178; } /* = unique type id SOAP_TYPE_ews__GetChannelEventsResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetChannelEventsResponseType() { ews__GetChannelEventsResponseType::soap_default(NULL); }
	virtual ~ews__GetChannelEventsResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SendNotificationResponseMessageType
#define SOAP_TYPE_ews__SendNotificationResponseMessageType (179)
/* ews:SendNotificationResponseMessageType */
class SOAP_CMAC ews__SendNotificationResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__NotificationType *Notification;	/* required element of type ns1:NotificationType */
public:
	virtual int soap_type() const { return 179; } /* = unique type id SOAP_TYPE_ews__SendNotificationResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SendNotificationResponseMessageType() { ews__SendNotificationResponseMessageType::soap_default(NULL); }
	virtual ~ews__SendNotificationResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SendNotificationResponseType
#define SOAP_TYPE_ews__SendNotificationResponseType (180)
/* ews:SendNotificationResponseType */
class SOAP_CMAC ews__SendNotificationResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 180; } /* = unique type id SOAP_TYPE_ews__SendNotificationResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SendNotificationResponseType() { ews__SendNotificationResponseType::soap_default(NULL); }
	virtual ~ews__SendNotificationResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SyncFolderHierarchyType
#define SOAP_TYPE_ews__SyncFolderHierarchyType (182)
/* ews:SyncFolderHierarchyType */
class SOAP_CMAC ews__SyncFolderHierarchyType : public ews__BaseRequestType
{
public:
	ns1__FolderResponseShapeType *FolderShape;	/* required element of type ns1:FolderResponseShapeType */
	ns1__TargetFolderIdType *SyncFolderId;	/* optional element of type ns1:TargetFolderIdType */
	std::string *SyncState;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 182; } /* = unique type id SOAP_TYPE_ews__SyncFolderHierarchyType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SyncFolderHierarchyType() { ews__SyncFolderHierarchyType::soap_default(NULL); }
	virtual ~ews__SyncFolderHierarchyType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SyncFolderHierarchyResponseMessageType
#define SOAP_TYPE_ews__SyncFolderHierarchyResponseMessageType (183)
/* ews:SyncFolderHierarchyResponseMessageType */
class SOAP_CMAC ews__SyncFolderHierarchyResponseMessageType : public ews__ResponseMessageType
{
public:
	std::string *SyncState;	/* optional element of type xsd:string */
	bool *IncludesLastFolderInRange;	/* optional element of type xsd:boolean */
	ns1__SyncFolderHierarchyChangesType *Changes;	/* optional element of type ns1:SyncFolderHierarchyChangesType */
public:
	virtual int soap_type() const { return 183; } /* = unique type id SOAP_TYPE_ews__SyncFolderHierarchyResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SyncFolderHierarchyResponseMessageType() { ews__SyncFolderHierarchyResponseMessageType::soap_default(NULL); }
	virtual ~ews__SyncFolderHierarchyResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SyncFolderHierarchyResponseType
#define SOAP_TYPE_ews__SyncFolderHierarchyResponseType (184)
/* ews:SyncFolderHierarchyResponseType */
class SOAP_CMAC ews__SyncFolderHierarchyResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 184; } /* = unique type id SOAP_TYPE_ews__SyncFolderHierarchyResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SyncFolderHierarchyResponseType() { ews__SyncFolderHierarchyResponseType::soap_default(NULL); }
	virtual ~ews__SyncFolderHierarchyResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SyncFolderItemsType
#define SOAP_TYPE_ews__SyncFolderItemsType (185)
/* ews:SyncFolderItemsType */
class SOAP_CMAC ews__SyncFolderItemsType : public ews__BaseRequestType
{
public:
	ns1__ItemResponseShapeType *ItemShape;	/* required element of type ns1:ItemResponseShapeType */
	ns1__TargetFolderIdType *SyncFolderId;	/* required element of type ns1:TargetFolderIdType */
	std::string *SyncState;	/* optional element of type xsd:string */
	ns1__ArrayOfBaseItemIdsType *Ignore;	/* optional element of type ns1:ArrayOfBaseItemIdsType */
	int MaxChangesReturned;	/* required element of type ns1:MaxSyncChangesReturnedType */
	enum ns1__SyncFolderItemsScopeType *SyncScope;	/* optional element of type ns1:SyncFolderItemsScopeType */
public:
	virtual int soap_type() const { return 185; } /* = unique type id SOAP_TYPE_ews__SyncFolderItemsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SyncFolderItemsType() { ews__SyncFolderItemsType::soap_default(NULL); }
	virtual ~ews__SyncFolderItemsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SyncFolderItemsResponseMessageType
#define SOAP_TYPE_ews__SyncFolderItemsResponseMessageType (186)
/* ews:SyncFolderItemsResponseMessageType */
class SOAP_CMAC ews__SyncFolderItemsResponseMessageType : public ews__ResponseMessageType
{
public:
	std::string *SyncState;	/* optional element of type xsd:string */
	bool *IncludesLastItemInRange;	/* optional element of type xsd:boolean */
	ns1__SyncFolderItemsChangesType *Changes;	/* optional element of type ns1:SyncFolderItemsChangesType */
public:
	virtual int soap_type() const { return 186; } /* = unique type id SOAP_TYPE_ews__SyncFolderItemsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SyncFolderItemsResponseMessageType() { ews__SyncFolderItemsResponseMessageType::soap_default(NULL); }
	virtual ~ews__SyncFolderItemsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SyncFolderItemsResponseType
#define SOAP_TYPE_ews__SyncFolderItemsResponseType (187)
/* ews:SyncFolderItemsResponseType */
class SOAP_CMAC ews__SyncFolderItemsResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 187; } /* = unique type id SOAP_TYPE_ews__SyncFolderItemsResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SyncFolderItemsResponseType() { ews__SyncFolderItemsResponseType::soap_default(NULL); }
	virtual ~ews__SyncFolderItemsResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUserAvailabilityRequestType
#define SOAP_TYPE_ews__GetUserAvailabilityRequestType (188)
/* ews:GetUserAvailabilityRequestType */
class SOAP_CMAC ews__GetUserAvailabilityRequestType : public ews__BaseRequestType
{
public:
	ns1__SerializableTimeZone *ns1__TimeZone;	/* optional element of type ns1:SerializableTimeZone */
	ns1__ArrayOfMailboxData *MailboxDataArray;	/* required element of type ns1:ArrayOfMailboxData */
	ns1__FreeBusyViewOptionsType *ns1__FreeBusyViewOptions;	/* optional element of type ns1:FreeBusyViewOptionsType */
	ns1__SuggestionsViewOptionsType *ns1__SuggestionsViewOptions;	/* optional element of type ns1:SuggestionsViewOptionsType */
public:
	virtual int soap_type() const { return 188; } /* = unique type id SOAP_TYPE_ews__GetUserAvailabilityRequestType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUserAvailabilityRequestType() { ews__GetUserAvailabilityRequestType::soap_default(NULL); }
	virtual ~ews__GetUserAvailabilityRequestType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUserOofSettingsRequest
#define SOAP_TYPE_ews__GetUserOofSettingsRequest (193)
/* ews:GetUserOofSettingsRequest */
class SOAP_CMAC ews__GetUserOofSettingsRequest : public ews__BaseRequestType
{
public:
	ns1__EmailAddress *ns1__Mailbox;	/* required element of type ns1:EmailAddress */
public:
	virtual int soap_type() const { return 193; } /* = unique type id SOAP_TYPE_ews__GetUserOofSettingsRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUserOofSettingsRequest() { ews__GetUserOofSettingsRequest::soap_default(NULL); }
	virtual ~ews__GetUserOofSettingsRequest() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetUserOofSettingsRequest
#define SOAP_TYPE_ews__SetUserOofSettingsRequest (195)
/* ews:SetUserOofSettingsRequest */
class SOAP_CMAC ews__SetUserOofSettingsRequest : public ews__BaseRequestType
{
public:
	ns1__EmailAddress *ns1__Mailbox;	/* required element of type ns1:EmailAddress */
	ns1__UserOofSettings *ns1__UserOofSettings_;	/* required element of type ns1:UserOofSettings */
public:
	virtual int soap_type() const { return 195; } /* = unique type id SOAP_TYPE_ews__SetUserOofSettingsRequest */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetUserOofSettingsRequest() { ews__SetUserOofSettingsRequest::soap_default(NULL); }
	virtual ~ews__SetUserOofSettingsRequest() { }
};
#endif

#ifndef SOAP_TYPE_ews__ConvertIdType
#define SOAP_TYPE_ews__ConvertIdType (197)
/* ews:ConvertIdType */
class SOAP_CMAC ews__ConvertIdType : public ews__BaseRequestType
{
public:
	ns1__NonEmptyArrayOfAlternateIdsType *SourceIds;	/* required element of type ns1:NonEmptyArrayOfAlternateIdsType */
	enum ns1__IdFormatType DestinationFormat;	/* required attribute */
public:
	virtual int soap_type() const { return 197; } /* = unique type id SOAP_TYPE_ews__ConvertIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ConvertIdType() { ews__ConvertIdType::soap_default(NULL); }
	virtual ~ews__ConvertIdType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ConvertIdResponseType
#define SOAP_TYPE_ews__ConvertIdResponseType (198)
/* ews:ConvertIdResponseType */
class SOAP_CMAC ews__ConvertIdResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 198; } /* = unique type id SOAP_TYPE_ews__ConvertIdResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ConvertIdResponseType() { ews__ConvertIdResponseType::soap_default(NULL); }
	virtual ~ews__ConvertIdResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ConvertIdResponseMessageType
#define SOAP_TYPE_ews__ConvertIdResponseMessageType (199)
/* ews:ConvertIdResponseMessageType */
class SOAP_CMAC ews__ConvertIdResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__AlternateIdBaseType *AlternateId;	/* optional element of type ns1:AlternateIdBaseType */
public:
	virtual int soap_type() const { return 199; } /* = unique type id SOAP_TYPE_ews__ConvertIdResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ConvertIdResponseMessageType() { ews__ConvertIdResponseMessageType::soap_default(NULL); }
	virtual ~ews__ConvertIdResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__DelegateUserResponseMessageType
#define SOAP_TYPE_ews__DelegateUserResponseMessageType (203)
/* ews:DelegateUserResponseMessageType */
class SOAP_CMAC ews__DelegateUserResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__DelegateUserType *DelegateUser;	/* optional element of type ns1:DelegateUserType */
public:
	virtual int soap_type() const { return 203; } /* = unique type id SOAP_TYPE_ews__DelegateUserResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__DelegateUserResponseMessageType() { ews__DelegateUserResponseMessageType::soap_default(NULL); }
	virtual ~ews__DelegateUserResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__BaseDelegateResponseMessageType
#define SOAP_TYPE_ews__BaseDelegateResponseMessageType (205)
/* ews:BaseDelegateResponseMessageType */
class SOAP_CMAC ews__BaseDelegateResponseMessageType : public ews__ResponseMessageType
{
public:
	ews__ArrayOfDelegateUserResponseMessageType *ResponseMessages;	/* optional element of type ews:ArrayOfDelegateUserResponseMessageType */
public:
	virtual int soap_type() const { return 205; } /* = unique type id SOAP_TYPE_ews__BaseDelegateResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__BaseDelegateResponseMessageType() { ews__BaseDelegateResponseMessageType::soap_default(NULL); }
	virtual ~ews__BaseDelegateResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__BaseDelegateType
#define SOAP_TYPE_ews__BaseDelegateType (206)
/* ews:BaseDelegateType */
class SOAP_CMAC ews__BaseDelegateType : public ews__BaseRequestType
{
public:
	ns1__EmailAddressType *Mailbox;	/* required element of type ns1:EmailAddressType */
public:
	virtual int soap_type() const { return 206; } /* = unique type id SOAP_TYPE_ews__BaseDelegateType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__BaseDelegateType() { ews__BaseDelegateType::soap_default(NULL); }
	virtual ~ews__BaseDelegateType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetSharingMetadataType
#define SOAP_TYPE_ews__GetSharingMetadataType (212)
/* ews:GetSharingMetadataType */
class SOAP_CMAC ews__GetSharingMetadataType : public ews__BaseRequestType
{
public:
	ns1__FolderIdType *IdOfFolderToShare;	/* required element of type ns1:FolderIdType */
	std::string SenderSmtpAddress;	/* required element of type ns1:NonEmptyStringType */
	ns1__ArrayOfSmtpAddressType *Recipients;	/* required element of type ns1:ArrayOfSmtpAddressType */
public:
	virtual int soap_type() const { return 212; } /* = unique type id SOAP_TYPE_ews__GetSharingMetadataType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetSharingMetadataType() { ews__GetSharingMetadataType::soap_default(NULL); }
	virtual ~ews__GetSharingMetadataType() { }
};
#endif

#ifndef SOAP_TYPE___ews__GetSharingMetadataResponseMessageType_sequence_
#define SOAP_TYPE___ews__GetSharingMetadataResponseMessageType_sequence_ (2207)
/* Operation wrapper: */
class SOAP_CMAC __ews__GetSharingMetadataResponseMessageType_sequence_
{
public:
	ns1__ArrayOfEncryptedSharedFolderDataType *EncryptedSharedFolderDataCollection;	/* required element of type ns1:ArrayOfEncryptedSharedFolderDataType */
	ns1__ArrayOfInvalidRecipientsType *InvalidRecipients;	/* required element of type ns1:ArrayOfInvalidRecipientsType */
public:
	virtual int soap_type() const { return 2207; } /* = unique type id SOAP_TYPE___ews__GetSharingMetadataResponseMessageType_sequence_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ews__GetSharingMetadataResponseMessageType_sequence_() { __ews__GetSharingMetadataResponseMessageType_sequence_::soap_default(NULL); }
	virtual ~__ews__GetSharingMetadataResponseMessageType_sequence_() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetSharingMetadataResponseMessageType
#define SOAP_TYPE_ews__GetSharingMetadataResponseMessageType (213)
/* ews:GetSharingMetadataResponseMessageType */
class SOAP_CMAC ews__GetSharingMetadataResponseMessageType : public ews__ResponseMessageType
{
public:
	__ews__GetSharingMetadataResponseMessageType_sequence_ *__GetSharingMetadataResponseMessageType_sequence_;
public:
	virtual int soap_type() const { return 213; } /* = unique type id SOAP_TYPE_ews__GetSharingMetadataResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetSharingMetadataResponseMessageType() { ews__GetSharingMetadataResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetSharingMetadataResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__RefreshSharingFolderType
#define SOAP_TYPE_ews__RefreshSharingFolderType (214)
/* ews:RefreshSharingFolderType */
class SOAP_CMAC ews__RefreshSharingFolderType : public ews__BaseRequestType
{
public:
	ns1__FolderIdType *SharingFolderId;	/* required element of type ns1:FolderIdType */
public:
	virtual int soap_type() const { return 214; } /* = unique type id SOAP_TYPE_ews__RefreshSharingFolderType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__RefreshSharingFolderType() { ews__RefreshSharingFolderType::soap_default(NULL); }
	virtual ~ews__RefreshSharingFolderType() { }
};
#endif

#ifndef SOAP_TYPE_ews__RefreshSharingFolderResponseMessageType
#define SOAP_TYPE_ews__RefreshSharingFolderResponseMessageType (215)
/* ews:RefreshSharingFolderResponseMessageType */
class SOAP_CMAC ews__RefreshSharingFolderResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 215; } /* = unique type id SOAP_TYPE_ews__RefreshSharingFolderResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__RefreshSharingFolderResponseMessageType() { ews__RefreshSharingFolderResponseMessageType::soap_default(NULL); }
	virtual ~ews__RefreshSharingFolderResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetSharingFolderType
#define SOAP_TYPE_ews__GetSharingFolderType (216)
/* ews:GetSharingFolderType */
class SOAP_CMAC ews__GetSharingFolderType : public ews__BaseRequestType
{
public:
	std::string SmtpAddress;	/* required element of type ns1:NonEmptyStringType */
	enum ns1__SharingDataType *DataType;	/* optional element of type ns1:SharingDataType */
	std::string *SharedFolderId;	/* optional element of type ns1:NonEmptyStringType */
public:
	virtual int soap_type() const { return 216; } /* = unique type id SOAP_TYPE_ews__GetSharingFolderType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetSharingFolderType() { ews__GetSharingFolderType::soap_default(NULL); }
	virtual ~ews__GetSharingFolderType() { }
};
#endif

#ifndef SOAP_TYPE___ews__GetSharingFolderResponseMessageType_sequence_
#define SOAP_TYPE___ews__GetSharingFolderResponseMessageType_sequence_ (2212)
/* Operation wrapper: */
class SOAP_CMAC __ews__GetSharingFolderResponseMessageType_sequence_
{
public:
	ns1__FolderIdType *SharingFolderId;	/* required element of type ns1:FolderIdType */
public:
	virtual int soap_type() const { return 2212; } /* = unique type id SOAP_TYPE___ews__GetSharingFolderResponseMessageType_sequence_ */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ews__GetSharingFolderResponseMessageType_sequence_() { __ews__GetSharingFolderResponseMessageType_sequence_::soap_default(NULL); }
	virtual ~__ews__GetSharingFolderResponseMessageType_sequence_() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetSharingFolderResponseMessageType
#define SOAP_TYPE_ews__GetSharingFolderResponseMessageType (217)
/* ews:GetSharingFolderResponseMessageType */
class SOAP_CMAC ews__GetSharingFolderResponseMessageType : public ews__ResponseMessageType
{
public:
	__ews__GetSharingFolderResponseMessageType_sequence_ *__GetSharingFolderResponseMessageType_sequence_;
public:
	virtual int soap_type() const { return 217; } /* = unique type id SOAP_TYPE_ews__GetSharingFolderResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetSharingFolderResponseMessageType() { ews__GetSharingFolderResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetSharingFolderResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CreateUserConfigurationType
#define SOAP_TYPE_ews__CreateUserConfigurationType (218)
/* ews:CreateUserConfigurationType */
class SOAP_CMAC ews__CreateUserConfigurationType : public ews__BaseRequestType
{
public:
	ns1__UserConfigurationType *UserConfiguration;	/* required element of type ns1:UserConfigurationType */
public:
	virtual int soap_type() const { return 218; } /* = unique type id SOAP_TYPE_ews__CreateUserConfigurationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CreateUserConfigurationType() { ews__CreateUserConfigurationType::soap_default(NULL); }
	virtual ~ews__CreateUserConfigurationType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CreateUserConfigurationResponseType
#define SOAP_TYPE_ews__CreateUserConfigurationResponseType (219)
/* ews:CreateUserConfigurationResponseType */
class SOAP_CMAC ews__CreateUserConfigurationResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 219; } /* = unique type id SOAP_TYPE_ews__CreateUserConfigurationResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CreateUserConfigurationResponseType() { ews__CreateUserConfigurationResponseType::soap_default(NULL); }
	virtual ~ews__CreateUserConfigurationResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__DeleteUserConfigurationType
#define SOAP_TYPE_ews__DeleteUserConfigurationType (220)
/* ews:DeleteUserConfigurationType */
class SOAP_CMAC ews__DeleteUserConfigurationType : public ews__BaseRequestType
{
public:
	ns1__UserConfigurationNameType *UserConfigurationName;	/* required element of type ns1:UserConfigurationNameType */
public:
	virtual int soap_type() const { return 220; } /* = unique type id SOAP_TYPE_ews__DeleteUserConfigurationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__DeleteUserConfigurationType() { ews__DeleteUserConfigurationType::soap_default(NULL); }
	virtual ~ews__DeleteUserConfigurationType() { }
};
#endif

#ifndef SOAP_TYPE_ews__DeleteUserConfigurationResponseType
#define SOAP_TYPE_ews__DeleteUserConfigurationResponseType (221)
/* ews:DeleteUserConfigurationResponseType */
class SOAP_CMAC ews__DeleteUserConfigurationResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 221; } /* = unique type id SOAP_TYPE_ews__DeleteUserConfigurationResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__DeleteUserConfigurationResponseType() { ews__DeleteUserConfigurationResponseType::soap_default(NULL); }
	virtual ~ews__DeleteUserConfigurationResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUserConfigurationType
#define SOAP_TYPE_ews__GetUserConfigurationType (222)
/* ews:GetUserConfigurationType */
class SOAP_CMAC ews__GetUserConfigurationType : public ews__BaseRequestType
{
public:
	ns1__UserConfigurationNameType *UserConfigurationName;	/* required element of type ns1:UserConfigurationNameType */
	enum ns1__UserConfigurationPropertyType UserConfigurationProperties;	/* required element of type ns1:UserConfigurationPropertyType */
public:
	virtual int soap_type() const { return 222; } /* = unique type id SOAP_TYPE_ews__GetUserConfigurationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUserConfigurationType() { ews__GetUserConfigurationType::soap_default(NULL); }
	virtual ~ews__GetUserConfigurationType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUserConfigurationResponseMessageType
#define SOAP_TYPE_ews__GetUserConfigurationResponseMessageType (223)
/* ews:GetUserConfigurationResponseMessageType */
class SOAP_CMAC ews__GetUserConfigurationResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__UserConfigurationType *UserConfiguration;	/* optional element of type ns1:UserConfigurationType */
public:
	virtual int soap_type() const { return 223; } /* = unique type id SOAP_TYPE_ews__GetUserConfigurationResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUserConfigurationResponseMessageType() { ews__GetUserConfigurationResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetUserConfigurationResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUserConfigurationResponseType
#define SOAP_TYPE_ews__GetUserConfigurationResponseType (224)
/* ews:GetUserConfigurationResponseType */
class SOAP_CMAC ews__GetUserConfigurationResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 224; } /* = unique type id SOAP_TYPE_ews__GetUserConfigurationResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUserConfigurationResponseType() { ews__GetUserConfigurationResponseType::soap_default(NULL); }
	virtual ~ews__GetUserConfigurationResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UpdateUserConfigurationType
#define SOAP_TYPE_ews__UpdateUserConfigurationType (225)
/* ews:UpdateUserConfigurationType */
class SOAP_CMAC ews__UpdateUserConfigurationType : public ews__BaseRequestType
{
public:
	ns1__UserConfigurationType *UserConfiguration;	/* required element of type ns1:UserConfigurationType */
public:
	virtual int soap_type() const { return 225; } /* = unique type id SOAP_TYPE_ews__UpdateUserConfigurationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UpdateUserConfigurationType() { ews__UpdateUserConfigurationType::soap_default(NULL); }
	virtual ~ews__UpdateUserConfigurationType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UpdateUserConfigurationResponseType
#define SOAP_TYPE_ews__UpdateUserConfigurationResponseType (226)
/* ews:UpdateUserConfigurationResponseType */
class SOAP_CMAC ews__UpdateUserConfigurationResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 226; } /* = unique type id SOAP_TYPE_ews__UpdateUserConfigurationResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UpdateUserConfigurationResponseType() { ews__UpdateUserConfigurationResponseType::soap_default(NULL); }
	virtual ~ews__UpdateUserConfigurationResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetTeamMailboxRequestType
#define SOAP_TYPE_ews__SetTeamMailboxRequestType (227)
/* ews:SetTeamMailboxRequestType */
class SOAP_CMAC ews__SetTeamMailboxRequestType : public ews__BaseRequestType
{
public:
	ns1__EmailAddressType *EmailAddress;	/* required element of type ns1:EmailAddressType */
	std::string SharePointSiteUrl;	/* required element of type xsd:string */
	enum ns1__TeamMailboxLifecycleStateType State;	/* required element of type ns1:TeamMailboxLifecycleStateType */
public:
	virtual int soap_type() const { return 227; } /* = unique type id SOAP_TYPE_ews__SetTeamMailboxRequestType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetTeamMailboxRequestType() { ews__SetTeamMailboxRequestType::soap_default(NULL); }
	virtual ~ews__SetTeamMailboxRequestType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UnpinTeamMailboxRequestType
#define SOAP_TYPE_ews__UnpinTeamMailboxRequestType (228)
/* ews:UnpinTeamMailboxRequestType */
class SOAP_CMAC ews__UnpinTeamMailboxRequestType : public ews__BaseRequestType
{
public:
	ns1__EmailAddressType *EmailAddress;	/* required element of type ns1:EmailAddressType */
public:
	virtual int soap_type() const { return 228; } /* = unique type id SOAP_TYPE_ews__UnpinTeamMailboxRequestType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UnpinTeamMailboxRequestType() { ews__UnpinTeamMailboxRequestType::soap_default(NULL); }
	virtual ~ews__UnpinTeamMailboxRequestType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetTeamMailboxResponseMessageType
#define SOAP_TYPE_ews__SetTeamMailboxResponseMessageType (229)
/* ews:SetTeamMailboxResponseMessageType */
class SOAP_CMAC ews__SetTeamMailboxResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 229; } /* = unique type id SOAP_TYPE_ews__SetTeamMailboxResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetTeamMailboxResponseMessageType() { ews__SetTeamMailboxResponseMessageType::soap_default(NULL); }
	virtual ~ews__SetTeamMailboxResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UnpinTeamMailboxResponseMessageType
#define SOAP_TYPE_ews__UnpinTeamMailboxResponseMessageType (230)
/* ews:UnpinTeamMailboxResponseMessageType */
class SOAP_CMAC ews__UnpinTeamMailboxResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 230; } /* = unique type id SOAP_TYPE_ews__UnpinTeamMailboxResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UnpinTeamMailboxResponseMessageType() { ews__UnpinTeamMailboxResponseMessageType::soap_default(NULL); }
	virtual ~ews__UnpinTeamMailboxResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetRoomListsType
#define SOAP_TYPE_ews__GetRoomListsType (231)
/* ews:GetRoomListsType */
class SOAP_CMAC ews__GetRoomListsType : public ews__BaseRequestType
{
public:
	virtual int soap_type() const { return 231; } /* = unique type id SOAP_TYPE_ews__GetRoomListsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetRoomListsType() { ews__GetRoomListsType::soap_default(NULL); }
	virtual ~ews__GetRoomListsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetRoomListsResponseMessageType
#define SOAP_TYPE_ews__GetRoomListsResponseMessageType (232)
/* ews:GetRoomListsResponseMessageType */
class SOAP_CMAC ews__GetRoomListsResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfEmailAddressesType *RoomLists;	/* optional element of type ns1:ArrayOfEmailAddressesType */
public:
	virtual int soap_type() const { return 232; } /* = unique type id SOAP_TYPE_ews__GetRoomListsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetRoomListsResponseMessageType() { ews__GetRoomListsResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetRoomListsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetRoomsType
#define SOAP_TYPE_ews__GetRoomsType (233)
/* ews:GetRoomsType */
class SOAP_CMAC ews__GetRoomsType : public ews__BaseRequestType
{
public:
	ns1__EmailAddressType *RoomList;	/* required element of type ns1:EmailAddressType */
public:
	virtual int soap_type() const { return 233; } /* = unique type id SOAP_TYPE_ews__GetRoomsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetRoomsType() { ews__GetRoomsType::soap_default(NULL); }
	virtual ~ews__GetRoomsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetRoomsResponseMessageType
#define SOAP_TYPE_ews__GetRoomsResponseMessageType (234)
/* ews:GetRoomsResponseMessageType */
class SOAP_CMAC ews__GetRoomsResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfRoomsType *Rooms;	/* optional element of type ns1:ArrayOfRoomsType */
public:
	virtual int soap_type() const { return 234; } /* = unique type id SOAP_TYPE_ews__GetRoomsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetRoomsResponseMessageType() { ews__GetRoomsResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetRoomsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetRemindersType
#define SOAP_TYPE_ews__GetRemindersType (235)
/* ews:GetRemindersType */
class SOAP_CMAC ews__GetRemindersType : public ews__BaseRequestType
{
public:
	time_t *BeginTime;	/* optional element of type xsd:dateTime */
	time_t *EndTime;	/* optional element of type xsd:dateTime */
	int *MaxItems;	/* optional element of type xsd:int */
	enum _ews__GetRemindersType_ReminderType *ReminderType;	/* optional element of type ews:GetRemindersType-ReminderType */
public:
	virtual int soap_type() const { return 235; } /* = unique type id SOAP_TYPE_ews__GetRemindersType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetRemindersType() { ews__GetRemindersType::soap_default(NULL); }
	virtual ~ews__GetRemindersType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetRemindersResponseMessageType
#define SOAP_TYPE_ews__GetRemindersResponseMessageType (236)
/* ews:GetRemindersResponseMessageType */
class SOAP_CMAC ews__GetRemindersResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfRemindersType *Reminders;	/* required element of type ns1:ArrayOfRemindersType */
public:
	virtual int soap_type() const { return 236; } /* = unique type id SOAP_TYPE_ews__GetRemindersResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetRemindersResponseMessageType() { ews__GetRemindersResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetRemindersResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__PerformReminderActionType
#define SOAP_TYPE_ews__PerformReminderActionType (237)
/* ews:PerformReminderActionType */
class SOAP_CMAC ews__PerformReminderActionType : public ews__BaseRequestType
{
public:
	ns1__NonEmptyArrayOfReminderItemActionType *ReminderItemActions;	/* required element of type ns1:NonEmptyArrayOfReminderItemActionType */
public:
	virtual int soap_type() const { return 237; } /* = unique type id SOAP_TYPE_ews__PerformReminderActionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__PerformReminderActionType() { ews__PerformReminderActionType::soap_default(NULL); }
	virtual ~ews__PerformReminderActionType() { }
};
#endif

#ifndef SOAP_TYPE_ews__PerformReminderActionResponseMessageType
#define SOAP_TYPE_ews__PerformReminderActionResponseMessageType (238)
/* ews:PerformReminderActionResponseMessageType */
class SOAP_CMAC ews__PerformReminderActionResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__NonEmptyArrayOfItemIdsType *UpdatedItemIds;	/* required element of type ns1:NonEmptyArrayOfItemIdsType */
public:
	virtual int soap_type() const { return 238; } /* = unique type id SOAP_TYPE_ews__PerformReminderActionResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__PerformReminderActionResponseMessageType() { ews__PerformReminderActionResponseMessageType::soap_default(NULL); }
	virtual ~ews__PerformReminderActionResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetServiceConfigurationType
#define SOAP_TYPE_ews__GetServiceConfigurationType (240)
/* ews:GetServiceConfigurationType */
class SOAP_CMAC ews__GetServiceConfigurationType : public ews__BaseRequestType
{
public:
	ns1__EmailAddressType *ActingAs;	/* optional element of type ns1:EmailAddressType */
	ews__ArrayOfServiceConfigurationType *RequestedConfiguration;	/* required element of type ews:ArrayOfServiceConfigurationType */
	ns1__ConfigurationRequestDetailsType *ConfigurationRequestDetails;	/* optional element of type ns1:ConfigurationRequestDetailsType */
public:
	virtual int soap_type() const { return 240; } /* = unique type id SOAP_TYPE_ews__GetServiceConfigurationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetServiceConfigurationType() { ews__GetServiceConfigurationType::soap_default(NULL); }
	virtual ~ews__GetServiceConfigurationType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetServiceConfigurationResponseMessageType
#define SOAP_TYPE_ews__GetServiceConfigurationResponseMessageType (241)
/* ews:GetServiceConfigurationResponseMessageType */
class SOAP_CMAC ews__GetServiceConfigurationResponseMessageType : public ews__ResponseMessageType
{
public:
	ews__ArrayOfServiceConfigurationResponseMessageType *ResponseMessages;	/* optional element of type ews:ArrayOfServiceConfigurationResponseMessageType */
public:
	virtual int soap_type() const { return 241; } /* = unique type id SOAP_TYPE_ews__GetServiceConfigurationResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetServiceConfigurationResponseMessageType() { ews__GetServiceConfigurationResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetServiceConfigurationResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ServiceConfigurationResponseMessageType
#define SOAP_TYPE_ews__ServiceConfigurationResponseMessageType (243)
/* ews:ServiceConfigurationResponseMessageType */
class SOAP_CMAC ews__ServiceConfigurationResponseMessageType : public ews__ResponseMessageType
{
public:
	class ns1__MailTipsServiceConfiguration *MailTipsConfiguration;	/* optional element of type ns1:MailTipsServiceConfiguration */
	class ns1__UnifiedMessageServiceConfiguration *UnifiedMessagingConfiguration;	/* optional element of type ns1:UnifiedMessageServiceConfiguration */
	class ns1__ProtectionRulesServiceConfiguration *ProtectionRulesConfiguration;	/* optional element of type ns1:ProtectionRulesServiceConfiguration */
	ns1__PolicyNudgeRulesServiceConfiguration *PolicyNudgeRulesConfiguration;	/* optional element of type ns1:PolicyNudgeRulesServiceConfiguration */
public:
	virtual int soap_type() const { return 243; } /* = unique type id SOAP_TYPE_ews__ServiceConfigurationResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ServiceConfigurationResponseMessageType() { ews__ServiceConfigurationResponseMessageType::soap_default(NULL); }
	virtual ~ews__ServiceConfigurationResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__FindMessageTrackingReportRequestType
#define SOAP_TYPE_ews__FindMessageTrackingReportRequestType (244)
/* ews:FindMessageTrackingReportRequestType */
class SOAP_CMAC ews__FindMessageTrackingReportRequestType : public ews__BaseRequestType
{
public:
	std::string Scope;	/* required element of type ns1:NonEmptyStringType */
	std::string Domain;	/* required element of type ns1:NonEmptyStringType */
	ns1__EmailAddressType *Sender;	/* optional element of type ns1:EmailAddressType */
	ns1__EmailAddressType *PurportedSender;	/* optional element of type ns1:EmailAddressType */
	ns1__EmailAddressType *Recipient;	/* optional element of type ns1:EmailAddressType */
	std::string *Subject;	/* optional element of type xsd:string */
	time_t *StartDateTime;	/* optional element of type xsd:dateTime */
	time_t *EndDateTime;	/* optional element of type xsd:dateTime */
	std::string *MessageId;	/* optional element of type ns1:NonEmptyStringType */
	ns1__EmailAddressType *FederatedDeliveryMailbox;	/* optional element of type ns1:EmailAddressType */
	std::string *DiagnosticsLevel;	/* optional element of type xsd:string */
	std::string *ServerHint;	/* optional element of type xsd:string */
	ns1__ArrayOfTrackingPropertiesType *Properties;	/* optional element of type ns1:ArrayOfTrackingPropertiesType */
public:
	virtual int soap_type() const { return 244; } /* = unique type id SOAP_TYPE_ews__FindMessageTrackingReportRequestType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__FindMessageTrackingReportRequestType() { ews__FindMessageTrackingReportRequestType::soap_default(NULL); }
	virtual ~ews__FindMessageTrackingReportRequestType() { }
};
#endif

#ifndef SOAP_TYPE_ews__FindMessageTrackingReportResponseMessageType
#define SOAP_TYPE_ews__FindMessageTrackingReportResponseMessageType (245)
/* ews:FindMessageTrackingReportResponseMessageType */
class SOAP_CMAC ews__FindMessageTrackingReportResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfStringsType *Diagnostics;	/* optional element of type ns1:ArrayOfStringsType */
	ns1__ArrayOfFindMessageTrackingSearchResultType *MessageTrackingSearchResults;	/* optional element of type ns1:ArrayOfFindMessageTrackingSearchResultType */
	std::string *ExecutedSearchScope;	/* optional element of type xsd:string */
	ns1__ArrayOfArraysOfTrackingPropertiesType *Errors;	/* optional element of type ns1:ArrayOfArraysOfTrackingPropertiesType */
	ns1__ArrayOfTrackingPropertiesType *Properties;	/* optional element of type ns1:ArrayOfTrackingPropertiesType */
public:
	virtual int soap_type() const { return 245; } /* = unique type id SOAP_TYPE_ews__FindMessageTrackingReportResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__FindMessageTrackingReportResponseMessageType() { ews__FindMessageTrackingReportResponseMessageType::soap_default(NULL); }
	virtual ~ews__FindMessageTrackingReportResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetMessageTrackingReportRequestType
#define SOAP_TYPE_ews__GetMessageTrackingReportRequestType (246)
/* ews:GetMessageTrackingReportRequestType */
class SOAP_CMAC ews__GetMessageTrackingReportRequestType : public ews__BaseRequestType
{
public:
	std::string Scope;	/* required element of type ns1:NonEmptyStringType */
	enum ns1__MessageTrackingReportTemplateType ReportTemplate;	/* required element of type ns1:MessageTrackingReportTemplateType */
	ns1__EmailAddressType *RecipientFilter;	/* optional element of type ns1:EmailAddressType */
	std::string MessageTrackingReportId;	/* required element of type ns1:NonEmptyStringType */
	bool *ReturnQueueEvents;	/* optional element of type xsd:boolean */
	std::string *DiagnosticsLevel;	/* optional element of type xsd:string */
	ns1__ArrayOfTrackingPropertiesType *Properties;	/* optional element of type ns1:ArrayOfTrackingPropertiesType */
public:
	virtual int soap_type() const { return 246; } /* = unique type id SOAP_TYPE_ews__GetMessageTrackingReportRequestType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetMessageTrackingReportRequestType() { ews__GetMessageTrackingReportRequestType::soap_default(NULL); }
	virtual ~ews__GetMessageTrackingReportRequestType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetMessageTrackingReportResponseMessageType
#define SOAP_TYPE_ews__GetMessageTrackingReportResponseMessageType (247)
/* ews:GetMessageTrackingReportResponseMessageType */
class SOAP_CMAC ews__GetMessageTrackingReportResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__MessageTrackingReportType *MessageTrackingReport;	/* optional element of type ns1:MessageTrackingReportType */
	ns1__ArrayOfStringsType *Diagnostics;	/* optional element of type ns1:ArrayOfStringsType */
	ns1__ArrayOfArraysOfTrackingPropertiesType *Errors;	/* optional element of type ns1:ArrayOfArraysOfTrackingPropertiesType */
	ns1__ArrayOfTrackingPropertiesType *Properties;	/* optional element of type ns1:ArrayOfTrackingPropertiesType */
public:
	virtual int soap_type() const { return 247; } /* = unique type id SOAP_TYPE_ews__GetMessageTrackingReportResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetMessageTrackingReportResponseMessageType() { ews__GetMessageTrackingReportResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetMessageTrackingReportResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetInboxRulesRequestType
#define SOAP_TYPE_ews__GetInboxRulesRequestType (248)
/* ews:GetInboxRulesRequestType */
class SOAP_CMAC ews__GetInboxRulesRequestType : public ews__BaseRequestType
{
public:
	std::string *MailboxSmtpAddress;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 248; } /* = unique type id SOAP_TYPE_ews__GetInboxRulesRequestType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetInboxRulesRequestType() { ews__GetInboxRulesRequestType::soap_default(NULL); }
	virtual ~ews__GetInboxRulesRequestType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetInboxRulesResponseType
#define SOAP_TYPE_ews__GetInboxRulesResponseType (249)
/* ews:GetInboxRulesResponseType */
class SOAP_CMAC ews__GetInboxRulesResponseType : public ews__ResponseMessageType
{
public:
	bool *OutlookRuleBlobExists;	/* optional element of type xsd:boolean */
	ns1__ArrayOfRulesType *InboxRules;	/* optional element of type ns1:ArrayOfRulesType */
public:
	virtual int soap_type() const { return 249; } /* = unique type id SOAP_TYPE_ews__GetInboxRulesResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetInboxRulesResponseType() { ews__GetInboxRulesResponseType::soap_default(NULL); }
	virtual ~ews__GetInboxRulesResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UpdateInboxRulesRequestType
#define SOAP_TYPE_ews__UpdateInboxRulesRequestType (250)
/* ews:UpdateInboxRulesRequestType */
class SOAP_CMAC ews__UpdateInboxRulesRequestType : public ews__BaseRequestType
{
public:
	std::string *MailboxSmtpAddress;	/* optional element of type xsd:string */
	bool *RemoveOutlookRuleBlob;	/* optional element of type xsd:boolean */
	ns1__ArrayOfRuleOperationsType *Operations;	/* required element of type ns1:ArrayOfRuleOperationsType */
public:
	virtual int soap_type() const { return 250; } /* = unique type id SOAP_TYPE_ews__UpdateInboxRulesRequestType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UpdateInboxRulesRequestType() { ews__UpdateInboxRulesRequestType::soap_default(NULL); }
	virtual ~ews__UpdateInboxRulesRequestType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UpdateInboxRulesResponseType
#define SOAP_TYPE_ews__UpdateInboxRulesResponseType (251)
/* ews:UpdateInboxRulesResponseType */
class SOAP_CMAC ews__UpdateInboxRulesResponseType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfRuleOperationErrorsType *RuleOperationErrors;	/* optional element of type ns1:ArrayOfRuleOperationErrorsType */
public:
	virtual int soap_type() const { return 251; } /* = unique type id SOAP_TYPE_ews__UpdateInboxRulesResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UpdateInboxRulesResponseType() { ews__UpdateInboxRulesResponseType::soap_default(NULL); }
	virtual ~ews__UpdateInboxRulesResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__FindMailboxStatisticsByKeywordsType
#define SOAP_TYPE_ews__FindMailboxStatisticsByKeywordsType (252)
/* ews:FindMailboxStatisticsByKeywordsType */
class SOAP_CMAC ews__FindMailboxStatisticsByKeywordsType : public ews__BaseRequestType
{
public:
	ns1__ArrayOfUserMailboxesType *Mailboxes;	/* required element of type ns1:ArrayOfUserMailboxesType */
	ns1__ArrayOfStringsType *Keywords;	/* required element of type ns1:ArrayOfStringsType */
	std::string *Language;	/* optional element of type xsd:string */
	ns1__ArrayOfSmtpAddressType *Senders;	/* optional element of type ns1:ArrayOfSmtpAddressType */
	ns1__ArrayOfSmtpAddressType *Recipients;	/* optional element of type ns1:ArrayOfSmtpAddressType */
	time_t *FromDate;	/* optional element of type xsd:dateTime */
	time_t *ToDate;	/* optional element of type xsd:dateTime */
	ns1__ArrayOfSearchItemKindsType *MessageTypes;	/* optional element of type ns1:ArrayOfSearchItemKindsType */
	bool *SearchDumpster;	/* optional element of type xsd:boolean */
	bool *IncludePersonalArchive;	/* optional element of type xsd:boolean */
	bool *IncludeUnsearchableItems;	/* optional element of type xsd:boolean */
public:
	virtual int soap_type() const { return 252; } /* = unique type id SOAP_TYPE_ews__FindMailboxStatisticsByKeywordsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__FindMailboxStatisticsByKeywordsType() { ews__FindMailboxStatisticsByKeywordsType::soap_default(NULL); }
	virtual ~ews__FindMailboxStatisticsByKeywordsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__FindMailboxStatisticsByKeywordsResponseType
#define SOAP_TYPE_ews__FindMailboxStatisticsByKeywordsResponseType (253)
/* ews:FindMailboxStatisticsByKeywordsResponseType */
class SOAP_CMAC ews__FindMailboxStatisticsByKeywordsResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 253; } /* = unique type id SOAP_TYPE_ews__FindMailboxStatisticsByKeywordsResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__FindMailboxStatisticsByKeywordsResponseType() { ews__FindMailboxStatisticsByKeywordsResponseType::soap_default(NULL); }
	virtual ~ews__FindMailboxStatisticsByKeywordsResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__FindMailboxStatisticsByKeywordsResponseMessageType
#define SOAP_TYPE_ews__FindMailboxStatisticsByKeywordsResponseMessageType (254)
/* ews:FindMailboxStatisticsByKeywordsResponseMessageType */
class SOAP_CMAC ews__FindMailboxStatisticsByKeywordsResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__MailboxStatisticsSearchResultType *MailboxStatisticsSearchResult;	/* required element of type ns1:MailboxStatisticsSearchResultType */
public:
	virtual int soap_type() const { return 254; } /* = unique type id SOAP_TYPE_ews__FindMailboxStatisticsByKeywordsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__FindMailboxStatisticsByKeywordsResponseMessageType() { ews__FindMailboxStatisticsByKeywordsResponseMessageType::soap_default(NULL); }
	virtual ~ews__FindMailboxStatisticsByKeywordsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetSearchableMailboxesType
#define SOAP_TYPE_ews__GetSearchableMailboxesType (255)
/* ews:GetSearchableMailboxesType */
class SOAP_CMAC ews__GetSearchableMailboxesType : public ews__BaseRequestType
{
public:
	std::string *SearchFilter;	/* optional element of type xsd:string */
	bool *ExpandGroupMembership;	/* optional element of type xsd:boolean */
public:
	virtual int soap_type() const { return 255; } /* = unique type id SOAP_TYPE_ews__GetSearchableMailboxesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetSearchableMailboxesType() { ews__GetSearchableMailboxesType::soap_default(NULL); }
	virtual ~ews__GetSearchableMailboxesType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetSearchableMailboxesResponseMessageType
#define SOAP_TYPE_ews__GetSearchableMailboxesResponseMessageType (256)
/* ews:GetSearchableMailboxesResponseMessageType */
class SOAP_CMAC ews__GetSearchableMailboxesResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfSearchableMailboxesType *SearchableMailboxes;	/* required element of type ns1:ArrayOfSearchableMailboxesType */
	ns1__ArrayOfFailedSearchMailboxesType *FailedMailboxes;	/* optional element of type ns1:ArrayOfFailedSearchMailboxesType */
public:
	virtual int soap_type() const { return 256; } /* = unique type id SOAP_TYPE_ews__GetSearchableMailboxesResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetSearchableMailboxesResponseMessageType() { ews__GetSearchableMailboxesResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetSearchableMailboxesResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SearchMailboxesType
#define SOAP_TYPE_ews__SearchMailboxesType (257)
/* ews:SearchMailboxesType */
class SOAP_CMAC ews__SearchMailboxesType : public ews__BaseRequestType
{
public:
	ns1__NonEmptyArrayOfMailboxQueriesType *SearchQueries;	/* required element of type ns1:NonEmptyArrayOfMailboxQueriesType */
	enum ns1__SearchResultType ResultType;	/* required element of type ns1:SearchResultType */
	ns1__PreviewItemResponseShapeType *PreviewItemResponseShape;	/* optional element of type ns1:PreviewItemResponseShapeType */
	ns1__FieldOrderType *SortBy;	/* optional element of type ns1:FieldOrderType */
	std::string *Language;	/* optional element of type xsd:string */
	bool *Deduplication;	/* optional element of type xsd:boolean */
	int *PageSize;	/* optional element of type xsd:int */
	std::string *PageItemReference;	/* optional element of type xsd:string */
	enum ns1__SearchPageDirectionType *PageDirection;	/* optional element of type ns1:SearchPageDirectionType */
public:
	virtual int soap_type() const { return 257; } /* = unique type id SOAP_TYPE_ews__SearchMailboxesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SearchMailboxesType() { ews__SearchMailboxesType::soap_default(NULL); }
	virtual ~ews__SearchMailboxesType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SearchMailboxesResponseType
#define SOAP_TYPE_ews__SearchMailboxesResponseType (258)
/* ews:SearchMailboxesResponseType */
class SOAP_CMAC ews__SearchMailboxesResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 258; } /* = unique type id SOAP_TYPE_ews__SearchMailboxesResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SearchMailboxesResponseType() { ews__SearchMailboxesResponseType::soap_default(NULL); }
	virtual ~ews__SearchMailboxesResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SearchMailboxesResponseMessageType
#define SOAP_TYPE_ews__SearchMailboxesResponseMessageType (259)
/* ews:SearchMailboxesResponseMessageType */
class SOAP_CMAC ews__SearchMailboxesResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__SearchMailboxesResultType *SearchMailboxesResult;	/* optional element of type ns1:SearchMailboxesResultType */
public:
	virtual int soap_type() const { return 259; } /* = unique type id SOAP_TYPE_ews__SearchMailboxesResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SearchMailboxesResponseMessageType() { ews__SearchMailboxesResponseMessageType::soap_default(NULL); }
	virtual ~ews__SearchMailboxesResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetDiscoverySearchConfigurationType
#define SOAP_TYPE_ews__GetDiscoverySearchConfigurationType (260)
/* ews:GetDiscoverySearchConfigurationType */
class SOAP_CMAC ews__GetDiscoverySearchConfigurationType : public ews__BaseRequestType
{
public:
	std::string *SearchId;	/* optional element of type xsd:string */
	bool *ExpandGroupMembership;	/* optional element of type xsd:boolean */
	bool *InPlaceHoldConfigurationOnly;	/* optional element of type xsd:boolean */
public:
	virtual int soap_type() const { return 260; } /* = unique type id SOAP_TYPE_ews__GetDiscoverySearchConfigurationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetDiscoverySearchConfigurationType() { ews__GetDiscoverySearchConfigurationType::soap_default(NULL); }
	virtual ~ews__GetDiscoverySearchConfigurationType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetDiscoverySearchConfigurationResponseMessageType
#define SOAP_TYPE_ews__GetDiscoverySearchConfigurationResponseMessageType (261)
/* ews:GetDiscoverySearchConfigurationResponseMessageType */
class SOAP_CMAC ews__GetDiscoverySearchConfigurationResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfDiscoverySearchConfigurationType *DiscoverySearchConfigurations;	/* required element of type ns1:ArrayOfDiscoverySearchConfigurationType */
public:
	virtual int soap_type() const { return 261; } /* = unique type id SOAP_TYPE_ews__GetDiscoverySearchConfigurationResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetDiscoverySearchConfigurationResponseMessageType() { ews__GetDiscoverySearchConfigurationResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetDiscoverySearchConfigurationResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetHoldOnMailboxesType
#define SOAP_TYPE_ews__GetHoldOnMailboxesType (262)
/* ews:GetHoldOnMailboxesType */
class SOAP_CMAC ews__GetHoldOnMailboxesType : public ews__BaseRequestType
{
public:
	std::string HoldId;	/* required element of type xsd:string */
public:
	virtual int soap_type() const { return 262; } /* = unique type id SOAP_TYPE_ews__GetHoldOnMailboxesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetHoldOnMailboxesType() { ews__GetHoldOnMailboxesType::soap_default(NULL); }
	virtual ~ews__GetHoldOnMailboxesType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetHoldOnMailboxesResponseMessageType
#define SOAP_TYPE_ews__GetHoldOnMailboxesResponseMessageType (263)
/* ews:GetHoldOnMailboxesResponseMessageType */
class SOAP_CMAC ews__GetHoldOnMailboxesResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__MailboxHoldResultType *MailboxHoldResult;	/* optional element of type ns1:MailboxHoldResultType */
public:
	virtual int soap_type() const { return 263; } /* = unique type id SOAP_TYPE_ews__GetHoldOnMailboxesResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetHoldOnMailboxesResponseMessageType() { ews__GetHoldOnMailboxesResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetHoldOnMailboxesResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetHoldOnMailboxesType
#define SOAP_TYPE_ews__SetHoldOnMailboxesType (264)
/* ews:SetHoldOnMailboxesType */
class SOAP_CMAC ews__SetHoldOnMailboxesType : public ews__BaseRequestType
{
public:
	enum ns1__HoldActionType ActionType;	/* required element of type ns1:HoldActionType */
	std::string HoldId;	/* required element of type xsd:string */
	std::string Query;	/* required element of type xsd:string */
	ns1__ArrayOfStringsType *Mailboxes;	/* optional element of type ns1:ArrayOfStringsType */
	std::string *Language;	/* optional element of type xsd:string */
	bool *IncludeNonIndexableItems;	/* optional element of type xsd:boolean */
	bool *Deduplication;	/* optional element of type xsd:boolean */
	std::string *InPlaceHoldIdentity;	/* optional element of type xsd:string */
	std::string *ItemHoldPeriod;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 264; } /* = unique type id SOAP_TYPE_ews__SetHoldOnMailboxesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetHoldOnMailboxesType() { ews__SetHoldOnMailboxesType::soap_default(NULL); }
	virtual ~ews__SetHoldOnMailboxesType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetHoldOnMailboxesResponseMessageType
#define SOAP_TYPE_ews__SetHoldOnMailboxesResponseMessageType (265)
/* ews:SetHoldOnMailboxesResponseMessageType */
class SOAP_CMAC ews__SetHoldOnMailboxesResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__MailboxHoldResultType *MailboxHoldResult;	/* optional element of type ns1:MailboxHoldResultType */
public:
	virtual int soap_type() const { return 265; } /* = unique type id SOAP_TYPE_ews__SetHoldOnMailboxesResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetHoldOnMailboxesResponseMessageType() { ews__SetHoldOnMailboxesResponseMessageType::soap_default(NULL); }
	virtual ~ews__SetHoldOnMailboxesResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetNonIndexableItemStatisticsType
#define SOAP_TYPE_ews__GetNonIndexableItemStatisticsType (266)
/* ews:GetNonIndexableItemStatisticsType */
class SOAP_CMAC ews__GetNonIndexableItemStatisticsType : public ews__BaseRequestType
{
public:
	ns1__NonEmptyArrayOfLegacyDNsType *Mailboxes;	/* required element of type ns1:NonEmptyArrayOfLegacyDNsType */
	bool *SearchArchiveOnly;	/* optional element of type xsd:boolean */
public:
	virtual int soap_type() const { return 266; } /* = unique type id SOAP_TYPE_ews__GetNonIndexableItemStatisticsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetNonIndexableItemStatisticsType() { ews__GetNonIndexableItemStatisticsType::soap_default(NULL); }
	virtual ~ews__GetNonIndexableItemStatisticsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetNonIndexableItemStatisticsResponseMessageType
#define SOAP_TYPE_ews__GetNonIndexableItemStatisticsResponseMessageType (267)
/* ews:GetNonIndexableItemStatisticsResponseMessageType */
class SOAP_CMAC ews__GetNonIndexableItemStatisticsResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfNonIndexableItemStatisticsType *NonIndexableItemStatistics;	/* optional element of type ns1:ArrayOfNonIndexableItemStatisticsType */
public:
	virtual int soap_type() const { return 267; } /* = unique type id SOAP_TYPE_ews__GetNonIndexableItemStatisticsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetNonIndexableItemStatisticsResponseMessageType() { ews__GetNonIndexableItemStatisticsResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetNonIndexableItemStatisticsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetNonIndexableItemDetailsType
#define SOAP_TYPE_ews__GetNonIndexableItemDetailsType (268)
/* ews:GetNonIndexableItemDetailsType */
class SOAP_CMAC ews__GetNonIndexableItemDetailsType : public ews__BaseRequestType
{
public:
	ns1__NonEmptyArrayOfLegacyDNsType *Mailboxes;	/* required element of type ns1:NonEmptyArrayOfLegacyDNsType */
	int *PageSize;	/* optional element of type xsd:int */
	std::string *PageItemReference;	/* optional element of type xsd:string */
	enum ns1__SearchPageDirectionType *PageDirection;	/* optional element of type ns1:SearchPageDirectionType */
	bool *SearchArchiveOnly;	/* optional element of type xsd:boolean */
public:
	virtual int soap_type() const { return 268; } /* = unique type id SOAP_TYPE_ews__GetNonIndexableItemDetailsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetNonIndexableItemDetailsType() { ews__GetNonIndexableItemDetailsType::soap_default(NULL); }
	virtual ~ews__GetNonIndexableItemDetailsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetNonIndexableItemDetailsResponseMessageType
#define SOAP_TYPE_ews__GetNonIndexableItemDetailsResponseMessageType (269)
/* ews:GetNonIndexableItemDetailsResponseMessageType */
class SOAP_CMAC ews__GetNonIndexableItemDetailsResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__NonIndexableItemDetailResultType *NonIndexableItemDetailsResult;	/* optional element of type ns1:NonIndexableItemDetailResultType */
public:
	virtual int soap_type() const { return 269; } /* = unique type id SOAP_TYPE_ews__GetNonIndexableItemDetailsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetNonIndexableItemDetailsResponseMessageType() { ews__GetNonIndexableItemDetailsResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetNonIndexableItemDetailsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__MarkAllItemsAsReadType
#define SOAP_TYPE_ews__MarkAllItemsAsReadType (270)
/* ews:MarkAllItemsAsReadType */
class SOAP_CMAC ews__MarkAllItemsAsReadType : public ews__BaseRequestType
{
public:
	bool ReadFlag;	/* required element of type xsd:boolean */
	bool SuppressReadReceipts;	/* required element of type xsd:boolean */
	ns1__NonEmptyArrayOfBaseFolderIdsType *FolderIds;	/* required element of type ns1:NonEmptyArrayOfBaseFolderIdsType */
public:
	virtual int soap_type() const { return 270; } /* = unique type id SOAP_TYPE_ews__MarkAllItemsAsReadType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__MarkAllItemsAsReadType() { ews__MarkAllItemsAsReadType::soap_default(NULL); }
	virtual ~ews__MarkAllItemsAsReadType() { }
};
#endif

#ifndef SOAP_TYPE_ews__MarkAllItemsAsReadResponseType
#define SOAP_TYPE_ews__MarkAllItemsAsReadResponseType (271)
/* ews:MarkAllItemsAsReadResponseType */
class SOAP_CMAC ews__MarkAllItemsAsReadResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 271; } /* = unique type id SOAP_TYPE_ews__MarkAllItemsAsReadResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__MarkAllItemsAsReadResponseType() { ews__MarkAllItemsAsReadResponseType::soap_default(NULL); }
	virtual ~ews__MarkAllItemsAsReadResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetConversationItemsType
#define SOAP_TYPE_ews__GetConversationItemsType (272)
/* ews:GetConversationItemsType */
class SOAP_CMAC ews__GetConversationItemsType : public ews__BaseRequestType
{
public:
	ns1__ItemResponseShapeType *ItemShape;	/* required element of type ns1:ItemResponseShapeType */
	ns1__NonEmptyArrayOfBaseFolderIdsType *FoldersToIgnore;	/* optional element of type ns1:NonEmptyArrayOfBaseFolderIdsType */
	int *MaxItemsToReturn;	/* optional element of type xsd:int */
	enum ns1__ConversationNodeSortOrder *SortOrder;	/* optional element of type ns1:ConversationNodeSortOrder */
	enum ns1__MailboxSearchLocationType *MailboxScope;	/* optional element of type ns1:MailboxSearchLocationType */
	ns1__ArrayOfConversationRequestsType *Conversations;	/* required element of type ns1:ArrayOfConversationRequestsType */
public:
	virtual int soap_type() const { return 272; } /* = unique type id SOAP_TYPE_ews__GetConversationItemsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetConversationItemsType() { ews__GetConversationItemsType::soap_default(NULL); }
	virtual ~ews__GetConversationItemsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetConversationItemsResponseMessageType
#define SOAP_TYPE_ews__GetConversationItemsResponseMessageType (273)
/* ews:GetConversationItemsResponseMessageType */
class SOAP_CMAC ews__GetConversationItemsResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ConversationResponseType *Conversation;	/* optional element of type ns1:ConversationResponseType */
public:
	virtual int soap_type() const { return 273; } /* = unique type id SOAP_TYPE_ews__GetConversationItemsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetConversationItemsResponseMessageType() { ews__GetConversationItemsResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetConversationItemsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetConversationItemsResponseType
#define SOAP_TYPE_ews__GetConversationItemsResponseType (274)
/* ews:GetConversationItemsResponseType */
class SOAP_CMAC ews__GetConversationItemsResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 274; } /* = unique type id SOAP_TYPE_ews__GetConversationItemsResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetConversationItemsResponseType() { ews__GetConversationItemsResponseType::soap_default(NULL); }
	virtual ~ews__GetConversationItemsResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetClientExtensionType
#define SOAP_TYPE_ews__GetClientExtensionType (275)
/* ews:GetClientExtensionType */
class SOAP_CMAC ews__GetClientExtensionType : public ews__BaseRequestType
{
public:
	ns1__ArrayOfStringsType *RequestedExtensionIds;	/* optional element of type ns1:ArrayOfStringsType */
	ns1__GetClientExtensionUserParametersType *UserParameters;	/* optional element of type ns1:GetClientExtensionUserParametersType */
	bool *IsDebug;	/* optional element of type xsd:boolean */
public:
	virtual int soap_type() const { return 275; } /* = unique type id SOAP_TYPE_ews__GetClientExtensionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetClientExtensionType() { ews__GetClientExtensionType::soap_default(NULL); }
	virtual ~ews__GetClientExtensionType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ClientExtensionResponseType
#define SOAP_TYPE_ews__ClientExtensionResponseType (276)
/* ews:ClientExtensionResponseType */
class SOAP_CMAC ews__ClientExtensionResponseType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfClientExtensionsType *ClientExtensions;	/* optional element of type ns1:ArrayOfClientExtensionsType */
	std::string *RawMasterTableXml;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 276; } /* = unique type id SOAP_TYPE_ews__ClientExtensionResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ClientExtensionResponseType() { ews__ClientExtensionResponseType::soap_default(NULL); }
	virtual ~ews__ClientExtensionResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetEncryptionConfigurationType
#define SOAP_TYPE_ews__GetEncryptionConfigurationType (277)
/* ews:GetEncryptionConfigurationType */
class SOAP_CMAC ews__GetEncryptionConfigurationType : public ews__BaseRequestType
{
public:
	virtual int soap_type() const { return 277; } /* = unique type id SOAP_TYPE_ews__GetEncryptionConfigurationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetEncryptionConfigurationType() { ews__GetEncryptionConfigurationType::soap_default(NULL); }
	virtual ~ews__GetEncryptionConfigurationType() { }
};
#endif

#ifndef SOAP_TYPE_ews__EncryptionConfigurationResponseType
#define SOAP_TYPE_ews__EncryptionConfigurationResponseType (278)
/* ews:EncryptionConfigurationResponseType */
class SOAP_CMAC ews__EncryptionConfigurationResponseType : public ews__ResponseMessageType
{
public:
	std::string *ImageBase64;	/* optional element of type xsd:string */
	std::string *EmailText;	/* optional element of type xsd:string */
	std::string *PortalText;	/* optional element of type xsd:string */
	std::string *DisclaimerText;	/* optional element of type xsd:string */
	bool *OTPEnabled;	/* optional element of type xsd:boolean */
public:
	virtual int soap_type() const { return 278; } /* = unique type id SOAP_TYPE_ews__EncryptionConfigurationResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__EncryptionConfigurationResponseType() { ews__EncryptionConfigurationResponseType::soap_default(NULL); }
	virtual ~ews__EncryptionConfigurationResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetOMEConfigurationType
#define SOAP_TYPE_ews__GetOMEConfigurationType (279)
/* ews:GetOMEConfigurationType */
class SOAP_CMAC ews__GetOMEConfigurationType : public ews__BaseRequestType
{
public:
	virtual int soap_type() const { return 279; } /* = unique type id SOAP_TYPE_ews__GetOMEConfigurationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetOMEConfigurationType() { ews__GetOMEConfigurationType::soap_default(NULL); }
	virtual ~ews__GetOMEConfigurationType() { }
};
#endif

#ifndef SOAP_TYPE_ews__OMEConfigurationResponseType
#define SOAP_TYPE_ews__OMEConfigurationResponseType (280)
/* ews:OMEConfigurationResponseType */
class SOAP_CMAC ews__OMEConfigurationResponseType : public ews__ResponseMessageType
{
public:
	std::string *Xml;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 280; } /* = unique type id SOAP_TYPE_ews__OMEConfigurationResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__OMEConfigurationResponseType() { ews__OMEConfigurationResponseType::soap_default(NULL); }
	virtual ~ews__OMEConfigurationResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetClientExtensionType
#define SOAP_TYPE_ews__SetClientExtensionType (281)
/* ews:SetClientExtensionType */
class SOAP_CMAC ews__SetClientExtensionType : public ews__BaseRequestType
{
public:
	ns1__ArrayOfSetClientExtensionActionsType *Actions;	/* required element of type ns1:ArrayOfSetClientExtensionActionsType */
public:
	virtual int soap_type() const { return 281; } /* = unique type id SOAP_TYPE_ews__SetClientExtensionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetClientExtensionType() { ews__SetClientExtensionType::soap_default(NULL); }
	virtual ~ews__SetClientExtensionType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetClientExtensionResponseType
#define SOAP_TYPE_ews__SetClientExtensionResponseType (282)
/* ews:SetClientExtensionResponseType */
class SOAP_CMAC ews__SetClientExtensionResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 282; } /* = unique type id SOAP_TYPE_ews__SetClientExtensionResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetClientExtensionResponseType() { ews__SetClientExtensionResponseType::soap_default(NULL); }
	virtual ~ews__SetClientExtensionResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetEncryptionConfigurationType
#define SOAP_TYPE_ews__SetEncryptionConfigurationType (283)
/* ews:SetEncryptionConfigurationType */
class SOAP_CMAC ews__SetEncryptionConfigurationType : public ews__BaseRequestType
{
public:
	std::string *ImageBase64;	/* optional element of type xsd:string */
	std::string *EmailText;	/* optional element of type xsd:string */
	std::string *PortalText;	/* optional element of type xsd:string */
	std::string *DisclaimerText;	/* optional element of type xsd:string */
	bool *OTPEnabled;	/* optional element of type xsd:boolean */
public:
	virtual int soap_type() const { return 283; } /* = unique type id SOAP_TYPE_ews__SetEncryptionConfigurationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetEncryptionConfigurationType() { ews__SetEncryptionConfigurationType::soap_default(NULL); }
	virtual ~ews__SetEncryptionConfigurationType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetEncryptionConfigurationResponseType
#define SOAP_TYPE_ews__SetEncryptionConfigurationResponseType (284)
/* ews:SetEncryptionConfigurationResponseType */
class SOAP_CMAC ews__SetEncryptionConfigurationResponseType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 284; } /* = unique type id SOAP_TYPE_ews__SetEncryptionConfigurationResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetEncryptionConfigurationResponseType() { ews__SetEncryptionConfigurationResponseType::soap_default(NULL); }
	virtual ~ews__SetEncryptionConfigurationResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetOMEConfigurationType
#define SOAP_TYPE_ews__SetOMEConfigurationType (285)
/* ews:SetOMEConfigurationType */
class SOAP_CMAC ews__SetOMEConfigurationType : public ews__BaseRequestType
{
public:
	std::string *Xml;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 285; } /* = unique type id SOAP_TYPE_ews__SetOMEConfigurationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetOMEConfigurationType() { ews__SetOMEConfigurationType::soap_default(NULL); }
	virtual ~ews__SetOMEConfigurationType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetOMEConfigurationResponseType
#define SOAP_TYPE_ews__SetOMEConfigurationResponseType (286)
/* ews:SetOMEConfigurationResponseType */
class SOAP_CMAC ews__SetOMEConfigurationResponseType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 286; } /* = unique type id SOAP_TYPE_ews__SetOMEConfigurationResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetOMEConfigurationResponseType() { ews__SetOMEConfigurationResponseType::soap_default(NULL); }
	virtual ~ews__SetOMEConfigurationResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetAppManifestsType
#define SOAP_TYPE_ews__GetAppManifestsType (287)
/* ews:GetAppManifestsType */
class SOAP_CMAC ews__GetAppManifestsType : public ews__BaseRequestType
{
public:
	virtual int soap_type() const { return 287; } /* = unique type id SOAP_TYPE_ews__GetAppManifestsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetAppManifestsType() { ews__GetAppManifestsType::soap_default(NULL); }
	virtual ~ews__GetAppManifestsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetAppManifestsResponseType
#define SOAP_TYPE_ews__GetAppManifestsResponseType (288)
/* ews:GetAppManifestsResponseType */
class SOAP_CMAC ews__GetAppManifestsResponseType : public ews__ResponseMessageType
{
public:
	ews__ArrayOfAppManifestsType *Manifests;	/* required element of type ews:ArrayOfAppManifestsType */
public:
	virtual int soap_type() const { return 288; } /* = unique type id SOAP_TYPE_ews__GetAppManifestsResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetAppManifestsResponseType() { ews__GetAppManifestsResponseType::soap_default(NULL); }
	virtual ~ews__GetAppManifestsResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetAppMarketplaceUrlType
#define SOAP_TYPE_ews__GetAppMarketplaceUrlType (290)
/* ews:GetAppMarketplaceUrlType */
class SOAP_CMAC ews__GetAppMarketplaceUrlType : public ews__BaseRequestType
{
public:
	virtual int soap_type() const { return 290; } /* = unique type id SOAP_TYPE_ews__GetAppMarketplaceUrlType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetAppMarketplaceUrlType() { ews__GetAppMarketplaceUrlType::soap_default(NULL); }
	virtual ~ews__GetAppMarketplaceUrlType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetAppMarketplaceUrlResponseMessageType
#define SOAP_TYPE_ews__GetAppMarketplaceUrlResponseMessageType (291)
/* ews:GetAppMarketplaceUrlResponseMessageType */
class SOAP_CMAC ews__GetAppMarketplaceUrlResponseMessageType : public ews__ResponseMessageType
{
public:
	std::string *AppMarketplaceUrl;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 291; } /* = unique type id SOAP_TYPE_ews__GetAppMarketplaceUrlResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetAppMarketplaceUrlResponseMessageType() { ews__GetAppMarketplaceUrlResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetAppMarketplaceUrlResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__MarkAsJunkType
#define SOAP_TYPE_ews__MarkAsJunkType (292)
/* ews:MarkAsJunkType */
class SOAP_CMAC ews__MarkAsJunkType : public ews__BaseRequestType
{
public:
	ns1__NonEmptyArrayOfBaseItemIdsType *ItemIds;	/* required element of type ns1:NonEmptyArrayOfBaseItemIdsType */
	bool IsJunk;	/* required attribute */
	bool MoveItem;	/* required attribute */
public:
	virtual int soap_type() const { return 292; } /* = unique type id SOAP_TYPE_ews__MarkAsJunkType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__MarkAsJunkType() { ews__MarkAsJunkType::soap_default(NULL); }
	virtual ~ews__MarkAsJunkType() { }
};
#endif

#ifndef SOAP_TYPE_ews__MarkAsJunkResponseType
#define SOAP_TYPE_ews__MarkAsJunkResponseType (293)
/* ews:MarkAsJunkResponseType */
class SOAP_CMAC ews__MarkAsJunkResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 293; } /* = unique type id SOAP_TYPE_ews__MarkAsJunkResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__MarkAsJunkResponseType() { ews__MarkAsJunkResponseType::soap_default(NULL); }
	virtual ~ews__MarkAsJunkResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__MarkAsJunkResponseMessageType
#define SOAP_TYPE_ews__MarkAsJunkResponseMessageType (294)
/* ews:MarkAsJunkResponseMessageType */
class SOAP_CMAC ews__MarkAsJunkResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ItemIdType *MovedItemId;	/* optional element of type ns1:ItemIdType */
public:
	virtual int soap_type() const { return 294; } /* = unique type id SOAP_TYPE_ews__MarkAsJunkResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__MarkAsJunkResponseMessageType() { ews__MarkAsJunkResponseMessageType::soap_default(NULL); }
	virtual ~ews__MarkAsJunkResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__InstallAppType
#define SOAP_TYPE_ews__InstallAppType (295)
/* ews:InstallAppType */
class SOAP_CMAC ews__InstallAppType : public ews__BaseRequestType
{
public:
	xsd__base64Binary Manifest;	/* required element of type xsd:base64Binary */
public:
	virtual int soap_type() const { return 295; } /* = unique type id SOAP_TYPE_ews__InstallAppType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__InstallAppType() { ews__InstallAppType::soap_default(NULL); }
	virtual ~ews__InstallAppType() { }
};
#endif

#ifndef SOAP_TYPE_ews__InstallAppResponseType
#define SOAP_TYPE_ews__InstallAppResponseType (296)
/* ews:InstallAppResponseType */
class SOAP_CMAC ews__InstallAppResponseType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 296; } /* = unique type id SOAP_TYPE_ews__InstallAppResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__InstallAppResponseType() { ews__InstallAppResponseType::soap_default(NULL); }
	virtual ~ews__InstallAppResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UninstallAppType
#define SOAP_TYPE_ews__UninstallAppType (297)
/* ews:UninstallAppType */
class SOAP_CMAC ews__UninstallAppType : public ews__BaseRequestType
{
public:
	std::string ID;	/* required element of type xsd:string */
public:
	virtual int soap_type() const { return 297; } /* = unique type id SOAP_TYPE_ews__UninstallAppType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UninstallAppType() { ews__UninstallAppType::soap_default(NULL); }
	virtual ~ews__UninstallAppType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UninstallAppResponseType
#define SOAP_TYPE_ews__UninstallAppResponseType (298)
/* ews:UninstallAppResponseType */
class SOAP_CMAC ews__UninstallAppResponseType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 298; } /* = unique type id SOAP_TYPE_ews__UninstallAppResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UninstallAppResponseType() { ews__UninstallAppResponseType::soap_default(NULL); }
	virtual ~ews__UninstallAppResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__DisableAppType
#define SOAP_TYPE_ews__DisableAppType (299)
/* ews:DisableAppType */
class SOAP_CMAC ews__DisableAppType : public ews__BaseRequestType
{
public:
	std::string ID;	/* required element of type xsd:string */
	enum ns1__DisableReasonType DisableReason;	/* required element of type ns1:DisableReasonType */
public:
	virtual int soap_type() const { return 299; } /* = unique type id SOAP_TYPE_ews__DisableAppType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__DisableAppType() { ews__DisableAppType::soap_default(NULL); }
	virtual ~ews__DisableAppType() { }
};
#endif

#ifndef SOAP_TYPE_ews__DisableAppResponseType
#define SOAP_TYPE_ews__DisableAppResponseType (300)
/* ews:DisableAppResponseType */
class SOAP_CMAC ews__DisableAppResponseType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 300; } /* = unique type id SOAP_TYPE_ews__DisableAppResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__DisableAppResponseType() { ews__DisableAppResponseType::soap_default(NULL); }
	virtual ~ews__DisableAppResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__AddNewImContactToGroupType
#define SOAP_TYPE_ews__AddNewImContactToGroupType (301)
/* ews:AddNewImContactToGroupType */
class SOAP_CMAC ews__AddNewImContactToGroupType : public ews__BaseRequestType
{
public:
	std::string ImAddress;	/* required element of type ns1:NonEmptyStringType */
	std::string *DisplayName;	/* optional element of type ns1:NonEmptyStringType */
	ns1__ItemIdType *GroupId;	/* optional element of type ns1:ItemIdType */
public:
	virtual int soap_type() const { return 301; } /* = unique type id SOAP_TYPE_ews__AddNewImContactToGroupType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__AddNewImContactToGroupType() { ews__AddNewImContactToGroupType::soap_default(NULL); }
	virtual ~ews__AddNewImContactToGroupType() { }
};
#endif

#ifndef SOAP_TYPE_ews__AddNewImContactToGroupResponseMessageType
#define SOAP_TYPE_ews__AddNewImContactToGroupResponseMessageType (302)
/* ews:AddNewImContactToGroupResponseMessageType */
class SOAP_CMAC ews__AddNewImContactToGroupResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__PersonaType *Persona;	/* optional element of type ns1:PersonaType */
public:
	virtual int soap_type() const { return 302; } /* = unique type id SOAP_TYPE_ews__AddNewImContactToGroupResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__AddNewImContactToGroupResponseMessageType() { ews__AddNewImContactToGroupResponseMessageType::soap_default(NULL); }
	virtual ~ews__AddNewImContactToGroupResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__AddNewTelUriContactToGroupType
#define SOAP_TYPE_ews__AddNewTelUriContactToGroupType (303)
/* ews:AddNewTelUriContactToGroupType */
class SOAP_CMAC ews__AddNewTelUriContactToGroupType : public ews__BaseRequestType
{
public:
	std::string TelUriAddress;	/* required element of type ns1:NonEmptyStringType */
	std::string ImContactSipUriAddress;	/* required element of type ns1:NonEmptyStringType */
	std::string ImTelephoneNumber;	/* required element of type ns1:NonEmptyStringType */
	ns1__ItemIdType *GroupId;	/* optional element of type ns1:ItemIdType */
public:
	virtual int soap_type() const { return 303; } /* = unique type id SOAP_TYPE_ews__AddNewTelUriContactToGroupType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__AddNewTelUriContactToGroupType() { ews__AddNewTelUriContactToGroupType::soap_default(NULL); }
	virtual ~ews__AddNewTelUriContactToGroupType() { }
};
#endif

#ifndef SOAP_TYPE_ews__AddNewTelUriContactToGroupResponseMessageType
#define SOAP_TYPE_ews__AddNewTelUriContactToGroupResponseMessageType (304)
/* ews:AddNewTelUriContactToGroupResponseMessageType */
class SOAP_CMAC ews__AddNewTelUriContactToGroupResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__PersonaType *Persona;	/* optional element of type ns1:PersonaType */
public:
	virtual int soap_type() const { return 304; } /* = unique type id SOAP_TYPE_ews__AddNewTelUriContactToGroupResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__AddNewTelUriContactToGroupResponseMessageType() { ews__AddNewTelUriContactToGroupResponseMessageType::soap_default(NULL); }
	virtual ~ews__AddNewTelUriContactToGroupResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__AddImContactToGroupType
#define SOAP_TYPE_ews__AddImContactToGroupType (305)
/* ews:AddImContactToGroupType */
class SOAP_CMAC ews__AddImContactToGroupType : public ews__BaseRequestType
{
public:
	ns1__ItemIdType *ContactId;	/* required element of type ns1:ItemIdType */
	ns1__ItemIdType *GroupId;	/* optional element of type ns1:ItemIdType */
public:
	virtual int soap_type() const { return 305; } /* = unique type id SOAP_TYPE_ews__AddImContactToGroupType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__AddImContactToGroupType() { ews__AddImContactToGroupType::soap_default(NULL); }
	virtual ~ews__AddImContactToGroupType() { }
};
#endif

#ifndef SOAP_TYPE_ews__AddImContactToGroupResponseMessageType
#define SOAP_TYPE_ews__AddImContactToGroupResponseMessageType (306)
/* ews:AddImContactToGroupResponseMessageType */
class SOAP_CMAC ews__AddImContactToGroupResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 306; } /* = unique type id SOAP_TYPE_ews__AddImContactToGroupResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__AddImContactToGroupResponseMessageType() { ews__AddImContactToGroupResponseMessageType::soap_default(NULL); }
	virtual ~ews__AddImContactToGroupResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__RemoveImContactFromGroupType
#define SOAP_TYPE_ews__RemoveImContactFromGroupType (307)
/* ews:RemoveImContactFromGroupType */
class SOAP_CMAC ews__RemoveImContactFromGroupType : public ews__BaseRequestType
{
public:
	ns1__ItemIdType *ContactId;	/* required element of type ns1:ItemIdType */
	ns1__ItemIdType *GroupId;	/* required element of type ns1:ItemIdType */
public:
	virtual int soap_type() const { return 307; } /* = unique type id SOAP_TYPE_ews__RemoveImContactFromGroupType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__RemoveImContactFromGroupType() { ews__RemoveImContactFromGroupType::soap_default(NULL); }
	virtual ~ews__RemoveImContactFromGroupType() { }
};
#endif

#ifndef SOAP_TYPE_ews__RemoveImContactFromGroupResponseMessageType
#define SOAP_TYPE_ews__RemoveImContactFromGroupResponseMessageType (308)
/* ews:RemoveImContactFromGroupResponseMessageType */
class SOAP_CMAC ews__RemoveImContactFromGroupResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 308; } /* = unique type id SOAP_TYPE_ews__RemoveImContactFromGroupResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__RemoveImContactFromGroupResponseMessageType() { ews__RemoveImContactFromGroupResponseMessageType::soap_default(NULL); }
	virtual ~ews__RemoveImContactFromGroupResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__AddImGroupType
#define SOAP_TYPE_ews__AddImGroupType (309)
/* ews:AddImGroupType */
class SOAP_CMAC ews__AddImGroupType : public ews__BaseRequestType
{
public:
	std::string DisplayName;	/* required element of type ns1:NonEmptyStringType */
public:
	virtual int soap_type() const { return 309; } /* = unique type id SOAP_TYPE_ews__AddImGroupType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__AddImGroupType() { ews__AddImGroupType::soap_default(NULL); }
	virtual ~ews__AddImGroupType() { }
};
#endif

#ifndef SOAP_TYPE_ews__AddImGroupResponseMessageType
#define SOAP_TYPE_ews__AddImGroupResponseMessageType (310)
/* ews:AddImGroupResponseMessageType */
class SOAP_CMAC ews__AddImGroupResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ImGroupType *ImGroup;	/* optional element of type ns1:ImGroupType */
public:
	virtual int soap_type() const { return 310; } /* = unique type id SOAP_TYPE_ews__AddImGroupResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__AddImGroupResponseMessageType() { ews__AddImGroupResponseMessageType::soap_default(NULL); }
	virtual ~ews__AddImGroupResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__AddDistributionGroupToImListType
#define SOAP_TYPE_ews__AddDistributionGroupToImListType (311)
/* ews:AddDistributionGroupToImListType */
class SOAP_CMAC ews__AddDistributionGroupToImListType : public ews__BaseRequestType
{
public:
	std::string SmtpAddress;	/* required element of type ns1:NonEmptyStringType */
	std::string DisplayName;	/* required element of type ns1:NonEmptyStringType */
public:
	virtual int soap_type() const { return 311; } /* = unique type id SOAP_TYPE_ews__AddDistributionGroupToImListType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__AddDistributionGroupToImListType() { ews__AddDistributionGroupToImListType::soap_default(NULL); }
	virtual ~ews__AddDistributionGroupToImListType() { }
};
#endif

#ifndef SOAP_TYPE_ews__AddDistributionGroupToImListResponseMessageType
#define SOAP_TYPE_ews__AddDistributionGroupToImListResponseMessageType (312)
/* ews:AddDistributionGroupToImListResponseMessageType */
class SOAP_CMAC ews__AddDistributionGroupToImListResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ImGroupType *ImGroup;	/* optional element of type ns1:ImGroupType */
public:
	virtual int soap_type() const { return 312; } /* = unique type id SOAP_TYPE_ews__AddDistributionGroupToImListResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__AddDistributionGroupToImListResponseMessageType() { ews__AddDistributionGroupToImListResponseMessageType::soap_default(NULL); }
	virtual ~ews__AddDistributionGroupToImListResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetImItemListType
#define SOAP_TYPE_ews__GetImItemListType (313)
/* ews:GetImItemListType */
class SOAP_CMAC ews__GetImItemListType : public ews__BaseRequestType
{
public:
	ns1__NonEmptyArrayOfExtendedFieldURIs *ExtendedProperties;	/* optional element of type ns1:NonEmptyArrayOfExtendedFieldURIs */
public:
	virtual int soap_type() const { return 313; } /* = unique type id SOAP_TYPE_ews__GetImItemListType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetImItemListType() { ews__GetImItemListType::soap_default(NULL); }
	virtual ~ews__GetImItemListType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetImItemListResponseMessageType
#define SOAP_TYPE_ews__GetImItemListResponseMessageType (314)
/* ews:GetImItemListResponseMessageType */
class SOAP_CMAC ews__GetImItemListResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ImItemListType *ImItemList;	/* optional element of type ns1:ImItemListType */
public:
	virtual int soap_type() const { return 314; } /* = unique type id SOAP_TYPE_ews__GetImItemListResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetImItemListResponseMessageType() { ews__GetImItemListResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetImItemListResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetImItemsType
#define SOAP_TYPE_ews__GetImItemsType (315)
/* ews:GetImItemsType */
class SOAP_CMAC ews__GetImItemsType : public ews__BaseRequestType
{
public:
	ns1__NonEmptyArrayOfBaseItemIdsType *ContactIds;	/* optional element of type ns1:NonEmptyArrayOfBaseItemIdsType */
	ns1__NonEmptyArrayOfBaseItemIdsType *GroupIds;	/* optional element of type ns1:NonEmptyArrayOfBaseItemIdsType */
	ns1__NonEmptyArrayOfExtendedFieldURIs *ExtendedProperties;	/* optional element of type ns1:NonEmptyArrayOfExtendedFieldURIs */
public:
	virtual int soap_type() const { return 315; } /* = unique type id SOAP_TYPE_ews__GetImItemsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetImItemsType() { ews__GetImItemsType::soap_default(NULL); }
	virtual ~ews__GetImItemsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetImItemsResponseMessageType
#define SOAP_TYPE_ews__GetImItemsResponseMessageType (316)
/* ews:GetImItemsResponseMessageType */
class SOAP_CMAC ews__GetImItemsResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ImItemListType *ImItemList;	/* optional element of type ns1:ImItemListType */
public:
	virtual int soap_type() const { return 316; } /* = unique type id SOAP_TYPE_ews__GetImItemsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetImItemsResponseMessageType() { ews__GetImItemsResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetImItemsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__RemoveContactFromImListType
#define SOAP_TYPE_ews__RemoveContactFromImListType (317)
/* ews:RemoveContactFromImListType */
class SOAP_CMAC ews__RemoveContactFromImListType : public ews__BaseRequestType
{
public:
	ns1__ItemIdType *ContactId;	/* required element of type ns1:ItemIdType */
public:
	virtual int soap_type() const { return 317; } /* = unique type id SOAP_TYPE_ews__RemoveContactFromImListType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__RemoveContactFromImListType() { ews__RemoveContactFromImListType::soap_default(NULL); }
	virtual ~ews__RemoveContactFromImListType() { }
};
#endif

#ifndef SOAP_TYPE_ews__RemoveContactFromImListResponseMessageType
#define SOAP_TYPE_ews__RemoveContactFromImListResponseMessageType (318)
/* ews:RemoveContactFromImListResponseMessageType */
class SOAP_CMAC ews__RemoveContactFromImListResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 318; } /* = unique type id SOAP_TYPE_ews__RemoveContactFromImListResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__RemoveContactFromImListResponseMessageType() { ews__RemoveContactFromImListResponseMessageType::soap_default(NULL); }
	virtual ~ews__RemoveContactFromImListResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__RemoveDistributionGroupFromImListType
#define SOAP_TYPE_ews__RemoveDistributionGroupFromImListType (319)
/* ews:RemoveDistributionGroupFromImListType */
class SOAP_CMAC ews__RemoveDistributionGroupFromImListType : public ews__BaseRequestType
{
public:
	ns1__ItemIdType *GroupId;	/* required element of type ns1:ItemIdType */
public:
	virtual int soap_type() const { return 319; } /* = unique type id SOAP_TYPE_ews__RemoveDistributionGroupFromImListType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__RemoveDistributionGroupFromImListType() { ews__RemoveDistributionGroupFromImListType::soap_default(NULL); }
	virtual ~ews__RemoveDistributionGroupFromImListType() { }
};
#endif

#ifndef SOAP_TYPE_ews__RemoveDistributionGroupFromImListResponseMessageType
#define SOAP_TYPE_ews__RemoveDistributionGroupFromImListResponseMessageType (320)
/* ews:RemoveDistributionGroupFromImListResponseMessageType */
class SOAP_CMAC ews__RemoveDistributionGroupFromImListResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 320; } /* = unique type id SOAP_TYPE_ews__RemoveDistributionGroupFromImListResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__RemoveDistributionGroupFromImListResponseMessageType() { ews__RemoveDistributionGroupFromImListResponseMessageType::soap_default(NULL); }
	virtual ~ews__RemoveDistributionGroupFromImListResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__RemoveImGroupType
#define SOAP_TYPE_ews__RemoveImGroupType (321)
/* ews:RemoveImGroupType */
class SOAP_CMAC ews__RemoveImGroupType : public ews__BaseRequestType
{
public:
	ns1__ItemIdType *GroupId;	/* required element of type ns1:ItemIdType */
public:
	virtual int soap_type() const { return 321; } /* = unique type id SOAP_TYPE_ews__RemoveImGroupType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__RemoveImGroupType() { ews__RemoveImGroupType::soap_default(NULL); }
	virtual ~ews__RemoveImGroupType() { }
};
#endif

#ifndef SOAP_TYPE_ews__RemoveImGroupResponseMessageType
#define SOAP_TYPE_ews__RemoveImGroupResponseMessageType (322)
/* ews:RemoveImGroupResponseMessageType */
class SOAP_CMAC ews__RemoveImGroupResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 322; } /* = unique type id SOAP_TYPE_ews__RemoveImGroupResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__RemoveImGroupResponseMessageType() { ews__RemoveImGroupResponseMessageType::soap_default(NULL); }
	virtual ~ews__RemoveImGroupResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetImGroupType
#define SOAP_TYPE_ews__SetImGroupType (323)
/* ews:SetImGroupType */
class SOAP_CMAC ews__SetImGroupType : public ews__BaseRequestType
{
public:
	ns1__ItemIdType *GroupId;	/* required element of type ns1:ItemIdType */
	std::string NewDisplayName;	/* required element of type ns1:NonEmptyStringType */
public:
	virtual int soap_type() const { return 323; } /* = unique type id SOAP_TYPE_ews__SetImGroupType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetImGroupType() { ews__SetImGroupType::soap_default(NULL); }
	virtual ~ews__SetImGroupType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetImGroupResponseMessageType
#define SOAP_TYPE_ews__SetImGroupResponseMessageType (324)
/* ews:SetImGroupResponseMessageType */
class SOAP_CMAC ews__SetImGroupResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 324; } /* = unique type id SOAP_TYPE_ews__SetImGroupResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetImGroupResponseMessageType() { ews__SetImGroupResponseMessageType::soap_default(NULL); }
	virtual ~ews__SetImGroupResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetImListMigrationCompletedType
#define SOAP_TYPE_ews__SetImListMigrationCompletedType (325)
/* ews:SetImListMigrationCompletedType */
class SOAP_CMAC ews__SetImListMigrationCompletedType : public ews__BaseRequestType
{
public:
	bool ImListMigrationCompleted;	/* required element of type xsd:boolean */
public:
	virtual int soap_type() const { return 325; } /* = unique type id SOAP_TYPE_ews__SetImListMigrationCompletedType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetImListMigrationCompletedType() { ews__SetImListMigrationCompletedType::soap_default(NULL); }
	virtual ~ews__SetImListMigrationCompletedType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetImListMigrationCompletedResponseMessageType
#define SOAP_TYPE_ews__SetImListMigrationCompletedResponseMessageType (326)
/* ews:SetImListMigrationCompletedResponseMessageType */
class SOAP_CMAC ews__SetImListMigrationCompletedResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 326; } /* = unique type id SOAP_TYPE_ews__SetImListMigrationCompletedResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetImListMigrationCompletedResponseMessageType() { ews__SetImListMigrationCompletedResponseMessageType::soap_default(NULL); }
	virtual ~ews__SetImListMigrationCompletedResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUserRetentionPolicyTagsType
#define SOAP_TYPE_ews__GetUserRetentionPolicyTagsType (327)
/* ews:GetUserRetentionPolicyTagsType */
class SOAP_CMAC ews__GetUserRetentionPolicyTagsType : public ews__BaseRequestType
{
public:
	virtual int soap_type() const { return 327; } /* = unique type id SOAP_TYPE_ews__GetUserRetentionPolicyTagsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUserRetentionPolicyTagsType() { ews__GetUserRetentionPolicyTagsType::soap_default(NULL); }
	virtual ~ews__GetUserRetentionPolicyTagsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUserRetentionPolicyTagsResponseMessageType
#define SOAP_TYPE_ews__GetUserRetentionPolicyTagsResponseMessageType (328)
/* ews:GetUserRetentionPolicyTagsResponseMessageType */
class SOAP_CMAC ews__GetUserRetentionPolicyTagsResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfRetentionPolicyTagsType *RetentionPolicyTags;	/* required element of type ns1:ArrayOfRetentionPolicyTagsType */
public:
	virtual int soap_type() const { return 328; } /* = unique type id SOAP_TYPE_ews__GetUserRetentionPolicyTagsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUserRetentionPolicyTagsResponseMessageType() { ews__GetUserRetentionPolicyTagsResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetUserRetentionPolicyTagsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUserPhotoType
#define SOAP_TYPE_ews__GetUserPhotoType (329)
/* ews:GetUserPhotoType */
class SOAP_CMAC ews__GetUserPhotoType : public ews__BaseRequestType
{
public:
	std::string Email;	/* required element of type xsd:string */
	enum ns1__UserPhotoSizeType SizeRequested;	/* required element of type ns1:UserPhotoSizeType */
public:
	virtual int soap_type() const { return 329; } /* = unique type id SOAP_TYPE_ews__GetUserPhotoType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUserPhotoType() { ews__GetUserPhotoType::soap_default(NULL); }
	virtual ~ews__GetUserPhotoType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUserPhotoResponseMessageType
#define SOAP_TYPE_ews__GetUserPhotoResponseMessageType (330)
/* ews:GetUserPhotoResponseMessageType */
class SOAP_CMAC ews__GetUserPhotoResponseMessageType : public ews__ResponseMessageType
{
public:
	bool HasChanged;	/* required element of type xsd:boolean */
	xsd__base64Binary *PictureData;	/* optional element of type xsd:base64Binary */
public:
	virtual int soap_type() const { return 330; } /* = unique type id SOAP_TYPE_ews__GetUserPhotoResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUserPhotoResponseMessageType() { ews__GetUserPhotoResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetUserPhotoResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUserPhotoResponseType
#define SOAP_TYPE_ews__GetUserPhotoResponseType (331)
/* ews:GetUserPhotoResponseType */
class SOAP_CMAC ews__GetUserPhotoResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 331; } /* = unique type id SOAP_TYPE_ews__GetUserPhotoResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUserPhotoResponseType() { ews__GetUserPhotoResponseType::soap_default(NULL); }
	virtual ~ews__GetUserPhotoResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__StartFindInGALSpeechRecognitionType
#define SOAP_TYPE_ews__StartFindInGALSpeechRecognitionType (332)
/* ews:StartFindInGALSpeechRecognitionType */
class SOAP_CMAC ews__StartFindInGALSpeechRecognitionType : public ews__BaseRequestType
{
public:
	std::string Culture;	/* required element of type ns1:NonEmptyStringType */
	std::string TimeZone;	/* required element of type ns1:NonEmptyStringType */
	std::string UserObjectGuid;	/* required element of type ns1:GuidType */
	std::string TenantGuid;	/* required element of type ns1:GuidType */
public:
	virtual int soap_type() const { return 332; } /* = unique type id SOAP_TYPE_ews__StartFindInGALSpeechRecognitionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__StartFindInGALSpeechRecognitionType() { ews__StartFindInGALSpeechRecognitionType::soap_default(NULL); }
	virtual ~ews__StartFindInGALSpeechRecognitionType() { }
};
#endif

#ifndef SOAP_TYPE_ews__StartFindInGALSpeechRecognitionResponseMessageType
#define SOAP_TYPE_ews__StartFindInGALSpeechRecognitionResponseMessageType (333)
/* ews:StartFindInGALSpeechRecognitionResponseMessageType */
class SOAP_CMAC ews__StartFindInGALSpeechRecognitionResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__RecognitionIdType *RecognitionId;	/* optional element of type ns1:RecognitionIdType */
public:
	virtual int soap_type() const { return 333; } /* = unique type id SOAP_TYPE_ews__StartFindInGALSpeechRecognitionResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__StartFindInGALSpeechRecognitionResponseMessageType() { ews__StartFindInGALSpeechRecognitionResponseMessageType::soap_default(NULL); }
	virtual ~ews__StartFindInGALSpeechRecognitionResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CompleteFindInGALSpeechRecognitionType
#define SOAP_TYPE_ews__CompleteFindInGALSpeechRecognitionType (334)
/* ews:CompleteFindInGALSpeechRecognitionType */
class SOAP_CMAC ews__CompleteFindInGALSpeechRecognitionType : public ews__BaseRequestType
{
public:
	ns1__RecognitionIdType *RecognitionId;	/* required element of type ns1:RecognitionIdType */
	xsd__base64Binary AudioData;	/* required element of type xsd:base64Binary */
public:
	virtual int soap_type() const { return 334; } /* = unique type id SOAP_TYPE_ews__CompleteFindInGALSpeechRecognitionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CompleteFindInGALSpeechRecognitionType() { ews__CompleteFindInGALSpeechRecognitionType::soap_default(NULL); }
	virtual ~ews__CompleteFindInGALSpeechRecognitionType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CompleteFindInGALSpeechRecognitionResponseMessageType
#define SOAP_TYPE_ews__CompleteFindInGALSpeechRecognitionResponseMessageType (335)
/* ews:CompleteFindInGALSpeechRecognitionResponseMessageType */
class SOAP_CMAC ews__CompleteFindInGALSpeechRecognitionResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__RecognitionResultType *RecognitionResult;	/* optional element of type ns1:RecognitionResultType */
public:
	virtual int soap_type() const { return 335; } /* = unique type id SOAP_TYPE_ews__CompleteFindInGALSpeechRecognitionResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CompleteFindInGALSpeechRecognitionResponseMessageType() { ews__CompleteFindInGALSpeechRecognitionResponseMessageType::soap_default(NULL); }
	virtual ~ews__CompleteFindInGALSpeechRecognitionResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CreateUMCallDataRecordType
#define SOAP_TYPE_ews__CreateUMCallDataRecordType (336)
/* ews:CreateUMCallDataRecordType */
class SOAP_CMAC ews__CreateUMCallDataRecordType : public ews__BaseRequestType
{
public:
	ns1__CDRDataType *CDRData;	/* required element of type ns1:CDRDataType */
public:
	virtual int soap_type() const { return 336; } /* = unique type id SOAP_TYPE_ews__CreateUMCallDataRecordType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CreateUMCallDataRecordType() { ews__CreateUMCallDataRecordType::soap_default(NULL); }
	virtual ~ews__CreateUMCallDataRecordType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CreateUMCallDataRecordResponseMessageType
#define SOAP_TYPE_ews__CreateUMCallDataRecordResponseMessageType (337)
/* ews:CreateUMCallDataRecordResponseMessageType */
class SOAP_CMAC ews__CreateUMCallDataRecordResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 337; } /* = unique type id SOAP_TYPE_ews__CreateUMCallDataRecordResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CreateUMCallDataRecordResponseMessageType() { ews__CreateUMCallDataRecordResponseMessageType::soap_default(NULL); }
	virtual ~ews__CreateUMCallDataRecordResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUMCallDataRecordsType
#define SOAP_TYPE_ews__GetUMCallDataRecordsType (338)
/* ews:GetUMCallDataRecordsType */
class SOAP_CMAC ews__GetUMCallDataRecordsType : public ews__BaseRequestType
{
public:
	time_t *StartDateTime;	/* optional element of type xsd:dateTime */
	time_t *EndDateTime;	/* optional element of type xsd:dateTime */
	int *Offset;	/* optional element of type xsd:int */
	int *NumberOfRecords;	/* optional element of type xsd:int */
	std::string *UserLegacyExchangeDN;	/* optional element of type xsd:string */
	enum ns1__UMCDRFilterByType FilterBy;	/* required element of type ns1:UMCDRFilterByType */
public:
	virtual int soap_type() const { return 338; } /* = unique type id SOAP_TYPE_ews__GetUMCallDataRecordsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUMCallDataRecordsType() { ews__GetUMCallDataRecordsType::soap_default(NULL); }
	virtual ~ews__GetUMCallDataRecordsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUMCallDataRecordsResponseMessageType
#define SOAP_TYPE_ews__GetUMCallDataRecordsResponseMessageType (339)
/* ews:GetUMCallDataRecordsResponseMessageType */
class SOAP_CMAC ews__GetUMCallDataRecordsResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfUMCallDataRecordsType *CallDataRecords;	/* optional element of type ns1:ArrayOfUMCallDataRecordsType */
public:
	virtual int soap_type() const { return 339; } /* = unique type id SOAP_TYPE_ews__GetUMCallDataRecordsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUMCallDataRecordsResponseMessageType() { ews__GetUMCallDataRecordsResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetUMCallDataRecordsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUMCallSummaryType
#define SOAP_TYPE_ews__GetUMCallSummaryType (340)
/* ews:GetUMCallSummaryType */
class SOAP_CMAC ews__GetUMCallSummaryType : public ews__BaseRequestType
{
public:
	std::string DailPlanGuid;	/* required element of type ns1:GuidType */
	std::string GatewayGuid;	/* required element of type ns1:GuidType */
	enum ns1__UMCDRGroupByType GroupRecordsBy;	/* required element of type ns1:UMCDRGroupByType */
public:
	virtual int soap_type() const { return 340; } /* = unique type id SOAP_TYPE_ews__GetUMCallSummaryType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUMCallSummaryType() { ews__GetUMCallSummaryType::soap_default(NULL); }
	virtual ~ews__GetUMCallSummaryType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUMCallSummaryResponseMessageType
#define SOAP_TYPE_ews__GetUMCallSummaryResponseMessageType (341)
/* ews:GetUMCallSummaryResponseMessageType */
class SOAP_CMAC ews__GetUMCallSummaryResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfUMReportRawCountersType *UMReportRawCountersCollection;	/* optional element of type ns1:ArrayOfUMReportRawCountersType */
public:
	virtual int soap_type() const { return 341; } /* = unique type id SOAP_TYPE_ews__GetUMCallSummaryResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUMCallSummaryResponseMessageType() { ews__GetUMCallSummaryResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetUMCallSummaryResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__InitUMMailboxType
#define SOAP_TYPE_ews__InitUMMailboxType (342)
/* ews:InitUMMailboxType */
class SOAP_CMAC ews__InitUMMailboxType : public ews__BaseRequestType
{
public:
	virtual int soap_type() const { return 342; } /* = unique type id SOAP_TYPE_ews__InitUMMailboxType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__InitUMMailboxType() { ews__InitUMMailboxType::soap_default(NULL); }
	virtual ~ews__InitUMMailboxType() { }
};
#endif

#ifndef SOAP_TYPE_ews__InitUMMailboxResponseMessageType
#define SOAP_TYPE_ews__InitUMMailboxResponseMessageType (343)
/* ews:InitUMMailboxResponseMessageType */
class SOAP_CMAC ews__InitUMMailboxResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 343; } /* = unique type id SOAP_TYPE_ews__InitUMMailboxResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__InitUMMailboxResponseMessageType() { ews__InitUMMailboxResponseMessageType::soap_default(NULL); }
	virtual ~ews__InitUMMailboxResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ResetUMMailboxType
#define SOAP_TYPE_ews__ResetUMMailboxType (344)
/* ews:ResetUMMailboxType */
class SOAP_CMAC ews__ResetUMMailboxType : public ews__BaseRequestType
{
public:
	bool KeepProperties;	/* required element of type xsd:boolean */
public:
	virtual int soap_type() const { return 344; } /* = unique type id SOAP_TYPE_ews__ResetUMMailboxType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ResetUMMailboxType() { ews__ResetUMMailboxType::soap_default(NULL); }
	virtual ~ews__ResetUMMailboxType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ResetUMMailboxResponseMessageType
#define SOAP_TYPE_ews__ResetUMMailboxResponseMessageType (345)
/* ews:ResetUMMailboxResponseMessageType */
class SOAP_CMAC ews__ResetUMMailboxResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 345; } /* = unique type id SOAP_TYPE_ews__ResetUMMailboxResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ResetUMMailboxResponseMessageType() { ews__ResetUMMailboxResponseMessageType::soap_default(NULL); }
	virtual ~ews__ResetUMMailboxResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ValidateUMPinType
#define SOAP_TYPE_ews__ValidateUMPinType (346)
/* ews:ValidateUMPinType */
class SOAP_CMAC ews__ValidateUMPinType : public ews__BaseRequestType
{
public:
	ns1__PinInfoType *PinInfo;	/* optional element of type ns1:PinInfoType */
	std::string UserUMMailboxPolicyGuid;	/* required element of type ns1:GuidType */
public:
	virtual int soap_type() const { return 346; } /* = unique type id SOAP_TYPE_ews__ValidateUMPinType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ValidateUMPinType() { ews__ValidateUMPinType::soap_default(NULL); }
	virtual ~ews__ValidateUMPinType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ValidateUMPinResponseMessageType
#define SOAP_TYPE_ews__ValidateUMPinResponseMessageType (347)
/* ews:ValidateUMPinResponseMessageType */
class SOAP_CMAC ews__ValidateUMPinResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__PinInfoType *PinInfo;	/* required element of type ns1:PinInfoType */
public:
	virtual int soap_type() const { return 347; } /* = unique type id SOAP_TYPE_ews__ValidateUMPinResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ValidateUMPinResponseMessageType() { ews__ValidateUMPinResponseMessageType::soap_default(NULL); }
	virtual ~ews__ValidateUMPinResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SaveUMPinType
#define SOAP_TYPE_ews__SaveUMPinType (348)
/* ews:SaveUMPinType */
class SOAP_CMAC ews__SaveUMPinType : public ews__BaseRequestType
{
public:
	ns1__PinInfoType *PinInfo;	/* required element of type ns1:PinInfoType */
	std::string UserUMMailboxPolicyGuid;	/* required element of type ns1:GuidType */
public:
	virtual int soap_type() const { return 348; } /* = unique type id SOAP_TYPE_ews__SaveUMPinType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SaveUMPinType() { ews__SaveUMPinType::soap_default(NULL); }
	virtual ~ews__SaveUMPinType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SaveUMPinResponseMessageType
#define SOAP_TYPE_ews__SaveUMPinResponseMessageType (349)
/* ews:SaveUMPinResponseMessageType */
class SOAP_CMAC ews__SaveUMPinResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 349; } /* = unique type id SOAP_TYPE_ews__SaveUMPinResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SaveUMPinResponseMessageType() { ews__SaveUMPinResponseMessageType::soap_default(NULL); }
	virtual ~ews__SaveUMPinResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUMPinType
#define SOAP_TYPE_ews__GetUMPinType (350)
/* ews:GetUMPinType */
class SOAP_CMAC ews__GetUMPinType : public ews__BaseRequestType
{
public:
	virtual int soap_type() const { return 350; } /* = unique type id SOAP_TYPE_ews__GetUMPinType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUMPinType() { ews__GetUMPinType::soap_default(NULL); }
	virtual ~ews__GetUMPinType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUMPinResponseMessageType
#define SOAP_TYPE_ews__GetUMPinResponseMessageType (351)
/* ews:GetUMPinResponseMessageType */
class SOAP_CMAC ews__GetUMPinResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__PinInfoType *PinInfo;	/* required element of type ns1:PinInfoType */
public:
	virtual int soap_type() const { return 351; } /* = unique type id SOAP_TYPE_ews__GetUMPinResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUMPinResponseMessageType() { ews__GetUMPinResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetUMPinResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetClientIntentType
#define SOAP_TYPE_ews__GetClientIntentType (352)
/* ews:GetClientIntentType */
class SOAP_CMAC ews__GetClientIntentType : public ews__BaseRequestType
{
public:
	std::string GlobalObjectId;	/* required element of type xsd:string */
	ns1__NonEmptyStateDefinitionType *StateDefinition;	/* required element of type ns1:NonEmptyStateDefinitionType */
public:
	virtual int soap_type() const { return 352; } /* = unique type id SOAP_TYPE_ews__GetClientIntentType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetClientIntentType() { ews__GetClientIntentType::soap_default(NULL); }
	virtual ~ews__GetClientIntentType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetClientIntentResponseMessageType
#define SOAP_TYPE_ews__GetClientIntentResponseMessageType (353)
/* ews:GetClientIntentResponseMessageType */
class SOAP_CMAC ews__GetClientIntentResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ClientIntentType *ClientIntent;	/* optional element of type ns1:ClientIntentType */
public:
	virtual int soap_type() const { return 353; } /* = unique type id SOAP_TYPE_ews__GetClientIntentResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetClientIntentResponseMessageType() { ews__GetClientIntentResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetClientIntentResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUMSubscriberCallAnsweringDataType
#define SOAP_TYPE_ews__GetUMSubscriberCallAnsweringDataType (354)
/* ews:GetUMSubscriberCallAnsweringDataType */
class SOAP_CMAC ews__GetUMSubscriberCallAnsweringDataType : public ews__BaseRequestType
{
public:
	LONG64 Timeout;	/* external */
public:
	virtual int soap_type() const { return 354; } /* = unique type id SOAP_TYPE_ews__GetUMSubscriberCallAnsweringDataType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUMSubscriberCallAnsweringDataType() { ews__GetUMSubscriberCallAnsweringDataType::soap_default(NULL); }
	virtual ~ews__GetUMSubscriberCallAnsweringDataType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUMSubscriberCallAnsweringDataResponseMessageType
#define SOAP_TYPE_ews__GetUMSubscriberCallAnsweringDataResponseMessageType (355)
/* ews:GetUMSubscriberCallAnsweringDataResponseMessageType */
class SOAP_CMAC ews__GetUMSubscriberCallAnsweringDataResponseMessageType : public ews__ResponseMessageType
{
public:
	bool IsOOF;	/* required element of type xsd:boolean */
	enum ns1__UMMailboxTranscriptionEnabledSetting IsTranscriptionEnabledInMailboxConfig;	/* required element of type ns1:UMMailboxTranscriptionEnabledSetting */
	bool IsMailboxQuotaExceeded;	/* required element of type xsd:boolean */
	xsd__base64Binary *Greeting;	/* optional element of type xsd:base64Binary */
	std::string *GreetingName;	/* optional element of type xsd:string */
	bool TaskTimedOut;	/* required element of type xsd:boolean */
public:
	virtual int soap_type() const { return 355; } /* = unique type id SOAP_TYPE_ews__GetUMSubscriberCallAnsweringDataResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUMSubscriberCallAnsweringDataResponseMessageType() { ews__GetUMSubscriberCallAnsweringDataResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetUMSubscriberCallAnsweringDataResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UnifiedGroupBaseRequestType
#define SOAP_TYPE_ews__UnifiedGroupBaseRequestType (356)
/* ews:UnifiedGroupBaseRequestType */
class SOAP_CMAC ews__UnifiedGroupBaseRequestType : public ews__BaseRequestType
{
public:
	ns1__UnifiedGroupIdentity *ns1__GroupIdentity;	/* required element of type ns1:UnifiedGroupIdentity */
public:
	virtual int soap_type() const { return 356; } /* = unique type id SOAP_TYPE_ews__UnifiedGroupBaseRequestType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UnifiedGroupBaseRequestType() { ews__UnifiedGroupBaseRequestType::soap_default(NULL); }
	virtual ~ews__UnifiedGroupBaseRequestType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUnifiedGroupUnseenCountResponseMessageType
#define SOAP_TYPE_ews__GetUnifiedGroupUnseenCountResponseMessageType (358)
/* ews:GetUnifiedGroupUnseenCountResponseMessageType */
class SOAP_CMAC ews__GetUnifiedGroupUnseenCountResponseMessageType : public ews__ResponseMessageType
{
public:
	int *UnseenCount;	/* optional element of type xsd:int */
public:
	virtual int soap_type() const { return 358; } /* = unique type id SOAP_TYPE_ews__GetUnifiedGroupUnseenCountResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUnifiedGroupUnseenCountResponseMessageType() { ews__GetUnifiedGroupUnseenCountResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetUnifiedGroupUnseenCountResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetUnifiedGroupLastVisitedTimeResponseMessageType
#define SOAP_TYPE_ews__SetUnifiedGroupLastVisitedTimeResponseMessageType (360)
/* ews:SetUnifiedGroupLastVisitedTimeResponseMessageType */
class SOAP_CMAC ews__SetUnifiedGroupLastVisitedTimeResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 360; } /* = unique type id SOAP_TYPE_ews__SetUnifiedGroupLastVisitedTimeResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetUnifiedGroupLastVisitedTimeResponseMessageType() { ews__SetUnifiedGroupLastVisitedTimeResponseMessageType::soap_default(NULL); }
	virtual ~ews__SetUnifiedGroupLastVisitedTimeResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUnifiedGroupUnseenDataType
#define SOAP_TYPE_ews__GetUnifiedGroupUnseenDataType (361)
/* ews:GetUnifiedGroupUnseenDataType */
class SOAP_CMAC ews__GetUnifiedGroupUnseenDataType : public ews__BaseRequestType
{
public:
	ns1__NonEmptyArrayOfUnifiedGroupIdentityType *GroupIdentities;	/* required element of type ns1:NonEmptyArrayOfUnifiedGroupIdentityType */
public:
	virtual int soap_type() const { return 361; } /* = unique type id SOAP_TYPE_ews__GetUnifiedGroupUnseenDataType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUnifiedGroupUnseenDataType() { ews__GetUnifiedGroupUnseenDataType::soap_default(NULL); }
	virtual ~ews__GetUnifiedGroupUnseenDataType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUnifiedGroupUnseenDataResponseType
#define SOAP_TYPE_ews__GetUnifiedGroupUnseenDataResponseType (362)
/* ews:GetUnifiedGroupUnseenDataResponseType */
class SOAP_CMAC ews__GetUnifiedGroupUnseenDataResponseType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 362; } /* = unique type id SOAP_TYPE_ews__GetUnifiedGroupUnseenDataResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUnifiedGroupUnseenDataResponseType() { ews__GetUnifiedGroupUnseenDataResponseType::soap_default(NULL); }
	virtual ~ews__GetUnifiedGroupUnseenDataResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUnifiedGroupUnseenDataResponseMessageType
#define SOAP_TYPE_ews__GetUnifiedGroupUnseenDataResponseMessageType (363)
/* ews:GetUnifiedGroupUnseenDataResponseMessageType */
class SOAP_CMAC ews__GetUnifiedGroupUnseenDataResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__UnseenDataType *UnseenData;	/* optional element of type ns1:UnseenDataType */
public:
	virtual int soap_type() const { return 363; } /* = unique type id SOAP_TYPE_ews__GetUnifiedGroupUnseenDataResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUnifiedGroupUnseenDataResponseMessageType() { ews__GetUnifiedGroupUnseenDataResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetUnifiedGroupUnseenDataResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetUnifiedGroupUnseenDataResponseMessageType
#define SOAP_TYPE_ews__SetUnifiedGroupUnseenDataResponseMessageType (365)
/* ews:SetUnifiedGroupUnseenDataResponseMessageType */
class SOAP_CMAC ews__SetUnifiedGroupUnseenDataResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 365; } /* = unique type id SOAP_TYPE_ews__SetUnifiedGroupUnseenDataResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetUnifiedGroupUnseenDataResponseMessageType() { ews__SetUnifiedGroupUnseenDataResponseMessageType::soap_default(NULL); }
	virtual ~ews__SetUnifiedGroupUnseenDataResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__BaseCalendarRequestType
#define SOAP_TYPE_ews__BaseCalendarRequestType (366)
/* ews:BaseCalendarRequestType */
class SOAP_CMAC ews__BaseCalendarRequestType : public ews__BaseRequestType
{
public:
	ns1__TargetFolderIdType *CalendarId;	/* required element of type ns1:TargetFolderIdType */
public:
	virtual int soap_type() const { return 366; } /* = unique type id SOAP_TYPE_ews__BaseCalendarRequestType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__BaseCalendarRequestType() { ews__BaseCalendarRequestType::soap_default(NULL); }
	virtual ~ews__BaseCalendarRequestType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ActivateSharingInvitationResponseMessageType
#define SOAP_TYPE_ews__ActivateSharingInvitationResponseMessageType (369)
/* ews:ActivateSharingInvitationResponseMessageType */
class SOAP_CMAC ews__ActivateSharingInvitationResponseMessageType : public ews__ResponseMessageType
{
public:
	std::string SuggestedCalendarName;	/* required attribute */
	enum ns1__SharingInvitationPermissionLevel PermissionLevel;	/* required attribute */
	std::string FolderId;	/* required attribute */
public:
	virtual int soap_type() const { return 369; } /* = unique type id SOAP_TYPE_ews__ActivateSharingInvitationResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ActivateSharingInvitationResponseMessageType() { ews__ActivateSharingInvitationResponseMessageType::soap_default(NULL); }
	virtual ~ews__ActivateSharingInvitationResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetSharingInvitationsResponseMessageType
#define SOAP_TYPE_ews__GetSharingInvitationsResponseMessageType (371)
/* ews:GetSharingInvitationsResponseMessageType */
class SOAP_CMAC ews__GetSharingInvitationsResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfSharingInvitation *SharingInvitations;	/* required element of type ns1:ArrayOfSharingInvitation */
public:
	virtual int soap_type() const { return 371; } /* = unique type id SOAP_TYPE_ews__GetSharingInvitationsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetSharingInvitationsResponseMessageType() { ews__GetSharingInvitationsResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetSharingInvitationsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetMeetingSpaceType
#define SOAP_TYPE_ews__GetMeetingSpaceType (372)
/* ews:GetMeetingSpaceType */
class SOAP_CMAC ews__GetMeetingSpaceType : public ews__BaseRequestType
{
public:
	ns1__ItemIdType *ItemId;	/* required element of type ns1:ItemIdType */
public:
	virtual int soap_type() const { return 372; } /* = unique type id SOAP_TYPE_ews__GetMeetingSpaceType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetMeetingSpaceType() { ews__GetMeetingSpaceType::soap_default(NULL); }
	virtual ~ews__GetMeetingSpaceType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetMeetingSpaceResponseMessageType
#define SOAP_TYPE_ews__GetMeetingSpaceResponseMessageType (373)
/* ews:GetMeetingSpaceResponseMessageType */
class SOAP_CMAC ews__GetMeetingSpaceResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__MeetingSpaceType *MeetingSpace;	/* required element of type ns1:MeetingSpaceType */
public:
	virtual int soap_type() const { return 373; } /* = unique type id SOAP_TYPE_ews__GetMeetingSpaceResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetMeetingSpaceResponseMessageType() { ews__GetMeetingSpaceResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetMeetingSpaceResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CreateMeetingSpaceType
#define SOAP_TYPE_ews__CreateMeetingSpaceType (374)
/* ews:CreateMeetingSpaceType */
class SOAP_CMAC ews__CreateMeetingSpaceType : public ews__BaseRequestType
{
public:
	ns1__MeetingSpaceType *MeetingSpace;	/* required element of type ns1:MeetingSpaceType */
public:
	virtual int soap_type() const { return 374; } /* = unique type id SOAP_TYPE_ews__CreateMeetingSpaceType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CreateMeetingSpaceType() { ews__CreateMeetingSpaceType::soap_default(NULL); }
	virtual ~ews__CreateMeetingSpaceType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CreateMeetingSpaceResponseMessageType
#define SOAP_TYPE_ews__CreateMeetingSpaceResponseMessageType (375)
/* ews:CreateMeetingSpaceResponseMessageType */
class SOAP_CMAC ews__CreateMeetingSpaceResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__MeetingSpaceType *MeetingSpace;	/* required element of type ns1:MeetingSpaceType */
public:
	virtual int soap_type() const { return 375; } /* = unique type id SOAP_TYPE_ews__CreateMeetingSpaceResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CreateMeetingSpaceResponseMessageType() { ews__CreateMeetingSpaceResponseMessageType::soap_default(NULL); }
	virtual ~ews__CreateMeetingSpaceResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UpdateMeetingSpaceType
#define SOAP_TYPE_ews__UpdateMeetingSpaceType (376)
/* ews:UpdateMeetingSpaceType */
class SOAP_CMAC ews__UpdateMeetingSpaceType : public ews__BaseRequestType
{
public:
	ns1__ItemIdType *ItemId;	/* required element of type ns1:ItemIdType */
	ns1__MeetingSpaceType *MeetingSpace;	/* required element of type ns1:MeetingSpaceType */
public:
	virtual int soap_type() const { return 376; } /* = unique type id SOAP_TYPE_ews__UpdateMeetingSpaceType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UpdateMeetingSpaceType() { ews__UpdateMeetingSpaceType::soap_default(NULL); }
	virtual ~ews__UpdateMeetingSpaceType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UpdateMeetingSpaceResponseMessageType
#define SOAP_TYPE_ews__UpdateMeetingSpaceResponseMessageType (377)
/* ews:UpdateMeetingSpaceResponseMessageType */
class SOAP_CMAC ews__UpdateMeetingSpaceResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__MeetingSpaceType *MeetingSpace;	/* required element of type ns1:MeetingSpaceType */
public:
	virtual int soap_type() const { return 377; } /* = unique type id SOAP_TYPE_ews__UpdateMeetingSpaceResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UpdateMeetingSpaceResponseMessageType() { ews__UpdateMeetingSpaceResponseMessageType::soap_default(NULL); }
	virtual ~ews__UpdateMeetingSpaceResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__FindMeetingSpaceByJoinUrlType
#define SOAP_TYPE_ews__FindMeetingSpaceByJoinUrlType (378)
/* ews:FindMeetingSpaceByJoinUrlType */
class SOAP_CMAC ews__FindMeetingSpaceByJoinUrlType : public ews__BaseRequestType
{
public:
	std::string JoinUrl;	/* required element of type xsd:string */
public:
	virtual int soap_type() const { return 378; } /* = unique type id SOAP_TYPE_ews__FindMeetingSpaceByJoinUrlType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__FindMeetingSpaceByJoinUrlType() { ews__FindMeetingSpaceByJoinUrlType::soap_default(NULL); }
	virtual ~ews__FindMeetingSpaceByJoinUrlType() { }
};
#endif

#ifndef SOAP_TYPE_ews__FindMeetingSpaceByJoinUrlResponseMessageType
#define SOAP_TYPE_ews__FindMeetingSpaceByJoinUrlResponseMessageType (379)
/* ews:FindMeetingSpaceByJoinUrlResponseMessageType */
class SOAP_CMAC ews__FindMeetingSpaceByJoinUrlResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__MeetingSpaceType *MeetingSpace;	/* optional element of type ns1:MeetingSpaceType */
public:
	virtual int soap_type() const { return 379; } /* = unique type id SOAP_TYPE_ews__FindMeetingSpaceByJoinUrlResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__FindMeetingSpaceByJoinUrlResponseMessageType() { ews__FindMeetingSpaceByJoinUrlResponseMessageType::soap_default(NULL); }
	virtual ~ews__FindMeetingSpaceByJoinUrlResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__DeleteMeetingSpaceType
#define SOAP_TYPE_ews__DeleteMeetingSpaceType (380)
/* ews:DeleteMeetingSpaceType */
class SOAP_CMAC ews__DeleteMeetingSpaceType : public ews__BaseRequestType
{
public:
	ns1__ItemIdType *ItemId;	/* required element of type ns1:ItemIdType */
public:
	virtual int soap_type() const { return 380; } /* = unique type id SOAP_TYPE_ews__DeleteMeetingSpaceType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__DeleteMeetingSpaceType() { ews__DeleteMeetingSpaceType::soap_default(NULL); }
	virtual ~ews__DeleteMeetingSpaceType() { }
};
#endif

#ifndef SOAP_TYPE_ews__DeleteMeetingSpaceResponseMessageType
#define SOAP_TYPE_ews__DeleteMeetingSpaceResponseMessageType (381)
/* ews:DeleteMeetingSpaceResponseMessageType */
class SOAP_CMAC ews__DeleteMeetingSpaceResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 381; } /* = unique type id SOAP_TYPE_ews__DeleteMeetingSpaceResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__DeleteMeetingSpaceResponseMessageType() { ews__DeleteMeetingSpaceResponseMessageType::soap_default(NULL); }
	virtual ~ews__DeleteMeetingSpaceResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetMeetingInstanceRequestType
#define SOAP_TYPE_ews__GetMeetingInstanceRequestType (382)
/* ews:GetMeetingInstanceRequestType */
class SOAP_CMAC ews__GetMeetingInstanceRequestType : public ews__BaseRequestType
{
public:
	ns1__ItemIdType *ItemId;	/* required element of type ns1:ItemIdType */
public:
	virtual int soap_type() const { return 382; } /* = unique type id SOAP_TYPE_ews__GetMeetingInstanceRequestType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetMeetingInstanceRequestType() { ews__GetMeetingInstanceRequestType::soap_default(NULL); }
	virtual ~ews__GetMeetingInstanceRequestType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetMeetingInstanceResponseMessageType
#define SOAP_TYPE_ews__GetMeetingInstanceResponseMessageType (383)
/* ews:GetMeetingInstanceResponseMessageType */
class SOAP_CMAC ews__GetMeetingInstanceResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__MeetingInstanceType *MeetingInstance;	/* required element of type ns1:MeetingInstanceType */
public:
	virtual int soap_type() const { return 383; } /* = unique type id SOAP_TYPE_ews__GetMeetingInstanceResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetMeetingInstanceResponseMessageType() { ews__GetMeetingInstanceResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetMeetingInstanceResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CreateMeetingInstanceRequestType
#define SOAP_TYPE_ews__CreateMeetingInstanceRequestType (384)
/* ews:CreateMeetingInstanceRequestType */
class SOAP_CMAC ews__CreateMeetingInstanceRequestType : public ews__BaseRequestType
{
public:
	ns1__MeetingInstanceType *MeetingInstance;	/* required element of type ns1:MeetingInstanceType */
public:
	virtual int soap_type() const { return 384; } /* = unique type id SOAP_TYPE_ews__CreateMeetingInstanceRequestType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CreateMeetingInstanceRequestType() { ews__CreateMeetingInstanceRequestType::soap_default(NULL); }
	virtual ~ews__CreateMeetingInstanceRequestType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CreateMeetingInstanceResponseMessageType
#define SOAP_TYPE_ews__CreateMeetingInstanceResponseMessageType (385)
/* ews:CreateMeetingInstanceResponseMessageType */
class SOAP_CMAC ews__CreateMeetingInstanceResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__MeetingInstanceType *MeetingInstance;	/* required element of type ns1:MeetingInstanceType */
public:
	virtual int soap_type() const { return 385; } /* = unique type id SOAP_TYPE_ews__CreateMeetingInstanceResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CreateMeetingInstanceResponseMessageType() { ews__CreateMeetingInstanceResponseMessageType::soap_default(NULL); }
	virtual ~ews__CreateMeetingInstanceResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UpdateMeetingInstanceRequestType
#define SOAP_TYPE_ews__UpdateMeetingInstanceRequestType (386)
/* ews:UpdateMeetingInstanceRequestType */
class SOAP_CMAC ews__UpdateMeetingInstanceRequestType : public ews__BaseRequestType
{
public:
	ns1__ItemIdType *ItemId;	/* required element of type ns1:ItemIdType */
	ns1__MeetingInstanceType *MeetingInstance;	/* optional element of type ns1:MeetingInstanceType */
	ns1__NonEmptyArrayOfContentActivities *ContentActivitiesToAdd;	/* optional element of type ns1:NonEmptyArrayOfContentActivities */
	ns1__NonEmptyArrayOfParticipantActivities *ParticipantActivitiesToAdd;	/* optional element of type ns1:NonEmptyArrayOfParticipantActivities */
public:
	virtual int soap_type() const { return 386; } /* = unique type id SOAP_TYPE_ews__UpdateMeetingInstanceRequestType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UpdateMeetingInstanceRequestType() { ews__UpdateMeetingInstanceRequestType::soap_default(NULL); }
	virtual ~ews__UpdateMeetingInstanceRequestType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UpdateMeetingInstanceResponseMessageType
#define SOAP_TYPE_ews__UpdateMeetingInstanceResponseMessageType (387)
/* ews:UpdateMeetingInstanceResponseMessageType */
class SOAP_CMAC ews__UpdateMeetingInstanceResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__MeetingInstanceType *MeetingInstance;	/* required element of type ns1:MeetingInstanceType */
public:
	virtual int soap_type() const { return 387; } /* = unique type id SOAP_TYPE_ews__UpdateMeetingInstanceResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UpdateMeetingInstanceResponseMessageType() { ews__UpdateMeetingInstanceResponseMessageType::soap_default(NULL); }
	virtual ~ews__UpdateMeetingInstanceResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__DeleteMeetingInstanceRequestType
#define SOAP_TYPE_ews__DeleteMeetingInstanceRequestType (388)
/* ews:DeleteMeetingInstanceRequestType */
class SOAP_CMAC ews__DeleteMeetingInstanceRequestType : public ews__BaseRequestType
{
public:
	ns1__ItemIdType *ItemId;	/* required element of type ns1:ItemIdType */
public:
	virtual int soap_type() const { return 388; } /* = unique type id SOAP_TYPE_ews__DeleteMeetingInstanceRequestType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__DeleteMeetingInstanceRequestType() { ews__DeleteMeetingInstanceRequestType::soap_default(NULL); }
	virtual ~ews__DeleteMeetingInstanceRequestType() { }
};
#endif

#ifndef SOAP_TYPE_ews__DeleteMeetingInstanceResponseMessageType
#define SOAP_TYPE_ews__DeleteMeetingInstanceResponseMessageType (389)
/* ews:DeleteMeetingInstanceResponseMessageType */
class SOAP_CMAC ews__DeleteMeetingInstanceResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 389; } /* = unique type id SOAP_TYPE_ews__DeleteMeetingInstanceResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__DeleteMeetingInstanceResponseMessageType() { ews__DeleteMeetingInstanceResponseMessageType::soap_default(NULL); }
	virtual ~ews__DeleteMeetingInstanceResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CreateSharingInvitationResponseMessageType
#define SOAP_TYPE_ews__CreateSharingInvitationResponseMessageType (391)
/* ews:CreateSharingInvitationResponseMessageType */
class SOAP_CMAC ews__CreateSharingInvitationResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__SharingInvitation *SharingInvitation;	/* required element of type ns1:SharingInvitation */
public:
	virtual int soap_type() const { return 391; } /* = unique type id SOAP_TYPE_ews__CreateSharingInvitationResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CreateSharingInvitationResponseMessageType() { ews__CreateSharingInvitationResponseMessageType::soap_default(NULL); }
	virtual ~ews__CreateSharingInvitationResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__DeleteSharingInvitationResponseMessageType
#define SOAP_TYPE_ews__DeleteSharingInvitationResponseMessageType (393)
/* ews:DeleteSharingInvitationResponseMessageType */
class SOAP_CMAC ews__DeleteSharingInvitationResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 393; } /* = unique type id SOAP_TYPE_ews__DeleteSharingInvitationResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__DeleteSharingInvitationResponseMessageType() { ews__DeleteSharingInvitationResponseMessageType::soap_default(NULL); }
	virtual ~ews__DeleteSharingInvitationResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UpdateSharingInvitationResponseMessageType
#define SOAP_TYPE_ews__UpdateSharingInvitationResponseMessageType (395)
/* ews:UpdateSharingInvitationResponseMessageType */
class SOAP_CMAC ews__UpdateSharingInvitationResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__SharingInvitation *SharingInvitation;	/* required element of type ns1:SharingInvitation */
public:
	virtual int soap_type() const { return 395; } /* = unique type id SOAP_TYPE_ews__UpdateSharingInvitationResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UpdateSharingInvitationResponseMessageType() { ews__UpdateSharingInvitationResponseMessageType::soap_default(NULL); }
	virtual ~ews__UpdateSharingInvitationResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__FindAvailableMeetingTimesType
#define SOAP_TYPE_ews__FindAvailableMeetingTimesType (396)
/* ews:FindAvailableMeetingTimesType */
class SOAP_CMAC ews__FindAvailableMeetingTimesType : public ews__BaseRequestType
{
public:
	ns1__ArrayOfSmtpAddressType *Attendees;	/* optional element of type ns1:ArrayOfSmtpAddressType */
	time_t SearchWindowStart;	/* required element of type xsd:dateTime */
	LONG64 SearchWindowDuration;	/* external */
	int *MeetingDurationInMinutes;	/* optional element of type xsd:int */
	std::string *Location;	/* optional element of type xsd:string */
	int *MaxCandidates;	/* optional element of type xsd:int */
	enum ns1__ActivityDomainType *ActivityDomain;	/* optional element of type ns1:ActivityDomainType */
public:
	virtual int soap_type() const { return 396; } /* = unique type id SOAP_TYPE_ews__FindAvailableMeetingTimesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__FindAvailableMeetingTimesType() { ews__FindAvailableMeetingTimesType::soap_default(NULL); }
	virtual ~ews__FindAvailableMeetingTimesType() { }
};
#endif

#ifndef SOAP_TYPE_ews__FindAvailableMeetingTimesResponseMessageType
#define SOAP_TYPE_ews__FindAvailableMeetingTimesResponseMessageType (397)
/* ews:FindAvailableMeetingTimesResponseMessageType */
class SOAP_CMAC ews__FindAvailableMeetingTimesResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfMeetingTimeCandidate *MeetingTimeCandidates;	/* required element of type ns1:ArrayOfMeetingTimeCandidate */
public:
	virtual int soap_type() const { return 397; } /* = unique type id SOAP_TYPE_ews__FindAvailableMeetingTimesResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__FindAvailableMeetingTimesResponseMessageType() { ews__FindAvailableMeetingTimesResponseMessageType::soap_default(NULL); }
	virtual ~ews__FindAvailableMeetingTimesResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetConsumerCalendarSharedInformationResponseMessageType
#define SOAP_TYPE_ews__GetConsumerCalendarSharedInformationResponseMessageType (399)
/* ews:GetConsumerCalendarSharedInformationResponseMessageType */
class SOAP_CMAC ews__GetConsumerCalendarSharedInformationResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ConsumerCalendarSharedInformation *ConsumerCalendarSharedInformation;	/* required element of type ns1:ConsumerCalendarSharedInformation */
public:
	virtual int soap_type() const { return 399; } /* = unique type id SOAP_TYPE_ews__GetConsumerCalendarSharedInformationResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetConsumerCalendarSharedInformationResponseMessageType() { ews__GetConsumerCalendarSharedInformationResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetConsumerCalendarSharedInformationResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetPeopleInsightsType
#define SOAP_TYPE_ews__GetPeopleInsightsType (400)
/* ews:GetPeopleInsightsType */
class SOAP_CMAC ews__GetPeopleInsightsType : public ews__BaseRequestType
{
public:
	ns1__ArrayOfStringsType *EmailAddresses;	/* optional element of type ns1:ArrayOfStringsType */
public:
	virtual int soap_type() const { return 400; } /* = unique type id SOAP_TYPE_ews__GetPeopleInsightsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetPeopleInsightsType() { ews__GetPeopleInsightsType::soap_default(NULL); }
	virtual ~ews__GetPeopleInsightsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetPeopleInsightsResponseMessageType
#define SOAP_TYPE_ews__GetPeopleInsightsResponseMessageType (401)
/* ews:GetPeopleInsightsResponseMessageType */
class SOAP_CMAC ews__GetPeopleInsightsResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfPersonType *People;	/* optional element of type ns1:ArrayOfPersonType */
public:
	virtual int soap_type() const { return 401; } /* = unique type id SOAP_TYPE_ews__GetPeopleInsightsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetPeopleInsightsResponseMessageType() { ews__GetPeopleInsightsResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetPeopleInsightsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetUserPhotoType
#define SOAP_TYPE_ews__SetUserPhotoType (402)
/* ews:SetUserPhotoType */
class SOAP_CMAC ews__SetUserPhotoType : public ews__BaseRequestType
{
public:
	std::string Email;	/* required element of type ns1:NonEmptyStringType */
	std::string Content;	/* required element of type xsd:string */
public:
	virtual int soap_type() const { return 402; } /* = unique type id SOAP_TYPE_ews__SetUserPhotoType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetUserPhotoType() { ews__SetUserPhotoType::soap_default(NULL); }
	virtual ~ews__SetUserPhotoType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetUserPhotoResponseMessageType
#define SOAP_TYPE_ews__SetUserPhotoResponseMessageType (403)
/* ews:SetUserPhotoResponseMessageType */
class SOAP_CMAC ews__SetUserPhotoResponseMessageType : public ews__BaseResponseMessageType
{
public:
	virtual int soap_type() const { return 403; } /* = unique type id SOAP_TYPE_ews__SetUserPhotoResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetUserPhotoResponseMessageType() { ews__SetUserPhotoResponseMessageType::soap_default(NULL); }
	virtual ~ews__SetUserPhotoResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUserUnifiedGroupsType
#define SOAP_TYPE_ews__GetUserUnifiedGroupsType (404)
/* ews:GetUserUnifiedGroupsType */
class SOAP_CMAC ews__GetUserUnifiedGroupsType : public ews__BaseRequestType
{
public:
	ns1__ArrayOfRequestedUnifiedGroupsSetsType *RequestedGroupsSets;	/* optional element of type ns1:ArrayOfRequestedUnifiedGroupsSetsType */
	std::string *UserSmtpAddress;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 404; } /* = unique type id SOAP_TYPE_ews__GetUserUnifiedGroupsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUserUnifiedGroupsType() { ews__GetUserUnifiedGroupsType::soap_default(NULL); }
	virtual ~ews__GetUserUnifiedGroupsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUserUnifiedGroupsResponseMessageType
#define SOAP_TYPE_ews__GetUserUnifiedGroupsResponseMessageType (405)
/* ews:GetUserUnifiedGroupsResponseMessageType */
class SOAP_CMAC ews__GetUserUnifiedGroupsResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfUnifiedGroupsSetsType *GroupsSets;	/* required element of type ns1:ArrayOfUnifiedGroupsSetsType */
public:
	virtual int soap_type() const { return 405; } /* = unique type id SOAP_TYPE_ews__GetUserUnifiedGroupsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUserUnifiedGroupsResponseMessageType() { ews__GetUserUnifiedGroupsResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetUserUnifiedGroupsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUnifiedGroupDetailsResponseMessageType
#define SOAP_TYPE_ews__GetUnifiedGroupDetailsResponseMessageType (407)
/* ews:GetUnifiedGroupDetailsResponseMessageType */
class SOAP_CMAC ews__GetUnifiedGroupDetailsResponseMessageType : public ews__ResponseMessageType
{
public:
	class ns1__UnifiedGroupDetailsType *GroupDetails;	/* required element of type ns1:UnifiedGroupDetailsType */
public:
	virtual int soap_type() const { return 407; } /* = unique type id SOAP_TYPE_ews__GetUnifiedGroupDetailsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUnifiedGroupDetailsResponseMessageType() { ews__GetUnifiedGroupDetailsResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetUnifiedGroupDetailsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUnifiedGroupMembersResponseMessageType
#define SOAP_TYPE_ews__GetUnifiedGroupMembersResponseMessageType (409)
/* ews:GetUnifiedGroupMembersResponseMessageType */
class SOAP_CMAC ews__GetUnifiedGroupMembersResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__UnifiedGroupMembersResponseType *MembersInfo;	/* optional element of type ns1:UnifiedGroupMembersResponseType */
	ns1__UnifiedGroupMembersResponseType *OwnersInfo;	/* optional element of type ns1:UnifiedGroupMembersResponseType */
public:
	virtual int soap_type() const { return 409; } /* = unique type id SOAP_TYPE_ews__GetUnifiedGroupMembersResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUnifiedGroupMembersResponseMessageType() { ews__GetUnifiedGroupMembersResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetUnifiedGroupMembersResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetUnifiedGroupFavoriteStateResponseMessageType
#define SOAP_TYPE_ews__SetUnifiedGroupFavoriteStateResponseMessageType (411)
/* ews:SetUnifiedGroupFavoriteStateResponseMessageType */
class SOAP_CMAC ews__SetUnifiedGroupFavoriteStateResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 411; } /* = unique type id SOAP_TYPE_ews__SetUnifiedGroupFavoriteStateResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetUnifiedGroupFavoriteStateResponseMessageType() { ews__SetUnifiedGroupFavoriteStateResponseMessageType::soap_default(NULL); }
	virtual ~ews__SetUnifiedGroupFavoriteStateResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetUnifiedGroupUserSubscribeStateResponseMessageType
#define SOAP_TYPE_ews__SetUnifiedGroupUserSubscribeStateResponseMessageType (413)
/* ews:SetUnifiedGroupUserSubscribeStateResponseMessageType */
class SOAP_CMAC ews__SetUnifiedGroupUserSubscribeStateResponseMessageType : public ews__ResponseMessageType
{
public:
	bool ns1__IsSubscribed;	/* required element of type xsd:boolean */
public:
	virtual int soap_type() const { return 413; } /* = unique type id SOAP_TYPE_ews__SetUnifiedGroupUserSubscribeStateResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetUnifiedGroupUserSubscribeStateResponseMessageType() { ews__SetUnifiedGroupUserSubscribeStateResponseMessageType::soap_default(NULL); }
	virtual ~ews__SetUnifiedGroupUserSubscribeStateResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUnifiedGroupSenderRestrictionsResponseMessageType
#define SOAP_TYPE_ews__GetUnifiedGroupSenderRestrictionsResponseMessageType (415)
/* ews:GetUnifiedGroupSenderRestrictionsResponseMessageType */
class SOAP_CMAC ews__GetUnifiedGroupSenderRestrictionsResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__UnifiedGroupIdentity *GroupIdentity;	/* required element of type ns1:UnifiedGroupIdentity */
	ns1__UnifiedGroupSenderRestrictionsType *SenderRestrictions;	/* required element of type ns1:UnifiedGroupSenderRestrictionsType */
public:
	virtual int soap_type() const { return 415; } /* = unique type id SOAP_TYPE_ews__GetUnifiedGroupSenderRestrictionsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUnifiedGroupSenderRestrictionsResponseMessageType() { ews__GetUnifiedGroupSenderRestrictionsResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetUnifiedGroupSenderRestrictionsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__JoinPrivateUnifiedGroupResponseMessageType
#define SOAP_TYPE_ews__JoinPrivateUnifiedGroupResponseMessageType (417)
/* ews:JoinPrivateUnifiedGroupResponseMessageType */
class SOAP_CMAC ews__JoinPrivateUnifiedGroupResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 417; } /* = unique type id SOAP_TYPE_ews__JoinPrivateUnifiedGroupResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__JoinPrivateUnifiedGroupResponseMessageType() { ews__JoinPrivateUnifiedGroupResponseMessageType::soap_default(NULL); }
	virtual ~ews__JoinPrivateUnifiedGroupResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ValidateUnifiedGroupAliasType
#define SOAP_TYPE_ews__ValidateUnifiedGroupAliasType (418)
/* ews:ValidateUnifiedGroupAliasType */
class SOAP_CMAC ews__ValidateUnifiedGroupAliasType : public ews__BaseRequestType
{
public:
	std::string Alias;	/* required element of type xsd:string */
public:
	virtual int soap_type() const { return 418; } /* = unique type id SOAP_TYPE_ews__ValidateUnifiedGroupAliasType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ValidateUnifiedGroupAliasType() { ews__ValidateUnifiedGroupAliasType::soap_default(NULL); }
	virtual ~ews__ValidateUnifiedGroupAliasType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ValidateUnifiedGroupAliasResponseMessageType
#define SOAP_TYPE_ews__ValidateUnifiedGroupAliasResponseMessageType (419)
/* ews:ValidateUnifiedGroupAliasResponseMessageType */
class SOAP_CMAC ews__ValidateUnifiedGroupAliasResponseMessageType : public ews__ResponseMessageType
{
public:
	bool *IsAliasUnique;	/* optional element of type xsd:boolean */
	std::string *Alias;	/* optional element of type xsd:string */
	std::string *SmtpAddress;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 419; } /* = unique type id SOAP_TYPE_ews__ValidateUnifiedGroupAliasResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ValidateUnifiedGroupAliasResponseMessageType() { ews__ValidateUnifiedGroupAliasResponseMessageType::soap_default(NULL); }
	virtual ~ews__ValidateUnifiedGroupAliasResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CreateUnifiedGroupType
#define SOAP_TYPE_ews__CreateUnifiedGroupType (420)
/* ews:CreateUnifiedGroupType */
class SOAP_CMAC ews__CreateUnifiedGroupType : public ews__BaseRequestType
{
public:
	std::string Name;	/* required element of type xsd:string */
	std::string Alias;	/* required element of type xsd:string */
	enum ns1__UnifiedGroupAccessType ns1__AccessType;	/* required element of type ns1:UnifiedGroupAccessType */
	std::string Description;	/* required element of type xsd:string */
	bool AutoSubscribeNewMembers;	/* required element of type xsd:boolean */
	std::string CultureName;	/* required element of type xsd:string */
public:
	virtual int soap_type() const { return 420; } /* = unique type id SOAP_TYPE_ews__CreateUnifiedGroupType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CreateUnifiedGroupType() { ews__CreateUnifiedGroupType::soap_default(NULL); }
	virtual ~ews__CreateUnifiedGroupType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CreateUnifiedGroupResponseMessageType
#define SOAP_TYPE_ews__CreateUnifiedGroupResponseMessageType (421)
/* ews:CreateUnifiedGroupResponseMessageType */
class SOAP_CMAC ews__CreateUnifiedGroupResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__UnifiedGroupIdentity *ns1__GroupIdentity;	/* required element of type ns1:UnifiedGroupIdentity */
	enum ns1__UnifiedGroupCreationErrorType ns1__ErrorCode;	/* required element of type ns1:UnifiedGroupCreationErrorType */
	std::string *LegacyDN;	/* optional element of type xsd:string */
	std::string *MailboxDatabase;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 421; } /* = unique type id SOAP_TYPE_ews__CreateUnifiedGroupResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CreateUnifiedGroupResponseMessageType() { ews__CreateUnifiedGroupResponseMessageType::soap_default(NULL); }
	virtual ~ews__CreateUnifiedGroupResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetMeetingParticipantAvailabilityType
#define SOAP_TYPE_ews__GetMeetingParticipantAvailabilityType (422)
/* ews:GetMeetingParticipantAvailabilityType */
class SOAP_CMAC ews__GetMeetingParticipantAvailabilityType : public ews__BaseRequestType
{
public:
	time_t SearchWindowStart;	/* required element of type xsd:dateTime */
	LONG64 SearchWindowDuration;	/* external */
	int MeetingDurationInMinutes;	/* required element of type xsd:int */
	enum ns1__ActivityDomainType ActivityDomain;	/* required element of type ns1:ActivityDomainType */
public:
	virtual int soap_type() const { return 422; } /* = unique type id SOAP_TYPE_ews__GetMeetingParticipantAvailabilityType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetMeetingParticipantAvailabilityType() { ews__GetMeetingParticipantAvailabilityType::soap_default(NULL); }
	virtual ~ews__GetMeetingParticipantAvailabilityType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetMeetingParticipantAvailabilityResponseMessageType
#define SOAP_TYPE_ews__GetMeetingParticipantAvailabilityResponseMessageType (423)
/* ews:GetMeetingParticipantAvailabilityResponseMessageType */
class SOAP_CMAC ews__GetMeetingParticipantAvailabilityResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfMeetingParticipantAvailability *MeetingParticipantAvailabilities;	/* required element of type ns1:ArrayOfMeetingParticipantAvailability */
public:
	virtual int soap_type() const { return 423; } /* = unique type id SOAP_TYPE_ews__GetMeetingParticipantAvailabilityResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetMeetingParticipantAvailabilityResponseMessageType() { ews__GetMeetingParticipantAvailabilityResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetMeetingParticipantAvailabilityResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UpdateUnifiedGroupResponseMessageType
#define SOAP_TYPE_ews__UpdateUnifiedGroupResponseMessageType (425)
/* ews:UpdateUnifiedGroupResponseMessageType */
class SOAP_CMAC ews__UpdateUnifiedGroupResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 425; } /* = unique type id SOAP_TYPE_ews__UpdateUnifiedGroupResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UpdateUnifiedGroupResponseMessageType() { ews__UpdateUnifiedGroupResponseMessageType::soap_default(NULL); }
	virtual ~ews__UpdateUnifiedGroupResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__RemoveUnifiedGroupResponseMessageType
#define SOAP_TYPE_ews__RemoveUnifiedGroupResponseMessageType (427)
/* ews:RemoveUnifiedGroupResponseMessageType */
class SOAP_CMAC ews__RemoveUnifiedGroupResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 427; } /* = unique type id SOAP_TYPE_ews__RemoveUnifiedGroupResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__RemoveUnifiedGroupResponseMessageType() { ews__RemoveUnifiedGroupResponseMessageType::soap_default(NULL); }
	virtual ~ews__RemoveUnifiedGroupResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetAvailableCulturesType
#define SOAP_TYPE_ews__GetAvailableCulturesType (428)
/* ews:GetAvailableCulturesType */
class SOAP_CMAC ews__GetAvailableCulturesType : public ews__BaseRequestType
{
public:
	virtual int soap_type() const { return 428; } /* = unique type id SOAP_TYPE_ews__GetAvailableCulturesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetAvailableCulturesType() { ews__GetAvailableCulturesType::soap_default(NULL); }
	virtual ~ews__GetAvailableCulturesType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetAvailableCulturesResponseMessageType
#define SOAP_TYPE_ews__GetAvailableCulturesResponseMessageType (430)
/* ews:GetAvailableCulturesResponseMessageType */
class SOAP_CMAC ews__GetAvailableCulturesResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfAvailableCulturesType *AvailableCultures;	/* required element of type ns1:ArrayOfAvailableCulturesType */
public:
	virtual int soap_type() const { return 430; } /* = unique type id SOAP_TYPE_ews__GetAvailableCulturesResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetAvailableCulturesResponseMessageType() { ews__GetAvailableCulturesResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetAvailableCulturesResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetUnifiedGroupMembershipStateResponseMessageType
#define SOAP_TYPE_ews__SetUnifiedGroupMembershipStateResponseMessageType (434)
/* ews:SetUnifiedGroupMembershipStateResponseMessageType */
class SOAP_CMAC ews__SetUnifiedGroupMembershipStateResponseMessageType : public ews__ResponseMessageType
{
public:
	enum ns1__UnifiedGroupActionResultType ns1__GroupActionResultType;	/* required element of type ns1:UnifiedGroupActionResultType */
	ews__ArrayOfUnifiedGroupMembers *InvalidMembers;	/* optional element of type ews:ArrayOfUnifiedGroupMembers */
	ews__ArrayOfUnifiedGroupMembers *FailedMembers;	/* optional element of type ews:ArrayOfUnifiedGroupMembers */
public:
	virtual int soap_type() const { return 434; } /* = unique type id SOAP_TYPE_ews__SetUnifiedGroupMembershipStateResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetUnifiedGroupMembershipStateResponseMessageType() { ews__SetUnifiedGroupMembershipStateResponseMessageType::soap_default(NULL); }
	virtual ~ews__SetUnifiedGroupMembershipStateResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUnifiedGroupsSettingsType
#define SOAP_TYPE_ews__GetUnifiedGroupsSettingsType (435)
/* ews:GetUnifiedGroupsSettingsType */
class SOAP_CMAC ews__GetUnifiedGroupsSettingsType : public ews__BaseRequestType
{
public:
	virtual int soap_type() const { return 435; } /* = unique type id SOAP_TYPE_ews__GetUnifiedGroupsSettingsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUnifiedGroupsSettingsType() { ews__GetUnifiedGroupsSettingsType::soap_default(NULL); }
	virtual ~ews__GetUnifiedGroupsSettingsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUnifiedGroupsSettingsResponseMessageType
#define SOAP_TYPE_ews__GetUnifiedGroupsSettingsResponseMessageType (436)
/* ews:GetUnifiedGroupsSettingsResponseMessageType */
class SOAP_CMAC ews__GetUnifiedGroupsSettingsResponseMessageType : public ews__ResponseMessageType
{
public:
	bool *GroupsEnabled;	/* optional element of type xsd:boolean */
	bool *GroupCreationEnabled;	/* optional element of type xsd:boolean */
	bool *IsUnifiedGroupsAddressListPresent;	/* optional element of type xsd:boolean */
	std::string *EditGroupOwaTemplateUrl;	/* optional element of type xsd:string */
	std::string *BrowseGroupsUrl;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 436; } /* = unique type id SOAP_TYPE_ews__GetUnifiedGroupsSettingsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUnifiedGroupsSettingsResponseMessageType() { ews__GetUnifiedGroupsSettingsResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetUnifiedGroupsSettingsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__RegisterConsentType
#define SOAP_TYPE_ews__RegisterConsentType (437)
/* ews:RegisterConsentType */
class SOAP_CMAC ews__RegisterConsentType : public ews__BaseRequestType
{
public:
	std::string Id;	/* required element of type xsd:string */
	enum ns1__ConsentStateType ConsentState;	/* required element of type ns1:ConsentStateType */
public:
	virtual int soap_type() const { return 437; } /* = unique type id SOAP_TYPE_ews__RegisterConsentType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__RegisterConsentType() { ews__RegisterConsentType::soap_default(NULL); }
	virtual ~ews__RegisterConsentType() { }
};
#endif

#ifndef SOAP_TYPE_ews__RegisterConsentResponseMessageType
#define SOAP_TYPE_ews__RegisterConsentResponseMessageType (438)
/* ews:RegisterConsentResponseMessageType */
class SOAP_CMAC ews__RegisterConsentResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 438; } /* = unique type id SOAP_TYPE_ews__RegisterConsentResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__RegisterConsentResponseMessageType() { ews__RegisterConsentResponseMessageType::soap_default(NULL); }
	virtual ~ews__RegisterConsentResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__RouteComplaintType
#define SOAP_TYPE_ews__RouteComplaintType (439)
/* ews:RouteComplaintType */
class SOAP_CMAC ews__RouteComplaintType : public ews__BaseRequestType
{
public:
	xsd__base64Binary Data;	/* required element of type xsd:base64Binary */
public:
	virtual int soap_type() const { return 439; } /* = unique type id SOAP_TYPE_ews__RouteComplaintType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__RouteComplaintType() { ews__RouteComplaintType::soap_default(NULL); }
	virtual ~ews__RouteComplaintType() { }
};
#endif

#ifndef SOAP_TYPE_ews__RouteComplaintResponseMessageType
#define SOAP_TYPE_ews__RouteComplaintResponseMessageType (440)
/* ews:RouteComplaintResponseMessageType */
class SOAP_CMAC ews__RouteComplaintResponseMessageType : public ews__BaseResponseMessageType
{
public:
	xsd__base64Binary Data;	/* required element of type xsd:base64Binary */
public:
	virtual int soap_type() const { return 440; } /* = unique type id SOAP_TYPE_ews__RouteComplaintResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__RouteComplaintResponseMessageType() { ews__RouteComplaintResponseMessageType::soap_default(NULL); }
	virtual ~ews__RouteComplaintResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetPeopleInsightsTokensType
#define SOAP_TYPE_ews__GetPeopleInsightsTokensType (441)
/* ews:GetPeopleInsightsTokensType */
class SOAP_CMAC ews__GetPeopleInsightsTokensType : public ews__BaseRequestType
{
public:
	std::string *AppId;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 441; } /* = unique type id SOAP_TYPE_ews__GetPeopleInsightsTokensType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetPeopleInsightsTokensType() { ews__GetPeopleInsightsTokensType::soap_default(NULL); }
	virtual ~ews__GetPeopleInsightsTokensType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetPeopleInsightsTokensResponseMessageType
#define SOAP_TYPE_ews__GetPeopleInsightsTokensResponseMessageType (442)
/* ews:GetPeopleInsightsTokensResponseMessageType */
class SOAP_CMAC ews__GetPeopleInsightsTokensResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__NonEmptyArrayOfPeopleTokenType *PeopleTokens;	/* required element of type ns1:NonEmptyArrayOfPeopleTokenType */
public:
	virtual int soap_type() const { return 442; } /* = unique type id SOAP_TYPE_ews__GetPeopleInsightsTokensResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetPeopleInsightsTokensResponseMessageType() { ews__GetPeopleInsightsTokensResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetPeopleInsightsTokensResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetPeopleInsightsTokensType
#define SOAP_TYPE_ews__SetPeopleInsightsTokensType (443)
/* ews:SetPeopleInsightsTokensType */
class SOAP_CMAC ews__SetPeopleInsightsTokensType : public ews__BaseRequestType
{
public:
	std::string AppId;	/* required element of type xsd:string */
	ns1__NonEmptyArrayOfPeopleTokenType *PeopleTokens;	/* required element of type ns1:NonEmptyArrayOfPeopleTokenType */
public:
	virtual int soap_type() const { return 443; } /* = unique type id SOAP_TYPE_ews__SetPeopleInsightsTokensType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetPeopleInsightsTokensType() { ews__SetPeopleInsightsTokensType::soap_default(NULL); }
	virtual ~ews__SetPeopleInsightsTokensType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetPeopleInsightsTokensResponseMessageType
#define SOAP_TYPE_ews__SetPeopleInsightsTokensResponseMessageType (444)
/* ews:SetPeopleInsightsTokensResponseMessageType */
class SOAP_CMAC ews__SetPeopleInsightsTokensResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 444; } /* = unique type id SOAP_TYPE_ews__SetPeopleInsightsTokensResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetPeopleInsightsTokensResponseMessageType() { ews__SetPeopleInsightsTokensResponseMessageType::soap_default(NULL); }
	virtual ~ews__SetPeopleInsightsTokensResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__DeletePeopleInsightsTokensType
#define SOAP_TYPE_ews__DeletePeopleInsightsTokensType (445)
/* ews:DeletePeopleInsightsTokensType */
class SOAP_CMAC ews__DeletePeopleInsightsTokensType : public ews__BaseRequestType
{
public:
	std::string AppId;	/* required element of type xsd:string */
	ns1__NonEmptyArrayOfPeopleTokenType *PeopleTokens;	/* required element of type ns1:NonEmptyArrayOfPeopleTokenType */
public:
	virtual int soap_type() const { return 445; } /* = unique type id SOAP_TYPE_ews__DeletePeopleInsightsTokensType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__DeletePeopleInsightsTokensType() { ews__DeletePeopleInsightsTokensType::soap_default(NULL); }
	virtual ~ews__DeletePeopleInsightsTokensType() { }
};
#endif

#ifndef SOAP_TYPE_ews__DeletePeopleInsightsTokensResponseMessageType
#define SOAP_TYPE_ews__DeletePeopleInsightsTokensResponseMessageType (446)
/* ews:DeletePeopleInsightsTokensResponseMessageType */
class SOAP_CMAC ews__DeletePeopleInsightsTokensResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 446; } /* = unique type id SOAP_TYPE_ews__DeletePeopleInsightsTokensResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__DeletePeopleInsightsTokensResponseMessageType() { ews__DeletePeopleInsightsTokensResponseMessageType::soap_default(NULL); }
	virtual ~ews__DeletePeopleInsightsTokensResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__AddActivityLogEntryType
#define SOAP_TYPE_ews__AddActivityLogEntryType (447)
/* ews:AddActivityLogEntryType */
class SOAP_CMAC ews__AddActivityLogEntryType : public ews__BaseRequestType
{
public:
	ns1__ArrayOfActivityLogEntry *LogEntries;	/* required element of type ns1:ArrayOfActivityLogEntry */
public:
	virtual int soap_type() const { return 447; } /* = unique type id SOAP_TYPE_ews__AddActivityLogEntryType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__AddActivityLogEntryType() { ews__AddActivityLogEntryType::soap_default(NULL); }
	virtual ~ews__AddActivityLogEntryType() { }
};
#endif

#ifndef SOAP_TYPE_ews__AddActivityLogEntryResponseMessageType
#define SOAP_TYPE_ews__AddActivityLogEntryResponseMessageType (448)
/* ews:AddActivityLogEntryResponseMessageType */
class SOAP_CMAC ews__AddActivityLogEntryResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfActivityLogEntry *LogEntries;	/* optional element of type ns1:ArrayOfActivityLogEntry */
public:
	virtual int soap_type() const { return 448; } /* = unique type id SOAP_TYPE_ews__AddActivityLogEntryResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__AddActivityLogEntryResponseMessageType() { ews__AddActivityLogEntryResponseMessageType::soap_default(NULL); }
	virtual ~ews__AddActivityLogEntryResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetActivityLogType
#define SOAP_TYPE_ews__GetActivityLogType (449)
/* ews:GetActivityLogType */
class SOAP_CMAC ews__GetActivityLogType : public ews__BaseRequestType
{
public:
	std::string *Filter;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 449; } /* = unique type id SOAP_TYPE_ews__GetActivityLogType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetActivityLogType() { ews__GetActivityLogType::soap_default(NULL); }
	virtual ~ews__GetActivityLogType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetActivityLogResponseMessageType
#define SOAP_TYPE_ews__GetActivityLogResponseMessageType (450)
/* ews:GetActivityLogResponseMessageType */
class SOAP_CMAC ews__GetActivityLogResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfActivityLogEntry *LogEntries;	/* required element of type ns1:ArrayOfActivityLogEntry */
public:
	virtual int soap_type() const { return 450; } /* = unique type id SOAP_TYPE_ews__GetActivityLogResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetActivityLogResponseMessageType() { ews__GetActivityLogResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetActivityLogResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__NotifyOneDriveSyncType
#define SOAP_TYPE_ews__NotifyOneDriveSyncType (451)
/* ews:NotifyOneDriveSyncType */
class SOAP_CMAC ews__NotifyOneDriveSyncType : public ews__BaseRequestType
{
public:
	std::string UserID;	/* required element of type ns1:GuidType */
	std::string TenantID;	/* required element of type ns1:GuidType */
	time_t Timestamp;	/* required element of type xsd:dateTime */
public:
	virtual int soap_type() const { return 451; } /* = unique type id SOAP_TYPE_ews__NotifyOneDriveSyncType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__NotifyOneDriveSyncType() { ews__NotifyOneDriveSyncType::soap_default(NULL); }
	virtual ~ews__NotifyOneDriveSyncType() { }
};
#endif

#ifndef SOAP_TYPE_ews__NotifyOneDriveSyncResponseMessageType
#define SOAP_TYPE_ews__NotifyOneDriveSyncResponseMessageType (452)
/* ews:NotifyOneDriveSyncResponseMessageType */
class SOAP_CMAC ews__NotifyOneDriveSyncResponseMessageType : public ews__ResponseMessageType
{
public:
	virtual int soap_type() const { return 452; } /* = unique type id SOAP_TYPE_ews__NotifyOneDriveSyncResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__NotifyOneDriveSyncResponseMessageType() { ews__NotifyOneDriveSyncResponseMessageType::soap_default(NULL); }
	virtual ~ews__NotifyOneDriveSyncResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ContactPropertySuggestionType
#define SOAP_TYPE_ews__ContactPropertySuggestionType (453)
/* ews:ContactPropertySuggestionType */
class SOAP_CMAC ews__ContactPropertySuggestionType : public ews__BaseRequestType
{
public:
	std::string QueryString;	/* required element of type xsd:string */
	int *MaxResultsCount;	/* optional element of type xsd:int */
public:
	virtual int soap_type() const { return 453; } /* = unique type id SOAP_TYPE_ews__ContactPropertySuggestionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ContactPropertySuggestionType() { ews__ContactPropertySuggestionType::soap_default(NULL); }
	virtual ~ews__ContactPropertySuggestionType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ContactPropertySuggestionResponseMessageType
#define SOAP_TYPE_ews__ContactPropertySuggestionResponseMessageType (454)
/* ews:ContactPropertySuggestionResponseMessageType */
class SOAP_CMAC ews__ContactPropertySuggestionResponseMessageType : public ews__ResponseMessageType
{
public:
	ns1__ArrayOfStringsType *Suggestions;	/* optional element of type ns1:ArrayOfStringsType */
public:
	virtual int soap_type() const { return 454; } /* = unique type id SOAP_TYPE_ews__ContactPropertySuggestionResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ContactPropertySuggestionResponseMessageType() { ews__ContactPropertySuggestionResponseMessageType::soap_default(NULL); }
	virtual ~ews__ContactPropertySuggestionResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MailboxCultureType
#define SOAP_TYPE_ns1__MailboxCultureType (455)
/* Primitive ns1:MailboxCultureType schema type: */
class SOAP_CMAC ns1__MailboxCultureType
{
public:
	std::string __item;
	char *__anyAttribute;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 455; } /* = unique type id SOAP_TYPE_ns1__MailboxCultureType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MailboxCultureType() { ns1__MailboxCultureType::soap_default(NULL); }
	virtual ~ns1__MailboxCultureType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ProxySecurityContextType
#define SOAP_TYPE_ns1__ProxySecurityContextType (469)
/* Primitive ns1:ProxySecurityContextType schema type: */
class SOAP_CMAC ns1__ProxySecurityContextType
{
public:
	xsd__base64Binary __item;
	char *__anyAttribute;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 469; } /* = unique type id SOAP_TYPE_ns1__ProxySecurityContextType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ProxySecurityContextType() { ns1__ProxySecurityContextType::soap_default(NULL); }
	virtual ~ns1__ProxySecurityContextType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__EmailAddressType
#define SOAP_TYPE_ns1__EmailAddressType (471)
/* ns1:EmailAddressType */
class SOAP_CMAC ns1__EmailAddressType : public ns1__BaseEmailAddressType
{
public:
	std::string *Name;	/* optional element of type xsd:string */
	std::string *EmailAddress;	/* optional element of type ns1:NonEmptyStringType */
	std::string *RoutingType;	/* optional element of type ns1:NonEmptyStringType */
	enum ns1__MailboxTypeType *MailboxType;	/* optional element of type ns1:MailboxTypeType */
	ns1__ItemIdType *ItemId;	/* optional element of type ns1:ItemIdType */
	std::string *OriginalDisplayName;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 471; } /* = unique type id SOAP_TYPE_ns1__EmailAddressType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__EmailAddressType() { ns1__EmailAddressType::soap_default(NULL); }
	virtual ~ns1__EmailAddressType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RoomType
#define SOAP_TYPE_ns1__RoomType (474)
/* ns1:RoomType */
class SOAP_CMAC ns1__RoomType : public ns1__DirectoryEntryType
{
public:
	virtual int soap_type() const { return 474; } /* = unique type id SOAP_TYPE_ns1__RoomType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RoomType() { ns1__RoomType::soap_default(NULL); }
	virtual ~ns1__RoomType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PathToUnindexedFieldType
#define SOAP_TYPE_ns1__PathToUnindexedFieldType (488)
/* ns1:PathToUnindexedFieldType */
class SOAP_CMAC ns1__PathToUnindexedFieldType : public ns1__BasePathToElementType
{
public:
	enum ns1__UnindexedFieldURIType FieldURI;	/* required attribute */
public:
	virtual int soap_type() const { return 488; } /* = unique type id SOAP_TYPE_ns1__PathToUnindexedFieldType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PathToUnindexedFieldType() { ns1__PathToUnindexedFieldType::soap_default(NULL); }
	virtual ~ns1__PathToUnindexedFieldType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PathToIndexedFieldType
#define SOAP_TYPE_ns1__PathToIndexedFieldType (489)
/* ns1:PathToIndexedFieldType */
class SOAP_CMAC ns1__PathToIndexedFieldType : public ns1__BasePathToElementType
{
public:
	enum ns1__DictionaryURIType FieldURI;	/* required attribute */
	std::string FieldIndex;	/* required attribute */
public:
	virtual int soap_type() const { return 489; } /* = unique type id SOAP_TYPE_ns1__PathToIndexedFieldType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PathToIndexedFieldType() { ns1__PathToIndexedFieldType::soap_default(NULL); }
	virtual ~ns1__PathToIndexedFieldType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PathToExceptionFieldType
#define SOAP_TYPE_ns1__PathToExceptionFieldType (490)
/* ns1:PathToExceptionFieldType */
class SOAP_CMAC ns1__PathToExceptionFieldType : public ns1__BasePathToElementType
{
public:
	enum ns1__ExceptionPropertyURIType FieldURI;	/* required attribute */
public:
	virtual int soap_type() const { return 490; } /* = unique type id SOAP_TYPE_ns1__PathToExceptionFieldType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PathToExceptionFieldType() { ns1__PathToExceptionFieldType::soap_default(NULL); }
	virtual ~ns1__PathToExceptionFieldType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PathToExtendedFieldType
#define SOAP_TYPE_ns1__PathToExtendedFieldType (491)
/* ns1:PathToExtendedFieldType */
class SOAP_CMAC ns1__PathToExtendedFieldType : public ns1__BasePathToElementType
{
public:
	enum ns1__DistinguishedPropertySetType *DistinguishedPropertySetId;	/* optional attribute */
	std::string *PropertySetId;	/* optional attribute */
	std::string *PropertyTag;	/* optional attribute */
	std::string *PropertyName;	/* optional attribute */
	int *PropertyId;	/* optional attribute */
	enum ns1__MapiPropertyTypeType PropertyType;	/* required attribute */
public:
	virtual int soap_type() const { return 491; } /* = unique type id SOAP_TYPE_ns1__PathToExtendedFieldType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PathToExtendedFieldType() { ns1__PathToExtendedFieldType::soap_default(NULL); }
	virtual ~ns1__PathToExtendedFieldType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ItemChangeDescriptionType
#define SOAP_TYPE_ns1__ItemChangeDescriptionType (505)
/* ns1:ItemChangeDescriptionType */
class SOAP_CMAC ns1__ItemChangeDescriptionType : public ns1__ChangeDescriptionType
{
public:
	virtual int soap_type() const { return 505; } /* = unique type id SOAP_TYPE_ns1__ItemChangeDescriptionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ItemChangeDescriptionType() { ns1__ItemChangeDescriptionType::soap_default(NULL); }
	virtual ~ns1__ItemChangeDescriptionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__FolderChangeDescriptionType
#define SOAP_TYPE_ns1__FolderChangeDescriptionType (506)
/* ns1:FolderChangeDescriptionType */
class SOAP_CMAC ns1__FolderChangeDescriptionType : public ns1__ChangeDescriptionType
{
public:
	virtual int soap_type() const { return 506; } /* = unique type id SOAP_TYPE_ns1__FolderChangeDescriptionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__FolderChangeDescriptionType() { ns1__FolderChangeDescriptionType::soap_default(NULL); }
	virtual ~ns1__FolderChangeDescriptionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__InternetHeaderType
#define SOAP_TYPE_ns1__InternetHeaderType (517)
/* Primitive ns1:InternetHeaderType schema type: */
class SOAP_CMAC ns1__InternetHeaderType
{
public:
	std::string __item;
	std::string HeaderName;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 517; } /* = unique type id SOAP_TYPE_ns1__InternetHeaderType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__InternetHeaderType() { ns1__InternetHeaderType::soap_default(NULL); }
	virtual ~ns1__InternetHeaderType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RequestAttachmentIdType
#define SOAP_TYPE_ns1__RequestAttachmentIdType (520)
/* ns1:RequestAttachmentIdType */
class SOAP_CMAC ns1__RequestAttachmentIdType : public ns1__BaseItemIdType
{
public:
	std::string Id;	/* required attribute */
public:
	virtual int soap_type() const { return 520; } /* = unique type id SOAP_TYPE_ns1__RequestAttachmentIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RequestAttachmentIdType() { ns1__RequestAttachmentIdType::soap_default(NULL); }
	virtual ~ns1__RequestAttachmentIdType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RootItemIdType
#define SOAP_TYPE_ns1__RootItemIdType (522)
/* ns1:RootItemIdType */
class SOAP_CMAC ns1__RootItemIdType : public ns1__BaseItemIdType
{
public:
	std::string RootItemId;	/* required attribute */
	std::string RootItemChangeKey;	/* required attribute */
public:
	virtual int soap_type() const { return 522; } /* = unique type id SOAP_TYPE_ns1__RootItemIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RootItemIdType() { ns1__RootItemIdType::soap_default(NULL); }
	virtual ~ns1__RootItemIdType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ItemAttachmentType
#define SOAP_TYPE__ns1__union_ItemAttachmentType (2281)
/* xsd:choice */
union _ns1__union_ItemAttachmentType
{
#define SOAP_UNION__ns1__union_ItemAttachmentType_Item	(1)
	ns1__ItemType *Item;
#define SOAP_UNION__ns1__union_ItemAttachmentType_Message	(2)
	ns1__MessageType *Message;
#define SOAP_UNION__ns1__union_ItemAttachmentType_CalendarItem	(3)
	ns1__CalendarItemType *CalendarItem;
#define SOAP_UNION__ns1__union_ItemAttachmentType_Contact	(4)
	ns1__ContactItemType *Contact;
#define SOAP_UNION__ns1__union_ItemAttachmentType_MeetingMessage	(5)
	ns1__MeetingMessageType *MeetingMessage;
#define SOAP_UNION__ns1__union_ItemAttachmentType_MeetingRequest	(6)
	ns1__MeetingRequestMessageType *MeetingRequest;
#define SOAP_UNION__ns1__union_ItemAttachmentType_MeetingResponse	(7)
	ns1__MeetingResponseMessageType *MeetingResponse;
#define SOAP_UNION__ns1__union_ItemAttachmentType_MeetingCancellation	(8)
	ns1__MeetingCancellationMessageType *MeetingCancellation;
#define SOAP_UNION__ns1__union_ItemAttachmentType_Task	(9)
	ns1__TaskType *Task;
#define SOAP_UNION__ns1__union_ItemAttachmentType_PostItem	(10)
	ns1__PostItemType *PostItem;
#define SOAP_UNION__ns1__union_ItemAttachmentType_RoleMember	(11)
	ns1__RoleMemberItemType *RoleMember;
#define SOAP_UNION__ns1__union_ItemAttachmentType_Network	(12)
	ns1__NetworkItemType *Network;
#define SOAP_UNION__ns1__union_ItemAttachmentType_Person	(13)
	ns1__AbchPersonItemType *Person;
#define SOAP_UNION__ns1__union_ItemAttachmentType_Booking	(14)
	ns1__BookingItemType *Booking;
};
#endif

#ifndef SOAP_TYPE_ns1__ItemAttachmentType
#define SOAP_TYPE_ns1__ItemAttachmentType (525)
/* ns1:ItemAttachmentType */
class SOAP_CMAC ns1__ItemAttachmentType : public ns1__AttachmentType
{
public:
	int __union_ItemAttachmentType;	/* union discriminant (of union defined below) */
	union _ns1__union_ItemAttachmentType union_ItemAttachmentType;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 525; } /* = unique type id SOAP_TYPE_ns1__ItemAttachmentType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ItemAttachmentType() { ns1__ItemAttachmentType::soap_default(NULL); }
	virtual ~ns1__ItemAttachmentType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__FileAttachmentType
#define SOAP_TYPE_ns1__FileAttachmentType (527)
/* ns1:FileAttachmentType */
class SOAP_CMAC ns1__FileAttachmentType : public ns1__AttachmentType
{
public:
	bool *IsContactPhoto;	/* optional element of type xsd:boolean */
	xsd__base64Binary *Content;	/* optional element of type xsd:base64Binary */
public:
	virtual int soap_type() const { return 527; } /* = unique type id SOAP_TYPE_ns1__FileAttachmentType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__FileAttachmentType() { ns1__FileAttachmentType::soap_default(NULL); }
	virtual ~ns1__FileAttachmentType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ReferenceAttachmentType
#define SOAP_TYPE_ns1__ReferenceAttachmentType (528)
/* ns1:ReferenceAttachmentType */
class SOAP_CMAC ns1__ReferenceAttachmentType : public ns1__AttachmentType
{
public:
	std::string *AttachLongPathName;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 528; } /* = unique type id SOAP_TYPE_ns1__ReferenceAttachmentType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ReferenceAttachmentType() { ns1__ReferenceAttachmentType::soap_default(NULL); }
	virtual ~ns1__ReferenceAttachmentType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__BodyType
#define SOAP_TYPE_ns1__BodyType (531)
/* Primitive ns1:BodyType schema type: */
class SOAP_CMAC ns1__BodyType
{
public:
	std::string __item;
	enum ns1__BodyTypeType BodyType;	/* required attribute */
	bool *IsTruncated;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 531; } /* = unique type id SOAP_TYPE_ns1__BodyType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__BodyType() { ns1__BodyType::soap_default(NULL); }
	virtual ~ns1__BodyType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UniqueBodyType
#define SOAP_TYPE_ns1__UniqueBodyType (532)
/* Primitive ns1:UniqueBodyType schema type: */
class SOAP_CMAC ns1__UniqueBodyType
{
public:
	std::string __item;
	enum ns1__BodyTypeType UniqueBodyType;	/* required attribute */
	bool *IsTruncated;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 532; } /* = unique type id SOAP_TYPE_ns1__UniqueBodyType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UniqueBodyType() { ns1__UniqueBodyType::soap_default(NULL); }
	virtual ~ns1__UniqueBodyType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NormalizedBodyType
#define SOAP_TYPE_ns1__NormalizedBodyType (533)
/* Primitive ns1:NormalizedBodyType schema type: */
class SOAP_CMAC ns1__NormalizedBodyType
{
public:
	std::string __item;
	enum ns1__BodyTypeType NormalizedBodyType;	/* required attribute */
	bool *IsTruncated;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 533; } /* = unique type id SOAP_TYPE_ns1__NormalizedBodyType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NormalizedBodyType() { ns1__NormalizedBodyType::soap_default(NULL); }
	virtual ~ns1__NormalizedBodyType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__DistinguishedFolderIdType
#define SOAP_TYPE_ns1__DistinguishedFolderIdType (535)
/* ns1:DistinguishedFolderIdType */
class SOAP_CMAC ns1__DistinguishedFolderIdType : public ns1__BaseFolderIdType
{
public:
	ns1__EmailAddressType *Mailbox;	/* optional element of type ns1:EmailAddressType */
	enum ns1__DistinguishedFolderIdNameType Id;	/* required attribute */
	std::string *ChangeKey;	/* optional attribute */
public:
	virtual int soap_type() const { return 535; } /* = unique type id SOAP_TYPE_ns1__DistinguishedFolderIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__DistinguishedFolderIdType() { ns1__DistinguishedFolderIdType::soap_default(NULL); }
	virtual ~ns1__DistinguishedFolderIdType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__FolderIdType
#define SOAP_TYPE_ns1__FolderIdType (536)
/* ns1:FolderIdType */
class SOAP_CMAC ns1__FolderIdType : public ns1__BaseFolderIdType
{
public:
	std::string Id;	/* required attribute */
	std::string *ChangeKey;	/* optional attribute */
public:
	virtual int soap_type() const { return 536; } /* = unique type id SOAP_TYPE_ns1__FolderIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__FolderIdType() { ns1__FolderIdType::soap_default(NULL); }
	virtual ~ns1__FolderIdType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AddressListIdType
#define SOAP_TYPE_ns1__AddressListIdType (537)
/* ns1:AddressListIdType */
class SOAP_CMAC ns1__AddressListIdType : public ns1__BaseFolderIdType
{
public:
	std::string Id;	/* required attribute */
public:
	virtual int soap_type() const { return 537; } /* = unique type id SOAP_TYPE_ns1__AddressListIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AddressListIdType() { ns1__AddressListIdType::soap_default(NULL); }
	virtual ~ns1__AddressListIdType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__FolderType
#define SOAP_TYPE_ns1__FolderType (546)
/* ns1:FolderType */
class SOAP_CMAC ns1__FolderType : public ns1__BaseFolderType
{
public:
	ns1__PermissionSetType *PermissionSet;	/* optional element of type ns1:PermissionSetType */
	int *UnreadCount;	/* optional element of type xsd:int */
public:
	virtual int soap_type() const { return 546; } /* = unique type id SOAP_TYPE_ns1__FolderType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__FolderType() { ns1__FolderType::soap_default(NULL); }
	virtual ~ns1__FolderType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CalendarFolderType
#define SOAP_TYPE_ns1__CalendarFolderType (547)
/* ns1:CalendarFolderType */
class SOAP_CMAC ns1__CalendarFolderType : public ns1__BaseFolderType
{
public:
	enum ns1__CalendarPermissionReadAccessType *SharingEffectiveRights;	/* optional element of type ns1:CalendarPermissionReadAccessType */
	ns1__CalendarPermissionSetType *PermissionSet;	/* optional element of type ns1:CalendarPermissionSetType */
public:
	virtual int soap_type() const { return 547; } /* = unique type id SOAP_TYPE_ns1__CalendarFolderType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CalendarFolderType() { ns1__CalendarFolderType::soap_default(NULL); }
	virtual ~ns1__CalendarFolderType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ContactsFolderType
#define SOAP_TYPE_ns1__ContactsFolderType (550)
/* ns1:ContactsFolderType */
class SOAP_CMAC ns1__ContactsFolderType : public ns1__BaseFolderType
{
public:
	enum ns1__PermissionReadAccessType *SharingEffectiveRights;	/* optional element of type ns1:PermissionReadAccessType */
	ns1__PermissionSetType *PermissionSet;	/* optional element of type ns1:PermissionSetType */
	std::string *SourceId;	/* optional element of type xsd:string */
	std::string *AccountName;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 550; } /* = unique type id SOAP_TYPE_ns1__ContactsFolderType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ContactsFolderType() { ns1__ContactsFolderType::soap_default(NULL); }
	virtual ~ns1__ContactsFolderType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ItemIdType
#define SOAP_TYPE_ns1__ItemIdType (556)
/* ns1:ItemIdType */
class SOAP_CMAC ns1__ItemIdType : public ns1__BaseItemIdType
{
public:
	std::string Id;	/* required attribute */
	std::string *ChangeKey;	/* optional attribute */
public:
	virtual int soap_type() const { return 556; } /* = unique type id SOAP_TYPE_ns1__ItemIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ItemIdType() { ns1__ItemIdType::soap_default(NULL); }
	virtual ~ns1__ItemIdType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AddressEntityType
#define SOAP_TYPE_ns1__AddressEntityType (582)
/* ns1:AddressEntityType */
class SOAP_CMAC ns1__AddressEntityType : public ns1__EntityType
{
public:
	std::string *Address;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 582; } /* = unique type id SOAP_TYPE_ns1__AddressEntityType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AddressEntityType() { ns1__AddressEntityType::soap_default(NULL); }
	virtual ~ns1__AddressEntityType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__EmailAddressEntityType
#define SOAP_TYPE_ns1__EmailAddressEntityType (584)
/* ns1:EmailAddressEntityType */
class SOAP_CMAC ns1__EmailAddressEntityType : public ns1__EntityType
{
public:
	std::string *EmailAddress;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 584; } /* = unique type id SOAP_TYPE_ns1__EmailAddressEntityType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__EmailAddressEntityType() { ns1__EmailAddressEntityType::soap_default(NULL); }
	virtual ~ns1__EmailAddressEntityType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UrlEntityType
#define SOAP_TYPE_ns1__UrlEntityType (586)
/* ns1:UrlEntityType */
class SOAP_CMAC ns1__UrlEntityType : public ns1__EntityType
{
public:
	std::string *Url;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 586; } /* = unique type id SOAP_TYPE_ns1__UrlEntityType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UrlEntityType() { ns1__UrlEntityType::soap_default(NULL); }
	virtual ~ns1__UrlEntityType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MeetingSuggestionType
#define SOAP_TYPE_ns1__MeetingSuggestionType (588)
/* ns1:MeetingSuggestionType */
class SOAP_CMAC ns1__MeetingSuggestionType : public ns1__EntityType
{
public:
	ns1__ArrayOfEmailUsersType *Attendees;	/* optional element of type ns1:ArrayOfEmailUsersType */
	std::string *Location;	/* optional element of type xsd:string */
	std::string *Subject;	/* optional element of type xsd:string */
	std::string *MeetingString;	/* optional element of type xsd:string */
	time_t *StartTime;	/* optional element of type xsd:dateTime */
	time_t *EndTime;	/* optional element of type xsd:dateTime */
public:
	virtual int soap_type() const { return 588; } /* = unique type id SOAP_TYPE_ns1__MeetingSuggestionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MeetingSuggestionType() { ns1__MeetingSuggestionType::soap_default(NULL); }
	virtual ~ns1__MeetingSuggestionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ContactType
#define SOAP_TYPE_ns1__ContactType (591)
/* ns1:ContactType */
class SOAP_CMAC ns1__ContactType : public ns1__EntityType
{
public:
	std::string *PersonName;	/* optional element of type xsd:string */
	std::string *BusinessName;	/* optional element of type xsd:string */
	ns1__ArrayOfPhonesType *PhoneNumbers;	/* optional element of type ns1:ArrayOfPhonesType */
	ns1__ArrayOfUrlsType *Urls;	/* optional element of type ns1:ArrayOfUrlsType */
	ns1__ArrayOfExtractedEmailAddresses *EmailAddresses;	/* optional element of type ns1:ArrayOfExtractedEmailAddresses */
	ns1__ArrayOfAddressesType *Addresses;	/* optional element of type ns1:ArrayOfAddressesType */
	std::string *ContactString;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 591; } /* = unique type id SOAP_TYPE_ns1__ContactType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ContactType() { ns1__ContactType::soap_default(NULL); }
	virtual ~ns1__ContactType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PhoneEntityType
#define SOAP_TYPE_ns1__PhoneEntityType (596)
/* ns1:PhoneEntityType */
class SOAP_CMAC ns1__PhoneEntityType : public ns1__EntityType
{
public:
	std::string *OriginalPhoneString;	/* optional element of type xsd:string */
	std::string *PhoneString;	/* optional element of type xsd:string */
	std::string *Type;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 596; } /* = unique type id SOAP_TYPE_ns1__PhoneEntityType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PhoneEntityType() { ns1__PhoneEntityType::soap_default(NULL); }
	virtual ~ns1__PhoneEntityType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__TaskSuggestionType
#define SOAP_TYPE_ns1__TaskSuggestionType (599)
/* ns1:TaskSuggestionType */
class SOAP_CMAC ns1__TaskSuggestionType : public ns1__EntityType
{
public:
	std::string *TaskString;	/* optional element of type xsd:string */
	ns1__ArrayOfEmailUsersType *Assignees;	/* optional element of type ns1:ArrayOfEmailUsersType */
public:
	virtual int soap_type() const { return 599; } /* = unique type id SOAP_TYPE_ns1__TaskSuggestionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__TaskSuggestionType() { ns1__TaskSuggestionType::soap_default(NULL); }
	virtual ~ns1__TaskSuggestionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__StringInsightValue
#define SOAP_TYPE_ns1__StringInsightValue (642)
/* ns1:StringInsightValue */
class SOAP_CMAC ns1__StringInsightValue : public ns1__InsightValue
{
public:
	std::string *Data;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 642; } /* = unique type id SOAP_TYPE_ns1__StringInsightValue */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__StringInsightValue() { ns1__StringInsightValue::soap_default(NULL); }
	virtual ~ns1__StringInsightValue() { }
};
#endif

#ifndef SOAP_TYPE_ns1__DelveDoc
#define SOAP_TYPE_ns1__DelveDoc (643)
/* ns1:DelveDoc */
class SOAP_CMAC ns1__DelveDoc : public ns1__InsightValue
{
public:
	double *Rank;	/* optional element of type xsd:double */
	std::string *Author;	/* optional element of type xsd:string */
	std::string *Created;	/* optional element of type xsd:string */
	std::string *LastModifiedTime;	/* optional element of type xsd:string */
	std::string *DefaultEncodingURL;	/* optional element of type xsd:string */
	std::string *FileType;	/* optional element of type xsd:string */
	std::string *Title;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 643; } /* = unique type id SOAP_TYPE_ns1__DelveDoc */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__DelveDoc() { ns1__DelveDoc::soap_default(NULL); }
	virtual ~ns1__DelveDoc() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ProfileInsightValue
#define SOAP_TYPE_ns1__ProfileInsightValue (644)
/* ns1:ProfileInsightValue */
class SOAP_CMAC ns1__ProfileInsightValue : public ns1__InsightValue
{
public:
	std::string *FullName;	/* optional element of type xsd:string */
	std::string *FirstName;	/* optional element of type xsd:string */
	std::string *LastName;	/* optional element of type xsd:string */
	std::string *EmailAddress;	/* optional element of type xsd:string */
	std::string *Avatar;	/* optional element of type xsd:string */
	LONG64 *JoinedUtcTicks;	/* optional element of type xsd:long */
public:
	virtual int soap_type() const { return 644; } /* = unique type id SOAP_TYPE_ns1__ProfileInsightValue */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ProfileInsightValue() { ns1__ProfileInsightValue::soap_default(NULL); }
	virtual ~ns1__ProfileInsightValue() { }
};
#endif

#ifndef SOAP_TYPE_ns1__JobInsightValue
#define SOAP_TYPE_ns1__JobInsightValue (645)
/* ns1:JobInsightValue */
class SOAP_CMAC ns1__JobInsightValue : public ns1__InsightValue
{
public:
	std::string *Company;	/* optional element of type xsd:string */
	std::string *CompanyDescription;	/* optional element of type xsd:string */
	std::string *CompanyTicker;	/* optional element of type xsd:string */
	std::string *CompanyLogoUrl;	/* optional element of type xsd:string */
	std::string *CompanyWebsiteUrl;	/* optional element of type xsd:string */
	std::string *CompanyLinkedInUrl;	/* optional element of type xsd:string */
	std::string *Title;	/* optional element of type xsd:string */
	LONG64 *StartUtcTicks;	/* optional element of type xsd:long */
	LONG64 *EndUtcTicks;	/* optional element of type xsd:long */
public:
	virtual int soap_type() const { return 645; } /* = unique type id SOAP_TYPE_ns1__JobInsightValue */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__JobInsightValue() { ns1__JobInsightValue::soap_default(NULL); }
	virtual ~ns1__JobInsightValue() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CompanyInsightValue
#define SOAP_TYPE_ns1__CompanyInsightValue (646)
/* ns1:CompanyInsightValue */
class SOAP_CMAC ns1__CompanyInsightValue : public ns1__InsightValue
{
public:
	std::string Name;	/* required element of type xsd:string */
	std::string *SatoriId;	/* optional element of type xsd:string */
	std::string *Description;	/* optional element of type xsd:string */
	std::string *DescriptionAttribution;	/* optional element of type xsd:string */
	std::string *ImageUrl;	/* optional element of type xsd:string */
	std::string *ImageUrlAttribution;	/* optional element of type xsd:string */
	std::string *YearFound;	/* optional element of type xsd:string */
	std::string *FinanceSymbol;	/* optional element of type xsd:string */
	std::string *WebsiteUrl;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 646; } /* = unique type id SOAP_TYPE_ns1__CompanyInsightValue */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CompanyInsightValue() { ns1__CompanyInsightValue::soap_default(NULL); }
	virtual ~ns1__CompanyInsightValue() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UserProfilePicture
#define SOAP_TYPE_ns1__UserProfilePicture (647)
/* ns1:UserProfilePicture */
class SOAP_CMAC ns1__UserProfilePicture : public ns1__InsightValue
{
public:
	std::string *Blob;	/* optional element of type xsd:string */
	std::string *PhotoSize;	/* optional element of type xsd:string */
	std::string *Url;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 647; } /* = unique type id SOAP_TYPE_ns1__UserProfilePicture */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UserProfilePicture() { ns1__UserProfilePicture::soap_default(NULL); }
	virtual ~ns1__UserProfilePicture() { }
};
#endif

#ifndef SOAP_TYPE_ns1__EducationInsightValue
#define SOAP_TYPE_ns1__EducationInsightValue (648)
/* ns1:EducationInsightValue */
class SOAP_CMAC ns1__EducationInsightValue : public ns1__InsightValue
{
public:
	std::string *Institute;	/* optional element of type xsd:string */
	std::string *Degree;	/* optional element of type xsd:string */
	LONG64 *StartUtcTicks;	/* optional element of type xsd:long */
	LONG64 *EndUtcTicks;	/* optional element of type xsd:long */
public:
	virtual int soap_type() const { return 648; } /* = unique type id SOAP_TYPE_ns1__EducationInsightValue */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__EducationInsightValue() { ns1__EducationInsightValue::soap_default(NULL); }
	virtual ~ns1__EducationInsightValue() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SkillInsightValue
#define SOAP_TYPE_ns1__SkillInsightValue (649)
/* ns1:SkillInsightValue */
class SOAP_CMAC ns1__SkillInsightValue : public ns1__InsightValue
{
public:
	std::string *Name;	/* optional element of type xsd:string */
	int *Strength;	/* optional element of type xsd:int */
public:
	virtual int soap_type() const { return 649; } /* = unique type id SOAP_TYPE_ns1__SkillInsightValue */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SkillInsightValue() { ns1__SkillInsightValue::soap_default(NULL); }
	virtual ~ns1__SkillInsightValue() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SingleValueInsightContent
#define SOAP_TYPE_ns1__SingleValueInsightContent (652)
/* ns1:SingleValueInsightContent */
class SOAP_CMAC ns1__SingleValueInsightContent : public ns1__InsightContent
{
public:
	ns1__InsightValue *Item;	/* optional element of type ns1:InsightValue */
public:
	virtual int soap_type() const { return 652; } /* = unique type id SOAP_TYPE_ns1__SingleValueInsightContent */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SingleValueInsightContent() { ns1__SingleValueInsightContent::soap_default(NULL); }
	virtual ~ns1__SingleValueInsightContent() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MultiValueInsightContent
#define SOAP_TYPE_ns1__MultiValueInsightContent (653)
/* ns1:MultiValueInsightContent */
class SOAP_CMAC ns1__MultiValueInsightContent : public ns1__InsightContent
{
public:
	ns1__ArrayOfInsightValue *ItemList;	/* optional element of type ns1:ArrayOfInsightValue */
public:
	virtual int soap_type() const { return 653; } /* = unique type id SOAP_TYPE_ns1__MultiValueInsightContent */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MultiValueInsightContent() { ns1__MultiValueInsightContent::soap_default(NULL); }
	virtual ~ns1__MultiValueInsightContent() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ComputedInsightValue
#define SOAP_TYPE_ns1__ComputedInsightValue (657)
/* ns1:ComputedInsightValue */
class SOAP_CMAC ns1__ComputedInsightValue : public ns1__InsightValue
{
public:
	ns1__ArrayOfComputedInsightValueProperty *Properties;	/* optional element of type ns1:ArrayOfComputedInsightValueProperty */
public:
	virtual int soap_type() const { return 657; } /* = unique type id SOAP_TYPE_ns1__ComputedInsightValue */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ComputedInsightValue() { ns1__ComputedInsightValue::soap_default(NULL); }
	virtual ~ns1__ComputedInsightValue() { }
};
#endif

#ifndef SOAP_TYPE_ns1__GroupLocatorType
#define SOAP_TYPE_ns1__GroupLocatorType (666)
/* ns1:GroupLocatorType */
class SOAP_CMAC ns1__GroupLocatorType : public ns1__MailboxLocatorType
{
public:
	virtual int soap_type() const { return 666; } /* = unique type id SOAP_TYPE_ns1__GroupLocatorType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__GroupLocatorType() { ns1__GroupLocatorType::soap_default(NULL); }
	virtual ~ns1__GroupLocatorType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UserLocatorType
#define SOAP_TYPE_ns1__UserLocatorType (667)
/* ns1:UserLocatorType */
class SOAP_CMAC ns1__UserLocatorType : public ns1__MailboxLocatorType
{
public:
	virtual int soap_type() const { return 667; } /* = unique type id SOAP_TYPE_ns1__UserLocatorType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UserLocatorType() { ns1__UserLocatorType::soap_default(NULL); }
	virtual ~ns1__UserLocatorType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MimeContentType
#define SOAP_TYPE_ns1__MimeContentType (685)
/* Primitive ns1:MimeContentType schema type: */
class SOAP_CMAC ns1__MimeContentType
{
public:
	std::string __item;
	std::string *CharacterSet;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 685; } /* = unique type id SOAP_TYPE_ns1__MimeContentType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MimeContentType() { ns1__MimeContentType::soap_default(NULL); }
	virtual ~ns1__MimeContentType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MimeContentUTF8Type
#define SOAP_TYPE_ns1__MimeContentUTF8Type (686)
/* Primitive ns1:MimeContentUTF8Type schema type: */
class SOAP_CMAC ns1__MimeContentUTF8Type
{
public:
	std::string __item;
	std::string *CharacterSet;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 686; } /* = unique type id SOAP_TYPE_ns1__MimeContentUTF8Type */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MimeContentUTF8Type() { ns1__MimeContentUTF8Type::soap_default(NULL); }
	virtual ~ns1__MimeContentUTF8Type() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MessageType
#define SOAP_TYPE_ns1__MessageType (687)
/* ns1:MessageType */
class SOAP_CMAC ns1__MessageType : public ns1__ItemType
{
public:
	ns1__SingleRecipientType *Sender;	/* optional element of type ns1:SingleRecipientType */
	ns1__ArrayOfRecipientsType *ToRecipients;	/* optional element of type ns1:ArrayOfRecipientsType */
	ns1__ArrayOfRecipientsType *CcRecipients;	/* optional element of type ns1:ArrayOfRecipientsType */
	ns1__ArrayOfRecipientsType *BccRecipients;	/* optional element of type ns1:ArrayOfRecipientsType */
	bool *IsReadReceiptRequested;	/* optional element of type xsd:boolean */
	bool *IsDeliveryReceiptRequested;	/* optional element of type xsd:boolean */
	xsd__base64Binary *ConversationIndex;	/* optional element of type xsd:base64Binary */
	std::string *ConversationTopic;	/* optional element of type xsd:string */
	ns1__SingleRecipientType *From;	/* optional element of type ns1:SingleRecipientType */
	std::string *InternetMessageId;	/* optional element of type xsd:string */
	bool *IsRead;	/* optional element of type xsd:boolean */
	bool *IsResponseRequested;	/* optional element of type xsd:boolean */
	std::string *References;	/* optional element of type xsd:string */
	ns1__ArrayOfRecipientsType *ReplyTo;	/* optional element of type ns1:ArrayOfRecipientsType */
	ns1__SingleRecipientType *ReceivedBy;	/* optional element of type ns1:SingleRecipientType */
	ns1__SingleRecipientType *ReceivedRepresenting;	/* optional element of type ns1:SingleRecipientType */
	ns1__ApprovalRequestDataType *ApprovalRequestData;	/* optional element of type ns1:ApprovalRequestDataType */
	ns1__VotingInformationType *VotingInformation;	/* optional element of type ns1:VotingInformationType */
	ns1__ReminderMessageDataType *ReminderMessageData;	/* optional element of type ns1:ReminderMessageDataType */
public:
	virtual int soap_type() const { return 687; } /* = unique type id SOAP_TYPE_ns1__MessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MessageType() { ns1__MessageType::soap_default(NULL); }
	virtual ~ns1__MessageType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__TaskType
#define SOAP_TYPE_ns1__TaskType (688)
/* ns1:TaskType */
class SOAP_CMAC ns1__TaskType : public ns1__ItemType
{
public:
	int *ActualWork;	/* optional element of type xsd:int */
	time_t *AssignedTime;	/* optional element of type xsd:dateTime */
	std::string *BillingInformation;	/* optional element of type xsd:string */
	int *ChangeCount;	/* optional element of type xsd:int */
	ns1__ArrayOfStringsType *Companies;	/* optional element of type ns1:ArrayOfStringsType */
	time_t *CompleteDate;	/* optional element of type xsd:dateTime */
	ns1__ArrayOfStringsType *Contacts;	/* optional element of type ns1:ArrayOfStringsType */
	enum ns1__TaskDelegateStateType *DelegationState;	/* optional element of type ns1:TaskDelegateStateType */
	std::string *Delegator;	/* optional element of type xsd:string */
	time_t *DueDate;	/* optional element of type xsd:dateTime */
	int *IsAssignmentEditable;	/* optional element of type xsd:int */
	bool *IsComplete;	/* optional element of type xsd:boolean */
	bool *IsRecurring;	/* optional element of type xsd:boolean */
	bool *IsTeamTask;	/* optional element of type xsd:boolean */
	std::string *Mileage;	/* optional element of type xsd:string */
	std::string *Owner;	/* optional element of type xsd:string */
	double *PercentComplete;	/* optional element of type xsd:double */
	ns1__TaskRecurrenceType *Recurrence;	/* optional element of type ns1:TaskRecurrenceType */
	time_t *StartDate;	/* optional element of type xsd:dateTime */
	enum ns1__TaskStatusType *Status;	/* optional element of type ns1:TaskStatusType */
	std::string *StatusDescription;	/* optional element of type xsd:string */
	int *TotalWork;	/* optional element of type xsd:int */
public:
	virtual int soap_type() const { return 688; } /* = unique type id SOAP_TYPE_ns1__TaskType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__TaskType() { ns1__TaskType::soap_default(NULL); }
	virtual ~ns1__TaskType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PostItemType
#define SOAP_TYPE_ns1__PostItemType (689)
/* ns1:PostItemType */
class SOAP_CMAC ns1__PostItemType : public ns1__ItemType
{
public:
	xsd__base64Binary *ConversationIndex;	/* optional element of type xsd:base64Binary */
	std::string *ConversationTopic;	/* optional element of type xsd:string */
	ns1__SingleRecipientType *From;	/* optional element of type ns1:SingleRecipientType */
	std::string *InternetMessageId;	/* optional element of type xsd:string */
	bool *IsRead;	/* optional element of type xsd:boolean */
	time_t *PostedTime;	/* optional element of type xsd:dateTime */
	std::string *References;	/* optional element of type xsd:string */
	ns1__SingleRecipientType *Sender;	/* optional element of type ns1:SingleRecipientType */
public:
	virtual int soap_type() const { return 689; } /* = unique type id SOAP_TYPE_ns1__PostItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PostItemType() { ns1__PostItemType::soap_default(NULL); }
	virtual ~ns1__PostItemType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__IndexedPageViewType
#define SOAP_TYPE_ns1__IndexedPageViewType (691)
/* ns1:IndexedPageViewType */
class SOAP_CMAC ns1__IndexedPageViewType : public ns1__BasePagingType
{
public:
	int Offset;	/* required attribute */
	enum ns1__IndexBasePointType BasePoint;	/* required attribute */
public:
	virtual int soap_type() const { return 691; } /* = unique type id SOAP_TYPE_ns1__IndexedPageViewType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__IndexedPageViewType() { ns1__IndexedPageViewType::soap_default(NULL); }
	virtual ~ns1__IndexedPageViewType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__FractionalPageViewType
#define SOAP_TYPE_ns1__FractionalPageViewType (692)
/* ns1:FractionalPageViewType */
class SOAP_CMAC ns1__FractionalPageViewType : public ns1__BasePagingType
{
public:
	int Numerator;	/* required attribute */
	int Denominator;	/* required attribute */
public:
	virtual int soap_type() const { return 692; } /* = unique type id SOAP_TYPE_ns1__FractionalPageViewType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__FractionalPageViewType() { ns1__FractionalPageViewType::soap_default(NULL); }
	virtual ~ns1__FractionalPageViewType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SeekToConditionPageViewType
#define SOAP_TYPE_ns1__SeekToConditionPageViewType (693)
/* ns1:SeekToConditionPageViewType */
class SOAP_CMAC ns1__SeekToConditionPageViewType : public ns1__BasePagingType
{
public:
	ns1__RestrictionType *Condition;	/* required element of type ns1:RestrictionType */
	enum ns1__IndexBasePointType BasePoint;	/* required attribute */
public:
	virtual int soap_type() const { return 693; } /* = unique type id SOAP_TYPE_ns1__SeekToConditionPageViewType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SeekToConditionPageViewType() { ns1__SeekToConditionPageViewType::soap_default(NULL); }
	virtual ~ns1__SeekToConditionPageViewType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CalendarViewType
#define SOAP_TYPE_ns1__CalendarViewType (694)
/* ns1:CalendarViewType */
class SOAP_CMAC ns1__CalendarViewType : public ns1__BasePagingType
{
public:
	time_t StartDate;	/* required attribute */
	time_t EndDate;	/* required attribute */
public:
	virtual int soap_type() const { return 694; } /* = unique type id SOAP_TYPE_ns1__CalendarViewType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CalendarViewType() { ns1__CalendarViewType::soap_default(NULL); }
	virtual ~ns1__CalendarViewType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ContactsViewType
#define SOAP_TYPE_ns1__ContactsViewType (695)
/* ns1:ContactsViewType */
class SOAP_CMAC ns1__ContactsViewType : public ns1__BasePagingType
{
public:
	std::string *InitialName;	/* optional attribute */
	std::string *FinalName;	/* optional attribute */
public:
	virtual int soap_type() const { return 695; } /* = unique type id SOAP_TYPE_ns1__ContactsViewType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ContactsViewType() { ns1__ContactsViewType::soap_default(NULL); }
	virtual ~ns1__ContactsViewType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__OccurrenceItemIdType
#define SOAP_TYPE_ns1__OccurrenceItemIdType (704)
/* ns1:OccurrenceItemIdType */
class SOAP_CMAC ns1__OccurrenceItemIdType : public ns1__BaseItemIdType
{
public:
	std::string RecurringMasterId;	/* required attribute */
	std::string *ChangeKey;	/* optional attribute */
	int InstanceIndex;	/* required attribute */
public:
	virtual int soap_type() const { return 704; } /* = unique type id SOAP_TYPE_ns1__OccurrenceItemIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__OccurrenceItemIdType() { ns1__OccurrenceItemIdType::soap_default(NULL); }
	virtual ~ns1__OccurrenceItemIdType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RecurringMasterItemIdType
#define SOAP_TYPE_ns1__RecurringMasterItemIdType (705)
/* ns1:RecurringMasterItemIdType */
class SOAP_CMAC ns1__RecurringMasterItemIdType : public ns1__BaseItemIdType
{
public:
	std::string OccurrenceId;	/* required attribute */
	std::string *ChangeKey;	/* optional attribute */
public:
	virtual int soap_type() const { return 705; } /* = unique type id SOAP_TYPE_ns1__RecurringMasterItemIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RecurringMasterItemIdType() { ns1__RecurringMasterItemIdType::soap_default(NULL); }
	virtual ~ns1__RecurringMasterItemIdType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__IntervalRecurrencePatternBaseType
#define SOAP_TYPE_ns1__IntervalRecurrencePatternBaseType (710)
/* ns1:IntervalRecurrencePatternBaseType */
class SOAP_CMAC ns1__IntervalRecurrencePatternBaseType : public ns1__RecurrencePatternBaseType
{
public:
	int Interval;	/* required element of type xsd:int */
public:
	virtual int soap_type() const { return 710; } /* = unique type id SOAP_TYPE_ns1__IntervalRecurrencePatternBaseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__IntervalRecurrencePatternBaseType() { ns1__IntervalRecurrencePatternBaseType::soap_default(NULL); }
	virtual ~ns1__IntervalRecurrencePatternBaseType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RelativeYearlyRecurrencePatternType
#define SOAP_TYPE_ns1__RelativeYearlyRecurrencePatternType (716)
/* ns1:RelativeYearlyRecurrencePatternType */
class SOAP_CMAC ns1__RelativeYearlyRecurrencePatternType : public ns1__RecurrencePatternBaseType
{
public:
	enum ns1__DayOfWeekType DaysOfWeek;	/* required element of type ns1:DayOfWeekType */
	enum ns1__DayOfWeekIndexType DayOfWeekIndex;	/* required element of type ns1:DayOfWeekIndexType */
	enum ns1__MonthNamesType Month;	/* required element of type ns1:MonthNamesType */
public:
	virtual int soap_type() const { return 716; } /* = unique type id SOAP_TYPE_ns1__RelativeYearlyRecurrencePatternType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RelativeYearlyRecurrencePatternType() { ns1__RelativeYearlyRecurrencePatternType::soap_default(NULL); }
	virtual ~ns1__RelativeYearlyRecurrencePatternType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AbsoluteYearlyRecurrencePatternType
#define SOAP_TYPE_ns1__AbsoluteYearlyRecurrencePatternType (717)
/* ns1:AbsoluteYearlyRecurrencePatternType */
class SOAP_CMAC ns1__AbsoluteYearlyRecurrencePatternType : public ns1__RecurrencePatternBaseType
{
public:
	int DayOfMonth;	/* required element of type xsd:int */
	enum ns1__MonthNamesType Month;	/* required element of type ns1:MonthNamesType */
public:
	virtual int soap_type() const { return 717; } /* = unique type id SOAP_TYPE_ns1__AbsoluteYearlyRecurrencePatternType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AbsoluteYearlyRecurrencePatternType() { ns1__AbsoluteYearlyRecurrencePatternType::soap_default(NULL); }
	virtual ~ns1__AbsoluteYearlyRecurrencePatternType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__TransitionTargetType
#define SOAP_TYPE_ns1__TransitionTargetType (726)
/* Primitive ns1:TransitionTargetType schema type: */
class SOAP_CMAC ns1__TransitionTargetType
{
public:
	std::string __item;
	enum ns1__TransitionTargetKindType Kind;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 726; } /* = unique type id SOAP_TYPE_ns1__TransitionTargetType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__TransitionTargetType() { ns1__TransitionTargetType::soap_default(NULL); }
	virtual ~ns1__TransitionTargetType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AbsoluteDateTransitionType
#define SOAP_TYPE_ns1__AbsoluteDateTransitionType (728)
/* ns1:AbsoluteDateTransitionType */
class SOAP_CMAC ns1__AbsoluteDateTransitionType : public ns1__TransitionType
{
public:
	time_t DateTime;	/* required element of type xsd:dateTime */
public:
	virtual int soap_type() const { return 728; } /* = unique type id SOAP_TYPE_ns1__AbsoluteDateTransitionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AbsoluteDateTransitionType() { ns1__AbsoluteDateTransitionType::soap_default(NULL); }
	virtual ~ns1__AbsoluteDateTransitionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RecurringTimeTransitionType
#define SOAP_TYPE_ns1__RecurringTimeTransitionType (729)
/* ns1:RecurringTimeTransitionType */
class SOAP_CMAC ns1__RecurringTimeTransitionType : public ns1__TransitionType
{
public:
	LONG64 TimeOffset;	/* external */
	int Month;	/* required element of type xsd:int */
public:
	virtual int soap_type() const { return 729; } /* = unique type id SOAP_TYPE_ns1__RecurringTimeTransitionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RecurringTimeTransitionType() { ns1__RecurringTimeTransitionType::soap_default(NULL); }
	virtual ~ns1__RecurringTimeTransitionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NoEndRecurrenceRangeType
#define SOAP_TYPE_ns1__NoEndRecurrenceRangeType (738)
/* ns1:NoEndRecurrenceRangeType */
class SOAP_CMAC ns1__NoEndRecurrenceRangeType : public ns1__RecurrenceRangeBaseType
{
public:
	virtual int soap_type() const { return 738; } /* = unique type id SOAP_TYPE_ns1__NoEndRecurrenceRangeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NoEndRecurrenceRangeType() { ns1__NoEndRecurrenceRangeType::soap_default(NULL); }
	virtual ~ns1__NoEndRecurrenceRangeType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__EndDateRecurrenceRangeType
#define SOAP_TYPE_ns1__EndDateRecurrenceRangeType (739)
/* ns1:EndDateRecurrenceRangeType */
class SOAP_CMAC ns1__EndDateRecurrenceRangeType : public ns1__RecurrenceRangeBaseType
{
public:
	std::string EndDate;	/* required element of type xsd:date */
public:
	virtual int soap_type() const { return 739; } /* = unique type id SOAP_TYPE_ns1__EndDateRecurrenceRangeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__EndDateRecurrenceRangeType() { ns1__EndDateRecurrenceRangeType::soap_default(NULL); }
	virtual ~ns1__EndDateRecurrenceRangeType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NumberedRecurrenceRangeType
#define SOAP_TYPE_ns1__NumberedRecurrenceRangeType (740)
/* ns1:NumberedRecurrenceRangeType */
class SOAP_CMAC ns1__NumberedRecurrenceRangeType : public ns1__RecurrenceRangeBaseType
{
public:
	int NumberOfOccurrences;	/* required element of type xsd:int */
public:
	virtual int soap_type() const { return 740; } /* = unique type id SOAP_TYPE_ns1__NumberedRecurrenceRangeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NumberedRecurrenceRangeType() { ns1__NumberedRecurrenceRangeType::soap_default(NULL); }
	virtual ~ns1__NumberedRecurrenceRangeType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CalendarItemType
#define SOAP_TYPE_ns1__CalendarItemType (747)
/* ns1:CalendarItemType */
class SOAP_CMAC ns1__CalendarItemType : public ns1__ItemType
{
public:
	std::string *UID;	/* optional element of type xsd:string */
	time_t *RecurrenceId;	/* optional element of type xsd:dateTime */
	time_t *DateTimeStamp;	/* optional element of type xsd:dateTime */
	time_t *Start;	/* optional element of type xsd:dateTime */
	time_t *End;	/* optional element of type xsd:dateTime */
	time_t *OriginalStart;	/* optional element of type xsd:dateTime */
	bool *IsAllDayEvent;	/* optional element of type xsd:boolean */
	enum ns1__LegacyFreeBusyType *LegacyFreeBusyStatus;	/* optional element of type ns1:LegacyFreeBusyType */
	std::string *Location;	/* optional element of type xsd:string */
	std::string *When;	/* optional element of type xsd:string */
	bool *IsMeeting;	/* optional element of type xsd:boolean */
	bool *IsCancelled;	/* optional element of type xsd:boolean */
	bool *IsRecurring;	/* optional element of type xsd:boolean */
	bool *MeetingRequestWasSent;	/* optional element of type xsd:boolean */
	bool *IsResponseRequested;	/* optional element of type xsd:boolean */
	enum ns1__CalendarItemTypeType *CalendarItemType;	/* optional element of type ns1:CalendarItemTypeType */
	enum ns1__ResponseTypeType *MyResponseType;	/* optional element of type ns1:ResponseTypeType */
	ns1__SingleRecipientType *Organizer;	/* optional element of type ns1:SingleRecipientType */
	ns1__NonEmptyArrayOfAttendeesType *RequiredAttendees;	/* optional element of type ns1:NonEmptyArrayOfAttendeesType */
	ns1__NonEmptyArrayOfAttendeesType *OptionalAttendees;	/* optional element of type ns1:NonEmptyArrayOfAttendeesType */
	ns1__NonEmptyArrayOfAttendeesType *Resources;	/* optional element of type ns1:NonEmptyArrayOfAttendeesType */
	int *ConflictingMeetingCount;	/* optional element of type xsd:int */
	int *AdjacentMeetingCount;	/* optional element of type xsd:int */
	ns1__NonEmptyArrayOfAllItemsType *ConflictingMeetings;	/* optional element of type ns1:NonEmptyArrayOfAllItemsType */
	ns1__NonEmptyArrayOfAllItemsType *AdjacentMeetings;	/* optional element of type ns1:NonEmptyArrayOfAllItemsType */
	std::string *Duration;	/* optional element of type xsd:string */
	std::string *TimeZone;	/* optional element of type xsd:string */
	time_t *AppointmentReplyTime;	/* optional element of type xsd:dateTime */
	int *AppointmentSequenceNumber;	/* optional element of type xsd:int */
	int *AppointmentState;	/* optional element of type xsd:int */
	ns1__RecurrenceType *Recurrence;	/* optional element of type ns1:RecurrenceType */
	ns1__OccurrenceInfoType *FirstOccurrence;	/* optional element of type ns1:OccurrenceInfoType */
	ns1__OccurrenceInfoType *LastOccurrence;	/* optional element of type ns1:OccurrenceInfoType */
	ns1__NonEmptyArrayOfOccurrenceInfoType *ModifiedOccurrences;	/* optional element of type ns1:NonEmptyArrayOfOccurrenceInfoType */
	ns1__NonEmptyArrayOfDeletedOccurrencesType *DeletedOccurrences;	/* optional element of type ns1:NonEmptyArrayOfDeletedOccurrencesType */
	ns1__TimeZoneType *MeetingTimeZone;	/* optional element of type ns1:TimeZoneType */
	ns1__TimeZoneDefinitionType *StartTimeZone;	/* optional element of type ns1:TimeZoneDefinitionType */
	ns1__TimeZoneDefinitionType *EndTimeZone;	/* optional element of type ns1:TimeZoneDefinitionType */
	int *ConferenceType;	/* optional element of type xsd:int */
	bool *AllowNewTimeProposal;	/* optional element of type xsd:boolean */
	bool *IsOnlineMeeting;	/* optional element of type xsd:boolean */
	std::string *MeetingWorkspaceUrl;	/* optional element of type xsd:string */
	std::string *NetShowUrl;	/* optional element of type xsd:string */
	ns1__EnhancedLocationType *EnhancedLocation;	/* optional element of type ns1:EnhancedLocationType */
	time_t *StartWallClock;	/* optional element of type xsd:dateTime */
	time_t *EndWallClock;	/* optional element of type xsd:dateTime */
	std::string *StartTimeZoneId;	/* optional element of type xsd:string */
	std::string *EndTimeZoneId;	/* optional element of type xsd:string */
	enum ns1__LegacyFreeBusyType *IntendedFreeBusyStatus;	/* optional element of type ns1:LegacyFreeBusyType */
	std::string *JoinOnlineMeetingUrl;	/* optional element of type xsd:string */
	ns1__OnlineMeetingSettingsType *OnlineMeetingSettings;	/* optional element of type ns1:OnlineMeetingSettingsType */
	bool *IsOrganizer;	/* optional element of type xsd:boolean */
public:
	virtual int soap_type() const { return 747; } /* = unique type id SOAP_TYPE_ns1__CalendarItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CalendarItemType() { ns1__CalendarItemType::soap_default(NULL); }
	virtual ~ns1__CalendarItemType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ImAddressDictionaryEntryType
#define SOAP_TYPE_ns1__ImAddressDictionaryEntryType (754)
/* Primitive ns1:ImAddressDictionaryEntryType schema type: */
class SOAP_CMAC ns1__ImAddressDictionaryEntryType
{
public:
	std::string __item;
	enum ns1__ImAddressKeyType Key;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 754; } /* = unique type id SOAP_TYPE_ns1__ImAddressDictionaryEntryType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ImAddressDictionaryEntryType() { ns1__ImAddressDictionaryEntryType::soap_default(NULL); }
	virtual ~ns1__ImAddressDictionaryEntryType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__EmailAddressDictionaryEntryType
#define SOAP_TYPE_ns1__EmailAddressDictionaryEntryType (757)
/* Primitive ns1:EmailAddressDictionaryEntryType schema type: */
class SOAP_CMAC ns1__EmailAddressDictionaryEntryType
{
public:
	std::string __item;
	enum ns1__EmailAddressKeyType Key;	/* required attribute */
	std::string *Name;	/* optional attribute */
	std::string *RoutingType;	/* optional attribute */
	enum ns1__MailboxTypeType *MailboxType;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 757; } /* = unique type id SOAP_TYPE_ns1__EmailAddressDictionaryEntryType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__EmailAddressDictionaryEntryType() { ns1__EmailAddressDictionaryEntryType::soap_default(NULL); }
	virtual ~ns1__EmailAddressDictionaryEntryType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PhoneNumberDictionaryEntryType
#define SOAP_TYPE_ns1__PhoneNumberDictionaryEntryType (758)
/* Primitive ns1:PhoneNumberDictionaryEntryType schema type: */
class SOAP_CMAC ns1__PhoneNumberDictionaryEntryType
{
public:
	std::string __item;
	enum ns1__PhoneNumberKeyType Key;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 758; } /* = unique type id SOAP_TYPE_ns1__PhoneNumberDictionaryEntryType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PhoneNumberDictionaryEntryType() { ns1__PhoneNumberDictionaryEntryType::soap_default(NULL); }
	virtual ~ns1__PhoneNumberDictionaryEntryType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RoleMemberItemType
#define SOAP_TYPE_ns1__RoleMemberItemType (768)
/* ns1:RoleMemberItemType */
class SOAP_CMAC ns1__RoleMemberItemType : public ns1__ItemType
{
public:
	std::string *DisplayName;	/* optional element of type xsd:string */
	enum ns1__RoleMemberTypeType *Type;	/* optional element of type ns1:RoleMemberTypeType */
	std::string *MemberId;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 768; } /* = unique type id SOAP_TYPE_ns1__RoleMemberItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RoleMemberItemType() { ns1__RoleMemberItemType::soap_default(NULL); }
	virtual ~ns1__RoleMemberItemType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NetworkItemType
#define SOAP_TYPE_ns1__NetworkItemType (769)
/* ns1:NetworkItemType */
class SOAP_CMAC ns1__NetworkItemType : public ns1__ItemType
{
public:
	int *DomainId;	/* optional element of type xsd:int */
	std::string *DomainTag;	/* optional element of type xsd:string */
	std::string *UserTileUrl;	/* optional element of type xsd:string */
	std::string *ProfileUrl;	/* optional element of type xsd:string */
	int *Settings;	/* optional element of type xsd:int */
	bool *IsDefault;	/* optional element of type xsd:boolean */
	std::string *AutoLinkError;	/* optional element of type xsd:string */
	std::string *AutoLinkSuccess;	/* optional element of type xsd:string */
	std::string *UserEmail;	/* optional element of type xsd:string */
	std::string *ClientPublishSecret;	/* optional element of type xsd:string */
	std::string *ClientToken;	/* optional element of type xsd:string */
	std::string *ClientToken2;	/* optional element of type xsd:string */
	std::string *ContactSyncError;	/* optional element of type xsd:string */
	std::string *ContactSyncSuccess;	/* optional element of type xsd:string */
	int *ErrorOffers;	/* optional element of type xsd:int */
	std::string *FirstAuthErrorDates;	/* optional element of type xsd:string */
	int *LastVersionSaved;	/* optional element of type xsd:int */
	std::string *LastWelcomeContact;	/* optional element of type xsd:string */
	int *Offers;	/* optional element of type xsd:int */
	time_t *PsaLastChanged;	/* optional element of type xsd:dateTime */
	std::string *RefreshToken2;	/* optional element of type xsd:string */
	std::string *RefreshTokenExpiry2;	/* optional element of type xsd:string */
	std::string *SessionHandle;	/* optional element of type xsd:string */
	int *RejectedOffers;	/* optional element of type xsd:int */
	bool *SyncEnabled;	/* optional element of type xsd:boolean */
	time_t *TokenRefreshLastAttempted;	/* optional element of type xsd:dateTime */
	time_t *TokenRefreshLastCompleted;	/* optional element of type xsd:dateTime */
	std::string *PsaState;	/* optional element of type xsd:string */
	xsd__base64Binary *SourceEntryID;	/* optional element of type xsd:base64Binary */
	std::string *AccountName;	/* optional element of type xsd:string */
	time_t *LastSync;	/* optional element of type xsd:dateTime */
public:
	virtual int soap_type() const { return 769; } /* = unique type id SOAP_TYPE_ns1__NetworkItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NetworkItemType() { ns1__NetworkItemType::soap_default(NULL); }
	virtual ~ns1__NetworkItemType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AbchPersonItemType
#define SOAP_TYPE_ns1__AbchPersonItemType (770)
/* ns1:AbchPersonItemType */
class SOAP_CMAC ns1__AbchPersonItemType : public ns1__ItemType
{
public:
	std::string *AntiLinkInfo;	/* optional element of type xsd:string */
	std::string *PersonId;	/* optional element of type ns1:GuidType */
	ns1__ArrayOfAbchPersonContactHandlesType *ContactHandles;	/* optional element of type ns1:ArrayOfAbchPersonContactHandlesType */
	ns1__ArrayOfStringsType *ContactCategories;	/* optional element of type ns1:ArrayOfStringsType */
	std::string *RelevanceOrder1;	/* optional element of type xsd:string */
	std::string *RelevanceOrder2;	/* optional element of type xsd:string */
	int *TrustLevel;	/* optional element of type xsd:int */
	int *FavoriteOrder;	/* optional element of type xsd:int */
public:
	virtual int soap_type() const { return 770; } /* = unique type id SOAP_TYPE_ns1__AbchPersonItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AbchPersonItemType() { ns1__AbchPersonItemType::soap_default(NULL); }
	virtual ~ns1__AbchPersonItemType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ContactItemType
#define SOAP_TYPE_ns1__ContactItemType (774)
/* ns1:ContactItemType */
class SOAP_CMAC ns1__ContactItemType : public ns1__ItemType
{
public:
	std::string *FileAs;	/* optional element of type xsd:string */
	enum ns1__FileAsMappingType *FileAsMapping;	/* optional element of type ns1:FileAsMappingType */
	std::string *DisplayName;	/* optional element of type xsd:string */
	std::string *GivenName;	/* optional element of type xsd:string */
	std::string *Initials;	/* optional element of type xsd:string */
	std::string *MiddleName;	/* optional element of type xsd:string */
	std::string *Nickname;	/* optional element of type xsd:string */
	ns1__CompleteNameType *CompleteName;	/* optional element of type ns1:CompleteNameType */
	std::string *CompanyName;	/* optional element of type xsd:string */
	ns1__EmailAddressDictionaryType *EmailAddresses;	/* optional element of type ns1:EmailAddressDictionaryType */
	ns1__AbchEmailAddressDictionaryType *AbchEmailAddresses;	/* optional element of type ns1:AbchEmailAddressDictionaryType */
	ns1__PhysicalAddressDictionaryType *PhysicalAddresses;	/* optional element of type ns1:PhysicalAddressDictionaryType */
	ns1__PhoneNumberDictionaryType *PhoneNumbers;	/* optional element of type ns1:PhoneNumberDictionaryType */
	std::string *AssistantName;	/* optional element of type xsd:string */
	time_t *Birthday;	/* optional element of type xsd:dateTime */
	std::string *BusinessHomePage;	/* optional element of type xsd:anyURI */
	ns1__ArrayOfStringsType *Children;	/* optional element of type ns1:ArrayOfStringsType */
	ns1__ArrayOfStringsType *Companies;	/* optional element of type ns1:ArrayOfStringsType */
	enum ns1__ContactSourceType *ContactSource;	/* optional element of type ns1:ContactSourceType */
	std::string *Department;	/* optional element of type xsd:string */
	std::string *Generation;	/* optional element of type xsd:string */
	ns1__ImAddressDictionaryType *ImAddresses;	/* optional element of type ns1:ImAddressDictionaryType */
	std::string *JobTitle;	/* optional element of type xsd:string */
	std::string *Manager;	/* optional element of type xsd:string */
	std::string *Mileage;	/* optional element of type xsd:string */
	std::string *OfficeLocation;	/* optional element of type xsd:string */
	enum ns1__PhysicalAddressIndexType *PostalAddressIndex;	/* optional element of type ns1:PhysicalAddressIndexType */
	std::string *Profession;	/* optional element of type xsd:string */
	std::string *SpouseName;	/* optional element of type xsd:string */
	std::string *Surname;	/* optional element of type xsd:string */
	time_t *WeddingAnniversary;	/* optional element of type xsd:dateTime */
	bool *HasPicture;	/* optional element of type xsd:boolean */
	std::string *PhoneticFullName;	/* optional element of type xsd:string */
	std::string *PhoneticFirstName;	/* optional element of type xsd:string */
	std::string *PhoneticLastName;	/* optional element of type xsd:string */
	std::string *Alias;	/* optional element of type xsd:string */
	std::string *Notes;	/* optional element of type xsd:string */
	xsd__base64Binary *Photo;	/* optional element of type xsd:base64Binary */
	ns1__ArrayOfBinaryType *UserSMIMECertificate;	/* optional element of type ns1:ArrayOfBinaryType */
	ns1__ArrayOfBinaryType *MSExchangeCertificate;	/* optional element of type ns1:ArrayOfBinaryType */
	std::string *DirectoryId;	/* optional element of type xsd:string */
	ns1__SingleRecipientType *ManagerMailbox;	/* optional element of type ns1:SingleRecipientType */
	ns1__ArrayOfRecipientsType *DirectReports;	/* optional element of type ns1:ArrayOfRecipientsType */
	std::string *AccountName;	/* optional element of type xsd:string */
	bool *IsAutoUpdateDisabled;	/* optional element of type xsd:boolean */
	bool *IsMessengerEnabled;	/* optional element of type xsd:boolean */
	std::string *Comment;	/* optional element of type xsd:string */
	int *ContactShortId;	/* optional element of type xsd:int */
	std::string *ContactType;	/* optional element of type xsd:string */
	std::string *Gender;	/* optional element of type xsd:string */
	bool *IsHidden;	/* optional element of type xsd:boolean */
	std::string *ObjectId;	/* optional element of type xsd:string */
	LONG64 *PassportId;	/* optional element of type xsd:long */
	bool *IsPrivate;	/* optional element of type xsd:boolean */
	std::string *SourceId;	/* optional element of type xsd:string */
	int *TrustLevel;	/* optional element of type xsd:int */
	std::string *CreatedBy;	/* optional element of type xsd:string */
	ns1__ContactUrlDictionaryType *Urls;	/* optional element of type ns1:ContactUrlDictionaryType */
	LONG64 *Cid;	/* optional element of type xsd:long */
	std::string *SkypeAuthCertificate;	/* optional element of type xsd:string */
	std::string *SkypeContext;	/* optional element of type xsd:string */
	std::string *SkypeId;	/* optional element of type xsd:string */
	std::string *SkypeRelationship;	/* optional element of type xsd:string */
	std::string *YomiNickname;	/* optional element of type xsd:string */
	std::string *XboxLiveTag;	/* optional element of type xsd:string */
	bool *InviteFree;	/* optional element of type xsd:boolean */
	bool *HidePresenceAndProfile;	/* optional element of type xsd:boolean */
	bool *IsPendingOutbound;	/* optional element of type xsd:boolean */
	bool *SupportGroupFeeds;	/* optional element of type xsd:boolean */
	std::string *UserTileHash;	/* optional element of type xsd:string */
	bool *UnifiedInbox;	/* optional element of type xsd:boolean */
	ns1__ArrayOfStringsType *Mris;	/* optional element of type ns1:ArrayOfStringsType */
	std::string *Wlid;	/* optional element of type xsd:string */
	std::string *AbchContactId;	/* optional element of type ns1:GuidType */
	bool *NotInBirthdayCalendar;	/* optional element of type xsd:boolean */
	std::string *ShellContactType;	/* optional element of type xsd:string */
	std::string *ImMri;	/* optional element of type xsd:string */
	int *PresenceTrustLevel;	/* optional element of type xsd:int */
	std::string *OtherMri;	/* optional element of type xsd:string */
	std::string *ProfileLastChanged;	/* optional element of type xsd:string */
	bool *MobileIMEnabled;	/* optional element of type xsd:boolean */
	std::string *PartnerNetworkProfilePhotoUrl;	/* optional element of type xsd:string */
	std::string *PartnerNetworkThumbnailPhotoUrl;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 774; } /* = unique type id SOAP_TYPE_ns1__ContactItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ContactItemType() { ns1__ContactItemType::soap_default(NULL); }
	virtual ~ns1__ContactItemType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__DistributionListType
#define SOAP_TYPE_ns1__DistributionListType (776)
/* ns1:DistributionListType */
class SOAP_CMAC ns1__DistributionListType : public ns1__ItemType
{
public:
	std::string *DisplayName;	/* optional element of type xsd:string */
	std::string *FileAs;	/* optional element of type xsd:string */
	enum ns1__ContactSourceType *ContactSource;	/* optional element of type ns1:ContactSourceType */
	ns1__MembersListType *Members;	/* optional element of type ns1:MembersListType */
public:
	virtual int soap_type() const { return 776; } /* = unique type id SOAP_TYPE_ns1__DistributionListType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__DistributionListType() { ns1__DistributionListType::soap_default(NULL); }
	virtual ~ns1__DistributionListType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_GroupByType
#define SOAP_TYPE__ns1__union_GroupByType (2324)
/* xsd:choice */
union _ns1__union_GroupByType
{
#define SOAP_UNION__ns1__union_GroupByType_FieldURI	(1)
	ns1__PathToUnindexedFieldType *FieldURI;
#define SOAP_UNION__ns1__union_GroupByType_IndexedFieldURI	(2)
	ns1__PathToIndexedFieldType *IndexedFieldURI;
#define SOAP_UNION__ns1__union_GroupByType_ExtendedFieldURI	(3)
	ns1__PathToExtendedFieldType *ExtendedFieldURI;
};
#endif

#ifndef SOAP_TYPE_ns1__GroupByType
#define SOAP_TYPE_ns1__GroupByType (782)
/* ns1:GroupByType */
class SOAP_CMAC ns1__GroupByType : public ns1__BaseGroupByType
{
public:
	int __union_GroupByType;	/* union discriminant (of union defined below) */
	union _ns1__union_GroupByType union_GroupByType;	/* required element of type xsd:choice */
	ns1__AggregateOnType *AggregateOn;	/* required element of type ns1:AggregateOnType */
public:
	virtual int soap_type() const { return 782; } /* = unique type id SOAP_TYPE_ns1__GroupByType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__GroupByType() { ns1__GroupByType::soap_default(NULL); }
	virtual ~ns1__GroupByType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__DistinguishedGroupByType
#define SOAP_TYPE_ns1__DistinguishedGroupByType (783)
/* ns1:DistinguishedGroupByType */
class SOAP_CMAC ns1__DistinguishedGroupByType : public ns1__BaseGroupByType
{
public:
	enum ns1__StandardGroupByType StandardGroupBy;	/* required element of type ns1:StandardGroupByType */
public:
	virtual int soap_type() const { return 783; } /* = unique type id SOAP_TYPE_ns1__DistinguishedGroupByType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__DistinguishedGroupByType() { ns1__DistinguishedGroupByType::soap_default(NULL); }
	virtual ~ns1__DistinguishedGroupByType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ExistsType
#define SOAP_TYPE__ns1__union_ExistsType (2326)
/* xsd:choice */
union _ns1__union_ExistsType
{
#define SOAP_UNION__ns1__union_ExistsType_FieldURI	(1)
	ns1__PathToUnindexedFieldType *FieldURI;
#define SOAP_UNION__ns1__union_ExistsType_IndexedFieldURI	(2)
	ns1__PathToIndexedFieldType *IndexedFieldURI;
#define SOAP_UNION__ns1__union_ExistsType_ExtendedFieldURI	(3)
	ns1__PathToExtendedFieldType *ExtendedFieldURI;
};
#endif

#ifndef SOAP_TYPE_ns1__ExistsType
#define SOAP_TYPE_ns1__ExistsType (786)
/* ns1:ExistsType */
class SOAP_CMAC ns1__ExistsType : public ns1__SearchExpressionType
{
public:
	int __unionPath;	/* union discriminant (of union defined below) */
	union _ns1__union_ExistsType __union_ExistsType;
public:
	virtual int soap_type() const { return 786; } /* = unique type id SOAP_TYPE_ns1__ExistsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ExistsType() { ns1__ExistsType::soap_default(NULL); }
	virtual ~ns1__ExistsType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_TwoOperandExpressionType
#define SOAP_TYPE__ns1__union_TwoOperandExpressionType (2327)
/* xsd:choice */
union _ns1__union_TwoOperandExpressionType
{
#define SOAP_UNION__ns1__union_TwoOperandExpressionType_FieldURI	(1)
	ns1__PathToUnindexedFieldType *FieldURI;
#define SOAP_UNION__ns1__union_TwoOperandExpressionType_IndexedFieldURI	(2)
	ns1__PathToIndexedFieldType *IndexedFieldURI;
#define SOAP_UNION__ns1__union_TwoOperandExpressionType_ExtendedFieldURI	(3)
	ns1__PathToExtendedFieldType *ExtendedFieldURI;
};
#endif

#ifndef SOAP_TYPE_ns1__TwoOperandExpressionType
#define SOAP_TYPE_ns1__TwoOperandExpressionType (788)
/* ns1:TwoOperandExpressionType */
class SOAP_CMAC ns1__TwoOperandExpressionType : public ns1__SearchExpressionType
{
public:
	int __unionPath;	/* union discriminant (of union defined below) */
	union _ns1__union_TwoOperandExpressionType __union_TwoOperandExpressionType;
	ns1__FieldURIOrConstantType *FieldURIOrConstant;	/* required element of type ns1:FieldURIOrConstantType */
public:
	virtual int soap_type() const { return 788; } /* = unique type id SOAP_TYPE_ns1__TwoOperandExpressionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__TwoOperandExpressionType() { ns1__TwoOperandExpressionType::soap_default(NULL); }
	virtual ~ns1__TwoOperandExpressionType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ExcludesType
#define SOAP_TYPE__ns1__union_ExcludesType (2329)
/* xsd:choice */
union _ns1__union_ExcludesType
{
#define SOAP_UNION__ns1__union_ExcludesType_FieldURI	(1)
	ns1__PathToUnindexedFieldType *FieldURI;
#define SOAP_UNION__ns1__union_ExcludesType_IndexedFieldURI	(2)
	ns1__PathToIndexedFieldType *IndexedFieldURI;
#define SOAP_UNION__ns1__union_ExcludesType_ExtendedFieldURI	(3)
	ns1__PathToExtendedFieldType *ExtendedFieldURI;
};
#endif

#ifndef SOAP_TYPE_ns1__ExcludesType
#define SOAP_TYPE_ns1__ExcludesType (790)
/* ns1:ExcludesType */
class SOAP_CMAC ns1__ExcludesType : public ns1__SearchExpressionType
{
public:
	int __unionPath;	/* union discriminant (of union defined below) */
	union _ns1__union_ExcludesType __union_ExcludesType;
	ns1__ExcludesValueType *Bitmask;	/* required element of type ns1:ExcludesValueType */
public:
	virtual int soap_type() const { return 790; } /* = unique type id SOAP_TYPE_ns1__ExcludesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ExcludesType() { ns1__ExcludesType::soap_default(NULL); }
	virtual ~ns1__ExcludesType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_ContainsExpressionType
#define SOAP_TYPE__ns1__union_ContainsExpressionType (2331)
/* xsd:choice */
union _ns1__union_ContainsExpressionType
{
#define SOAP_UNION__ns1__union_ContainsExpressionType_FieldURI	(1)
	ns1__PathToUnindexedFieldType *FieldURI;
#define SOAP_UNION__ns1__union_ContainsExpressionType_IndexedFieldURI	(2)
	ns1__PathToIndexedFieldType *IndexedFieldURI;
#define SOAP_UNION__ns1__union_ContainsExpressionType_ExtendedFieldURI	(3)
	ns1__PathToExtendedFieldType *ExtendedFieldURI;
};
#endif

#ifndef SOAP_TYPE_ns1__ContainsExpressionType
#define SOAP_TYPE_ns1__ContainsExpressionType (797)
/* ns1:ContainsExpressionType */
class SOAP_CMAC ns1__ContainsExpressionType : public ns1__SearchExpressionType
{
public:
	int __unionPath;	/* union discriminant (of union defined below) */
	union _ns1__union_ContainsExpressionType __union_ContainsExpressionType;
	ns1__ConstantValueType *Constant;	/* required element of type ns1:ConstantValueType */
	enum ns1__ContainmentModeType *ContainmentMode;	/* optional attribute */
	enum ns1__ContainmentComparisonType *ContainmentComparison;	/* optional attribute */
public:
	virtual int soap_type() const { return 797; } /* = unique type id SOAP_TYPE_ns1__ContainsExpressionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ContainsExpressionType() { ns1__ContainsExpressionType::soap_default(NULL); }
	virtual ~ns1__ContainsExpressionType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_NotType
#define SOAP_TYPE__ns1__union_NotType (2334)
/* xsd:choice */
union _ns1__union_NotType
{
#define SOAP_UNION__ns1__union_NotType_Exists	(1)
	ns1__ExistsType *Exists;
#define SOAP_UNION__ns1__union_NotType_Excludes	(2)
	ns1__ExcludesType *Excludes;
#define SOAP_UNION__ns1__union_NotType_IsEqualTo	(3)
	ns1__IsEqualToType *IsEqualTo;
#define SOAP_UNION__ns1__union_NotType_IsNotEqualTo	(4)
	ns1__IsNotEqualToType *IsNotEqualTo;
#define SOAP_UNION__ns1__union_NotType_IsGreaterThan	(5)
	ns1__IsGreaterThanType *IsGreaterThan;
#define SOAP_UNION__ns1__union_NotType_IsGreaterThanOrEqualTo	(6)
	ns1__IsGreaterThanOrEqualToType *IsGreaterThanOrEqualTo;
#define SOAP_UNION__ns1__union_NotType_IsLessThan	(7)
	ns1__IsLessThanType *IsLessThan;
#define SOAP_UNION__ns1__union_NotType_IsLessThanOrEqualTo	(8)
	ns1__IsLessThanOrEqualToType *IsLessThanOrEqualTo;
#define SOAP_UNION__ns1__union_NotType_Contains	(9)
	ns1__ContainsExpressionType *Contains;
#define SOAP_UNION__ns1__union_NotType_Not	(10)
	ns1__NotType *Not;
#define SOAP_UNION__ns1__union_NotType_And	(11)
	ns1__AndType *And;
#define SOAP_UNION__ns1__union_NotType_Or	(12)
	ns1__OrType *Or;
};
#endif

#ifndef SOAP_TYPE_ns1__NotType
#define SOAP_TYPE_ns1__NotType (798)
/* ns1:NotType */
class SOAP_CMAC ns1__NotType : public ns1__SearchExpressionType
{
public:
	int __unionSearchExpression;	/* union discriminant (of union defined below) */
	union _ns1__union_NotType __union_NotType;
public:
	virtual int soap_type() const { return 798; } /* = unique type id SOAP_TYPE_ns1__NotType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NotType() { ns1__NotType::soap_default(NULL); }
	virtual ~ns1__NotType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_MultipleOperandBooleanExpressionType
#define SOAP_TYPE__ns1__union_MultipleOperandBooleanExpressionType (2336)
/* xsd:choice */
union _ns1__union_MultipleOperandBooleanExpressionType
{
#define SOAP_UNION__ns1__union_MultipleOperandBooleanExpressionType_Exists	(1)
	ns1__ExistsType *Exists;
#define SOAP_UNION__ns1__union_MultipleOperandBooleanExpressionType_Excludes	(2)
	ns1__ExcludesType *Excludes;
#define SOAP_UNION__ns1__union_MultipleOperandBooleanExpressionType_IsEqualTo	(3)
	ns1__IsEqualToType *IsEqualTo;
#define SOAP_UNION__ns1__union_MultipleOperandBooleanExpressionType_IsNotEqualTo	(4)
	ns1__IsNotEqualToType *IsNotEqualTo;
#define SOAP_UNION__ns1__union_MultipleOperandBooleanExpressionType_IsGreaterThan	(5)
	ns1__IsGreaterThanType *IsGreaterThan;
#define SOAP_UNION__ns1__union_MultipleOperandBooleanExpressionType_IsGreaterThanOrEqualTo	(6)
	ns1__IsGreaterThanOrEqualToType *IsGreaterThanOrEqualTo;
#define SOAP_UNION__ns1__union_MultipleOperandBooleanExpressionType_IsLessThan	(7)
	ns1__IsLessThanType *IsLessThan;
#define SOAP_UNION__ns1__union_MultipleOperandBooleanExpressionType_IsLessThanOrEqualTo	(8)
	ns1__IsLessThanOrEqualToType *IsLessThanOrEqualTo;
#define SOAP_UNION__ns1__union_MultipleOperandBooleanExpressionType_Contains	(9)
	ns1__ContainsExpressionType *Contains;
#define SOAP_UNION__ns1__union_MultipleOperandBooleanExpressionType_Not	(10)
	ns1__NotType *Not;
#define SOAP_UNION__ns1__union_MultipleOperandBooleanExpressionType_And	(11)
	ns1__AndType *And;
#define SOAP_UNION__ns1__union_MultipleOperandBooleanExpressionType_Or	(12)
	ns1__OrType *Or;
};
#endif

#ifndef SOAP_TYPE___ns1__union_MultipleOperandBooleanExpressionType
#define SOAP_TYPE___ns1__union_MultipleOperandBooleanExpressionType (2335)
/* Operation wrapper: */
class SOAP_CMAC __ns1__union_MultipleOperandBooleanExpressionType
{
public:
	int __unionSearchExpression;	/* union discriminant (of union defined below) */
	union _ns1__union_MultipleOperandBooleanExpressionType __union_MultipleOperandBooleanExpressionType;
public:
	virtual int soap_type() const { return 2335; } /* = unique type id SOAP_TYPE___ns1__union_MultipleOperandBooleanExpressionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         __ns1__union_MultipleOperandBooleanExpressionType() { __ns1__union_MultipleOperandBooleanExpressionType::soap_default(NULL); }
	virtual ~__ns1__union_MultipleOperandBooleanExpressionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MultipleOperandBooleanExpressionType
#define SOAP_TYPE_ns1__MultipleOperandBooleanExpressionType (799)
/* ns1:MultipleOperandBooleanExpressionType */
class SOAP_CMAC ns1__MultipleOperandBooleanExpressionType : public ns1__SearchExpressionType
{
public:
	int __sizeSearchExpression;	/* sequence of elements <-union-MultipleOperandBooleanExpressionType> */
	__ns1__union_MultipleOperandBooleanExpressionType *__union_MultipleOperandBooleanExpressionType;
public:
	virtual int soap_type() const { return 799; } /* = unique type id SOAP_TYPE_ns1__MultipleOperandBooleanExpressionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MultipleOperandBooleanExpressionType() { ns1__MultipleOperandBooleanExpressionType::soap_default(NULL); }
	virtual ~ns1__MultipleOperandBooleanExpressionType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_BaseObjectChangedEventType
#define SOAP_TYPE__ns1__union_BaseObjectChangedEventType (2338)
/* xsd:choice */
union _ns1__union_BaseObjectChangedEventType
{
#define SOAP_UNION__ns1__union_BaseObjectChangedEventType_FolderId	(1)
	ns1__FolderIdType *FolderId;
#define SOAP_UNION__ns1__union_BaseObjectChangedEventType_ItemId	(2)
	ns1__ItemIdType *ItemId;
};
#endif

#ifndef SOAP_TYPE_ns1__BaseObjectChangedEventType
#define SOAP_TYPE_ns1__BaseObjectChangedEventType (807)
/* ns1:BaseObjectChangedEventType */
class SOAP_CMAC ns1__BaseObjectChangedEventType : public ns1__BaseNotificationEventType
{
public:
	time_t TimeStamp;	/* required element of type xsd:dateTime */
	int __union_BaseObjectChangedEventType;	/* union discriminant (of union defined below) */
	union _ns1__union_BaseObjectChangedEventType union_BaseObjectChangedEventType;	/* required element of type xsd:choice */
	ns1__FolderIdType *ParentFolderId;	/* required element of type ns1:FolderIdType */
public:
	virtual int soap_type() const { return 807; } /* = unique type id SOAP_TYPE_ns1__BaseObjectChangedEventType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__BaseObjectChangedEventType() { ns1__BaseObjectChangedEventType::soap_default(NULL); }
	virtual ~ns1__BaseObjectChangedEventType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PushSubscriptionRequestType
#define SOAP_TYPE_ns1__PushSubscriptionRequestType (813)
/* ns1:PushSubscriptionRequestType */
class SOAP_CMAC ns1__PushSubscriptionRequestType : public ns1__BaseSubscriptionRequestType
{
public:
	int StatusFrequency;	/* required element of type ns1:SubscriptionStatusFrequencyType */
	std::string URL;	/* required element of type xsd:string */
	std::string *CallerData;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 813; } /* = unique type id SOAP_TYPE_ns1__PushSubscriptionRequestType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PushSubscriptionRequestType() { ns1__PushSubscriptionRequestType::soap_default(NULL); }
	virtual ~ns1__PushSubscriptionRequestType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PullSubscriptionRequestType
#define SOAP_TYPE_ns1__PullSubscriptionRequestType (814)
/* ns1:PullSubscriptionRequestType */
class SOAP_CMAC ns1__PullSubscriptionRequestType : public ns1__BaseSubscriptionRequestType
{
public:
	int Timeout;	/* required element of type ns1:SubscriptionTimeoutType */
public:
	virtual int soap_type() const { return 814; } /* = unique type id SOAP_TYPE_ns1__PullSubscriptionRequestType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PullSubscriptionRequestType() { ns1__PullSubscriptionRequestType::soap_default(NULL); }
	virtual ~ns1__PullSubscriptionRequestType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UnifiedGroupUnseenChangedChannelSubscriptionType
#define SOAP_TYPE_ns1__UnifiedGroupUnseenChangedChannelSubscriptionType (820)
/* ns1:UnifiedGroupUnseenChangedChannelSubscriptionType */
class SOAP_CMAC ns1__UnifiedGroupUnseenChangedChannelSubscriptionType : public ns1__ChannelSubscriptionBaseType
{
public:
	ns1__UnifiedGroupIdentity *GroupIdentity;	/* required element of type ns1:UnifiedGroupIdentity */
public:
	virtual int soap_type() const { return 820; } /* = unique type id SOAP_TYPE_ns1__UnifiedGroupUnseenChangedChannelSubscriptionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UnifiedGroupUnseenChangedChannelSubscriptionType() { ns1__UnifiedGroupUnseenChangedChannelSubscriptionType::soap_default(NULL); }
	virtual ~ns1__UnifiedGroupUnseenChangedChannelSubscriptionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UnifiedGroupContentChangedChannelSubscriptionType
#define SOAP_TYPE_ns1__UnifiedGroupContentChangedChannelSubscriptionType (821)
/* ns1:UnifiedGroupContentChangedChannelSubscriptionType */
class SOAP_CMAC ns1__UnifiedGroupContentChangedChannelSubscriptionType : public ns1__ChannelSubscriptionBaseType
{
public:
	ns1__UnifiedGroupIdentity *GroupIdentity;	/* required element of type ns1:UnifiedGroupIdentity */
public:
	virtual int soap_type() const { return 821; } /* = unique type id SOAP_TYPE_ns1__UnifiedGroupContentChangedChannelSubscriptionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UnifiedGroupContentChangedChannelSubscriptionType() { ns1__UnifiedGroupContentChangedChannelSubscriptionType::soap_default(NULL); }
	virtual ~ns1__UnifiedGroupContentChangedChannelSubscriptionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UserMembershipChangedChannelSubscriptionType
#define SOAP_TYPE_ns1__UserMembershipChangedChannelSubscriptionType (822)
/* ns1:UserMembershipChangedChannelSubscriptionType */
class SOAP_CMAC ns1__UserMembershipChangedChannelSubscriptionType : public ns1__ChannelSubscriptionBaseType
{
public:
	std::string *UserSmtpAddress;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 822; } /* = unique type id SOAP_TYPE_ns1__UserMembershipChangedChannelSubscriptionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UserMembershipChangedChannelSubscriptionType() { ns1__UserMembershipChangedChannelSubscriptionType::soap_default(NULL); }
	virtual ~ns1__UserMembershipChangedChannelSubscriptionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NewSocialActivityAddedSubscriptionType
#define SOAP_TYPE_ns1__NewSocialActivityAddedSubscriptionType (823)
/* ns1:NewSocialActivityAddedSubscriptionType */
class SOAP_CMAC ns1__NewSocialActivityAddedSubscriptionType : public ns1__ChannelSubscriptionBaseType
{
public:
	virtual int soap_type() const { return 823; } /* = unique type id SOAP_TYPE_ns1__NewSocialActivityAddedSubscriptionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NewSocialActivityAddedSubscriptionType() { ns1__NewSocialActivityAddedSubscriptionType::soap_default(NULL); }
	virtual ~ns1__NewSocialActivityAddedSubscriptionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ChannelStatusEventType
#define SOAP_TYPE_ns1__ChannelStatusEventType (826)
/* ns1:ChannelStatusEventType */
class SOAP_CMAC ns1__ChannelStatusEventType : public ns1__ChannelEventType
{
public:
	bool IsNew;	/* required element of type xsd:boolean */
public:
	virtual int soap_type() const { return 826; } /* = unique type id SOAP_TYPE_ns1__ChannelStatusEventType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ChannelStatusEventType() { ns1__ChannelStatusEventType::soap_default(NULL); }
	virtual ~ns1__ChannelStatusEventType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ChannelEventDroppedChannelEventType
#define SOAP_TYPE_ns1__ChannelEventDroppedChannelEventType (827)
/* ns1:ChannelEventDroppedChannelEventType */
class SOAP_CMAC ns1__ChannelEventDroppedChannelEventType : public ns1__ChannelEventType
{
public:
	virtual int soap_type() const { return 827; } /* = unique type id SOAP_TYPE_ns1__ChannelEventDroppedChannelEventType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ChannelEventDroppedChannelEventType() { ns1__ChannelEventDroppedChannelEventType::soap_default(NULL); }
	virtual ~ns1__ChannelEventDroppedChannelEventType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SubscriptionLevelChannelEventType
#define SOAP_TYPE_ns1__SubscriptionLevelChannelEventType (828)
/* ns1:SubscriptionLevelChannelEventType */
class SOAP_CMAC ns1__SubscriptionLevelChannelEventType : public ns1__ChannelEventType
{
public:
	std::string SubscriptionId;	/* required element of type ns1:SubscriptionIdType */
	LONG64 SequenceNumber;	/* required element of type xsd:long */
	LONG64 *ActionDelay;	/* optional element of type xsd:duration */
public:
	virtual int soap_type() const { return 828; } /* = unique type id SOAP_TYPE_ns1__SubscriptionLevelChannelEventType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SubscriptionLevelChannelEventType() { ns1__SubscriptionLevelChannelEventType::soap_default(NULL); }
	virtual ~ns1__SubscriptionLevelChannelEventType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UnknownAttendeeConflictData
#define SOAP_TYPE_ns1__UnknownAttendeeConflictData (861)
/* ns1:UnknownAttendeeConflictData */
class SOAP_CMAC ns1__UnknownAttendeeConflictData : public ns1__AttendeeConflictData
{
public:
	virtual int soap_type() const { return 861; } /* = unique type id SOAP_TYPE_ns1__UnknownAttendeeConflictData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UnknownAttendeeConflictData() { ns1__UnknownAttendeeConflictData::soap_default(NULL); }
	virtual ~ns1__UnknownAttendeeConflictData() { }
};
#endif

#ifndef SOAP_TYPE_ns1__TooBigGroupAttendeeConflictData
#define SOAP_TYPE_ns1__TooBigGroupAttendeeConflictData (862)
/* ns1:TooBigGroupAttendeeConflictData */
class SOAP_CMAC ns1__TooBigGroupAttendeeConflictData : public ns1__AttendeeConflictData
{
public:
	virtual int soap_type() const { return 862; } /* = unique type id SOAP_TYPE_ns1__TooBigGroupAttendeeConflictData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__TooBigGroupAttendeeConflictData() { ns1__TooBigGroupAttendeeConflictData::soap_default(NULL); }
	virtual ~ns1__TooBigGroupAttendeeConflictData() { }
};
#endif

#ifndef SOAP_TYPE_ns1__IndividualAttendeeConflictData
#define SOAP_TYPE_ns1__IndividualAttendeeConflictData (863)
/* ns1:IndividualAttendeeConflictData */
class SOAP_CMAC ns1__IndividualAttendeeConflictData : public ns1__AttendeeConflictData
{
public:
	enum ns1__LegacyFreeBusyType BusyType;	/* required element of type ns1:LegacyFreeBusyType */
public:
	virtual int soap_type() const { return 863; } /* = unique type id SOAP_TYPE_ns1__IndividualAttendeeConflictData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__IndividualAttendeeConflictData() { ns1__IndividualAttendeeConflictData::soap_default(NULL); }
	virtual ~ns1__IndividualAttendeeConflictData() { }
};
#endif

#ifndef SOAP_TYPE_ns1__GroupAttendeeConflictData
#define SOAP_TYPE_ns1__GroupAttendeeConflictData (864)
/* ns1:GroupAttendeeConflictData */
class SOAP_CMAC ns1__GroupAttendeeConflictData : public ns1__AttendeeConflictData
{
public:
	int NumberOfMembers;	/* required element of type xsd:int */
	int NumberOfMembersAvailable;	/* required element of type xsd:int */
	int NumberOfMembersWithConflict;	/* required element of type xsd:int */
	int NumberOfMembersWithNoData;	/* required element of type xsd:int */
public:
	virtual int soap_type() const { return 864; } /* = unique type id SOAP_TYPE_ns1__GroupAttendeeConflictData */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__GroupAttendeeConflictData() { ns1__GroupAttendeeConflictData::soap_default(NULL); }
	virtual ~ns1__GroupAttendeeConflictData() { }
};
#endif

#ifndef SOAP_TYPE_ns1__Value
#define SOAP_TYPE_ns1__Value (871)
/* Primitive ns1:Value schema type: */
class SOAP_CMAC ns1__Value
{
public:
	std::string __item;
	std::string Name;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 871; } /* = unique type id SOAP_TYPE_ns1__Value */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__Value() { ns1__Value::soap_default(NULL); }
	virtual ~ns1__Value() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AlternateIdType
#define SOAP_TYPE_ns1__AlternateIdType (878)
/* ns1:AlternateIdType */
class SOAP_CMAC ns1__AlternateIdType : public ns1__AlternateIdBaseType
{
public:
	std::string Id;	/* required attribute */
	std::string Mailbox;	/* required attribute */
	bool *IsArchive;	/* optional attribute */
public:
	virtual int soap_type() const { return 878; } /* = unique type id SOAP_TYPE_ns1__AlternateIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AlternateIdType() { ns1__AlternateIdType::soap_default(NULL); }
	virtual ~ns1__AlternateIdType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AlternatePublicFolderIdType
#define SOAP_TYPE_ns1__AlternatePublicFolderIdType (879)
/* ns1:AlternatePublicFolderIdType */
class SOAP_CMAC ns1__AlternatePublicFolderIdType : public ns1__AlternateIdBaseType
{
public:
	std::string FolderId;	/* required attribute */
public:
	virtual int soap_type() const { return 879; } /* = unique type id SOAP_TYPE_ns1__AlternatePublicFolderIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AlternatePublicFolderIdType() { ns1__AlternatePublicFolderIdType::soap_default(NULL); }
	virtual ~ns1__AlternatePublicFolderIdType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PermissionType
#define SOAP_TYPE_ns1__PermissionType (887)
/* ns1:PermissionType */
class SOAP_CMAC ns1__PermissionType : public ns1__BasePermissionType
{
public:
	enum ns1__PermissionReadAccessType *ReadItems;	/* optional element of type ns1:PermissionReadAccessType */
	enum ns1__PermissionLevelType PermissionLevel;	/* required element of type ns1:PermissionLevelType */
public:
	virtual int soap_type() const { return 887; } /* = unique type id SOAP_TYPE_ns1__PermissionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PermissionType() { ns1__PermissionType::soap_default(NULL); }
	virtual ~ns1__PermissionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CalendarPermissionType
#define SOAP_TYPE_ns1__CalendarPermissionType (888)
/* ns1:CalendarPermissionType */
class SOAP_CMAC ns1__CalendarPermissionType : public ns1__BasePermissionType
{
public:
	enum ns1__CalendarPermissionReadAccessType *ReadItems;	/* optional element of type ns1:CalendarPermissionReadAccessType */
	enum ns1__CalendarPermissionLevelType CalendarPermissionLevel;	/* required element of type ns1:CalendarPermissionLevelType */
public:
	virtual int soap_type() const { return 888; } /* = unique type id SOAP_TYPE_ns1__CalendarPermissionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CalendarPermissionType() { ns1__CalendarPermissionType::soap_default(NULL); }
	virtual ~ns1__CalendarPermissionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MailTipsServiceConfiguration
#define SOAP_TYPE_ns1__MailTipsServiceConfiguration (902)
/* ns1:MailTipsServiceConfiguration */
class SOAP_CMAC ns1__MailTipsServiceConfiguration : public ns1__ServiceConfiguration
{
public:
	bool MailTipsEnabled;	/* required element of type xsd:boolean */
	int MaxRecipientsPerGetMailTipsRequest;	/* required element of type xsd:int */
	int MaxMessageSize;	/* required element of type xsd:int */
	int LargeAudienceThreshold;	/* required element of type xsd:int */
	bool ShowExternalRecipientCount;	/* required element of type xsd:boolean */
	ns1__SmtpDomainList *InternalDomains;	/* required element of type ns1:SmtpDomainList */
	bool PolicyTipsEnabled;	/* required element of type xsd:boolean */
	int LargeAudienceCap;	/* required element of type xsd:int */
public:
	virtual int soap_type() const { return 902; } /* = unique type id SOAP_TYPE_ns1__MailTipsServiceConfiguration */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MailTipsServiceConfiguration() { ns1__MailTipsServiceConfiguration::soap_default(NULL); }
	virtual ~ns1__MailTipsServiceConfiguration() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UnifiedMessageServiceConfiguration
#define SOAP_TYPE_ns1__UnifiedMessageServiceConfiguration (903)
/* ns1:UnifiedMessageServiceConfiguration */
class SOAP_CMAC ns1__UnifiedMessageServiceConfiguration : public ns1__ServiceConfiguration
{
public:
	bool UmEnabled;	/* required element of type xsd:boolean */
	std::string PlayOnPhoneDialString;	/* required element of type xsd:string */
	bool PlayOnPhoneEnabled;	/* required element of type xsd:boolean */
public:
	virtual int soap_type() const { return 903; } /* = unique type id SOAP_TYPE_ns1__UnifiedMessageServiceConfiguration */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UnifiedMessageServiceConfiguration() { ns1__UnifiedMessageServiceConfiguration::soap_default(NULL); }
	virtual ~ns1__UnifiedMessageServiceConfiguration() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UserConfigurationNameType
#define SOAP_TYPE_ns1__UserConfigurationNameType (914)
/* ns1:UserConfigurationNameType */
class SOAP_CMAC ns1__UserConfigurationNameType : public ns1__TargetFolderIdType
{
public:
	std::string Name;	/* required attribute */
public:
	virtual int soap_type() const { return 914; } /* = unique type id SOAP_TYPE_ns1__UserConfigurationNameType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UserConfigurationNameType() { ns1__UserConfigurationNameType::soap_default(NULL); }
	virtual ~ns1__UserConfigurationNameType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ProtectionRulesServiceConfiguration
#define SOAP_TYPE_ns1__ProtectionRulesServiceConfiguration (919)
/* ns1:ProtectionRulesServiceConfiguration */
class SOAP_CMAC ns1__ProtectionRulesServiceConfiguration : public ns1__ServiceConfiguration
{
public:
	ns1__ArrayOfProtectionRulesType *Rules;	/* required element of type ns1:ArrayOfProtectionRulesType */
	ns1__SmtpDomainList *InternalDomains;	/* required element of type ns1:SmtpDomainList */
	int RefreshInterval;	/* required attribute */
public:
	virtual int soap_type() const { return 919; } /* = unique type id SOAP_TYPE_ns1__ProtectionRulesServiceConfiguration */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ProtectionRulesServiceConfiguration() { ns1__ProtectionRulesServiceConfiguration::soap_default(NULL); }
	virtual ~ns1__ProtectionRulesServiceConfiguration() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CreateRuleOperationType
#define SOAP_TYPE_ns1__CreateRuleOperationType (948)
/* ns1:CreateRuleOperationType */
class SOAP_CMAC ns1__CreateRuleOperationType : public ns1__RuleOperationType
{
public:
	ns1__RuleType *Rule;	/* required element of type ns1:RuleType */
public:
	virtual int soap_type() const { return 948; } /* = unique type id SOAP_TYPE_ns1__CreateRuleOperationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CreateRuleOperationType() { ns1__CreateRuleOperationType::soap_default(NULL); }
	virtual ~ns1__CreateRuleOperationType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SetRuleOperationType
#define SOAP_TYPE_ns1__SetRuleOperationType (949)
/* ns1:SetRuleOperationType */
class SOAP_CMAC ns1__SetRuleOperationType : public ns1__RuleOperationType
{
public:
	ns1__RuleType *Rule;	/* required element of type ns1:RuleType */
public:
	virtual int soap_type() const { return 949; } /* = unique type id SOAP_TYPE_ns1__SetRuleOperationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SetRuleOperationType() { ns1__SetRuleOperationType::soap_default(NULL); }
	virtual ~ns1__SetRuleOperationType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__DeleteRuleOperationType
#define SOAP_TYPE_ns1__DeleteRuleOperationType (950)
/* ns1:DeleteRuleOperationType */
class SOAP_CMAC ns1__DeleteRuleOperationType : public ns1__RuleOperationType
{
public:
	std::string RuleId;	/* required element of type xsd:string */
public:
	virtual int soap_type() const { return 950; } /* = unique type id SOAP_TYPE_ns1__DeleteRuleOperationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__DeleteRuleOperationType() { ns1__DeleteRuleOperationType::soap_default(NULL); }
	virtual ~ns1__DeleteRuleOperationType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__OneDriveItemType
#define SOAP_TYPE_ns1__OneDriveItemType (977)
/* ns1:OneDriveItemType */
class SOAP_CMAC ns1__OneDriveItemType : public ns1__ItemType
{
public:
	std::string ResourceId;	/* required element of type xsd:string */
public:
	virtual int soap_type() const { return 977; } /* = unique type id SOAP_TYPE_ns1__OneDriveItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__OneDriveItemType() { ns1__OneDriveItemType::soap_default(NULL); }
	virtual ~ns1__OneDriveItemType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__DeletedOccurrenceStateDefinitionType
#define SOAP_TYPE_ns1__DeletedOccurrenceStateDefinitionType (1015)
/* ns1:DeletedOccurrenceStateDefinitionType */
class SOAP_CMAC ns1__DeletedOccurrenceStateDefinitionType : public ns1__BaseCalendarItemStateDefinitionType
{
public:
	time_t OccurrenceDate;	/* required element of type xsd:dateTime */
	bool *IsOccurrencePresent;	/* optional element of type xsd:boolean */
public:
	virtual int soap_type() const { return 1015; } /* = unique type id SOAP_TYPE_ns1__DeletedOccurrenceStateDefinitionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__DeletedOccurrenceStateDefinitionType() { ns1__DeletedOccurrenceStateDefinitionType::soap_default(NULL); }
	virtual ~ns1__DeletedOccurrenceStateDefinitionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__DeleteFromFolderStateDefinitionType
#define SOAP_TYPE_ns1__DeleteFromFolderStateDefinitionType (1016)
/* ns1:DeleteFromFolderStateDefinitionType */
class SOAP_CMAC ns1__DeleteFromFolderStateDefinitionType : public ns1__BaseCalendarItemStateDefinitionType
{
public:
	virtual int soap_type() const { return 1016; } /* = unique type id SOAP_TYPE_ns1__DeleteFromFolderStateDefinitionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__DeleteFromFolderStateDefinitionType() { ns1__DeleteFromFolderStateDefinitionType::soap_default(NULL); }
	virtual ~ns1__DeleteFromFolderStateDefinitionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__LocationBasedStateDefinitionType
#define SOAP_TYPE_ns1__LocationBasedStateDefinitionType (1017)
/* ns1:LocationBasedStateDefinitionType */
class SOAP_CMAC ns1__LocationBasedStateDefinitionType : public ns1__BaseCalendarItemStateDefinitionType
{
public:
	std::string OrganizerLocation;	/* required element of type xsd:string */
	std::string AttendeeLocation;	/* required element of type xsd:string */
public:
	virtual int soap_type() const { return 1017; } /* = unique type id SOAP_TYPE_ns1__LocationBasedStateDefinitionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__LocationBasedStateDefinitionType() { ns1__LocationBasedStateDefinitionType::soap_default(NULL); }
	virtual ~ns1__LocationBasedStateDefinitionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ConsumerCalendarIdType
#define SOAP_TYPE_ns1__ConsumerCalendarIdType (1029)
/* ns1:ConsumerCalendarIdType */
class SOAP_CMAC ns1__ConsumerCalendarIdType : public ns1__BaseFolderIdType
{
public:
	LONG64 OwnerPuid;	/* required attribute */
	LONG64 *OwnerCid;	/* optional attribute */
	std::string CalendarGuid;	/* required attribute */
public:
	virtual int soap_type() const { return 1029; } /* = unique type id SOAP_TYPE_ns1__ConsumerCalendarIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ConsumerCalendarIdType() { ns1__ConsumerCalendarIdType::soap_default(NULL); }
	virtual ~ns1__ConsumerCalendarIdType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PeopleSuggestionType
#define SOAP_TYPE_ns1__PeopleSuggestionType (1043)
/* ns1:PeopleSuggestionType */
class SOAP_CMAC ns1__PeopleSuggestionType : public ns1__SuggestionType
{
public:
	std::string PrimarySmtpAddress;	/* required element of type xsd:string */
	std::string *PersonType;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 1043; } /* = unique type id SOAP_TYPE_ns1__PeopleSuggestionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PeopleSuggestionType() { ns1__PeopleSuggestionType::soap_default(NULL); }
	virtual ~ns1__PeopleSuggestionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__FolderRefinerType
#define SOAP_TYPE_ns1__FolderRefinerType (1047)
/* ns1:FolderRefinerType */
class SOAP_CMAC ns1__FolderRefinerType : public ns1__SearchRefinerType
{
public:
	virtual int soap_type() const { return 1047; } /* = unique type id SOAP_TYPE_ns1__FolderRefinerType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__FolderRefinerType() { ns1__FolderRefinerType::soap_default(NULL); }
	virtual ~ns1__FolderRefinerType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PeopleRefinerType
#define SOAP_TYPE_ns1__PeopleRefinerType (1048)
/* ns1:PeopleRefinerType */
class SOAP_CMAC ns1__PeopleRefinerType : public ns1__SearchRefinerType
{
public:
	virtual int soap_type() const { return 1048; } /* = unique type id SOAP_TYPE_ns1__PeopleRefinerType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PeopleRefinerType() { ns1__PeopleRefinerType::soap_default(NULL); }
	virtual ~ns1__PeopleRefinerType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MailboxRefinerType
#define SOAP_TYPE_ns1__MailboxRefinerType (1049)
/* ns1:MailboxRefinerType */
class SOAP_CMAC ns1__MailboxRefinerType : public ns1__SearchRefinerType
{
public:
	virtual int soap_type() const { return 1049; } /* = unique type id SOAP_TYPE_ns1__MailboxRefinerType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MailboxRefinerType() { ns1__MailboxRefinerType::soap_default(NULL); }
	virtual ~ns1__MailboxRefinerType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AttachmentRefinerType
#define SOAP_TYPE_ns1__AttachmentRefinerType (1050)
/* ns1:AttachmentRefinerType */
class SOAP_CMAC ns1__AttachmentRefinerType : public ns1__SearchRefinerType
{
public:
	virtual int soap_type() const { return 1050; } /* = unique type id SOAP_TYPE_ns1__AttachmentRefinerType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AttachmentRefinerType() { ns1__AttachmentRefinerType::soap_default(NULL); }
	virtual ~ns1__AttachmentRefinerType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UnifiedGroupType
#define SOAP_TYPE_ns1__UnifiedGroupType (1056)
/* ns1:UnifiedGroupType */
class SOAP_CMAC ns1__UnifiedGroupType : public ns1__UnifiedGroupBaseType
{
public:
	bool *IsFavorite;	/* optional element of type xsd:boolean */
	time_t *LastVisitedTimeUtc;	/* optional element of type xsd:dateTime */
	std::string *ExternalDirectoryObjectId;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 1056; } /* = unique type id SOAP_TYPE_ns1__UnifiedGroupType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UnifiedGroupType() { ns1__UnifiedGroupType::soap_default(NULL); }
	virtual ~ns1__UnifiedGroupType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UnifiedGroupDetailsType
#define SOAP_TYPE_ns1__UnifiedGroupDetailsType (1068)
/* ns1:UnifiedGroupDetailsType */
class SOAP_CMAC ns1__UnifiedGroupDetailsType : public ns1__UnifiedGroupBaseType
{
public:
	ns1__UserUnifiedGroupRelationshipType *UserGroupRelationship;	/* required element of type ns1:UserUnifiedGroupRelationshipType */
	ns1__ArrayOfUnifiedGroupResourcesType *GroupResources;	/* optional element of type ns1:ArrayOfUnifiedGroupResourcesType */
	ns1__UnifiedGroupMailboxSettingsType *MailboxSettings;	/* optional element of type ns1:UnifiedGroupMailboxSettingsType */
	int *OwnerCount;	/* optional element of type xsd:int */
	std::string *Description;	/* optional element of type xsd:string */
	std::string *ExternalDirectoryObjectId;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 1068; } /* = unique type id SOAP_TYPE_ns1__UnifiedGroupDetailsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UnifiedGroupDetailsType() { ns1__UnifiedGroupDetailsType::soap_default(NULL); }
	virtual ~ns1__UnifiedGroupDetailsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__MoveFolderType
#define SOAP_TYPE_ews__MoveFolderType (46)
/* ews:MoveFolderType */
class SOAP_CMAC ews__MoveFolderType : public ews__BaseMoveCopyFolderType
{
public:
	virtual int soap_type() const { return 46; } /* = unique type id SOAP_TYPE_ews__MoveFolderType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__MoveFolderType() { ews__MoveFolderType::soap_default(NULL); }
	virtual ~ews__MoveFolderType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CopyFolderType
#define SOAP_TYPE_ews__CopyFolderType (47)
/* ews:CopyFolderType */
class SOAP_CMAC ews__CopyFolderType : public ews__BaseMoveCopyFolderType
{
public:
	virtual int soap_type() const { return 47; } /* = unique type id SOAP_TYPE_ews__CopyFolderType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CopyFolderType() { ews__CopyFolderType::soap_default(NULL); }
	virtual ~ews__CopyFolderType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UpdateItemResponseMessageType
#define SOAP_TYPE_ews__UpdateItemResponseMessageType (70)
/* ews:UpdateItemResponseMessageType */
class SOAP_CMAC ews__UpdateItemResponseMessageType : public ews__ItemInfoResponseMessageType
{
public:
	ns1__ConflictResultsType *ConflictResults;	/* optional element of type ns1:ConflictResultsType */
public:
	virtual int soap_type() const { return 70; } /* = unique type id SOAP_TYPE_ews__UpdateItemResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UpdateItemResponseMessageType() { ews__UpdateItemResponseMessageType::soap_default(NULL); }
	virtual ~ews__UpdateItemResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UpdateItemInRecoverableItemsResponseMessageType
#define SOAP_TYPE_ews__UpdateItemInRecoverableItemsResponseMessageType (72)
/* ews:UpdateItemInRecoverableItemsResponseMessageType */
class SOAP_CMAC ews__UpdateItemInRecoverableItemsResponseMessageType : public ews__ItemInfoResponseMessageType
{
public:
	ns1__ArrayOfAttachmentsType *Attachments;	/* optional element of type ns1:ArrayOfAttachmentsType */
	ns1__ConflictResultsType *ConflictResults;	/* optional element of type ns1:ConflictResultsType */
public:
	virtual int soap_type() const { return 72; } /* = unique type id SOAP_TYPE_ews__UpdateItemInRecoverableItemsResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UpdateItemInRecoverableItemsResponseMessageType() { ews__UpdateItemInRecoverableItemsResponseMessageType::soap_default(NULL); }
	virtual ~ews__UpdateItemInRecoverableItemsResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__MoveItemType
#define SOAP_TYPE_ews__MoveItemType (77)
/* ews:MoveItemType */
class SOAP_CMAC ews__MoveItemType : public ews__BaseMoveCopyItemType
{
public:
	virtual int soap_type() const { return 77; } /* = unique type id SOAP_TYPE_ews__MoveItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__MoveItemType() { ews__MoveItemType::soap_default(NULL); }
	virtual ~ews__MoveItemType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CopyItemType
#define SOAP_TYPE_ews__CopyItemType (78)
/* ews:CopyItemType */
class SOAP_CMAC ews__CopyItemType : public ews__BaseMoveCopyItemType
{
public:
	virtual int soap_type() const { return 78; } /* = unique type id SOAP_TYPE_ews__CopyItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CopyItemType() { ews__CopyItemType::soap_default(NULL); }
	virtual ~ews__CopyItemType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetDelegateType
#define SOAP_TYPE_ews__GetDelegateType (200)
/* ews:GetDelegateType */
class SOAP_CMAC ews__GetDelegateType : public ews__BaseDelegateType
{
public:
	ns1__ArrayOfUserIdType *UserIds;	/* optional element of type ns1:ArrayOfUserIdType */
	bool IncludePermissions;	/* required attribute */
public:
	virtual int soap_type() const { return 200; } /* = unique type id SOAP_TYPE_ews__GetDelegateType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetDelegateType() { ews__GetDelegateType::soap_default(NULL); }
	virtual ~ews__GetDelegateType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetDelegateResponseMessageType
#define SOAP_TYPE_ews__GetDelegateResponseMessageType (201)
/* ews:GetDelegateResponseMessageType */
class SOAP_CMAC ews__GetDelegateResponseMessageType : public ews__BaseDelegateResponseMessageType
{
public:
	enum ns1__DeliverMeetingRequestsType *DeliverMeetingRequests;	/* optional element of type ns1:DeliverMeetingRequestsType */
public:
	virtual int soap_type() const { return 201; } /* = unique type id SOAP_TYPE_ews__GetDelegateResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetDelegateResponseMessageType() { ews__GetDelegateResponseMessageType::soap_default(NULL); }
	virtual ~ews__GetDelegateResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__AddDelegateType
#define SOAP_TYPE_ews__AddDelegateType (204)
/* ews:AddDelegateType */
class SOAP_CMAC ews__AddDelegateType : public ews__BaseDelegateType
{
public:
	ns1__ArrayOfDelegateUserType *DelegateUsers;	/* required element of type ns1:ArrayOfDelegateUserType */
	enum ns1__DeliverMeetingRequestsType *DeliverMeetingRequests;	/* optional element of type ns1:DeliverMeetingRequestsType */
public:
	virtual int soap_type() const { return 204; } /* = unique type id SOAP_TYPE_ews__AddDelegateType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__AddDelegateType() { ews__AddDelegateType::soap_default(NULL); }
	virtual ~ews__AddDelegateType() { }
};
#endif

#ifndef SOAP_TYPE_ews__AddDelegateResponseMessageType
#define SOAP_TYPE_ews__AddDelegateResponseMessageType (207)
/* ews:AddDelegateResponseMessageType */
class SOAP_CMAC ews__AddDelegateResponseMessageType : public ews__BaseDelegateResponseMessageType
{
public:
	virtual int soap_type() const { return 207; } /* = unique type id SOAP_TYPE_ews__AddDelegateResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__AddDelegateResponseMessageType() { ews__AddDelegateResponseMessageType::soap_default(NULL); }
	virtual ~ews__AddDelegateResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__RemoveDelegateType
#define SOAP_TYPE_ews__RemoveDelegateType (208)
/* ews:RemoveDelegateType */
class SOAP_CMAC ews__RemoveDelegateType : public ews__BaseDelegateType
{
public:
	ns1__ArrayOfUserIdType *UserIds;	/* required element of type ns1:ArrayOfUserIdType */
public:
	virtual int soap_type() const { return 208; } /* = unique type id SOAP_TYPE_ews__RemoveDelegateType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__RemoveDelegateType() { ews__RemoveDelegateType::soap_default(NULL); }
	virtual ~ews__RemoveDelegateType() { }
};
#endif

#ifndef SOAP_TYPE_ews__RemoveDelegateResponseMessageType
#define SOAP_TYPE_ews__RemoveDelegateResponseMessageType (209)
/* ews:RemoveDelegateResponseMessageType */
class SOAP_CMAC ews__RemoveDelegateResponseMessageType : public ews__BaseDelegateResponseMessageType
{
public:
	virtual int soap_type() const { return 209; } /* = unique type id SOAP_TYPE_ews__RemoveDelegateResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__RemoveDelegateResponseMessageType() { ews__RemoveDelegateResponseMessageType::soap_default(NULL); }
	virtual ~ews__RemoveDelegateResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UpdateDelegateType
#define SOAP_TYPE_ews__UpdateDelegateType (210)
/* ews:UpdateDelegateType */
class SOAP_CMAC ews__UpdateDelegateType : public ews__BaseDelegateType
{
public:
	ns1__ArrayOfDelegateUserType *DelegateUsers;	/* optional element of type ns1:ArrayOfDelegateUserType */
	enum ns1__DeliverMeetingRequestsType *DeliverMeetingRequests;	/* optional element of type ns1:DeliverMeetingRequestsType */
public:
	virtual int soap_type() const { return 210; } /* = unique type id SOAP_TYPE_ews__UpdateDelegateType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UpdateDelegateType() { ews__UpdateDelegateType::soap_default(NULL); }
	virtual ~ews__UpdateDelegateType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UpdateDelegateResponseMessageType
#define SOAP_TYPE_ews__UpdateDelegateResponseMessageType (211)
/* ews:UpdateDelegateResponseMessageType */
class SOAP_CMAC ews__UpdateDelegateResponseMessageType : public ews__BaseDelegateResponseMessageType
{
public:
	virtual int soap_type() const { return 211; } /* = unique type id SOAP_TYPE_ews__UpdateDelegateResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UpdateDelegateResponseMessageType() { ews__UpdateDelegateResponseMessageType::soap_default(NULL); }
	virtual ~ews__UpdateDelegateResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUnifiedGroupUnseenCountType
#define SOAP_TYPE_ews__GetUnifiedGroupUnseenCountType (357)
/* ews:GetUnifiedGroupUnseenCountType */
class SOAP_CMAC ews__GetUnifiedGroupUnseenCountType : public ews__UnifiedGroupBaseRequestType
{
public:
	time_t LastVisitedTimeUtc;	/* required element of type xsd:dateTime */
public:
	virtual int soap_type() const { return 357; } /* = unique type id SOAP_TYPE_ews__GetUnifiedGroupUnseenCountType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUnifiedGroupUnseenCountType() { ews__GetUnifiedGroupUnseenCountType::soap_default(NULL); }
	virtual ~ews__GetUnifiedGroupUnseenCountType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetUnifiedGroupLastVisitedTimeType
#define SOAP_TYPE_ews__SetUnifiedGroupLastVisitedTimeType (359)
/* ews:SetUnifiedGroupLastVisitedTimeType */
class SOAP_CMAC ews__SetUnifiedGroupLastVisitedTimeType : public ews__UnifiedGroupBaseRequestType
{
public:
	time_t LastVisitedTimeUtc;	/* required element of type xsd:dateTime */
public:
	virtual int soap_type() const { return 359; } /* = unique type id SOAP_TYPE_ews__SetUnifiedGroupLastVisitedTimeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetUnifiedGroupLastVisitedTimeType() { ews__SetUnifiedGroupLastVisitedTimeType::soap_default(NULL); }
	virtual ~ews__SetUnifiedGroupLastVisitedTimeType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetUnifiedGroupUnseenDataType
#define SOAP_TYPE_ews__SetUnifiedGroupUnseenDataType (364)
/* ews:SetUnifiedGroupUnseenDataType */
class SOAP_CMAC ews__SetUnifiedGroupUnseenDataType : public ews__UnifiedGroupBaseRequestType
{
public:
	time_t LastVisitedTimeUtc;	/* required element of type xsd:dateTime */
public:
	virtual int soap_type() const { return 364; } /* = unique type id SOAP_TYPE_ews__SetUnifiedGroupUnseenDataType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetUnifiedGroupUnseenDataType() { ews__SetUnifiedGroupUnseenDataType::soap_default(NULL); }
	virtual ~ews__SetUnifiedGroupUnseenDataType() { }
};
#endif

#ifndef SOAP_TYPE_ews__BaseSharingInvitationRequestType
#define SOAP_TYPE_ews__BaseSharingInvitationRequestType (367)
/* ews:BaseSharingInvitationRequestType */
class SOAP_CMAC ews__BaseSharingInvitationRequestType : public ews__BaseCalendarRequestType
{
public:
	std::string SharingInvitationId;	/* required attribute */
public:
	virtual int soap_type() const { return 367; } /* = unique type id SOAP_TYPE_ews__BaseSharingInvitationRequestType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__BaseSharingInvitationRequestType() { ews__BaseSharingInvitationRequestType::soap_default(NULL); }
	virtual ~ews__BaseSharingInvitationRequestType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetSharingInvitationsType
#define SOAP_TYPE_ews__GetSharingInvitationsType (370)
/* ews:GetSharingInvitationsType */
class SOAP_CMAC ews__GetSharingInvitationsType : public ews__BaseCalendarRequestType
{
public:
	std::string *SharingInvitationId;	/* optional attribute */
public:
	virtual int soap_type() const { return 370; } /* = unique type id SOAP_TYPE_ews__GetSharingInvitationsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetSharingInvitationsType() { ews__GetSharingInvitationsType::soap_default(NULL); }
	virtual ~ews__GetSharingInvitationsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__CreateSharingInvitationType
#define SOAP_TYPE_ews__CreateSharingInvitationType (390)
/* ews:CreateSharingInvitationType */
class SOAP_CMAC ews__CreateSharingInvitationType : public ews__BaseCalendarRequestType
{
public:
	ns1__SharingInvitation *SharingInvitation;	/* required element of type ns1:SharingInvitation */
public:
	virtual int soap_type() const { return 390; } /* = unique type id SOAP_TYPE_ews__CreateSharingInvitationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__CreateSharingInvitationType() { ews__CreateSharingInvitationType::soap_default(NULL); }
	virtual ~ews__CreateSharingInvitationType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetConsumerCalendarSharedInformationType
#define SOAP_TYPE_ews__GetConsumerCalendarSharedInformationType (398)
/* ews:GetConsumerCalendarSharedInformationType */
class SOAP_CMAC ews__GetConsumerCalendarSharedInformationType : public ews__BaseCalendarRequestType
{
public:
	virtual int soap_type() const { return 398; } /* = unique type id SOAP_TYPE_ews__GetConsumerCalendarSharedInformationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetConsumerCalendarSharedInformationType() { ews__GetConsumerCalendarSharedInformationType::soap_default(NULL); }
	virtual ~ews__GetConsumerCalendarSharedInformationType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUnifiedGroupDetailsType
#define SOAP_TYPE_ews__GetUnifiedGroupDetailsType (406)
/* ews:GetUnifiedGroupDetailsType */
class SOAP_CMAC ews__GetUnifiedGroupDetailsType : public ews__UnifiedGroupBaseRequestType
{
public:
	enum ns1__UnifiedGroupDetailsResponseShapeType ns1__GroupDetailsResponseShape;	/* required element of type ns1:UnifiedGroupDetailsResponseShapeType */
public:
	virtual int soap_type() const { return 406; } /* = unique type id SOAP_TYPE_ews__GetUnifiedGroupDetailsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUnifiedGroupDetailsType() { ews__GetUnifiedGroupDetailsType::soap_default(NULL); }
	virtual ~ews__GetUnifiedGroupDetailsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUnifiedGroupMembersType
#define SOAP_TYPE_ews__GetUnifiedGroupMembersType (408)
/* ews:GetUnifiedGroupMembersType */
class SOAP_CMAC ews__GetUnifiedGroupMembersType : public ews__UnifiedGroupBaseRequestType
{
public:
	enum ns1__UnifiedGroupMembersResponseShapeType ns1__GroupMembersResponseShape;	/* required element of type ns1:UnifiedGroupMembersResponseShapeType */
	ns1__BasePagingType *ns1__MembersPaging;	/* required element of type ns1:BasePagingType */
	enum ns1__UnifiedGroupMembersSortType ns1__MembersSortOrder;	/* required element of type ns1:UnifiedGroupMembersSortType */
public:
	virtual int soap_type() const { return 408; } /* = unique type id SOAP_TYPE_ews__GetUnifiedGroupMembersType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUnifiedGroupMembersType() { ews__GetUnifiedGroupMembersType::soap_default(NULL); }
	virtual ~ews__GetUnifiedGroupMembersType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetUnifiedGroupFavoriteStateType
#define SOAP_TYPE_ews__SetUnifiedGroupFavoriteStateType (410)
/* ews:SetUnifiedGroupFavoriteStateType */
class SOAP_CMAC ews__SetUnifiedGroupFavoriteStateType : public ews__UnifiedGroupBaseRequestType
{
public:
	bool *IsFavoriteUnifiedGroup;	/* optional element of type xsd:boolean */
public:
	virtual int soap_type() const { return 410; } /* = unique type id SOAP_TYPE_ews__SetUnifiedGroupFavoriteStateType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetUnifiedGroupFavoriteStateType() { ews__SetUnifiedGroupFavoriteStateType::soap_default(NULL); }
	virtual ~ews__SetUnifiedGroupFavoriteStateType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetUnifiedGroupUserSubscribeStateType
#define SOAP_TYPE_ews__SetUnifiedGroupUserSubscribeStateType (412)
/* ews:SetUnifiedGroupUserSubscribeStateType */
class SOAP_CMAC ews__SetUnifiedGroupUserSubscribeStateType : public ews__UnifiedGroupBaseRequestType
{
public:
	bool IsSubscribed;	/* required element of type xsd:boolean */
public:
	virtual int soap_type() const { return 412; } /* = unique type id SOAP_TYPE_ews__SetUnifiedGroupUserSubscribeStateType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetUnifiedGroupUserSubscribeStateType() { ews__SetUnifiedGroupUserSubscribeStateType::soap_default(NULL); }
	virtual ~ews__SetUnifiedGroupUserSubscribeStateType() { }
};
#endif

#ifndef SOAP_TYPE_ews__GetUnifiedGroupSenderRestrictionsType
#define SOAP_TYPE_ews__GetUnifiedGroupSenderRestrictionsType (414)
/* ews:GetUnifiedGroupSenderRestrictionsType */
class SOAP_CMAC ews__GetUnifiedGroupSenderRestrictionsType : public ews__UnifiedGroupBaseRequestType
{
public:
	virtual int soap_type() const { return 414; } /* = unique type id SOAP_TYPE_ews__GetUnifiedGroupSenderRestrictionsType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__GetUnifiedGroupSenderRestrictionsType() { ews__GetUnifiedGroupSenderRestrictionsType::soap_default(NULL); }
	virtual ~ews__GetUnifiedGroupSenderRestrictionsType() { }
};
#endif

#ifndef SOAP_TYPE_ews__JoinPrivateUnifiedGroupType
#define SOAP_TYPE_ews__JoinPrivateUnifiedGroupType (416)
/* ews:JoinPrivateUnifiedGroupType */
class SOAP_CMAC ews__JoinPrivateUnifiedGroupType : public ews__UnifiedGroupBaseRequestType
{
public:
	ns1__BodyContentType *MessageBody;	/* optional element of type ns1:BodyContentType */
public:
	virtual int soap_type() const { return 416; } /* = unique type id SOAP_TYPE_ews__JoinPrivateUnifiedGroupType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__JoinPrivateUnifiedGroupType() { ews__JoinPrivateUnifiedGroupType::soap_default(NULL); }
	virtual ~ews__JoinPrivateUnifiedGroupType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UpdateUnifiedGroupType
#define SOAP_TYPE_ews__UpdateUnifiedGroupType (424)
/* ews:UpdateUnifiedGroupType */
class SOAP_CMAC ews__UpdateUnifiedGroupType : public ews__UnifiedGroupBaseRequestType
{
public:
	std::string Name;	/* required element of type xsd:string */
	std::string Description;	/* required element of type xsd:string */
	std::string CultureName;	/* required element of type xsd:string */
	bool AutoSubscribeNewMembers;	/* required element of type xsd:boolean */
	bool SenderAuthenticationRequired;	/* required element of type xsd:boolean */
public:
	virtual int soap_type() const { return 424; } /* = unique type id SOAP_TYPE_ews__UpdateUnifiedGroupType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UpdateUnifiedGroupType() { ews__UpdateUnifiedGroupType::soap_default(NULL); }
	virtual ~ews__UpdateUnifiedGroupType() { }
};
#endif

#ifndef SOAP_TYPE_ews__RemoveUnifiedGroupType
#define SOAP_TYPE_ews__RemoveUnifiedGroupType (426)
/* ews:RemoveUnifiedGroupType */
class SOAP_CMAC ews__RemoveUnifiedGroupType : public ews__UnifiedGroupBaseRequestType
{
public:
	virtual int soap_type() const { return 426; } /* = unique type id SOAP_TYPE_ews__RemoveUnifiedGroupType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__RemoveUnifiedGroupType() { ews__RemoveUnifiedGroupType::soap_default(NULL); }
	virtual ~ews__RemoveUnifiedGroupType() { }
};
#endif

#ifndef SOAP_TYPE_ews__SetUnifiedGroupMembershipStateType
#define SOAP_TYPE_ews__SetUnifiedGroupMembershipStateType (433)
/* ews:SetUnifiedGroupMembershipStateType */
class SOAP_CMAC ews__SetUnifiedGroupMembershipStateType : public ews__UnifiedGroupBaseRequestType
{
public:
	ews__GroupMembersArray *Members;	/* required element of type ews:GroupMembersArray */
	enum ns1__UnifiedGroupMembershipActionType ns1__Action;	/* required element of type ns1:UnifiedGroupMembershipActionType */
public:
	virtual int soap_type() const { return 433; } /* = unique type id SOAP_TYPE_ews__SetUnifiedGroupMembershipStateType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__SetUnifiedGroupMembershipStateType() { ews__SetUnifiedGroupMembershipStateType::soap_default(NULL); }
	virtual ~ews__SetUnifiedGroupMembershipStateType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PrincipalNameType
#define SOAP_TYPE_ns1__PrincipalNameType (463)
/* Primitive ns1:PrincipalNameType schema type: */
class SOAP_CMAC ns1__PrincipalNameType
{
public:
	std::string __item;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 463; } /* = unique type id SOAP_TYPE_ns1__PrincipalNameType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PrincipalNameType() { ns1__PrincipalNameType::soap_default(NULL); }
	virtual ~ns1__PrincipalNameType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SIDType
#define SOAP_TYPE_ns1__SIDType (464)
/* Primitive ns1:SIDType schema type: */
class SOAP_CMAC ns1__SIDType
{
public:
	std::string __item;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 464; } /* = unique type id SOAP_TYPE_ns1__SIDType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SIDType() { ns1__SIDType::soap_default(NULL); }
	virtual ~ns1__SIDType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PrimarySmtpAddressType
#define SOAP_TYPE_ns1__PrimarySmtpAddressType (465)
/* Primitive ns1:PrimarySmtpAddressType schema type: */
class SOAP_CMAC ns1__PrimarySmtpAddressType
{
public:
	std::string __item;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 465; } /* = unique type id SOAP_TYPE_ns1__PrimarySmtpAddressType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PrimarySmtpAddressType() { ns1__PrimarySmtpAddressType::soap_default(NULL); }
	virtual ~ns1__PrimarySmtpAddressType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SmtpAddressType
#define SOAP_TYPE_ns1__SmtpAddressType (466)
/* Primitive ns1:SmtpAddressType schema type: */
class SOAP_CMAC ns1__SmtpAddressType
{
public:
	std::string __item;
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 466; } /* = unique type id SOAP_TYPE_ns1__SmtpAddressType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SmtpAddressType() { ns1__SmtpAddressType::soap_default(NULL); }
	virtual ~ns1__SmtpAddressType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_SetItemFieldType_
#define SOAP_TYPE__ns1__union_SetItemFieldType_ (2350)
/* xsd:choice */
union _ns1__union_SetItemFieldType_
{
#define SOAP_UNION__ns1__union_SetItemFieldType__Item	(1)
	ns1__ItemType *Item;
#define SOAP_UNION__ns1__union_SetItemFieldType__Message	(2)
	ns1__MessageType *Message;
#define SOAP_UNION__ns1__union_SetItemFieldType__CalendarItem	(3)
	ns1__CalendarItemType *CalendarItem;
#define SOAP_UNION__ns1__union_SetItemFieldType__Contact	(4)
	ns1__ContactItemType *Contact;
#define SOAP_UNION__ns1__union_SetItemFieldType__DistributionList	(5)
	ns1__DistributionListType *DistributionList;
#define SOAP_UNION__ns1__union_SetItemFieldType__MeetingMessage	(6)
	ns1__MeetingMessageType *MeetingMessage;
#define SOAP_UNION__ns1__union_SetItemFieldType__MeetingRequest	(7)
	ns1__MeetingRequestMessageType *MeetingRequest;
#define SOAP_UNION__ns1__union_SetItemFieldType__MeetingResponse	(8)
	ns1__MeetingResponseMessageType *MeetingResponse;
#define SOAP_UNION__ns1__union_SetItemFieldType__MeetingCancellation	(9)
	ns1__MeetingCancellationMessageType *MeetingCancellation;
#define SOAP_UNION__ns1__union_SetItemFieldType__Task	(10)
	ns1__TaskType *Task;
#define SOAP_UNION__ns1__union_SetItemFieldType__PostItem	(11)
	ns1__PostItemType *PostItem;
#define SOAP_UNION__ns1__union_SetItemFieldType__RoleMember	(12)
	ns1__RoleMemberItemType *RoleMember;
#define SOAP_UNION__ns1__union_SetItemFieldType__Network	(13)
	ns1__NetworkItemType *Network;
#define SOAP_UNION__ns1__union_SetItemFieldType__Person	(14)
	ns1__AbchPersonItemType *Person;
#define SOAP_UNION__ns1__union_SetItemFieldType__Booking	(15)
	ns1__BookingItemType *Booking;
};
#endif

#ifndef SOAP_TYPE_ns1__SetItemFieldType
#define SOAP_TYPE_ns1__SetItemFieldType (507)
/* ns1:SetItemFieldType */
class SOAP_CMAC ns1__SetItemFieldType : public ns1__ItemChangeDescriptionType
{
public:
	int __union_SetItemFieldType_;	/* union discriminant (of union defined below) */
	union _ns1__union_SetItemFieldType_ union_SetItemFieldType_;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 507; } /* = unique type id SOAP_TYPE_ns1__SetItemFieldType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SetItemFieldType() { ns1__SetItemFieldType::soap_default(NULL); }
	virtual ~ns1__SetItemFieldType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_SetFolderFieldType_
#define SOAP_TYPE__ns1__union_SetFolderFieldType_ (2351)
/* xsd:choice */
union _ns1__union_SetFolderFieldType_
{
#define SOAP_UNION__ns1__union_SetFolderFieldType__Folder	(1)
	ns1__FolderType *Folder;
#define SOAP_UNION__ns1__union_SetFolderFieldType__CalendarFolder	(2)
	ns1__CalendarFolderType *CalendarFolder;
#define SOAP_UNION__ns1__union_SetFolderFieldType__ContactsFolder	(3)
	ns1__ContactsFolderType *ContactsFolder;
#define SOAP_UNION__ns1__union_SetFolderFieldType__SearchFolder	(4)
	ns1__SearchFolderType *SearchFolder;
#define SOAP_UNION__ns1__union_SetFolderFieldType__TasksFolder	(5)
	ns1__TasksFolderType *TasksFolder;
};
#endif

#ifndef SOAP_TYPE_ns1__SetFolderFieldType
#define SOAP_TYPE_ns1__SetFolderFieldType (508)
/* ns1:SetFolderFieldType */
class SOAP_CMAC ns1__SetFolderFieldType : public ns1__FolderChangeDescriptionType
{
public:
	int __union_SetFolderFieldType_;	/* union discriminant (of union defined below) */
	union _ns1__union_SetFolderFieldType_ union_SetFolderFieldType_;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 508; } /* = unique type id SOAP_TYPE_ns1__SetFolderFieldType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SetFolderFieldType() { ns1__SetFolderFieldType::soap_default(NULL); }
	virtual ~ns1__SetFolderFieldType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__DeleteItemFieldType
#define SOAP_TYPE_ns1__DeleteItemFieldType (509)
/* ns1:DeleteItemFieldType */
class SOAP_CMAC ns1__DeleteItemFieldType : public ns1__ItemChangeDescriptionType
{
public:
	virtual int soap_type() const { return 509; } /* = unique type id SOAP_TYPE_ns1__DeleteItemFieldType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__DeleteItemFieldType() { ns1__DeleteItemFieldType::soap_default(NULL); }
	virtual ~ns1__DeleteItemFieldType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__DeleteFolderFieldType
#define SOAP_TYPE_ns1__DeleteFolderFieldType (510)
/* ns1:DeleteFolderFieldType */
class SOAP_CMAC ns1__DeleteFolderFieldType : public ns1__FolderChangeDescriptionType
{
public:
	virtual int soap_type() const { return 510; } /* = unique type id SOAP_TYPE_ns1__DeleteFolderFieldType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__DeleteFolderFieldType() { ns1__DeleteFolderFieldType::soap_default(NULL); }
	virtual ~ns1__DeleteFolderFieldType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_AppendToItemFieldType_
#define SOAP_TYPE__ns1__union_AppendToItemFieldType_ (2352)
/* xsd:choice */
union _ns1__union_AppendToItemFieldType_
{
#define SOAP_UNION__ns1__union_AppendToItemFieldType__Item	(1)
	ns1__ItemType *Item;
#define SOAP_UNION__ns1__union_AppendToItemFieldType__Message	(2)
	ns1__MessageType *Message;
#define SOAP_UNION__ns1__union_AppendToItemFieldType__CalendarItem	(3)
	ns1__CalendarItemType *CalendarItem;
#define SOAP_UNION__ns1__union_AppendToItemFieldType__Contact	(4)
	ns1__ContactItemType *Contact;
#define SOAP_UNION__ns1__union_AppendToItemFieldType__DistributionList	(5)
	ns1__DistributionListType *DistributionList;
#define SOAP_UNION__ns1__union_AppendToItemFieldType__MeetingMessage	(6)
	ns1__MeetingMessageType *MeetingMessage;
#define SOAP_UNION__ns1__union_AppendToItemFieldType__MeetingRequest	(7)
	ns1__MeetingRequestMessageType *MeetingRequest;
#define SOAP_UNION__ns1__union_AppendToItemFieldType__MeetingResponse	(8)
	ns1__MeetingResponseMessageType *MeetingResponse;
#define SOAP_UNION__ns1__union_AppendToItemFieldType__MeetingCancellation	(9)
	ns1__MeetingCancellationMessageType *MeetingCancellation;
#define SOAP_UNION__ns1__union_AppendToItemFieldType__Task	(10)
	ns1__TaskType *Task;
#define SOAP_UNION__ns1__union_AppendToItemFieldType__PostItem	(11)
	ns1__PostItemType *PostItem;
#define SOAP_UNION__ns1__union_AppendToItemFieldType__RoleMember	(12)
	ns1__RoleMemberItemType *RoleMember;
#define SOAP_UNION__ns1__union_AppendToItemFieldType__Network	(13)
	ns1__NetworkItemType *Network;
#define SOAP_UNION__ns1__union_AppendToItemFieldType__Person	(14)
	ns1__AbchPersonItemType *Person;
#define SOAP_UNION__ns1__union_AppendToItemFieldType__Booking	(15)
	ns1__BookingItemType *Booking;
};
#endif

#ifndef SOAP_TYPE_ns1__AppendToItemFieldType
#define SOAP_TYPE_ns1__AppendToItemFieldType (511)
/* ns1:AppendToItemFieldType */
class SOAP_CMAC ns1__AppendToItemFieldType : public ns1__ItemChangeDescriptionType
{
public:
	int __union_AppendToItemFieldType_;	/* union discriminant (of union defined below) */
	union _ns1__union_AppendToItemFieldType_ union_AppendToItemFieldType_;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 511; } /* = unique type id SOAP_TYPE_ns1__AppendToItemFieldType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AppendToItemFieldType() { ns1__AppendToItemFieldType::soap_default(NULL); }
	virtual ~ns1__AppendToItemFieldType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_AppendToFolderFieldType_
#define SOAP_TYPE__ns1__union_AppendToFolderFieldType_ (2353)
/* xsd:choice */
union _ns1__union_AppendToFolderFieldType_
{
#define SOAP_UNION__ns1__union_AppendToFolderFieldType__Folder	(1)
	ns1__FolderType *Folder;
#define SOAP_UNION__ns1__union_AppendToFolderFieldType__CalendarFolder	(2)
	ns1__CalendarFolderType *CalendarFolder;
#define SOAP_UNION__ns1__union_AppendToFolderFieldType__ContactsFolder	(3)
	ns1__ContactsFolderType *ContactsFolder;
#define SOAP_UNION__ns1__union_AppendToFolderFieldType__SearchFolder	(4)
	ns1__SearchFolderType *SearchFolder;
#define SOAP_UNION__ns1__union_AppendToFolderFieldType__TasksFolder	(5)
	ns1__TasksFolderType *TasksFolder;
};
#endif

#ifndef SOAP_TYPE_ns1__AppendToFolderFieldType
#define SOAP_TYPE_ns1__AppendToFolderFieldType (512)
/* ns1:AppendToFolderFieldType */
class SOAP_CMAC ns1__AppendToFolderFieldType : public ns1__FolderChangeDescriptionType
{
public:
	int __union_AppendToFolderFieldType_;	/* union discriminant (of union defined below) */
	union _ns1__union_AppendToFolderFieldType_ union_AppendToFolderFieldType_;	/* required element of type xsd:choice */
public:
	virtual int soap_type() const { return 512; } /* = unique type id SOAP_TYPE_ns1__AppendToFolderFieldType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AppendToFolderFieldType() { ns1__AppendToFolderFieldType::soap_default(NULL); }
	virtual ~ns1__AppendToFolderFieldType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AttachmentIdType
#define SOAP_TYPE_ns1__AttachmentIdType (521)
/* ns1:AttachmentIdType */
class SOAP_CMAC ns1__AttachmentIdType : public ns1__RequestAttachmentIdType
{
public:
	std::string *RootItemId;	/* optional attribute */
	std::string *RootItemChangeKey;	/* optional attribute */
public:
	virtual int soap_type() const { return 521; } /* = unique type id SOAP_TYPE_ns1__AttachmentIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AttachmentIdType() { ns1__AttachmentIdType::soap_default(NULL); }
	virtual ~ns1__AttachmentIdType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SearchFolderType
#define SOAP_TYPE_ns1__SearchFolderType (551)
/* ns1:SearchFolderType */
class SOAP_CMAC ns1__SearchFolderType : public ns1__FolderType
{
public:
	ns1__SearchParametersType *SearchParameters;	/* optional element of type ns1:SearchParametersType */
public:
	virtual int soap_type() const { return 551; } /* = unique type id SOAP_TYPE_ns1__SearchFolderType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SearchFolderType() { ns1__SearchFolderType::soap_default(NULL); }
	virtual ~ns1__SearchFolderType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__TasksFolderType
#define SOAP_TYPE_ns1__TasksFolderType (552)
/* ns1:TasksFolderType */
class SOAP_CMAC ns1__TasksFolderType : public ns1__FolderType
{
public:
	virtual int soap_type() const { return 552; } /* = unique type id SOAP_TYPE_ns1__TasksFolderType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__TasksFolderType() { ns1__TasksFolderType::soap_default(NULL); }
	virtual ~ns1__TasksFolderType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ResponseObjectCoreType
#define SOAP_TYPE_ns1__ResponseObjectCoreType (561)
/* ns1:ResponseObjectCoreType */
class SOAP_CMAC ns1__ResponseObjectCoreType : public ns1__MessageType
{
public:
	ns1__ItemIdType *ReferenceItemId;	/* optional element of type ns1:ItemIdType */
public:
	virtual int soap_type() const { return 561; } /* = unique type id SOAP_TYPE_ns1__ResponseObjectCoreType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ResponseObjectCoreType() { ns1__ResponseObjectCoreType::soap_default(NULL); }
	virtual ~ns1__ResponseObjectCoreType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RecurringMasterItemIdRangesType
#define SOAP_TYPE_ns1__RecurringMasterItemIdRangesType (706)
/* ns1:RecurringMasterItemIdRangesType */
class SOAP_CMAC ns1__RecurringMasterItemIdRangesType : public ns1__ItemIdType
{
public:
	ns1__ArrayOfOccurrenceRangesType *Ranges;	/* optional element of type ns1:ArrayOfOccurrenceRangesType */
public:
	virtual int soap_type() const { return 706; } /* = unique type id SOAP_TYPE_ns1__RecurringMasterItemIdRangesType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RecurringMasterItemIdRangesType() { ns1__RecurringMasterItemIdRangesType::soap_default(NULL); }
	virtual ~ns1__RecurringMasterItemIdRangesType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RegeneratingPatternBaseType
#define SOAP_TYPE_ns1__RegeneratingPatternBaseType (711)
/* ns1:RegeneratingPatternBaseType */
class SOAP_CMAC ns1__RegeneratingPatternBaseType : public ns1__IntervalRecurrencePatternBaseType
{
public:
	virtual int soap_type() const { return 711; } /* = unique type id SOAP_TYPE_ns1__RegeneratingPatternBaseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RegeneratingPatternBaseType() { ns1__RegeneratingPatternBaseType::soap_default(NULL); }
	virtual ~ns1__RegeneratingPatternBaseType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RelativeMonthlyRecurrencePatternType
#define SOAP_TYPE_ns1__RelativeMonthlyRecurrencePatternType (718)
/* ns1:RelativeMonthlyRecurrencePatternType */
class SOAP_CMAC ns1__RelativeMonthlyRecurrencePatternType : public ns1__IntervalRecurrencePatternBaseType
{
public:
	enum ns1__DayOfWeekType DaysOfWeek;	/* required element of type ns1:DayOfWeekType */
	enum ns1__DayOfWeekIndexType DayOfWeekIndex;	/* required element of type ns1:DayOfWeekIndexType */
public:
	virtual int soap_type() const { return 718; } /* = unique type id SOAP_TYPE_ns1__RelativeMonthlyRecurrencePatternType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RelativeMonthlyRecurrencePatternType() { ns1__RelativeMonthlyRecurrencePatternType::soap_default(NULL); }
	virtual ~ns1__RelativeMonthlyRecurrencePatternType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AbsoluteMonthlyRecurrencePatternType
#define SOAP_TYPE_ns1__AbsoluteMonthlyRecurrencePatternType (719)
/* ns1:AbsoluteMonthlyRecurrencePatternType */
class SOAP_CMAC ns1__AbsoluteMonthlyRecurrencePatternType : public ns1__IntervalRecurrencePatternBaseType
{
public:
	int DayOfMonth;	/* required element of type xsd:int */
public:
	virtual int soap_type() const { return 719; } /* = unique type id SOAP_TYPE_ns1__AbsoluteMonthlyRecurrencePatternType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AbsoluteMonthlyRecurrencePatternType() { ns1__AbsoluteMonthlyRecurrencePatternType::soap_default(NULL); }
	virtual ~ns1__AbsoluteMonthlyRecurrencePatternType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__WeeklyRecurrencePatternType
#define SOAP_TYPE_ns1__WeeklyRecurrencePatternType (720)
/* ns1:WeeklyRecurrencePatternType */
class SOAP_CMAC ns1__WeeklyRecurrencePatternType : public ns1__IntervalRecurrencePatternBaseType
{
public:
	enum ns1__DaysOfWeekType DaysOfWeek;	/* required element of type ns1:DaysOfWeekType */
	enum ns1__DayOfWeekType *FirstDayOfWeek;	/* optional element of type ns1:DayOfWeekType */
public:
	virtual int soap_type() const { return 720; } /* = unique type id SOAP_TYPE_ns1__WeeklyRecurrencePatternType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__WeeklyRecurrencePatternType() { ns1__WeeklyRecurrencePatternType::soap_default(NULL); }
	virtual ~ns1__WeeklyRecurrencePatternType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__DailyRecurrencePatternType
#define SOAP_TYPE_ns1__DailyRecurrencePatternType (721)
/* ns1:DailyRecurrencePatternType */
class SOAP_CMAC ns1__DailyRecurrencePatternType : public ns1__IntervalRecurrencePatternBaseType
{
public:
	virtual int soap_type() const { return 721; } /* = unique type id SOAP_TYPE_ns1__DailyRecurrencePatternType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__DailyRecurrencePatternType() { ns1__DailyRecurrencePatternType::soap_default(NULL); }
	virtual ~ns1__DailyRecurrencePatternType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RecurringDateTransitionType
#define SOAP_TYPE_ns1__RecurringDateTransitionType (730)
/* ns1:RecurringDateTransitionType */
class SOAP_CMAC ns1__RecurringDateTransitionType : public ns1__RecurringTimeTransitionType
{
public:
	int Day;	/* required element of type xsd:int */
public:
	virtual int soap_type() const { return 730; } /* = unique type id SOAP_TYPE_ns1__RecurringDateTransitionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RecurringDateTransitionType() { ns1__RecurringDateTransitionType::soap_default(NULL); }
	virtual ~ns1__RecurringDateTransitionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RecurringDayTransitionType
#define SOAP_TYPE_ns1__RecurringDayTransitionType (731)
/* ns1:RecurringDayTransitionType */
class SOAP_CMAC ns1__RecurringDayTransitionType : public ns1__RecurringTimeTransitionType
{
public:
	enum ns1__DayOfWeekType DayOfWeek;	/* required element of type ns1:DayOfWeekType */
	int Occurrence;	/* required element of type xsd:int */
public:
	virtual int soap_type() const { return 731; } /* = unique type id SOAP_TYPE_ns1__RecurringDayTransitionType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RecurringDayTransitionType() { ns1__RecurringDayTransitionType::soap_default(NULL); }
	virtual ~ns1__RecurringDayTransitionType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MeetingMessageType
#define SOAP_TYPE_ns1__MeetingMessageType (748)
/* ns1:MeetingMessageType */
class SOAP_CMAC ns1__MeetingMessageType : public ns1__MessageType
{
public:
	ns1__ItemIdType *AssociatedCalendarItemId;	/* optional element of type ns1:ItemIdType */
	bool *IsDelegated;	/* optional element of type xsd:boolean */
	bool *IsOutOfDate;	/* optional element of type xsd:boolean */
	bool *HasBeenProcessed;	/* optional element of type xsd:boolean */
	enum ns1__ResponseTypeType *ResponseType;	/* optional element of type ns1:ResponseTypeType */
	std::string *UID;	/* optional element of type xsd:string */
	time_t *RecurrenceId;	/* optional element of type xsd:dateTime */
	time_t *DateTimeStamp;	/* optional element of type xsd:dateTime */
	bool *IsOrganizer;	/* optional element of type xsd:boolean */
public:
	virtual int soap_type() const { return 748; } /* = unique type id SOAP_TYPE_ns1__MeetingMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MeetingMessageType() { ns1__MeetingMessageType::soap_default(NULL); }
	virtual ~ns1__MeetingMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__BookingItemType
#define SOAP_TYPE_ns1__BookingItemType (773)
/* ns1:BookingItemType */
class SOAP_CMAC ns1__BookingItemType : public ns1__CalendarItemType
{
public:
	ns1__ItemIdType *CustomerId;	/* optional element of type ns1:ItemIdType */
	ns1__ArrayOfItemIdsType *Services;	/* optional element of type ns1:ArrayOfItemIdsType */
public:
	virtual int soap_type() const { return 773; } /* = unique type id SOAP_TYPE_ns1__BookingItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__BookingItemType() { ns1__BookingItemType::soap_default(NULL); }
	virtual ~ns1__BookingItemType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__IsEqualToType
#define SOAP_TYPE_ns1__IsEqualToType (791)
/* ns1:IsEqualToType */
class SOAP_CMAC ns1__IsEqualToType : public ns1__TwoOperandExpressionType
{
public:
	virtual int soap_type() const { return 791; } /* = unique type id SOAP_TYPE_ns1__IsEqualToType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__IsEqualToType() { ns1__IsEqualToType::soap_default(NULL); }
	virtual ~ns1__IsEqualToType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__IsNotEqualToType
#define SOAP_TYPE_ns1__IsNotEqualToType (792)
/* ns1:IsNotEqualToType */
class SOAP_CMAC ns1__IsNotEqualToType : public ns1__TwoOperandExpressionType
{
public:
	virtual int soap_type() const { return 792; } /* = unique type id SOAP_TYPE_ns1__IsNotEqualToType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__IsNotEqualToType() { ns1__IsNotEqualToType::soap_default(NULL); }
	virtual ~ns1__IsNotEqualToType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__IsGreaterThanType
#define SOAP_TYPE_ns1__IsGreaterThanType (793)
/* ns1:IsGreaterThanType */
class SOAP_CMAC ns1__IsGreaterThanType : public ns1__TwoOperandExpressionType
{
public:
	virtual int soap_type() const { return 793; } /* = unique type id SOAP_TYPE_ns1__IsGreaterThanType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__IsGreaterThanType() { ns1__IsGreaterThanType::soap_default(NULL); }
	virtual ~ns1__IsGreaterThanType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__IsGreaterThanOrEqualToType
#define SOAP_TYPE_ns1__IsGreaterThanOrEqualToType (794)
/* ns1:IsGreaterThanOrEqualToType */
class SOAP_CMAC ns1__IsGreaterThanOrEqualToType : public ns1__TwoOperandExpressionType
{
public:
	virtual int soap_type() const { return 794; } /* = unique type id SOAP_TYPE_ns1__IsGreaterThanOrEqualToType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__IsGreaterThanOrEqualToType() { ns1__IsGreaterThanOrEqualToType::soap_default(NULL); }
	virtual ~ns1__IsGreaterThanOrEqualToType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__IsLessThanType
#define SOAP_TYPE_ns1__IsLessThanType (795)
/* ns1:IsLessThanType */
class SOAP_CMAC ns1__IsLessThanType : public ns1__TwoOperandExpressionType
{
public:
	virtual int soap_type() const { return 795; } /* = unique type id SOAP_TYPE_ns1__IsLessThanType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__IsLessThanType() { ns1__IsLessThanType::soap_default(NULL); }
	virtual ~ns1__IsLessThanType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__IsLessThanOrEqualToType
#define SOAP_TYPE_ns1__IsLessThanOrEqualToType (796)
/* ns1:IsLessThanOrEqualToType */
class SOAP_CMAC ns1__IsLessThanOrEqualToType : public ns1__TwoOperandExpressionType
{
public:
	virtual int soap_type() const { return 796; } /* = unique type id SOAP_TYPE_ns1__IsLessThanOrEqualToType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__IsLessThanOrEqualToType() { ns1__IsLessThanOrEqualToType::soap_default(NULL); }
	virtual ~ns1__IsLessThanOrEqualToType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AndType
#define SOAP_TYPE_ns1__AndType (800)
/* ns1:AndType */
class SOAP_CMAC ns1__AndType : public ns1__MultipleOperandBooleanExpressionType
{
public:
	virtual int soap_type() const { return 800; } /* = unique type id SOAP_TYPE_ns1__AndType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AndType() { ns1__AndType::soap_default(NULL); }
	virtual ~ns1__AndType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__OrType
#define SOAP_TYPE_ns1__OrType (801)
/* ns1:OrType */
class SOAP_CMAC ns1__OrType : public ns1__MultipleOperandBooleanExpressionType
{
public:
	virtual int soap_type() const { return 801; } /* = unique type id SOAP_TYPE_ns1__OrType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__OrType() { ns1__OrType::soap_default(NULL); }
	virtual ~ns1__OrType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ModifiedEventType
#define SOAP_TYPE_ns1__ModifiedEventType (808)
/* ns1:ModifiedEventType */
class SOAP_CMAC ns1__ModifiedEventType : public ns1__BaseObjectChangedEventType
{
public:
	int *UnreadCount;	/* optional element of type xsd:int */
public:
	virtual int soap_type() const { return 808; } /* = unique type id SOAP_TYPE_ns1__ModifiedEventType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ModifiedEventType() { ns1__ModifiedEventType::soap_default(NULL); }
	virtual ~ns1__ModifiedEventType() { }
};
#endif

#ifndef SOAP_TYPE__ns1__union_MovedCopiedEventType_
#define SOAP_TYPE__ns1__union_MovedCopiedEventType_ (2357)
/* xsd:choice */
union _ns1__union_MovedCopiedEventType_
{
#define SOAP_UNION__ns1__union_MovedCopiedEventType__OldFolderId	(1)
	ns1__FolderIdType *OldFolderId;
#define SOAP_UNION__ns1__union_MovedCopiedEventType__OldItemId	(2)
	ns1__ItemIdType *OldItemId;
};
#endif

#ifndef SOAP_TYPE_ns1__MovedCopiedEventType
#define SOAP_TYPE_ns1__MovedCopiedEventType (809)
/* ns1:MovedCopiedEventType */
class SOAP_CMAC ns1__MovedCopiedEventType : public ns1__BaseObjectChangedEventType
{
public:
	int __union_MovedCopiedEventType_;	/* union discriminant (of union defined below) */
	union _ns1__union_MovedCopiedEventType_ union_MovedCopiedEventType_;	/* required element of type xsd:choice */
	ns1__FolderIdType *OldParentFolderId;	/* required element of type ns1:FolderIdType */
public:
	virtual int soap_type() const { return 809; } /* = unique type id SOAP_TYPE_ns1__MovedCopiedEventType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MovedCopiedEventType() { ns1__MovedCopiedEventType::soap_default(NULL); }
	virtual ~ns1__MovedCopiedEventType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UnifiedGroupUnseenChangedChannelEventType
#define SOAP_TYPE_ns1__UnifiedGroupUnseenChangedChannelEventType (829)
/* ns1:UnifiedGroupUnseenChangedChannelEventType */
class SOAP_CMAC ns1__UnifiedGroupUnseenChangedChannelEventType : public ns1__SubscriptionLevelChannelEventType
{
public:
	int UnseenCount;	/* required element of type xsd:int */
	time_t LastVisitedTime;	/* required element of type xsd:dateTime */
public:
	virtual int soap_type() const { return 829; } /* = unique type id SOAP_TYPE_ns1__UnifiedGroupUnseenChangedChannelEventType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UnifiedGroupUnseenChangedChannelEventType() { ns1__UnifiedGroupUnseenChangedChannelEventType::soap_default(NULL); }
	virtual ~ns1__UnifiedGroupUnseenChangedChannelEventType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UnifiedGroupContentChangedChannelEventType
#define SOAP_TYPE_ns1__UnifiedGroupContentChangedChannelEventType (830)
/* ns1:UnifiedGroupContentChangedChannelEventType */
class SOAP_CMAC ns1__UnifiedGroupContentChangedChannelEventType : public ns1__SubscriptionLevelChannelEventType
{
public:
	ns1__DistinguishedFolderIdType *DistinguishedFolderId;	/* required element of type ns1:DistinguishedFolderIdType */
public:
	virtual int soap_type() const { return 830; } /* = unique type id SOAP_TYPE_ns1__UnifiedGroupContentChangedChannelEventType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UnifiedGroupContentChangedChannelEventType() { ns1__UnifiedGroupContentChangedChannelEventType::soap_default(NULL); }
	virtual ~ns1__UnifiedGroupContentChangedChannelEventType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__UserMembershipChangedChannelEventType
#define SOAP_TYPE_ns1__UserMembershipChangedChannelEventType (831)
/* ns1:UserMembershipChangedChannelEventType */
class SOAP_CMAC ns1__UserMembershipChangedChannelEventType : public ns1__SubscriptionLevelChannelEventType
{
public:
	std::string InstanceKey;	/* required element of type xsd:string */
	bool IsMember;	/* required element of type xsd:boolean */
	std::string *SmtpAddress;	/* optional element of type xsd:string */
	std::string *DisplayName;	/* optional element of type xsd:string */
	bool *IsFavorite;	/* optional element of type xsd:boolean */
	time_t *LastVisitedTimeUtc;	/* optional element of type xsd:dateTime */
	enum ns1__UnifiedGroupAccessType *AccessType;	/* optional element of type ns1:UnifiedGroupAccessType */
public:
	virtual int soap_type() const { return 831; } /* = unique type id SOAP_TYPE_ns1__UserMembershipChangedChannelEventType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__UserMembershipChangedChannelEventType() { ns1__UserMembershipChangedChannelEventType::soap_default(NULL); }
	virtual ~ns1__UserMembershipChangedChannelEventType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NewSocialActivityAddedEventType
#define SOAP_TYPE_ns1__NewSocialActivityAddedEventType (834)
/* ns1:NewSocialActivityAddedEventType */
class SOAP_CMAC ns1__NewSocialActivityAddedEventType : public ns1__SubscriptionLevelChannelEventType
{
public:
	ns1__ItemIdType *ItemId;	/* required element of type ns1:ItemIdType */
	std::string CreatedTimeStamp;	/* required element of type xsd:string */
	ns1__PersonaType *Actor;	/* required element of type ns1:PersonaType */
	ns1__SocialActivityTargetDataType *Target;	/* required element of type ns1:SocialActivityTargetDataType */
	ns1__SocialActivityMetadataType *Metadata;	/* required element of type ns1:SocialActivityMetadataType */
	enum ns1__UserSocialActivityActionTypeEnum Action;	/* required element of type ns1:UserSocialActivityActionTypeEnum */
	std::string EventType;	/* required element of type xsd:string */
public:
	virtual int soap_type() const { return 834; } /* = unique type id SOAP_TYPE_ns1__NewSocialActivityAddedEventType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NewSocialActivityAddedEventType() { ns1__NewSocialActivityAddedEventType::soap_default(NULL); }
	virtual ~ns1__NewSocialActivityAddedEventType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SubscriptionEventDroppedChannelEventType
#define SOAP_TYPE_ns1__SubscriptionEventDroppedChannelEventType (835)
/* ns1:SubscriptionEventDroppedChannelEventType */
class SOAP_CMAC ns1__SubscriptionEventDroppedChannelEventType : public ns1__SubscriptionLevelChannelEventType
{
public:
	virtual int soap_type() const { return 835; } /* = unique type id SOAP_TYPE_ns1__SubscriptionEventDroppedChannelEventType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SubscriptionEventDroppedChannelEventType() { ns1__SubscriptionEventDroppedChannelEventType::soap_default(NULL); }
	virtual ~ns1__SubscriptionEventDroppedChannelEventType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SubscriptionRenewFailedChannelEventType
#define SOAP_TYPE_ns1__SubscriptionRenewFailedChannelEventType (836)
/* ns1:SubscriptionRenewFailedChannelEventType */
class SOAP_CMAC ns1__SubscriptionRenewFailedChannelEventType : public ns1__SubscriptionLevelChannelEventType
{
public:
	virtual int soap_type() const { return 836; } /* = unique type id SOAP_TYPE_ns1__SubscriptionRenewFailedChannelEventType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SubscriptionRenewFailedChannelEventType() { ns1__SubscriptionRenewFailedChannelEventType::soap_default(NULL); }
	virtual ~ns1__SubscriptionRenewFailedChannelEventType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AlternatePublicFolderItemIdType
#define SOAP_TYPE_ns1__AlternatePublicFolderItemIdType (880)
/* ns1:AlternatePublicFolderItemIdType */
class SOAP_CMAC ns1__AlternatePublicFolderItemIdType : public ns1__AlternatePublicFolderIdType
{
public:
	std::string ItemId;	/* required attribute */
public:
	virtual int soap_type() const { return 880; } /* = unique type id SOAP_TYPE_ns1__AlternatePublicFolderItemIdType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AlternatePublicFolderItemIdType() { ns1__AlternatePublicFolderItemIdType::soap_default(NULL); }
	virtual ~ns1__AlternatePublicFolderItemIdType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RetentionTagType
#define SOAP_TYPE_ns1__RetentionTagType (991)
/* Primitive ns1:RetentionTagType schema type: */
class SOAP_CMAC ns1__RetentionTagType
{
public:
	std::string __item;
	bool IsExplicit;	/* required attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 991; } /* = unique type id SOAP_TYPE_ns1__RetentionTagType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RetentionTagType() { ns1__RetentionTagType::soap_default(NULL); }
	virtual ~ns1__RetentionTagType() { }
};
#endif

#ifndef SOAP_TYPE_ews__ActivateSharingInvitationType
#define SOAP_TYPE_ews__ActivateSharingInvitationType (368)
/* ews:ActivateSharingInvitationType */
class SOAP_CMAC ews__ActivateSharingInvitationType : public ews__BaseSharingInvitationRequestType
{
public:
	std::string EmailAddressInInvitation;	/* required attribute */
public:
	virtual int soap_type() const { return 368; } /* = unique type id SOAP_TYPE_ews__ActivateSharingInvitationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__ActivateSharingInvitationType() { ews__ActivateSharingInvitationType::soap_default(NULL); }
	virtual ~ews__ActivateSharingInvitationType() { }
};
#endif

#ifndef SOAP_TYPE_ews__DeleteSharingInvitationType
#define SOAP_TYPE_ews__DeleteSharingInvitationType (392)
/* ews:DeleteSharingInvitationType */
class SOAP_CMAC ews__DeleteSharingInvitationType : public ews__BaseSharingInvitationRequestType
{
public:
	virtual int soap_type() const { return 392; } /* = unique type id SOAP_TYPE_ews__DeleteSharingInvitationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__DeleteSharingInvitationType() { ews__DeleteSharingInvitationType::soap_default(NULL); }
	virtual ~ews__DeleteSharingInvitationType() { }
};
#endif

#ifndef SOAP_TYPE_ews__UpdateSharingInvitationType
#define SOAP_TYPE_ews__UpdateSharingInvitationType (394)
/* ews:UpdateSharingInvitationType */
class SOAP_CMAC ews__UpdateSharingInvitationType : public ews__BaseSharingInvitationRequestType
{
public:
	ns1__SharingInvitation *SharingInvitation;	/* required element of type ns1:SharingInvitation */
public:
	virtual int soap_type() const { return 394; } /* = unique type id SOAP_TYPE_ews__UpdateSharingInvitationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ews__UpdateSharingInvitationType() { ews__UpdateSharingInvitationType::soap_default(NULL); }
	virtual ~ews__UpdateSharingInvitationType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ResponseObjectType
#define SOAP_TYPE_ns1__ResponseObjectType (562)
/* ns1:ResponseObjectType */
class SOAP_CMAC ns1__ResponseObjectType : public ns1__ResponseObjectCoreType
{
public:
	std::string *ObjectName;	/* optional attribute */
public:
	virtual int soap_type() const { return 562; } /* = unique type id SOAP_TYPE_ns1__ResponseObjectType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ResponseObjectType() { ns1__ResponseObjectType::soap_default(NULL); }
	virtual ~ns1__ResponseObjectType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__DailyRegeneratingPatternType
#define SOAP_TYPE_ns1__DailyRegeneratingPatternType (712)
/* ns1:DailyRegeneratingPatternType */
class SOAP_CMAC ns1__DailyRegeneratingPatternType : public ns1__RegeneratingPatternBaseType
{
public:
	virtual int soap_type() const { return 712; } /* = unique type id SOAP_TYPE_ns1__DailyRegeneratingPatternType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__DailyRegeneratingPatternType() { ns1__DailyRegeneratingPatternType::soap_default(NULL); }
	virtual ~ns1__DailyRegeneratingPatternType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__WeeklyRegeneratingPatternType
#define SOAP_TYPE_ns1__WeeklyRegeneratingPatternType (713)
/* ns1:WeeklyRegeneratingPatternType */
class SOAP_CMAC ns1__WeeklyRegeneratingPatternType : public ns1__RegeneratingPatternBaseType
{
public:
	virtual int soap_type() const { return 713; } /* = unique type id SOAP_TYPE_ns1__WeeklyRegeneratingPatternType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__WeeklyRegeneratingPatternType() { ns1__WeeklyRegeneratingPatternType::soap_default(NULL); }
	virtual ~ns1__WeeklyRegeneratingPatternType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MonthlyRegeneratingPatternType
#define SOAP_TYPE_ns1__MonthlyRegeneratingPatternType (714)
/* ns1:MonthlyRegeneratingPatternType */
class SOAP_CMAC ns1__MonthlyRegeneratingPatternType : public ns1__RegeneratingPatternBaseType
{
public:
	virtual int soap_type() const { return 714; } /* = unique type id SOAP_TYPE_ns1__MonthlyRegeneratingPatternType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MonthlyRegeneratingPatternType() { ns1__MonthlyRegeneratingPatternType::soap_default(NULL); }
	virtual ~ns1__MonthlyRegeneratingPatternType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__YearlyRegeneratingPatternType
#define SOAP_TYPE_ns1__YearlyRegeneratingPatternType (715)
/* ns1:YearlyRegeneratingPatternType */
class SOAP_CMAC ns1__YearlyRegeneratingPatternType : public ns1__RegeneratingPatternBaseType
{
public:
	virtual int soap_type() const { return 715; } /* = unique type id SOAP_TYPE_ns1__YearlyRegeneratingPatternType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__YearlyRegeneratingPatternType() { ns1__YearlyRegeneratingPatternType::soap_default(NULL); }
	virtual ~ns1__YearlyRegeneratingPatternType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MeetingRequestMessageType
#define SOAP_TYPE_ns1__MeetingRequestMessageType (750)
/* ns1:MeetingRequestMessageType */
class SOAP_CMAC ns1__MeetingRequestMessageType : public ns1__MeetingMessageType
{
public:
	enum ns1__MeetingRequestTypeType *MeetingRequestType;	/* optional element of type ns1:MeetingRequestTypeType */
	enum ns1__LegacyFreeBusyType *IntendedFreeBusyStatus;	/* optional element of type ns1:LegacyFreeBusyType */
	time_t *Start;	/* optional element of type xsd:dateTime */
	time_t *End;	/* optional element of type xsd:dateTime */
	time_t *OriginalStart;	/* optional element of type xsd:dateTime */
	bool *IsAllDayEvent;	/* optional element of type xsd:boolean */
	enum ns1__LegacyFreeBusyType *LegacyFreeBusyStatus;	/* optional element of type ns1:LegacyFreeBusyType */
	std::string *Location;	/* optional element of type xsd:string */
	std::string *When;	/* optional element of type xsd:string */
	bool *IsMeeting;	/* optional element of type xsd:boolean */
	bool *IsCancelled;	/* optional element of type xsd:boolean */
	bool *IsRecurring;	/* optional element of type xsd:boolean */
	bool *MeetingRequestWasSent;	/* optional element of type xsd:boolean */
	enum ns1__CalendarItemTypeType *CalendarItemType;	/* optional element of type ns1:CalendarItemTypeType */
	enum ns1__ResponseTypeType *MyResponseType;	/* optional element of type ns1:ResponseTypeType */
	ns1__SingleRecipientType *Organizer;	/* optional element of type ns1:SingleRecipientType */
	ns1__NonEmptyArrayOfAttendeesType *RequiredAttendees;	/* optional element of type ns1:NonEmptyArrayOfAttendeesType */
	ns1__NonEmptyArrayOfAttendeesType *OptionalAttendees;	/* optional element of type ns1:NonEmptyArrayOfAttendeesType */
	ns1__NonEmptyArrayOfAttendeesType *Resources;	/* optional element of type ns1:NonEmptyArrayOfAttendeesType */
	int *ConflictingMeetingCount;	/* optional element of type xsd:int */
	int *AdjacentMeetingCount;	/* optional element of type xsd:int */
	ns1__NonEmptyArrayOfAllItemsType *ConflictingMeetings;	/* optional element of type ns1:NonEmptyArrayOfAllItemsType */
	ns1__NonEmptyArrayOfAllItemsType *AdjacentMeetings;	/* optional element of type ns1:NonEmptyArrayOfAllItemsType */
	std::string *Duration;	/* optional element of type xsd:string */
	std::string *TimeZone;	/* optional element of type xsd:string */
	time_t *AppointmentReplyTime;	/* optional element of type xsd:dateTime */
	int *AppointmentSequenceNumber;	/* optional element of type xsd:int */
	int *AppointmentState;	/* optional element of type xsd:int */
	ns1__RecurrenceType *Recurrence;	/* optional element of type ns1:RecurrenceType */
	ns1__OccurrenceInfoType *FirstOccurrence;	/* optional element of type ns1:OccurrenceInfoType */
	ns1__OccurrenceInfoType *LastOccurrence;	/* optional element of type ns1:OccurrenceInfoType */
	ns1__NonEmptyArrayOfOccurrenceInfoType *ModifiedOccurrences;	/* optional element of type ns1:NonEmptyArrayOfOccurrenceInfoType */
	ns1__NonEmptyArrayOfDeletedOccurrencesType *DeletedOccurrences;	/* optional element of type ns1:NonEmptyArrayOfDeletedOccurrencesType */
	ns1__TimeZoneType *MeetingTimeZone;	/* optional element of type ns1:TimeZoneType */
	ns1__TimeZoneDefinitionType *StartTimeZone;	/* optional element of type ns1:TimeZoneDefinitionType */
	ns1__TimeZoneDefinitionType *EndTimeZone;	/* optional element of type ns1:TimeZoneDefinitionType */
	int *ConferenceType;	/* optional element of type xsd:int */
	bool *AllowNewTimeProposal;	/* optional element of type xsd:boolean */
	bool *IsOnlineMeeting;	/* optional element of type xsd:boolean */
	std::string *MeetingWorkspaceUrl;	/* optional element of type xsd:string */
	std::string *NetShowUrl;	/* optional element of type xsd:string */
	ns1__EnhancedLocationType *EnhancedLocation;	/* optional element of type ns1:EnhancedLocationType */
	ns1__ChangeHighlightsType *ChangeHighlights;	/* optional element of type ns1:ChangeHighlightsType */
	time_t *StartWallClock;	/* optional element of type xsd:dateTime */
	time_t *EndWallClock;	/* optional element of type xsd:dateTime */
	std::string *StartTimeZoneId;	/* optional element of type xsd:string */
	std::string *EndTimeZoneId;	/* optional element of type xsd:string */
public:
	virtual int soap_type() const { return 750; } /* = unique type id SOAP_TYPE_ns1__MeetingRequestMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MeetingRequestMessageType() { ns1__MeetingRequestMessageType::soap_default(NULL); }
	virtual ~ns1__MeetingRequestMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MeetingResponseMessageType
#define SOAP_TYPE_ns1__MeetingResponseMessageType (751)
/* ns1:MeetingResponseMessageType */
class SOAP_CMAC ns1__MeetingResponseMessageType : public ns1__MeetingMessageType
{
public:
	time_t *Start;	/* optional element of type xsd:dateTime */
	time_t *End;	/* optional element of type xsd:dateTime */
	std::string *Location;	/* optional element of type xsd:string */
	ns1__RecurrenceType *Recurrence;	/* optional element of type ns1:RecurrenceType */
	std::string *CalendarItemType;	/* optional element of type xsd:string */
	time_t *ProposedStart;	/* optional element of type xsd:dateTime */
	time_t *ProposedEnd;	/* optional element of type xsd:dateTime */
	ns1__EnhancedLocationType *EnhancedLocation;	/* optional element of type ns1:EnhancedLocationType */
public:
	virtual int soap_type() const { return 751; } /* = unique type id SOAP_TYPE_ns1__MeetingResponseMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MeetingResponseMessageType() { ns1__MeetingResponseMessageType::soap_default(NULL); }
	virtual ~ns1__MeetingResponseMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MeetingCancellationMessageType
#define SOAP_TYPE_ns1__MeetingCancellationMessageType (752)
/* ns1:MeetingCancellationMessageType */
class SOAP_CMAC ns1__MeetingCancellationMessageType : public ns1__MeetingMessageType
{
public:
	time_t *Start;	/* optional element of type xsd:dateTime */
	time_t *End;	/* optional element of type xsd:dateTime */
	std::string *Location;	/* optional element of type xsd:string */
	ns1__RecurrenceType *Recurrence;	/* optional element of type ns1:RecurrenceType */
	std::string *CalendarItemType;	/* optional element of type xsd:string */
	ns1__EnhancedLocationType *EnhancedLocation;	/* optional element of type ns1:EnhancedLocationType */
public:
	virtual int soap_type() const { return 752; } /* = unique type id SOAP_TYPE_ns1__MeetingCancellationMessageType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MeetingCancellationMessageType() { ns1__MeetingCancellationMessageType::soap_default(NULL); }
	virtual ~ns1__MeetingCancellationMessageType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__WellKnownResponseObjectType
#define SOAP_TYPE_ns1__WellKnownResponseObjectType (566)
/* ns1:WellKnownResponseObjectType */
class SOAP_CMAC ns1__WellKnownResponseObjectType
{
public:
	std::string *ItemClass;	/* optional element of type ns1:ItemClassType */
	enum ns1__SensitivityChoicesType *Sensitivity;	/* optional element of type ns1:SensitivityChoicesType */
	ns1__BodyType *Body;	/* optional element of type ns1:BodyType */
	ns1__NonEmptyArrayOfAttachmentsType *Attachments;	/* optional element of type ns1:NonEmptyArrayOfAttachmentsType */
	ns1__NonEmptyArrayOfInternetHeadersType *InternetMessageHeaders;	/* optional element of type ns1:NonEmptyArrayOfInternetHeadersType */
	ns1__SingleRecipientType *Sender;	/* optional element of type ns1:SingleRecipientType */
	ns1__ArrayOfRecipientsType *ToRecipients;	/* optional element of type ns1:ArrayOfRecipientsType */
	ns1__ArrayOfRecipientsType *CcRecipients;	/* optional element of type ns1:ArrayOfRecipientsType */
	ns1__ArrayOfRecipientsType *BccRecipients;	/* optional element of type ns1:ArrayOfRecipientsType */
	bool *IsReadReceiptRequested;	/* optional element of type xsd:boolean */
	bool *IsDeliveryReceiptRequested;	/* optional element of type xsd:boolean */
	ns1__SingleRecipientType *From;	/* optional element of type ns1:SingleRecipientType */
	ns1__ItemIdType *ReferenceItemId;	/* optional element of type ns1:ItemIdType */
	std::string *ObjectName;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 566; } /* = unique type id SOAP_TYPE_ns1__WellKnownResponseObjectType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__WellKnownResponseObjectType() { ns1__WellKnownResponseObjectType::soap_default(NULL); }
	virtual ~ns1__WellKnownResponseObjectType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SmartResponseBaseType
#define SOAP_TYPE_ns1__SmartResponseBaseType (567)
/* ns1:SmartResponseBaseType */
class SOAP_CMAC ns1__SmartResponseBaseType
{
public:
	std::string *Subject;	/* optional element of type xsd:string */
	ns1__BodyType *Body;	/* optional element of type ns1:BodyType */
	ns1__ArrayOfRecipientsType *ToRecipients;	/* optional element of type ns1:ArrayOfRecipientsType */
	ns1__ArrayOfRecipientsType *CcRecipients;	/* optional element of type ns1:ArrayOfRecipientsType */
	ns1__ArrayOfRecipientsType *BccRecipients;	/* optional element of type ns1:ArrayOfRecipientsType */
	bool *IsReadReceiptRequested;	/* optional element of type xsd:boolean */
	bool *IsDeliveryReceiptRequested;	/* optional element of type xsd:boolean */
	ns1__SingleRecipientType *From;	/* optional element of type ns1:SingleRecipientType */
	ns1__ItemIdType *ReferenceItemId;	/* optional element of type ns1:ItemIdType */
	std::string *ObjectName;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 567; } /* = unique type id SOAP_TYPE_ns1__SmartResponseBaseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SmartResponseBaseType() { ns1__SmartResponseBaseType::soap_default(NULL); }
	virtual ~ns1__SmartResponseBaseType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ReferenceItemResponseType
#define SOAP_TYPE_ns1__ReferenceItemResponseType (573)
/* ns1:ReferenceItemResponseType */
class SOAP_CMAC ns1__ReferenceItemResponseType
{
public:
	ns1__ItemIdType *ReferenceItemId;	/* optional element of type ns1:ItemIdType */
	std::string *ObjectName;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 573; } /* = unique type id SOAP_TYPE_ns1__ReferenceItemResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ReferenceItemResponseType() { ns1__ReferenceItemResponseType::soap_default(NULL); }
	virtual ~ns1__ReferenceItemResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ProposeNewTimeType
#define SOAP_TYPE_ns1__ProposeNewTimeType (680)
/* ns1:ProposeNewTimeType */
class SOAP_CMAC ns1__ProposeNewTimeType : public ns1__ResponseObjectType
{
public:
	virtual int soap_type() const { return 680; } /* = unique type id SOAP_TYPE_ns1__ProposeNewTimeType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ProposeNewTimeType() { ns1__ProposeNewTimeType::soap_default(NULL); }
	virtual ~ns1__ProposeNewTimeType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__RemoveItemType
#define SOAP_TYPE_ns1__RemoveItemType (681)
/* ns1:RemoveItemType */
class SOAP_CMAC ns1__RemoveItemType : public ns1__ResponseObjectType
{
public:
	virtual int soap_type() const { return 681; } /* = unique type id SOAP_TYPE_ns1__RemoveItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__RemoveItemType() { ns1__RemoveItemType::soap_default(NULL); }
	virtual ~ns1__RemoveItemType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AddItemToMyCalendarType
#define SOAP_TYPE_ns1__AddItemToMyCalendarType (682)
/* ns1:AddItemToMyCalendarType */
class SOAP_CMAC ns1__AddItemToMyCalendarType : public ns1__ResponseObjectType
{
public:
	virtual int soap_type() const { return 682; } /* = unique type id SOAP_TYPE_ns1__AddItemToMyCalendarType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AddItemToMyCalendarType() { ns1__AddItemToMyCalendarType::soap_default(NULL); }
	virtual ~ns1__AddItemToMyCalendarType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PostReplyItemBaseType
#define SOAP_TYPE_ns1__PostReplyItemBaseType (683)
/* ns1:PostReplyItemBaseType */
class SOAP_CMAC ns1__PostReplyItemBaseType
{
public:
	std::string *Subject;	/* optional element of type xsd:string */
	ns1__BodyType *Body;	/* optional element of type ns1:BodyType */
	ns1__ItemIdType *ReferenceItemId;	/* optional element of type ns1:ItemIdType */
	std::string *ObjectName;	/* optional attribute */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 683; } /* = unique type id SOAP_TYPE_ns1__PostReplyItemBaseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PostReplyItemBaseType() { ns1__PostReplyItemBaseType::soap_default(NULL); }
	virtual ~ns1__PostReplyItemBaseType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SmartResponseType
#define SOAP_TYPE_ns1__SmartResponseType (568)
/* ns1:SmartResponseType */
class SOAP_CMAC ns1__SmartResponseType : public ns1__SmartResponseBaseType
{
public:
	ns1__BodyType *NewBodyContent;	/* optional element of type ns1:BodyType */
public:
	virtual int soap_type() const { return 568; } /* = unique type id SOAP_TYPE_ns1__SmartResponseType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SmartResponseType() { ns1__SmartResponseType::soap_default(NULL); }
	virtual ~ns1__SmartResponseType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SuppressReadReceiptType
#define SOAP_TYPE_ns1__SuppressReadReceiptType (574)
/* ns1:SuppressReadReceiptType */
class SOAP_CMAC ns1__SuppressReadReceiptType : public ns1__ReferenceItemResponseType
{
public:
	virtual int soap_type() const { return 574; } /* = unique type id SOAP_TYPE_ns1__SuppressReadReceiptType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SuppressReadReceiptType() { ns1__SuppressReadReceiptType::soap_default(NULL); }
	virtual ~ns1__SuppressReadReceiptType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MeetingRegistrationResponseObjectType
#define SOAP_TYPE_ns1__MeetingRegistrationResponseObjectType (676)
/* ns1:MeetingRegistrationResponseObjectType */
class SOAP_CMAC ns1__MeetingRegistrationResponseObjectType : public ns1__WellKnownResponseObjectType
{
public:
	time_t *ProposedStart;	/* optional element of type xsd:dateTime */
	time_t *ProposedEnd;	/* optional element of type xsd:dateTime */
public:
	virtual int soap_type() const { return 676; } /* = unique type id SOAP_TYPE_ns1__MeetingRegistrationResponseObjectType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MeetingRegistrationResponseObjectType() { ns1__MeetingRegistrationResponseObjectType::soap_default(NULL); }
	virtual ~ns1__MeetingRegistrationResponseObjectType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PostReplyItemType
#define SOAP_TYPE_ns1__PostReplyItemType (684)
/* ns1:PostReplyItemType */
class SOAP_CMAC ns1__PostReplyItemType : public ns1__PostReplyItemBaseType
{
public:
	ns1__BodyType *NewBodyContent;	/* optional element of type ns1:BodyType */
public:
	virtual int soap_type() const { return 684; } /* = unique type id SOAP_TYPE_ns1__PostReplyItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PostReplyItemType() { ns1__PostReplyItemType::soap_default(NULL); }
	virtual ~ns1__PostReplyItemType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AcceptSharingInvitationType
#define SOAP_TYPE_ns1__AcceptSharingInvitationType (911)
/* ns1:AcceptSharingInvitationType */
class SOAP_CMAC ns1__AcceptSharingInvitationType : public ns1__ReferenceItemResponseType
{
public:
	virtual int soap_type() const { return 911; } /* = unique type id SOAP_TYPE_ns1__AcceptSharingInvitationType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AcceptSharingInvitationType() { ns1__AcceptSharingInvitationType::soap_default(NULL); }
	virtual ~ns1__AcceptSharingInvitationType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ReplyToItemType
#define SOAP_TYPE_ns1__ReplyToItemType (569)
/* ns1:ReplyToItemType */
class SOAP_CMAC ns1__ReplyToItemType : public ns1__SmartResponseType
{
public:
	virtual int soap_type() const { return 569; } /* = unique type id SOAP_TYPE_ns1__ReplyToItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ReplyToItemType() { ns1__ReplyToItemType::soap_default(NULL); }
	virtual ~ns1__ReplyToItemType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ReplyAllToItemType
#define SOAP_TYPE_ns1__ReplyAllToItemType (570)
/* ns1:ReplyAllToItemType */
class SOAP_CMAC ns1__ReplyAllToItemType : public ns1__SmartResponseType
{
public:
	virtual int soap_type() const { return 570; } /* = unique type id SOAP_TYPE_ns1__ReplyAllToItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ReplyAllToItemType() { ns1__ReplyAllToItemType::soap_default(NULL); }
	virtual ~ns1__ReplyAllToItemType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ForwardItemType
#define SOAP_TYPE_ns1__ForwardItemType (571)
/* ns1:ForwardItemType */
class SOAP_CMAC ns1__ForwardItemType : public ns1__SmartResponseType
{
public:
	virtual int soap_type() const { return 571; } /* = unique type id SOAP_TYPE_ns1__ForwardItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ForwardItemType() { ns1__ForwardItemType::soap_default(NULL); }
	virtual ~ns1__ForwardItemType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CancelCalendarItemType
#define SOAP_TYPE_ns1__CancelCalendarItemType (572)
/* ns1:CancelCalendarItemType */
class SOAP_CMAC ns1__CancelCalendarItemType : public ns1__SmartResponseType
{
public:
	virtual int soap_type() const { return 572; } /* = unique type id SOAP_TYPE_ns1__CancelCalendarItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CancelCalendarItemType() { ns1__CancelCalendarItemType::soap_default(NULL); }
	virtual ~ns1__CancelCalendarItemType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AcceptItemType
#define SOAP_TYPE_ns1__AcceptItemType (677)
/* ns1:AcceptItemType */
class SOAP_CMAC ns1__AcceptItemType : public ns1__MeetingRegistrationResponseObjectType
{
public:
	virtual int soap_type() const { return 677; } /* = unique type id SOAP_TYPE_ns1__AcceptItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AcceptItemType() { ns1__AcceptItemType::soap_default(NULL); }
	virtual ~ns1__AcceptItemType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__TentativelyAcceptItemType
#define SOAP_TYPE_ns1__TentativelyAcceptItemType (678)
/* ns1:TentativelyAcceptItemType */
class SOAP_CMAC ns1__TentativelyAcceptItemType : public ns1__MeetingRegistrationResponseObjectType
{
public:
	virtual int soap_type() const { return 678; } /* = unique type id SOAP_TYPE_ns1__TentativelyAcceptItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__TentativelyAcceptItemType() { ns1__TentativelyAcceptItemType::soap_default(NULL); }
	virtual ~ns1__TentativelyAcceptItemType() { }
};
#endif

#ifndef SOAP_TYPE_ns1__DeclineItemType
#define SOAP_TYPE_ns1__DeclineItemType (679)
/* ns1:DeclineItemType */
class SOAP_CMAC ns1__DeclineItemType : public ns1__MeetingRegistrationResponseObjectType
{
public:
	virtual int soap_type() const { return 679; } /* = unique type id SOAP_TYPE_ns1__DeclineItemType */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__DeclineItemType() { ns1__DeclineItemType::soap_default(NULL); }
	virtual ~ns1__DeclineItemType() { }
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (2362)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	enum ns1__DateTimePrecisionType *ns1__DateTimePrecision;	/* mustUnderstand */
	ns1__ExchangeImpersonationType *ns1__ExchangeImpersonation;	/* mustUnderstand */
	ns1__MailboxCultureType *ns1__MailboxCulture;	/* mustUnderstand */
	ns1__ManagementRoleType *ns1__ManagementRole;	/* mustUnderstand */
	_ns1__RequestServerVersion *ns1__RequestServerVersion;	/* mustUnderstand */
	_ns1__ServerVersionInfo *ns1__ServerVersionInfo;	/* optional element of type ns1:ServerVersionInfo */
	ns1__TimeZoneContextType *ns1__TimeZoneContext;	/* mustUnderstand */
public:
	int soap_type() const { return 2362; } /* = unique type id SOAP_TYPE_SOAP_ENV__Header */
};
#endif

#endif

#ifndef SOAP_TYPE___ews__ResolveNamesResponse
#define SOAP_TYPE___ews__ResolveNamesResponse (2370)
/* Operation wrapper: */
struct __ews__ResolveNamesResponse
{
public:
	ews__ResolveNamesResponseType *ews__ResolveNamesResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:ResolveNamesResponseType */
public:
	int soap_type() const { return 2370; } /* = unique type id SOAP_TYPE___ews__ResolveNamesResponse */
};
#endif

#ifndef SOAP_TYPE___ews__ResolveNames
#define SOAP_TYPE___ews__ResolveNames (2375)
/* Operation wrapper: */
struct __ews__ResolveNames
{
public:
	ews__ResolveNamesType *ews__ResolveNames;	/* optional element of type ews:ResolveNamesType */
public:
	int soap_type() const { return 2375; } /* = unique type id SOAP_TYPE___ews__ResolveNames */
};
#endif

#ifndef SOAP_TYPE___ews__ExpandDLResponse
#define SOAP_TYPE___ews__ExpandDLResponse (2376)
/* Operation wrapper: */
struct __ews__ExpandDLResponse
{
public:
	ews__ExpandDLResponseType *ews__ExpandDLResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:ExpandDLResponseType */
public:
	int soap_type() const { return 2376; } /* = unique type id SOAP_TYPE___ews__ExpandDLResponse */
};
#endif

#ifndef SOAP_TYPE___ews__ExpandDL
#define SOAP_TYPE___ews__ExpandDL (2381)
/* Operation wrapper: */
struct __ews__ExpandDL
{
public:
	ews__ExpandDLType *ews__ExpandDL;	/* optional element of type ews:ExpandDLType */
public:
	int soap_type() const { return 2381; } /* = unique type id SOAP_TYPE___ews__ExpandDL */
};
#endif

#ifndef SOAP_TYPE___ews__GetServerTimeZonesResponse
#define SOAP_TYPE___ews__GetServerTimeZonesResponse (2382)
/* Operation wrapper: */
struct __ews__GetServerTimeZonesResponse
{
public:
	ews__GetServerTimeZonesResponseType *ews__GetServerTimeZonesResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetServerTimeZonesResponseType */
public:
	int soap_type() const { return 2382; } /* = unique type id SOAP_TYPE___ews__GetServerTimeZonesResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetServerTimeZones
#define SOAP_TYPE___ews__GetServerTimeZones (2387)
/* Operation wrapper: */
struct __ews__GetServerTimeZones
{
public:
	ews__GetServerTimeZonesType *ews__GetServerTimeZones;	/* optional element of type ews:GetServerTimeZonesType */
public:
	int soap_type() const { return 2387; } /* = unique type id SOAP_TYPE___ews__GetServerTimeZones */
};
#endif

#ifndef SOAP_TYPE___ews__FindFolderResponse
#define SOAP_TYPE___ews__FindFolderResponse (2388)
/* Operation wrapper: */
struct __ews__FindFolderResponse
{
public:
	ews__FindFolderResponseType *ews__FindFolderResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:FindFolderResponseType */
public:
	int soap_type() const { return 2388; } /* = unique type id SOAP_TYPE___ews__FindFolderResponse */
};
#endif

#ifndef SOAP_TYPE___ews__FindFolder
#define SOAP_TYPE___ews__FindFolder (2393)
/* Operation wrapper: */
struct __ews__FindFolder
{
public:
	ews__FindFolderType *ews__FindFolder;	/* optional element of type ews:FindFolderType */
public:
	int soap_type() const { return 2393; } /* = unique type id SOAP_TYPE___ews__FindFolder */
};
#endif

#ifndef SOAP_TYPE___ews__FindItemResponse
#define SOAP_TYPE___ews__FindItemResponse (2394)
/* Operation wrapper: */
struct __ews__FindItemResponse
{
public:
	ews__FindItemResponseType *ews__FindItemResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:FindItemResponseType */
public:
	int soap_type() const { return 2394; } /* = unique type id SOAP_TYPE___ews__FindItemResponse */
};
#endif

#ifndef SOAP_TYPE___ews__FindItem
#define SOAP_TYPE___ews__FindItem (2399)
/* Operation wrapper: */
struct __ews__FindItem
{
public:
	ews__FindItemType *ews__FindItem;	/* optional element of type ews:FindItemType */
public:
	int soap_type() const { return 2399; } /* = unique type id SOAP_TYPE___ews__FindItem */
};
#endif

#ifndef SOAP_TYPE___ews__GetFolderResponse
#define SOAP_TYPE___ews__GetFolderResponse (2400)
/* Operation wrapper: */
struct __ews__GetFolderResponse
{
public:
	ews__GetFolderResponseType *ews__GetFolderResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetFolderResponseType */
public:
	int soap_type() const { return 2400; } /* = unique type id SOAP_TYPE___ews__GetFolderResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetFolder
#define SOAP_TYPE___ews__GetFolder (2405)
/* Operation wrapper: */
struct __ews__GetFolder
{
public:
	ews__GetFolderType *ews__GetFolder;	/* optional element of type ews:GetFolderType */
public:
	int soap_type() const { return 2405; } /* = unique type id SOAP_TYPE___ews__GetFolder */
};
#endif

#ifndef SOAP_TYPE___ews__ConvertIdResponse
#define SOAP_TYPE___ews__ConvertIdResponse (2406)
/* Operation wrapper: */
struct __ews__ConvertIdResponse
{
public:
	ews__ConvertIdResponseType *ews__ConvertIdResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:ConvertIdResponseType */
public:
	int soap_type() const { return 2406; } /* = unique type id SOAP_TYPE___ews__ConvertIdResponse */
};
#endif

#ifndef SOAP_TYPE___ews__ConvertId
#define SOAP_TYPE___ews__ConvertId (2411)
/* Operation wrapper: */
struct __ews__ConvertId
{
public:
	ews__ConvertIdType *ews__ConvertId;	/* optional element of type ews:ConvertIdType */
public:
	int soap_type() const { return 2411; } /* = unique type id SOAP_TYPE___ews__ConvertId */
};
#endif

#ifndef SOAP_TYPE___ews__UploadItemsResponse
#define SOAP_TYPE___ews__UploadItemsResponse (2412)
/* Operation wrapper: */
struct __ews__UploadItemsResponse
{
public:
	ews__UploadItemsResponseType *ews__UploadItemsResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:UploadItemsResponseType */
public:
	int soap_type() const { return 2412; } /* = unique type id SOAP_TYPE___ews__UploadItemsResponse */
};
#endif

#ifndef SOAP_TYPE___ews__UploadItems
#define SOAP_TYPE___ews__UploadItems (2417)
/* Operation wrapper: */
struct __ews__UploadItems
{
public:
	ews__UploadItemsType *ews__UploadItems;	/* optional element of type ews:UploadItemsType */
public:
	int soap_type() const { return 2417; } /* = unique type id SOAP_TYPE___ews__UploadItems */
};
#endif

#ifndef SOAP_TYPE___ews__ExportItemsResponse
#define SOAP_TYPE___ews__ExportItemsResponse (2418)
/* Operation wrapper: */
struct __ews__ExportItemsResponse
{
public:
	ews__ExportItemsResponseType *ews__ExportItemsResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:ExportItemsResponseType */
public:
	int soap_type() const { return 2418; } /* = unique type id SOAP_TYPE___ews__ExportItemsResponse */
};
#endif

#ifndef SOAP_TYPE___ews__ExportItems
#define SOAP_TYPE___ews__ExportItems (2423)
/* Operation wrapper: */
struct __ews__ExportItems
{
public:
	ews__ExportItemsType *ews__ExportItems;	/* optional element of type ews:ExportItemsType */
public:
	int soap_type() const { return 2423; } /* = unique type id SOAP_TYPE___ews__ExportItems */
};
#endif

#ifndef SOAP_TYPE___ews__CreateFolderPathResponse
#define SOAP_TYPE___ews__CreateFolderPathResponse (2424)
/* Operation wrapper: */
struct __ews__CreateFolderPathResponse
{
public:
	ews__CreateFolderPathResponseType *ews__CreateFolderPathResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:CreateFolderPathResponseType */
public:
	int soap_type() const { return 2424; } /* = unique type id SOAP_TYPE___ews__CreateFolderPathResponse */
};
#endif

#ifndef SOAP_TYPE___ews__CreateFolderPath
#define SOAP_TYPE___ews__CreateFolderPath (2429)
/* Operation wrapper: */
struct __ews__CreateFolderPath
{
public:
	ews__CreateFolderPathType *ews__CreateFolderPath;	/* optional element of type ews:CreateFolderPathType */
public:
	int soap_type() const { return 2429; } /* = unique type id SOAP_TYPE___ews__CreateFolderPath */
};
#endif

#ifndef SOAP_TYPE___ews__CreateFolderResponse
#define SOAP_TYPE___ews__CreateFolderResponse (2430)
/* Operation wrapper: */
struct __ews__CreateFolderResponse
{
public:
	ews__CreateFolderResponseType *ews__CreateFolderResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:CreateFolderResponseType */
public:
	int soap_type() const { return 2430; } /* = unique type id SOAP_TYPE___ews__CreateFolderResponse */
};
#endif

#ifndef SOAP_TYPE___ews__CreateFolder
#define SOAP_TYPE___ews__CreateFolder (2435)
/* Operation wrapper: */
struct __ews__CreateFolder
{
public:
	ews__CreateFolderType *ews__CreateFolder;	/* optional element of type ews:CreateFolderType */
public:
	int soap_type() const { return 2435; } /* = unique type id SOAP_TYPE___ews__CreateFolder */
};
#endif

#ifndef SOAP_TYPE___ews__DeleteFolderResponse
#define SOAP_TYPE___ews__DeleteFolderResponse (2436)
/* Operation wrapper: */
struct __ews__DeleteFolderResponse
{
public:
	ews__DeleteFolderResponseType *ews__DeleteFolderResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:DeleteFolderResponseType */
public:
	int soap_type() const { return 2436; } /* = unique type id SOAP_TYPE___ews__DeleteFolderResponse */
};
#endif

#ifndef SOAP_TYPE___ews__DeleteFolder
#define SOAP_TYPE___ews__DeleteFolder (2441)
/* Operation wrapper: */
struct __ews__DeleteFolder
{
public:
	ews__DeleteFolderType *ews__DeleteFolder;	/* optional element of type ews:DeleteFolderType */
public:
	int soap_type() const { return 2441; } /* = unique type id SOAP_TYPE___ews__DeleteFolder */
};
#endif

#ifndef SOAP_TYPE___ews__EmptyFolderResponse
#define SOAP_TYPE___ews__EmptyFolderResponse (2442)
/* Operation wrapper: */
struct __ews__EmptyFolderResponse
{
public:
	ews__EmptyFolderResponseType *ews__EmptyFolderResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:EmptyFolderResponseType */
public:
	int soap_type() const { return 2442; } /* = unique type id SOAP_TYPE___ews__EmptyFolderResponse */
};
#endif

#ifndef SOAP_TYPE___ews__EmptyFolder
#define SOAP_TYPE___ews__EmptyFolder (2447)
/* Operation wrapper: */
struct __ews__EmptyFolder
{
public:
	ews__EmptyFolderType *ews__EmptyFolder;	/* optional element of type ews:EmptyFolderType */
public:
	int soap_type() const { return 2447; } /* = unique type id SOAP_TYPE___ews__EmptyFolder */
};
#endif

#ifndef SOAP_TYPE___ews__UpdateFolderResponse
#define SOAP_TYPE___ews__UpdateFolderResponse (2448)
/* Operation wrapper: */
struct __ews__UpdateFolderResponse
{
public:
	ews__UpdateFolderResponseType *ews__UpdateFolderResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:UpdateFolderResponseType */
public:
	int soap_type() const { return 2448; } /* = unique type id SOAP_TYPE___ews__UpdateFolderResponse */
};
#endif

#ifndef SOAP_TYPE___ews__UpdateFolder
#define SOAP_TYPE___ews__UpdateFolder (2453)
/* Operation wrapper: */
struct __ews__UpdateFolder
{
public:
	ews__UpdateFolderType *ews__UpdateFolder;	/* optional element of type ews:UpdateFolderType */
public:
	int soap_type() const { return 2453; } /* = unique type id SOAP_TYPE___ews__UpdateFolder */
};
#endif

#ifndef SOAP_TYPE___ews__MoveFolderResponse
#define SOAP_TYPE___ews__MoveFolderResponse (2454)
/* Operation wrapper: */
struct __ews__MoveFolderResponse
{
public:
	ews__MoveFolderResponseType *ews__MoveFolderResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:MoveFolderResponseType */
public:
	int soap_type() const { return 2454; } /* = unique type id SOAP_TYPE___ews__MoveFolderResponse */
};
#endif

#ifndef SOAP_TYPE___ews__MoveFolder
#define SOAP_TYPE___ews__MoveFolder (2459)
/* Operation wrapper: */
struct __ews__MoveFolder
{
public:
	ews__MoveFolderType *ews__MoveFolder;	/* optional element of type ews:MoveFolderType */
public:
	int soap_type() const { return 2459; } /* = unique type id SOAP_TYPE___ews__MoveFolder */
};
#endif

#ifndef SOAP_TYPE___ews__CopyFolderResponse
#define SOAP_TYPE___ews__CopyFolderResponse (2460)
/* Operation wrapper: */
struct __ews__CopyFolderResponse
{
public:
	ews__CopyFolderResponseType *ews__CopyFolderResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:CopyFolderResponseType */
public:
	int soap_type() const { return 2460; } /* = unique type id SOAP_TYPE___ews__CopyFolderResponse */
};
#endif

#ifndef SOAP_TYPE___ews__CopyFolder
#define SOAP_TYPE___ews__CopyFolder (2465)
/* Operation wrapper: */
struct __ews__CopyFolder
{
public:
	ews__CopyFolderType *ews__CopyFolder;	/* optional element of type ews:CopyFolderType */
public:
	int soap_type() const { return 2465; } /* = unique type id SOAP_TYPE___ews__CopyFolder */
};
#endif

#ifndef SOAP_TYPE___ews__SubscribeResponse
#define SOAP_TYPE___ews__SubscribeResponse (2466)
/* Operation wrapper: */
struct __ews__SubscribeResponse
{
public:
	ews__SubscribeResponseType *ews__SubscribeResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:SubscribeResponseType */
public:
	int soap_type() const { return 2466; } /* = unique type id SOAP_TYPE___ews__SubscribeResponse */
};
#endif

#ifndef SOAP_TYPE___ews__Subscribe
#define SOAP_TYPE___ews__Subscribe (2471)
/* Operation wrapper: */
struct __ews__Subscribe
{
public:
	ews__SubscribeType *ews__Subscribe;	/* optional element of type ews:SubscribeType */
public:
	int soap_type() const { return 2471; } /* = unique type id SOAP_TYPE___ews__Subscribe */
};
#endif

#ifndef SOAP_TYPE___ews__UnsubscribeResponse
#define SOAP_TYPE___ews__UnsubscribeResponse (2472)
/* Operation wrapper: */
struct __ews__UnsubscribeResponse
{
public:
	ews__UnsubscribeResponseType *ews__UnsubscribeResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:UnsubscribeResponseType */
public:
	int soap_type() const { return 2472; } /* = unique type id SOAP_TYPE___ews__UnsubscribeResponse */
};
#endif

#ifndef SOAP_TYPE___ews__Unsubscribe
#define SOAP_TYPE___ews__Unsubscribe (2477)
/* Operation wrapper: */
struct __ews__Unsubscribe
{
public:
	ews__UnsubscribeType *ews__Unsubscribe;	/* optional element of type ews:UnsubscribeType */
public:
	int soap_type() const { return 2477; } /* = unique type id SOAP_TYPE___ews__Unsubscribe */
};
#endif

#ifndef SOAP_TYPE___ews__GetEventsResponse
#define SOAP_TYPE___ews__GetEventsResponse (2478)
/* Operation wrapper: */
struct __ews__GetEventsResponse
{
public:
	ews__GetEventsResponseType *ews__GetEventsResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetEventsResponseType */
public:
	int soap_type() const { return 2478; } /* = unique type id SOAP_TYPE___ews__GetEventsResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetEvents
#define SOAP_TYPE___ews__GetEvents (2483)
/* Operation wrapper: */
struct __ews__GetEvents
{
public:
	ews__GetEventsType *ews__GetEvents;	/* optional element of type ews:GetEventsType */
public:
	int soap_type() const { return 2483; } /* = unique type id SOAP_TYPE___ews__GetEvents */
};
#endif

#ifndef SOAP_TYPE___ews__GetStreamingEventsResponse
#define SOAP_TYPE___ews__GetStreamingEventsResponse (2484)
/* Operation wrapper: */
struct __ews__GetStreamingEventsResponse
{
public:
	ews__GetStreamingEventsResponseType *ews__GetStreamingEventsResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetStreamingEventsResponseType */
public:
	int soap_type() const { return 2484; } /* = unique type id SOAP_TYPE___ews__GetStreamingEventsResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetStreamingEvents
#define SOAP_TYPE___ews__GetStreamingEvents (2489)
/* Operation wrapper: */
struct __ews__GetStreamingEvents
{
public:
	ews__GetStreamingEventsType *ews__GetStreamingEvents;	/* optional element of type ews:GetStreamingEventsType */
public:
	int soap_type() const { return 2489; } /* = unique type id SOAP_TYPE___ews__GetStreamingEvents */
};
#endif

#ifndef SOAP_TYPE___ews__SyncFolderHierarchyResponse
#define SOAP_TYPE___ews__SyncFolderHierarchyResponse (2490)
/* Operation wrapper: */
struct __ews__SyncFolderHierarchyResponse
{
public:
	ews__SyncFolderHierarchyResponseType *ews__SyncFolderHierarchyResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:SyncFolderHierarchyResponseType */
public:
	int soap_type() const { return 2490; } /* = unique type id SOAP_TYPE___ews__SyncFolderHierarchyResponse */
};
#endif

#ifndef SOAP_TYPE___ews__SyncFolderHierarchy
#define SOAP_TYPE___ews__SyncFolderHierarchy (2495)
/* Operation wrapper: */
struct __ews__SyncFolderHierarchy
{
public:
	ews__SyncFolderHierarchyType *ews__SyncFolderHierarchy;	/* optional element of type ews:SyncFolderHierarchyType */
public:
	int soap_type() const { return 2495; } /* = unique type id SOAP_TYPE___ews__SyncFolderHierarchy */
};
#endif

#ifndef SOAP_TYPE___ews__SyncFolderItemsResponse
#define SOAP_TYPE___ews__SyncFolderItemsResponse (2496)
/* Operation wrapper: */
struct __ews__SyncFolderItemsResponse
{
public:
	ews__SyncFolderItemsResponseType *ews__SyncFolderItemsResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:SyncFolderItemsResponseType */
public:
	int soap_type() const { return 2496; } /* = unique type id SOAP_TYPE___ews__SyncFolderItemsResponse */
};
#endif

#ifndef SOAP_TYPE___ews__SyncFolderItems
#define SOAP_TYPE___ews__SyncFolderItems (2501)
/* Operation wrapper: */
struct __ews__SyncFolderItems
{
public:
	ews__SyncFolderItemsType *ews__SyncFolderItems;	/* optional element of type ews:SyncFolderItemsType */
public:
	int soap_type() const { return 2501; } /* = unique type id SOAP_TYPE___ews__SyncFolderItems */
};
#endif

#ifndef SOAP_TYPE___ews__GetItemResponse
#define SOAP_TYPE___ews__GetItemResponse (2502)
/* Operation wrapper: */
struct __ews__GetItemResponse
{
public:
	ews__GetItemResponseType *ews__GetItemResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetItemResponseType */
public:
	int soap_type() const { return 2502; } /* = unique type id SOAP_TYPE___ews__GetItemResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetItem
#define SOAP_TYPE___ews__GetItem (2507)
/* Operation wrapper: */
struct __ews__GetItem
{
public:
	ews__GetItemType *ews__GetItem;	/* optional element of type ews:GetItemType */
public:
	int soap_type() const { return 2507; } /* = unique type id SOAP_TYPE___ews__GetItem */
};
#endif

#ifndef SOAP_TYPE___ews__CreateItemResponse
#define SOAP_TYPE___ews__CreateItemResponse (2508)
/* Operation wrapper: */
struct __ews__CreateItemResponse
{
public:
	ews__CreateItemResponseType *ews__CreateItemResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:CreateItemResponseType */
public:
	int soap_type() const { return 2508; } /* = unique type id SOAP_TYPE___ews__CreateItemResponse */
};
#endif

#ifndef SOAP_TYPE___ews__CreateItem
#define SOAP_TYPE___ews__CreateItem (2513)
/* Operation wrapper: */
struct __ews__CreateItem
{
public:
	ews__CreateItemType *ews__CreateItem;	/* optional element of type ews:CreateItemType */
public:
	int soap_type() const { return 2513; } /* = unique type id SOAP_TYPE___ews__CreateItem */
};
#endif

#ifndef SOAP_TYPE___ews__DeleteItemResponse
#define SOAP_TYPE___ews__DeleteItemResponse (2514)
/* Operation wrapper: */
struct __ews__DeleteItemResponse
{
public:
	ews__DeleteItemResponseType *ews__DeleteItemResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:DeleteItemResponseType */
public:
	int soap_type() const { return 2514; } /* = unique type id SOAP_TYPE___ews__DeleteItemResponse */
};
#endif

#ifndef SOAP_TYPE___ews__DeleteItem
#define SOAP_TYPE___ews__DeleteItem (2519)
/* Operation wrapper: */
struct __ews__DeleteItem
{
public:
	ews__DeleteItemType *ews__DeleteItem;	/* optional element of type ews:DeleteItemType */
public:
	int soap_type() const { return 2519; } /* = unique type id SOAP_TYPE___ews__DeleteItem */
};
#endif

#ifndef SOAP_TYPE___ews__UpdateItemResponse
#define SOAP_TYPE___ews__UpdateItemResponse (2520)
/* Operation wrapper: */
struct __ews__UpdateItemResponse
{
public:
	ews__UpdateItemResponseType *ews__UpdateItemResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:UpdateItemResponseType */
public:
	int soap_type() const { return 2520; } /* = unique type id SOAP_TYPE___ews__UpdateItemResponse */
};
#endif

#ifndef SOAP_TYPE___ews__UpdateItem
#define SOAP_TYPE___ews__UpdateItem (2525)
/* Operation wrapper: */
struct __ews__UpdateItem
{
public:
	ews__UpdateItemType *ews__UpdateItem;	/* optional element of type ews:UpdateItemType */
public:
	int soap_type() const { return 2525; } /* = unique type id SOAP_TYPE___ews__UpdateItem */
};
#endif

#ifndef SOAP_TYPE___ews__UpdateItemInRecoverableItemsResponse
#define SOAP_TYPE___ews__UpdateItemInRecoverableItemsResponse (2526)
/* Operation wrapper: */
struct __ews__UpdateItemInRecoverableItemsResponse
{
public:
	ews__UpdateItemInRecoverableItemsResponseType *ews__UpdateItemInRecoverableItemsResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:UpdateItemInRecoverableItemsResponseType */
public:
	int soap_type() const { return 2526; } /* = unique type id SOAP_TYPE___ews__UpdateItemInRecoverableItemsResponse */
};
#endif

#ifndef SOAP_TYPE___ews__UpdateItemInRecoverableItems
#define SOAP_TYPE___ews__UpdateItemInRecoverableItems (2531)
/* Operation wrapper: */
struct __ews__UpdateItemInRecoverableItems
{
public:
	ews__UpdateItemInRecoverableItemsType *ews__UpdateItemInRecoverableItems;	/* optional element of type ews:UpdateItemInRecoverableItemsType */
public:
	int soap_type() const { return 2531; } /* = unique type id SOAP_TYPE___ews__UpdateItemInRecoverableItems */
};
#endif

#ifndef SOAP_TYPE___ews__SendItemResponse
#define SOAP_TYPE___ews__SendItemResponse (2532)
/* Operation wrapper: */
struct __ews__SendItemResponse
{
public:
	ews__SendItemResponseType *ews__SendItemResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:SendItemResponseType */
public:
	int soap_type() const { return 2532; } /* = unique type id SOAP_TYPE___ews__SendItemResponse */
};
#endif

#ifndef SOAP_TYPE___ews__SendItem
#define SOAP_TYPE___ews__SendItem (2537)
/* Operation wrapper: */
struct __ews__SendItem
{
public:
	ews__SendItemType *ews__SendItem;	/* optional element of type ews:SendItemType */
public:
	int soap_type() const { return 2537; } /* = unique type id SOAP_TYPE___ews__SendItem */
};
#endif

#ifndef SOAP_TYPE___ews__MoveItemResponse
#define SOAP_TYPE___ews__MoveItemResponse (2538)
/* Operation wrapper: */
struct __ews__MoveItemResponse
{
public:
	ews__MoveItemResponseType *ews__MoveItemResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:MoveItemResponseType */
public:
	int soap_type() const { return 2538; } /* = unique type id SOAP_TYPE___ews__MoveItemResponse */
};
#endif

#ifndef SOAP_TYPE___ews__MoveItem
#define SOAP_TYPE___ews__MoveItem (2543)
/* Operation wrapper: */
struct __ews__MoveItem
{
public:
	ews__MoveItemType *ews__MoveItem;	/* optional element of type ews:MoveItemType */
public:
	int soap_type() const { return 2543; } /* = unique type id SOAP_TYPE___ews__MoveItem */
};
#endif

#ifndef SOAP_TYPE___ews__CopyItemResponse
#define SOAP_TYPE___ews__CopyItemResponse (2544)
/* Operation wrapper: */
struct __ews__CopyItemResponse
{
public:
	ews__CopyItemResponseType *ews__CopyItemResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:CopyItemResponseType */
public:
	int soap_type() const { return 2544; } /* = unique type id SOAP_TYPE___ews__CopyItemResponse */
};
#endif

#ifndef SOAP_TYPE___ews__CopyItem
#define SOAP_TYPE___ews__CopyItem (2549)
/* Operation wrapper: */
struct __ews__CopyItem
{
public:
	ews__CopyItemType *ews__CopyItem;	/* optional element of type ews:CopyItemType */
public:
	int soap_type() const { return 2549; } /* = unique type id SOAP_TYPE___ews__CopyItem */
};
#endif

#ifndef SOAP_TYPE___ews__ArchiveItemResponse
#define SOAP_TYPE___ews__ArchiveItemResponse (2550)
/* Operation wrapper: */
struct __ews__ArchiveItemResponse
{
public:
	ews__ArchiveItemResponseType *ews__ArchiveItemResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:ArchiveItemResponseType */
public:
	int soap_type() const { return 2550; } /* = unique type id SOAP_TYPE___ews__ArchiveItemResponse */
};
#endif

#ifndef SOAP_TYPE___ews__ArchiveItem
#define SOAP_TYPE___ews__ArchiveItem (2555)
/* Operation wrapper: */
struct __ews__ArchiveItem
{
public:
	ews__ArchiveItemType *ews__ArchiveItem;	/* optional element of type ews:ArchiveItemType */
public:
	int soap_type() const { return 2555; } /* = unique type id SOAP_TYPE___ews__ArchiveItem */
};
#endif

#ifndef SOAP_TYPE___ews__CreateAttachmentResponse
#define SOAP_TYPE___ews__CreateAttachmentResponse (2556)
/* Operation wrapper: */
struct __ews__CreateAttachmentResponse
{
public:
	ews__CreateAttachmentResponseType *ews__CreateAttachmentResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:CreateAttachmentResponseType */
public:
	int soap_type() const { return 2556; } /* = unique type id SOAP_TYPE___ews__CreateAttachmentResponse */
};
#endif

#ifndef SOAP_TYPE___ews__CreateAttachment
#define SOAP_TYPE___ews__CreateAttachment (2561)
/* Operation wrapper: */
struct __ews__CreateAttachment
{
public:
	ews__CreateAttachmentType *ews__CreateAttachment;	/* optional element of type ews:CreateAttachmentType */
public:
	int soap_type() const { return 2561; } /* = unique type id SOAP_TYPE___ews__CreateAttachment */
};
#endif

#ifndef SOAP_TYPE___ews__DeleteAttachmentResponse
#define SOAP_TYPE___ews__DeleteAttachmentResponse (2562)
/* Operation wrapper: */
struct __ews__DeleteAttachmentResponse
{
public:
	ews__DeleteAttachmentResponseType *ews__DeleteAttachmentResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:DeleteAttachmentResponseType */
public:
	int soap_type() const { return 2562; } /* = unique type id SOAP_TYPE___ews__DeleteAttachmentResponse */
};
#endif

#ifndef SOAP_TYPE___ews__DeleteAttachment
#define SOAP_TYPE___ews__DeleteAttachment (2567)
/* Operation wrapper: */
struct __ews__DeleteAttachment
{
public:
	ews__DeleteAttachmentType *ews__DeleteAttachment;	/* optional element of type ews:DeleteAttachmentType */
public:
	int soap_type() const { return 2567; } /* = unique type id SOAP_TYPE___ews__DeleteAttachment */
};
#endif

#ifndef SOAP_TYPE___ews__GetAttachmentResponse
#define SOAP_TYPE___ews__GetAttachmentResponse (2568)
/* Operation wrapper: */
struct __ews__GetAttachmentResponse
{
public:
	ews__GetAttachmentResponseType *ews__GetAttachmentResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetAttachmentResponseType */
public:
	int soap_type() const { return 2568; } /* = unique type id SOAP_TYPE___ews__GetAttachmentResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetAttachment
#define SOAP_TYPE___ews__GetAttachment (2573)
/* Operation wrapper: */
struct __ews__GetAttachment
{
public:
	ews__GetAttachmentType *ews__GetAttachment;	/* optional element of type ews:GetAttachmentType */
public:
	int soap_type() const { return 2573; } /* = unique type id SOAP_TYPE___ews__GetAttachment */
};
#endif

#ifndef SOAP_TYPE___ews__GetClientAccessTokenResponse
#define SOAP_TYPE___ews__GetClientAccessTokenResponse (2574)
/* Operation wrapper: */
struct __ews__GetClientAccessTokenResponse
{
public:
	ews__GetClientAccessTokenResponseType *ews__GetClientAccessTokenResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetClientAccessTokenResponseType */
public:
	int soap_type() const { return 2574; } /* = unique type id SOAP_TYPE___ews__GetClientAccessTokenResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetClientAccessToken
#define SOAP_TYPE___ews__GetClientAccessToken (2579)
/* Operation wrapper: */
struct __ews__GetClientAccessToken
{
public:
	ews__GetClientAccessTokenType *ews__GetClientAccessToken;	/* optional element of type ews:GetClientAccessTokenType */
public:
	int soap_type() const { return 2579; } /* = unique type id SOAP_TYPE___ews__GetClientAccessToken */
};
#endif

#ifndef SOAP_TYPE___ews__CreateManagedFolderResponse
#define SOAP_TYPE___ews__CreateManagedFolderResponse (2580)
/* Operation wrapper: */
struct __ews__CreateManagedFolderResponse
{
public:
	ews__CreateManagedFolderResponseType *ews__CreateManagedFolderResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:CreateManagedFolderResponseType */
public:
	int soap_type() const { return 2580; } /* = unique type id SOAP_TYPE___ews__CreateManagedFolderResponse */
};
#endif

#ifndef SOAP_TYPE___ews__CreateManagedFolder
#define SOAP_TYPE___ews__CreateManagedFolder (2585)
/* Operation wrapper: */
struct __ews__CreateManagedFolder
{
public:
	ews__CreateManagedFolderRequestType *ews__CreateManagedFolder;	/* optional element of type ews:CreateManagedFolderRequestType */
public:
	int soap_type() const { return 2585; } /* = unique type id SOAP_TYPE___ews__CreateManagedFolder */
};
#endif

#ifndef SOAP_TYPE___ews__GetDelegateResponse
#define SOAP_TYPE___ews__GetDelegateResponse (2586)
/* Operation wrapper: */
struct __ews__GetDelegateResponse
{
public:
	ews__GetDelegateResponseMessageType *ews__GetDelegateResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetDelegateResponseMessageType */
public:
	int soap_type() const { return 2586; } /* = unique type id SOAP_TYPE___ews__GetDelegateResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetDelegate
#define SOAP_TYPE___ews__GetDelegate (2591)
/* Operation wrapper: */
struct __ews__GetDelegate
{
public:
	ews__GetDelegateType *ews__GetDelegate;	/* optional element of type ews:GetDelegateType */
public:
	int soap_type() const { return 2591; } /* = unique type id SOAP_TYPE___ews__GetDelegate */
};
#endif

#ifndef SOAP_TYPE___ews__AddDelegateResponse
#define SOAP_TYPE___ews__AddDelegateResponse (2592)
/* Operation wrapper: */
struct __ews__AddDelegateResponse
{
public:
	ews__AddDelegateResponseMessageType *ews__AddDelegateResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:AddDelegateResponseMessageType */
public:
	int soap_type() const { return 2592; } /* = unique type id SOAP_TYPE___ews__AddDelegateResponse */
};
#endif

#ifndef SOAP_TYPE___ews__AddDelegate
#define SOAP_TYPE___ews__AddDelegate (2597)
/* Operation wrapper: */
struct __ews__AddDelegate
{
public:
	ews__AddDelegateType *ews__AddDelegate;	/* optional element of type ews:AddDelegateType */
public:
	int soap_type() const { return 2597; } /* = unique type id SOAP_TYPE___ews__AddDelegate */
};
#endif

#ifndef SOAP_TYPE___ews__RemoveDelegateResponse
#define SOAP_TYPE___ews__RemoveDelegateResponse (2598)
/* Operation wrapper: */
struct __ews__RemoveDelegateResponse
{
public:
	ews__RemoveDelegateResponseMessageType *ews__RemoveDelegateResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:RemoveDelegateResponseMessageType */
public:
	int soap_type() const { return 2598; } /* = unique type id SOAP_TYPE___ews__RemoveDelegateResponse */
};
#endif

#ifndef SOAP_TYPE___ews__RemoveDelegate
#define SOAP_TYPE___ews__RemoveDelegate (2603)
/* Operation wrapper: */
struct __ews__RemoveDelegate
{
public:
	ews__RemoveDelegateType *ews__RemoveDelegate;	/* optional element of type ews:RemoveDelegateType */
public:
	int soap_type() const { return 2603; } /* = unique type id SOAP_TYPE___ews__RemoveDelegate */
};
#endif

#ifndef SOAP_TYPE___ews__UpdateDelegateResponse
#define SOAP_TYPE___ews__UpdateDelegateResponse (2604)
/* Operation wrapper: */
struct __ews__UpdateDelegateResponse
{
public:
	ews__UpdateDelegateResponseMessageType *ews__UpdateDelegateResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:UpdateDelegateResponseMessageType */
public:
	int soap_type() const { return 2604; } /* = unique type id SOAP_TYPE___ews__UpdateDelegateResponse */
};
#endif

#ifndef SOAP_TYPE___ews__UpdateDelegate
#define SOAP_TYPE___ews__UpdateDelegate (2609)
/* Operation wrapper: */
struct __ews__UpdateDelegate
{
public:
	ews__UpdateDelegateType *ews__UpdateDelegate;	/* optional element of type ews:UpdateDelegateType */
public:
	int soap_type() const { return 2609; } /* = unique type id SOAP_TYPE___ews__UpdateDelegate */
};
#endif

#ifndef SOAP_TYPE___ews__CreateUserConfigurationResponse
#define SOAP_TYPE___ews__CreateUserConfigurationResponse (2610)
/* Operation wrapper: */
struct __ews__CreateUserConfigurationResponse
{
public:
	ews__CreateUserConfigurationResponseType *ews__CreateUserConfigurationResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:CreateUserConfigurationResponseType */
public:
	int soap_type() const { return 2610; } /* = unique type id SOAP_TYPE___ews__CreateUserConfigurationResponse */
};
#endif

#ifndef SOAP_TYPE___ews__CreateUserConfiguration
#define SOAP_TYPE___ews__CreateUserConfiguration (2615)
/* Operation wrapper: */
struct __ews__CreateUserConfiguration
{
public:
	ews__CreateUserConfigurationType *ews__CreateUserConfiguration;	/* optional element of type ews:CreateUserConfigurationType */
public:
	int soap_type() const { return 2615; } /* = unique type id SOAP_TYPE___ews__CreateUserConfiguration */
};
#endif

#ifndef SOAP_TYPE___ews__DeleteUserConfigurationResponse
#define SOAP_TYPE___ews__DeleteUserConfigurationResponse (2616)
/* Operation wrapper: */
struct __ews__DeleteUserConfigurationResponse
{
public:
	ews__DeleteUserConfigurationResponseType *ews__DeleteUserConfigurationResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:DeleteUserConfigurationResponseType */
public:
	int soap_type() const { return 2616; } /* = unique type id SOAP_TYPE___ews__DeleteUserConfigurationResponse */
};
#endif

#ifndef SOAP_TYPE___ews__DeleteUserConfiguration
#define SOAP_TYPE___ews__DeleteUserConfiguration (2621)
/* Operation wrapper: */
struct __ews__DeleteUserConfiguration
{
public:
	ews__DeleteUserConfigurationType *ews__DeleteUserConfiguration;	/* optional element of type ews:DeleteUserConfigurationType */
public:
	int soap_type() const { return 2621; } /* = unique type id SOAP_TYPE___ews__DeleteUserConfiguration */
};
#endif

#ifndef SOAP_TYPE___ews__GetUserConfigurationResponse
#define SOAP_TYPE___ews__GetUserConfigurationResponse (2622)
/* Operation wrapper: */
struct __ews__GetUserConfigurationResponse
{
public:
	ews__GetUserConfigurationResponseType *ews__GetUserConfigurationResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetUserConfigurationResponseType */
public:
	int soap_type() const { return 2622; } /* = unique type id SOAP_TYPE___ews__GetUserConfigurationResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetUserConfiguration
#define SOAP_TYPE___ews__GetUserConfiguration (2627)
/* Operation wrapper: */
struct __ews__GetUserConfiguration
{
public:
	ews__GetUserConfigurationType *ews__GetUserConfiguration;	/* optional element of type ews:GetUserConfigurationType */
public:
	int soap_type() const { return 2627; } /* = unique type id SOAP_TYPE___ews__GetUserConfiguration */
};
#endif

#ifndef SOAP_TYPE___ews__UpdateUserConfigurationResponse
#define SOAP_TYPE___ews__UpdateUserConfigurationResponse (2628)
/* Operation wrapper: */
struct __ews__UpdateUserConfigurationResponse
{
public:
	ews__UpdateUserConfigurationResponseType *ews__UpdateUserConfigurationResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:UpdateUserConfigurationResponseType */
public:
	int soap_type() const { return 2628; } /* = unique type id SOAP_TYPE___ews__UpdateUserConfigurationResponse */
};
#endif

#ifndef SOAP_TYPE___ews__UpdateUserConfiguration
#define SOAP_TYPE___ews__UpdateUserConfiguration (2633)
/* Operation wrapper: */
struct __ews__UpdateUserConfiguration
{
public:
	ews__UpdateUserConfigurationType *ews__UpdateUserConfiguration;	/* optional element of type ews:UpdateUserConfigurationType */
public:
	int soap_type() const { return 2633; } /* = unique type id SOAP_TYPE___ews__UpdateUserConfiguration */
};
#endif

#ifndef SOAP_TYPE___ews__GetUserAvailabilityResponse
#define SOAP_TYPE___ews__GetUserAvailabilityResponse (2634)
/* Operation wrapper: */
struct __ews__GetUserAvailabilityResponse
{
public:
	ews__GetUserAvailabilityResponseType *ews__GetUserAvailabilityResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetUserAvailabilityResponseType */
public:
	int soap_type() const { return 2634; } /* = unique type id SOAP_TYPE___ews__GetUserAvailabilityResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetUserAvailability
#define SOAP_TYPE___ews__GetUserAvailability (2639)
/* Operation wrapper: */
struct __ews__GetUserAvailability
{
public:
	ews__GetUserAvailabilityRequestType *ews__GetUserAvailabilityRequest;	/* optional element of type ews:GetUserAvailabilityRequestType */
public:
	int soap_type() const { return 2639; } /* = unique type id SOAP_TYPE___ews__GetUserAvailability */
};
#endif

#ifndef SOAP_TYPE___ews__GetUserOofSettingsResponse
#define SOAP_TYPE___ews__GetUserOofSettingsResponse (2640)
/* Operation wrapper: */
struct __ews__GetUserOofSettingsResponse
{
public:
	ews__GetUserOofSettingsResponse *ews__GetUserOofSettingsResponse_;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetUserOofSettingsResponse */
public:
	int soap_type() const { return 2640; } /* = unique type id SOAP_TYPE___ews__GetUserOofSettingsResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetUserOofSettings
#define SOAP_TYPE___ews__GetUserOofSettings (2645)
/* Operation wrapper: */
struct __ews__GetUserOofSettings
{
public:
	ews__GetUserOofSettingsRequest *ews__GetUserOofSettingsRequest_;	/* optional element of type ews:GetUserOofSettingsRequest */
public:
	int soap_type() const { return 2645; } /* = unique type id SOAP_TYPE___ews__GetUserOofSettings */
};
#endif

#ifndef SOAP_TYPE___ews__SetUserOofSettingsResponse
#define SOAP_TYPE___ews__SetUserOofSettingsResponse (2646)
/* Operation wrapper: */
struct __ews__SetUserOofSettingsResponse
{
public:
	ews__SetUserOofSettingsResponse *ews__SetUserOofSettingsResponse_;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:SetUserOofSettingsResponse */
public:
	int soap_type() const { return 2646; } /* = unique type id SOAP_TYPE___ews__SetUserOofSettingsResponse */
};
#endif

#ifndef SOAP_TYPE___ews__SetUserOofSettings
#define SOAP_TYPE___ews__SetUserOofSettings (2651)
/* Operation wrapper: */
struct __ews__SetUserOofSettings
{
public:
	ews__SetUserOofSettingsRequest *ews__SetUserOofSettingsRequest_;	/* optional element of type ews:SetUserOofSettingsRequest */
public:
	int soap_type() const { return 2651; } /* = unique type id SOAP_TYPE___ews__SetUserOofSettings */
};
#endif

#ifndef SOAP_TYPE___ews__GetServiceConfigurationResponse
#define SOAP_TYPE___ews__GetServiceConfigurationResponse (2652)
/* Operation wrapper: */
struct __ews__GetServiceConfigurationResponse
{
public:
	ews__GetServiceConfigurationResponseMessageType *ews__GetServiceConfigurationResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetServiceConfigurationResponseMessageType */
public:
	int soap_type() const { return 2652; } /* = unique type id SOAP_TYPE___ews__GetServiceConfigurationResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetServiceConfiguration
#define SOAP_TYPE___ews__GetServiceConfiguration (2657)
/* Operation wrapper: */
struct __ews__GetServiceConfiguration
{
public:
	ews__GetServiceConfigurationType *ews__GetServiceConfiguration;	/* optional element of type ews:GetServiceConfigurationType */
public:
	int soap_type() const { return 2657; } /* = unique type id SOAP_TYPE___ews__GetServiceConfiguration */
};
#endif

#ifndef SOAP_TYPE___ews__GetMailTipsResponse
#define SOAP_TYPE___ews__GetMailTipsResponse (2658)
/* Operation wrapper: */
struct __ews__GetMailTipsResponse
{
public:
	ews__GetMailTipsResponseMessageType *ews__GetMailTipsResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetMailTipsResponseMessageType */
public:
	int soap_type() const { return 2658; } /* = unique type id SOAP_TYPE___ews__GetMailTipsResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetMailTips
#define SOAP_TYPE___ews__GetMailTips (2663)
/* Operation wrapper: */
struct __ews__GetMailTips
{
public:
	ews__GetMailTipsType *ews__GetMailTips;	/* optional element of type ews:GetMailTipsType */
public:
	int soap_type() const { return 2663; } /* = unique type id SOAP_TYPE___ews__GetMailTips */
};
#endif

#ifndef SOAP_TYPE___ews__PlayOnPhoneResponse
#define SOAP_TYPE___ews__PlayOnPhoneResponse (2664)
/* Operation wrapper: */
struct __ews__PlayOnPhoneResponse
{
public:
	ews__PlayOnPhoneResponseMessageType *ews__PlayOnPhoneResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:PlayOnPhoneResponseMessageType */
public:
	int soap_type() const { return 2664; } /* = unique type id SOAP_TYPE___ews__PlayOnPhoneResponse */
};
#endif

#ifndef SOAP_TYPE___ews__PlayOnPhone
#define SOAP_TYPE___ews__PlayOnPhone (2669)
/* Operation wrapper: */
struct __ews__PlayOnPhone
{
public:
	ews__PlayOnPhoneType *ews__PlayOnPhone;	/* optional element of type ews:PlayOnPhoneType */
public:
	int soap_type() const { return 2669; } /* = unique type id SOAP_TYPE___ews__PlayOnPhone */
};
#endif

#ifndef SOAP_TYPE___ews__GetPhoneCallInformationResponse
#define SOAP_TYPE___ews__GetPhoneCallInformationResponse (2670)
/* Operation wrapper: */
struct __ews__GetPhoneCallInformationResponse
{
public:
	ews__GetPhoneCallInformationResponseMessageType *ews__GetPhoneCallInformationResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetPhoneCallInformationResponseMessageType */
public:
	int soap_type() const { return 2670; } /* = unique type id SOAP_TYPE___ews__GetPhoneCallInformationResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetPhoneCallInformation
#define SOAP_TYPE___ews__GetPhoneCallInformation (2675)
/* Operation wrapper: */
struct __ews__GetPhoneCallInformation
{
public:
	ews__GetPhoneCallInformationType *ews__GetPhoneCallInformation;	/* optional element of type ews:GetPhoneCallInformationType */
public:
	int soap_type() const { return 2675; } /* = unique type id SOAP_TYPE___ews__GetPhoneCallInformation */
};
#endif

#ifndef SOAP_TYPE___ews__DisconnectPhoneCallResponse
#define SOAP_TYPE___ews__DisconnectPhoneCallResponse (2676)
/* Operation wrapper: */
struct __ews__DisconnectPhoneCallResponse
{
public:
	ews__DisconnectPhoneCallResponseMessageType *ews__DisconnectPhoneCallResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:DisconnectPhoneCallResponseMessageType */
public:
	int soap_type() const { return 2676; } /* = unique type id SOAP_TYPE___ews__DisconnectPhoneCallResponse */
};
#endif

#ifndef SOAP_TYPE___ews__DisconnectPhoneCall
#define SOAP_TYPE___ews__DisconnectPhoneCall (2681)
/* Operation wrapper: */
struct __ews__DisconnectPhoneCall
{
public:
	ews__DisconnectPhoneCallType *ews__DisconnectPhoneCall;	/* optional element of type ews:DisconnectPhoneCallType */
public:
	int soap_type() const { return 2681; } /* = unique type id SOAP_TYPE___ews__DisconnectPhoneCall */
};
#endif

#ifndef SOAP_TYPE___ews__GetSharingMetadataResponse
#define SOAP_TYPE___ews__GetSharingMetadataResponse (2682)
/* Operation wrapper: */
struct __ews__GetSharingMetadataResponse
{
public:
	ews__GetSharingMetadataResponseMessageType *ews__GetSharingMetadataResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetSharingMetadataResponseMessageType */
public:
	int soap_type() const { return 2682; } /* = unique type id SOAP_TYPE___ews__GetSharingMetadataResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetSharingMetadata
#define SOAP_TYPE___ews__GetSharingMetadata (2686)
/* Operation wrapper: */
struct __ews__GetSharingMetadata
{
public:
	ews__GetSharingMetadataType *ews__GetSharingMetadata;	/* optional element of type ews:GetSharingMetadataType */
public:
	int soap_type() const { return 2686; } /* = unique type id SOAP_TYPE___ews__GetSharingMetadata */
};
#endif

#ifndef SOAP_TYPE___ews__RefreshSharingFolderResponse
#define SOAP_TYPE___ews__RefreshSharingFolderResponse (2687)
/* Operation wrapper: */
struct __ews__RefreshSharingFolderResponse
{
public:
	ews__RefreshSharingFolderResponseMessageType *ews__RefreshSharingFolderResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:RefreshSharingFolderResponseMessageType */
public:
	int soap_type() const { return 2687; } /* = unique type id SOAP_TYPE___ews__RefreshSharingFolderResponse */
};
#endif

#ifndef SOAP_TYPE___ews__RefreshSharingFolder
#define SOAP_TYPE___ews__RefreshSharingFolder (2691)
/* Operation wrapper: */
struct __ews__RefreshSharingFolder
{
public:
	ews__RefreshSharingFolderType *ews__RefreshSharingFolder;	/* optional element of type ews:RefreshSharingFolderType */
public:
	int soap_type() const { return 2691; } /* = unique type id SOAP_TYPE___ews__RefreshSharingFolder */
};
#endif

#ifndef SOAP_TYPE___ews__GetSharingFolderResponse
#define SOAP_TYPE___ews__GetSharingFolderResponse (2692)
/* Operation wrapper: */
struct __ews__GetSharingFolderResponse
{
public:
	ews__GetSharingFolderResponseMessageType *ews__GetSharingFolderResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetSharingFolderResponseMessageType */
public:
	int soap_type() const { return 2692; } /* = unique type id SOAP_TYPE___ews__GetSharingFolderResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetSharingFolder
#define SOAP_TYPE___ews__GetSharingFolder (2696)
/* Operation wrapper: */
struct __ews__GetSharingFolder
{
public:
	ews__GetSharingFolderType *ews__GetSharingFolder;	/* optional element of type ews:GetSharingFolderType */
public:
	int soap_type() const { return 2696; } /* = unique type id SOAP_TYPE___ews__GetSharingFolder */
};
#endif

#ifndef SOAP_TYPE___ews__SetTeamMailboxResponse
#define SOAP_TYPE___ews__SetTeamMailboxResponse (2697)
/* Operation wrapper: */
struct __ews__SetTeamMailboxResponse
{
public:
	ews__SetTeamMailboxResponseMessageType *ews__SetTeamMailboxResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:SetTeamMailboxResponseMessageType */
public:
	int soap_type() const { return 2697; } /* = unique type id SOAP_TYPE___ews__SetTeamMailboxResponse */
};
#endif

#ifndef SOAP_TYPE___ews__SetTeamMailbox
#define SOAP_TYPE___ews__SetTeamMailbox (2702)
/* Operation wrapper: */
struct __ews__SetTeamMailbox
{
public:
	ews__SetTeamMailboxRequestType *ews__SetTeamMailbox;	/* optional element of type ews:SetTeamMailboxRequestType */
public:
	int soap_type() const { return 2702; } /* = unique type id SOAP_TYPE___ews__SetTeamMailbox */
};
#endif

#ifndef SOAP_TYPE___ews__UnpinTeamMailboxResponse
#define SOAP_TYPE___ews__UnpinTeamMailboxResponse (2703)
/* Operation wrapper: */
struct __ews__UnpinTeamMailboxResponse
{
public:
	ews__UnpinTeamMailboxResponseMessageType *ews__UnpinTeamMailboxResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:UnpinTeamMailboxResponseMessageType */
public:
	int soap_type() const { return 2703; } /* = unique type id SOAP_TYPE___ews__UnpinTeamMailboxResponse */
};
#endif

#ifndef SOAP_TYPE___ews__UnpinTeamMailbox
#define SOAP_TYPE___ews__UnpinTeamMailbox (2708)
/* Operation wrapper: */
struct __ews__UnpinTeamMailbox
{
public:
	ews__UnpinTeamMailboxRequestType *ews__UnpinTeamMailbox;	/* optional element of type ews:UnpinTeamMailboxRequestType */
public:
	int soap_type() const { return 2708; } /* = unique type id SOAP_TYPE___ews__UnpinTeamMailbox */
};
#endif

#ifndef SOAP_TYPE___ews__GetRoomListsResponse
#define SOAP_TYPE___ews__GetRoomListsResponse (2709)
/* Operation wrapper: */
struct __ews__GetRoomListsResponse
{
public:
	ews__GetRoomListsResponseMessageType *ews__GetRoomListsResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetRoomListsResponseMessageType */
public:
	int soap_type() const { return 2709; } /* = unique type id SOAP_TYPE___ews__GetRoomListsResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetRoomLists
#define SOAP_TYPE___ews__GetRoomLists (2713)
/* Operation wrapper: */
struct __ews__GetRoomLists
{
public:
	ews__GetRoomListsType *ews__GetRoomLists;	/* optional element of type ews:GetRoomListsType */
public:
	int soap_type() const { return 2713; } /* = unique type id SOAP_TYPE___ews__GetRoomLists */
};
#endif

#ifndef SOAP_TYPE___ews__GetRoomsResponse
#define SOAP_TYPE___ews__GetRoomsResponse (2714)
/* Operation wrapper: */
struct __ews__GetRoomsResponse
{
public:
	ews__GetRoomsResponseMessageType *ews__GetRoomsResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetRoomsResponseMessageType */
public:
	int soap_type() const { return 2714; } /* = unique type id SOAP_TYPE___ews__GetRoomsResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetRooms
#define SOAP_TYPE___ews__GetRooms (2718)
/* Operation wrapper: */
struct __ews__GetRooms
{
public:
	ews__GetRoomsType *ews__GetRooms;	/* optional element of type ews:GetRoomsType */
public:
	int soap_type() const { return 2718; } /* = unique type id SOAP_TYPE___ews__GetRooms */
};
#endif

#ifndef SOAP_TYPE___ews__FindMessageTrackingReportResponse
#define SOAP_TYPE___ews__FindMessageTrackingReportResponse (2719)
/* Operation wrapper: */
struct __ews__FindMessageTrackingReportResponse
{
public:
	ews__FindMessageTrackingReportResponseMessageType *ews__FindMessageTrackingReportResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:FindMessageTrackingReportResponseMessageType */
public:
	int soap_type() const { return 2719; } /* = unique type id SOAP_TYPE___ews__FindMessageTrackingReportResponse */
};
#endif

#ifndef SOAP_TYPE___ews__FindMessageTrackingReport
#define SOAP_TYPE___ews__FindMessageTrackingReport (2724)
/* Operation wrapper: */
struct __ews__FindMessageTrackingReport
{
public:
	ews__FindMessageTrackingReportRequestType *ews__FindMessageTrackingReport;	/* optional element of type ews:FindMessageTrackingReportRequestType */
public:
	int soap_type() const { return 2724; } /* = unique type id SOAP_TYPE___ews__FindMessageTrackingReport */
};
#endif

#ifndef SOAP_TYPE___ews__GetMessageTrackingReportResponse
#define SOAP_TYPE___ews__GetMessageTrackingReportResponse (2725)
/* Operation wrapper: */
struct __ews__GetMessageTrackingReportResponse
{
public:
	ews__GetMessageTrackingReportResponseMessageType *ews__GetMessageTrackingReportResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetMessageTrackingReportResponseMessageType */
public:
	int soap_type() const { return 2725; } /* = unique type id SOAP_TYPE___ews__GetMessageTrackingReportResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetMessageTrackingReport
#define SOAP_TYPE___ews__GetMessageTrackingReport (2730)
/* Operation wrapper: */
struct __ews__GetMessageTrackingReport
{
public:
	ews__GetMessageTrackingReportRequestType *ews__GetMessageTrackingReport;	/* optional element of type ews:GetMessageTrackingReportRequestType */
public:
	int soap_type() const { return 2730; } /* = unique type id SOAP_TYPE___ews__GetMessageTrackingReport */
};
#endif

#ifndef SOAP_TYPE___ews__FindConversationResponse
#define SOAP_TYPE___ews__FindConversationResponse (2731)
/* Operation wrapper: */
struct __ews__FindConversationResponse
{
public:
	ews__FindConversationResponseMessageType *ews__FindConversationResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:FindConversationResponseMessageType */
public:
	int soap_type() const { return 2731; } /* = unique type id SOAP_TYPE___ews__FindConversationResponse */
};
#endif

#ifndef SOAP_TYPE___ews__FindConversation
#define SOAP_TYPE___ews__FindConversation (2736)
/* Operation wrapper: */
struct __ews__FindConversation
{
public:
	ews__FindConversationType *ews__FindConversation;	/* optional element of type ews:FindConversationType */
public:
	int soap_type() const { return 2736; } /* = unique type id SOAP_TYPE___ews__FindConversation */
};
#endif

#ifndef SOAP_TYPE___ews__ApplyConversationActionResponse
#define SOAP_TYPE___ews__ApplyConversationActionResponse (2737)
/* Operation wrapper: */
struct __ews__ApplyConversationActionResponse
{
public:
	ews__ApplyConversationActionResponseType *ews__ApplyConversationActionResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:ApplyConversationActionResponseType */
public:
	int soap_type() const { return 2737; } /* = unique type id SOAP_TYPE___ews__ApplyConversationActionResponse */
};
#endif

#ifndef SOAP_TYPE___ews__ApplyConversationAction
#define SOAP_TYPE___ews__ApplyConversationAction (2742)
/* Operation wrapper: */
struct __ews__ApplyConversationAction
{
public:
	ews__ApplyConversationActionType *ews__ApplyConversationAction;	/* optional element of type ews:ApplyConversationActionType */
public:
	int soap_type() const { return 2742; } /* = unique type id SOAP_TYPE___ews__ApplyConversationAction */
};
#endif

#ifndef SOAP_TYPE___ews__GetConversationItemsResponse
#define SOAP_TYPE___ews__GetConversationItemsResponse (2743)
/* Operation wrapper: */
struct __ews__GetConversationItemsResponse
{
public:
	ews__GetConversationItemsResponseType *ews__GetConversationItemsResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetConversationItemsResponseType */
public:
	int soap_type() const { return 2743; } /* = unique type id SOAP_TYPE___ews__GetConversationItemsResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetConversationItems
#define SOAP_TYPE___ews__GetConversationItems (2748)
/* Operation wrapper: */
struct __ews__GetConversationItems
{
public:
	ews__GetConversationItemsType *ews__GetConversationItems;	/* optional element of type ews:GetConversationItemsType */
public:
	int soap_type() const { return 2748; } /* = unique type id SOAP_TYPE___ews__GetConversationItems */
};
#endif

#ifndef SOAP_TYPE___ews__FindPeopleResponse
#define SOAP_TYPE___ews__FindPeopleResponse (2749)
/* Operation wrapper: */
struct __ews__FindPeopleResponse
{
public:
	ews__FindPeopleResponseMessageType *ews__FindPeopleResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:FindPeopleResponseMessageType */
public:
	int soap_type() const { return 2749; } /* = unique type id SOAP_TYPE___ews__FindPeopleResponse */
};
#endif

#ifndef SOAP_TYPE___ews__FindPeople
#define SOAP_TYPE___ews__FindPeople (2753)
/* Operation wrapper: */
struct __ews__FindPeople
{
public:
	ews__FindPeopleType *ews__FindPeople;	/* optional element of type ews:FindPeopleType */
public:
	int soap_type() const { return 2753; } /* = unique type id SOAP_TYPE___ews__FindPeople */
};
#endif

#ifndef SOAP_TYPE___ews__GetPersonaResponse
#define SOAP_TYPE___ews__GetPersonaResponse (2754)
/* Operation wrapper: */
struct __ews__GetPersonaResponse
{
public:
	ews__GetPersonaResponseMessageType *ews__GetPersonaResponseMessage;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetPersonaResponseMessageType */
public:
	int soap_type() const { return 2754; } /* = unique type id SOAP_TYPE___ews__GetPersonaResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetPersona
#define SOAP_TYPE___ews__GetPersona (2758)
/* Operation wrapper: */
struct __ews__GetPersona
{
public:
	ews__GetPersonaType *ews__GetPersona;	/* optional element of type ews:GetPersonaType */
public:
	int soap_type() const { return 2758; } /* = unique type id SOAP_TYPE___ews__GetPersona */
};
#endif

#ifndef SOAP_TYPE___ews__GetInboxRulesResponse
#define SOAP_TYPE___ews__GetInboxRulesResponse (2759)
/* Operation wrapper: */
struct __ews__GetInboxRulesResponse
{
public:
	ews__GetInboxRulesResponseType *ews__GetInboxRulesResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetInboxRulesResponseType */
public:
	int soap_type() const { return 2759; } /* = unique type id SOAP_TYPE___ews__GetInboxRulesResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetInboxRules
#define SOAP_TYPE___ews__GetInboxRules (2764)
/* Operation wrapper: */
struct __ews__GetInboxRules
{
public:
	ews__GetInboxRulesRequestType *ews__GetInboxRules;	/* optional element of type ews:GetInboxRulesRequestType */
public:
	int soap_type() const { return 2764; } /* = unique type id SOAP_TYPE___ews__GetInboxRules */
};
#endif

#ifndef SOAP_TYPE___ews__UpdateInboxRulesResponse
#define SOAP_TYPE___ews__UpdateInboxRulesResponse (2765)
/* Operation wrapper: */
struct __ews__UpdateInboxRulesResponse
{
public:
	ews__UpdateInboxRulesResponseType *ews__UpdateInboxRulesResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:UpdateInboxRulesResponseType */
public:
	int soap_type() const { return 2765; } /* = unique type id SOAP_TYPE___ews__UpdateInboxRulesResponse */
};
#endif

#ifndef SOAP_TYPE___ews__UpdateInboxRules
#define SOAP_TYPE___ews__UpdateInboxRules (2770)
/* Operation wrapper: */
struct __ews__UpdateInboxRules
{
public:
	ews__UpdateInboxRulesRequestType *ews__UpdateInboxRules;	/* optional element of type ews:UpdateInboxRulesRequestType */
public:
	int soap_type() const { return 2770; } /* = unique type id SOAP_TYPE___ews__UpdateInboxRules */
};
#endif

#ifndef SOAP_TYPE___ews__GetPasswordExpirationDateResponse
#define SOAP_TYPE___ews__GetPasswordExpirationDateResponse (2771)
/* Operation wrapper: */
struct __ews__GetPasswordExpirationDateResponse
{
public:
	ews__GetPasswordExpirationDateResponseMessageType *ews__GetPasswordExpirationDateResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetPasswordExpirationDateResponseMessageType */
public:
	int soap_type() const { return 2771; } /* = unique type id SOAP_TYPE___ews__GetPasswordExpirationDateResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetPasswordExpirationDate
#define SOAP_TYPE___ews__GetPasswordExpirationDate (2775)
/* Operation wrapper: */
struct __ews__GetPasswordExpirationDate
{
public:
	ews__GetPasswordExpirationDateType *ews__GetPasswordExpirationDate;	/* optional element of type ews:GetPasswordExpirationDateType */
public:
	int soap_type() const { return 2775; } /* = unique type id SOAP_TYPE___ews__GetPasswordExpirationDate */
};
#endif

#ifndef SOAP_TYPE___ews__GetDiscoverySearchConfigurationResponse
#define SOAP_TYPE___ews__GetDiscoverySearchConfigurationResponse (2776)
/* Operation wrapper: */
struct __ews__GetDiscoverySearchConfigurationResponse
{
public:
	ews__GetDiscoverySearchConfigurationResponseMessageType *ews__GetDiscoverySearchConfigurationResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetDiscoverySearchConfigurationResponseMessageType */
public:
	int soap_type() const { return 2776; } /* = unique type id SOAP_TYPE___ews__GetDiscoverySearchConfigurationResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetDiscoverySearchConfiguration
#define SOAP_TYPE___ews__GetDiscoverySearchConfiguration (2780)
/* Operation wrapper: */
struct __ews__GetDiscoverySearchConfiguration
{
public:
	ews__GetDiscoverySearchConfigurationType *ews__GetDiscoverySearchConfiguration;	/* optional element of type ews:GetDiscoverySearchConfigurationType */
public:
	int soap_type() const { return 2780; } /* = unique type id SOAP_TYPE___ews__GetDiscoverySearchConfiguration */
};
#endif

#ifndef SOAP_TYPE___ews__GetSearchableMailboxesResponse
#define SOAP_TYPE___ews__GetSearchableMailboxesResponse (2781)
/* Operation wrapper: */
struct __ews__GetSearchableMailboxesResponse
{
public:
	ews__GetSearchableMailboxesResponseMessageType *ews__GetSearchableMailboxesResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetSearchableMailboxesResponseMessageType */
public:
	int soap_type() const { return 2781; } /* = unique type id SOAP_TYPE___ews__GetSearchableMailboxesResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetSearchableMailboxes
#define SOAP_TYPE___ews__GetSearchableMailboxes (2785)
/* Operation wrapper: */
struct __ews__GetSearchableMailboxes
{
public:
	ews__GetSearchableMailboxesType *ews__GetSearchableMailboxes;	/* optional element of type ews:GetSearchableMailboxesType */
public:
	int soap_type() const { return 2785; } /* = unique type id SOAP_TYPE___ews__GetSearchableMailboxes */
};
#endif

#ifndef SOAP_TYPE___ews__SearchMailboxesResponse
#define SOAP_TYPE___ews__SearchMailboxesResponse (2786)
/* Operation wrapper: */
struct __ews__SearchMailboxesResponse
{
public:
	ews__SearchMailboxesResponseType *ews__SearchMailboxesResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:SearchMailboxesResponseType */
public:
	int soap_type() const { return 2786; } /* = unique type id SOAP_TYPE___ews__SearchMailboxesResponse */
};
#endif

#ifndef SOAP_TYPE___ews__SearchMailboxes
#define SOAP_TYPE___ews__SearchMailboxes (2791)
/* Operation wrapper: */
struct __ews__SearchMailboxes
{
public:
	ews__SearchMailboxesType *ews__SearchMailboxes;	/* optional element of type ews:SearchMailboxesType */
public:
	int soap_type() const { return 2791; } /* = unique type id SOAP_TYPE___ews__SearchMailboxes */
};
#endif

#ifndef SOAP_TYPE___ews__GetHoldOnMailboxesResponse
#define SOAP_TYPE___ews__GetHoldOnMailboxesResponse (2792)
/* Operation wrapper: */
struct __ews__GetHoldOnMailboxesResponse
{
public:
	ews__GetHoldOnMailboxesResponseMessageType *ews__GetHoldOnMailboxesResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetHoldOnMailboxesResponseMessageType */
public:
	int soap_type() const { return 2792; } /* = unique type id SOAP_TYPE___ews__GetHoldOnMailboxesResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetHoldOnMailboxes
#define SOAP_TYPE___ews__GetHoldOnMailboxes (2796)
/* Operation wrapper: */
struct __ews__GetHoldOnMailboxes
{
public:
	ews__GetHoldOnMailboxesType *ews__GetHoldOnMailboxes;	/* optional element of type ews:GetHoldOnMailboxesType */
public:
	int soap_type() const { return 2796; } /* = unique type id SOAP_TYPE___ews__GetHoldOnMailboxes */
};
#endif

#ifndef SOAP_TYPE___ews__SetHoldOnMailboxesResponse
#define SOAP_TYPE___ews__SetHoldOnMailboxesResponse (2797)
/* Operation wrapper: */
struct __ews__SetHoldOnMailboxesResponse
{
public:
	ews__SetHoldOnMailboxesResponseMessageType *ews__SetHoldOnMailboxesResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:SetHoldOnMailboxesResponseMessageType */
public:
	int soap_type() const { return 2797; } /* = unique type id SOAP_TYPE___ews__SetHoldOnMailboxesResponse */
};
#endif

#ifndef SOAP_TYPE___ews__SetHoldOnMailboxes
#define SOAP_TYPE___ews__SetHoldOnMailboxes (2801)
/* Operation wrapper: */
struct __ews__SetHoldOnMailboxes
{
public:
	ews__SetHoldOnMailboxesType *ews__SetHoldOnMailboxes;	/* optional element of type ews:SetHoldOnMailboxesType */
public:
	int soap_type() const { return 2801; } /* = unique type id SOAP_TYPE___ews__SetHoldOnMailboxes */
};
#endif

#ifndef SOAP_TYPE___ews__GetNonIndexableItemStatisticsResponse
#define SOAP_TYPE___ews__GetNonIndexableItemStatisticsResponse (2802)
/* Operation wrapper: */
struct __ews__GetNonIndexableItemStatisticsResponse
{
public:
	ews__GetNonIndexableItemStatisticsResponseMessageType *ews__GetNonIndexableItemStatisticsResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetNonIndexableItemStatisticsResponseMessageType */
public:
	int soap_type() const { return 2802; } /* = unique type id SOAP_TYPE___ews__GetNonIndexableItemStatisticsResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetNonIndexableItemStatistics
#define SOAP_TYPE___ews__GetNonIndexableItemStatistics (2806)
/* Operation wrapper: */
struct __ews__GetNonIndexableItemStatistics
{
public:
	ews__GetNonIndexableItemStatisticsType *ews__GetNonIndexableItemStatistics;	/* optional element of type ews:GetNonIndexableItemStatisticsType */
public:
	int soap_type() const { return 2806; } /* = unique type id SOAP_TYPE___ews__GetNonIndexableItemStatistics */
};
#endif

#ifndef SOAP_TYPE___ews__GetNonIndexableItemDetailsResponse
#define SOAP_TYPE___ews__GetNonIndexableItemDetailsResponse (2807)
/* Operation wrapper: */
struct __ews__GetNonIndexableItemDetailsResponse
{
public:
	ews__GetNonIndexableItemDetailsResponseMessageType *ews__GetNonIndexableItemDetailsResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetNonIndexableItemDetailsResponseMessageType */
public:
	int soap_type() const { return 2807; } /* = unique type id SOAP_TYPE___ews__GetNonIndexableItemDetailsResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetNonIndexableItemDetails
#define SOAP_TYPE___ews__GetNonIndexableItemDetails (2811)
/* Operation wrapper: */
struct __ews__GetNonIndexableItemDetails
{
public:
	ews__GetNonIndexableItemDetailsType *ews__GetNonIndexableItemDetails;	/* optional element of type ews:GetNonIndexableItemDetailsType */
public:
	int soap_type() const { return 2811; } /* = unique type id SOAP_TYPE___ews__GetNonIndexableItemDetails */
};
#endif

#ifndef SOAP_TYPE___ews__MarkAllItemsAsReadResponse
#define SOAP_TYPE___ews__MarkAllItemsAsReadResponse (2812)
/* Operation wrapper: */
struct __ews__MarkAllItemsAsReadResponse
{
public:
	ews__MarkAllItemsAsReadResponseType *ews__MarkAllItemsAsReadResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:MarkAllItemsAsReadResponseType */
public:
	int soap_type() const { return 2812; } /* = unique type id SOAP_TYPE___ews__MarkAllItemsAsReadResponse */
};
#endif

#ifndef SOAP_TYPE___ews__MarkAllItemsAsRead
#define SOAP_TYPE___ews__MarkAllItemsAsRead (2817)
/* Operation wrapper: */
struct __ews__MarkAllItemsAsRead
{
public:
	ews__MarkAllItemsAsReadType *ews__MarkAllItemsAsRead;	/* optional element of type ews:MarkAllItemsAsReadType */
public:
	int soap_type() const { return 2817; } /* = unique type id SOAP_TYPE___ews__MarkAllItemsAsRead */
};
#endif

#ifndef SOAP_TYPE___ews__MarkAsJunkResponse
#define SOAP_TYPE___ews__MarkAsJunkResponse (2818)
/* Operation wrapper: */
struct __ews__MarkAsJunkResponse
{
public:
	ews__MarkAsJunkResponseType *ews__MarkAsJunkResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:MarkAsJunkResponseType */
public:
	int soap_type() const { return 2818; } /* = unique type id SOAP_TYPE___ews__MarkAsJunkResponse */
};
#endif

#ifndef SOAP_TYPE___ews__MarkAsJunk
#define SOAP_TYPE___ews__MarkAsJunk (2823)
/* Operation wrapper: */
struct __ews__MarkAsJunk
{
public:
	ews__MarkAsJunkType *ews__MarkAsJunk;	/* optional element of type ews:MarkAsJunkType */
public:
	int soap_type() const { return 2823; } /* = unique type id SOAP_TYPE___ews__MarkAsJunk */
};
#endif

#ifndef SOAP_TYPE___ews__GetAppManifestsResponse
#define SOAP_TYPE___ews__GetAppManifestsResponse (2824)
/* Operation wrapper: */
struct __ews__GetAppManifestsResponse
{
public:
	ews__GetAppManifestsResponseType *ews__GetAppManifestsResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetAppManifestsResponseType */
public:
	int soap_type() const { return 2824; } /* = unique type id SOAP_TYPE___ews__GetAppManifestsResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetAppManifests
#define SOAP_TYPE___ews__GetAppManifests (2829)
/* Operation wrapper: */
struct __ews__GetAppManifests
{
public:
	ews__GetAppManifestsType *ews__GetAppManifests;	/* optional element of type ews:GetAppManifestsType */
public:
	int soap_type() const { return 2829; } /* = unique type id SOAP_TYPE___ews__GetAppManifests */
};
#endif

#ifndef SOAP_TYPE___ews__AddNewImContactToGroupResponse
#define SOAP_TYPE___ews__AddNewImContactToGroupResponse (2830)
/* Operation wrapper: */
struct __ews__AddNewImContactToGroupResponse
{
public:
	ews__AddNewImContactToGroupResponseMessageType *ews__AddNewImContactToGroupResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:AddNewImContactToGroupResponseMessageType */
public:
	int soap_type() const { return 2830; } /* = unique type id SOAP_TYPE___ews__AddNewImContactToGroupResponse */
};
#endif

#ifndef SOAP_TYPE___ews__AddNewImContactToGroup
#define SOAP_TYPE___ews__AddNewImContactToGroup (2835)
/* Operation wrapper: */
struct __ews__AddNewImContactToGroup
{
public:
	ews__AddNewImContactToGroupType *ews__AddNewImContactToGroup;	/* optional element of type ews:AddNewImContactToGroupType */
public:
	int soap_type() const { return 2835; } /* = unique type id SOAP_TYPE___ews__AddNewImContactToGroup */
};
#endif

#ifndef SOAP_TYPE___ews__AddNewTelUriContactToGroupResponse
#define SOAP_TYPE___ews__AddNewTelUriContactToGroupResponse (2836)
/* Operation wrapper: */
struct __ews__AddNewTelUriContactToGroupResponse
{
public:
	ews__AddNewTelUriContactToGroupResponseMessageType *ews__AddNewTelUriContactToGroupResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:AddNewTelUriContactToGroupResponseMessageType */
public:
	int soap_type() const { return 2836; } /* = unique type id SOAP_TYPE___ews__AddNewTelUriContactToGroupResponse */
};
#endif

#ifndef SOAP_TYPE___ews__AddNewTelUriContactToGroup
#define SOAP_TYPE___ews__AddNewTelUriContactToGroup (2841)
/* Operation wrapper: */
struct __ews__AddNewTelUriContactToGroup
{
public:
	ews__AddNewTelUriContactToGroupType *ews__AddNewTelUriContactToGroup;	/* optional element of type ews:AddNewTelUriContactToGroupType */
public:
	int soap_type() const { return 2841; } /* = unique type id SOAP_TYPE___ews__AddNewTelUriContactToGroup */
};
#endif

#ifndef SOAP_TYPE___ews__AddImContactToGroupResponse
#define SOAP_TYPE___ews__AddImContactToGroupResponse (2842)
/* Operation wrapper: */
struct __ews__AddImContactToGroupResponse
{
public:
	ews__AddImContactToGroupResponseMessageType *ews__AddImContactToGroupResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:AddImContactToGroupResponseMessageType */
public:
	int soap_type() const { return 2842; } /* = unique type id SOAP_TYPE___ews__AddImContactToGroupResponse */
};
#endif

#ifndef SOAP_TYPE___ews__AddImContactToGroup
#define SOAP_TYPE___ews__AddImContactToGroup (2847)
/* Operation wrapper: */
struct __ews__AddImContactToGroup
{
public:
	ews__AddImContactToGroupType *ews__AddImContactToGroup;	/* optional element of type ews:AddImContactToGroupType */
public:
	int soap_type() const { return 2847; } /* = unique type id SOAP_TYPE___ews__AddImContactToGroup */
};
#endif

#ifndef SOAP_TYPE___ews__RemoveImContactFromGroupResponse
#define SOAP_TYPE___ews__RemoveImContactFromGroupResponse (2848)
/* Operation wrapper: */
struct __ews__RemoveImContactFromGroupResponse
{
public:
	ews__RemoveImContactFromGroupResponseMessageType *ews__RemoveImContactFromGroupResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:RemoveImContactFromGroupResponseMessageType */
public:
	int soap_type() const { return 2848; } /* = unique type id SOAP_TYPE___ews__RemoveImContactFromGroupResponse */
};
#endif

#ifndef SOAP_TYPE___ews__RemoveImContactFromGroup
#define SOAP_TYPE___ews__RemoveImContactFromGroup (2853)
/* Operation wrapper: */
struct __ews__RemoveImContactFromGroup
{
public:
	ews__RemoveImContactFromGroupType *ews__RemoveImContactFromGroup;	/* optional element of type ews:RemoveImContactFromGroupType */
public:
	int soap_type() const { return 2853; } /* = unique type id SOAP_TYPE___ews__RemoveImContactFromGroup */
};
#endif

#ifndef SOAP_TYPE___ews__AddImGroupResponse
#define SOAP_TYPE___ews__AddImGroupResponse (2854)
/* Operation wrapper: */
struct __ews__AddImGroupResponse
{
public:
	ews__AddImGroupResponseMessageType *ews__AddImGroupResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:AddImGroupResponseMessageType */
public:
	int soap_type() const { return 2854; } /* = unique type id SOAP_TYPE___ews__AddImGroupResponse */
};
#endif

#ifndef SOAP_TYPE___ews__AddImGroup
#define SOAP_TYPE___ews__AddImGroup (2859)
/* Operation wrapper: */
struct __ews__AddImGroup
{
public:
	ews__AddImGroupType *ews__AddImGroup;	/* optional element of type ews:AddImGroupType */
public:
	int soap_type() const { return 2859; } /* = unique type id SOAP_TYPE___ews__AddImGroup */
};
#endif

#ifndef SOAP_TYPE___ews__AddDistributionGroupToImListResponse
#define SOAP_TYPE___ews__AddDistributionGroupToImListResponse (2860)
/* Operation wrapper: */
struct __ews__AddDistributionGroupToImListResponse
{
public:
	ews__AddDistributionGroupToImListResponseMessageType *ews__AddDistributionGroupToImListResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:AddDistributionGroupToImListResponseMessageType */
public:
	int soap_type() const { return 2860; } /* = unique type id SOAP_TYPE___ews__AddDistributionGroupToImListResponse */
};
#endif

#ifndef SOAP_TYPE___ews__AddDistributionGroupToImList
#define SOAP_TYPE___ews__AddDistributionGroupToImList (2865)
/* Operation wrapper: */
struct __ews__AddDistributionGroupToImList
{
public:
	ews__AddDistributionGroupToImListType *ews__AddDistributionGroupToImList;	/* optional element of type ews:AddDistributionGroupToImListType */
public:
	int soap_type() const { return 2865; } /* = unique type id SOAP_TYPE___ews__AddDistributionGroupToImList */
};
#endif

#ifndef SOAP_TYPE___ews__GetImItemListResponse
#define SOAP_TYPE___ews__GetImItemListResponse (2866)
/* Operation wrapper: */
struct __ews__GetImItemListResponse
{
public:
	ews__GetImItemListResponseMessageType *ews__GetImItemListResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetImItemListResponseMessageType */
public:
	int soap_type() const { return 2866; } /* = unique type id SOAP_TYPE___ews__GetImItemListResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetImItemList
#define SOAP_TYPE___ews__GetImItemList (2871)
/* Operation wrapper: */
struct __ews__GetImItemList
{
public:
	ews__GetImItemListType *ews__GetImItemList;	/* optional element of type ews:GetImItemListType */
public:
	int soap_type() const { return 2871; } /* = unique type id SOAP_TYPE___ews__GetImItemList */
};
#endif

#ifndef SOAP_TYPE___ews__GetImItemsResponse
#define SOAP_TYPE___ews__GetImItemsResponse (2872)
/* Operation wrapper: */
struct __ews__GetImItemsResponse
{
public:
	ews__GetImItemsResponseMessageType *ews__GetImItemsResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetImItemsResponseMessageType */
public:
	int soap_type() const { return 2872; } /* = unique type id SOAP_TYPE___ews__GetImItemsResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetImItems
#define SOAP_TYPE___ews__GetImItems (2877)
/* Operation wrapper: */
struct __ews__GetImItems
{
public:
	ews__GetImItemsType *ews__GetImItems;	/* optional element of type ews:GetImItemsType */
public:
	int soap_type() const { return 2877; } /* = unique type id SOAP_TYPE___ews__GetImItems */
};
#endif

#ifndef SOAP_TYPE___ews__RemoveContactFromImListResponse
#define SOAP_TYPE___ews__RemoveContactFromImListResponse (2878)
/* Operation wrapper: */
struct __ews__RemoveContactFromImListResponse
{
public:
	ews__RemoveContactFromImListResponseMessageType *ews__RemoveContactFromImListResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:RemoveContactFromImListResponseMessageType */
public:
	int soap_type() const { return 2878; } /* = unique type id SOAP_TYPE___ews__RemoveContactFromImListResponse */
};
#endif

#ifndef SOAP_TYPE___ews__RemoveContactFromImList
#define SOAP_TYPE___ews__RemoveContactFromImList (2883)
/* Operation wrapper: */
struct __ews__RemoveContactFromImList
{
public:
	ews__RemoveContactFromImListType *ews__RemoveContactFromImList;	/* optional element of type ews:RemoveContactFromImListType */
public:
	int soap_type() const { return 2883; } /* = unique type id SOAP_TYPE___ews__RemoveContactFromImList */
};
#endif

#ifndef SOAP_TYPE___ews__RemoveDistributionGroupFromImListResponse
#define SOAP_TYPE___ews__RemoveDistributionGroupFromImListResponse (2884)
/* Operation wrapper: */
struct __ews__RemoveDistributionGroupFromImListResponse
{
public:
	ews__RemoveDistributionGroupFromImListResponseMessageType *ews__RemoveDistributionGroupFromImListResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:RemoveDistributionGroupFromImListResponseMessageType */
public:
	int soap_type() const { return 2884; } /* = unique type id SOAP_TYPE___ews__RemoveDistributionGroupFromImListResponse */
};
#endif

#ifndef SOAP_TYPE___ews__RemoveDistributionGroupFromImList
#define SOAP_TYPE___ews__RemoveDistributionGroupFromImList (2889)
/* Operation wrapper: */
struct __ews__RemoveDistributionGroupFromImList
{
public:
	ews__RemoveDistributionGroupFromImListType *ews__RemoveDistributionGroupFromImList;	/* optional element of type ews:RemoveDistributionGroupFromImListType */
public:
	int soap_type() const { return 2889; } /* = unique type id SOAP_TYPE___ews__RemoveDistributionGroupFromImList */
};
#endif

#ifndef SOAP_TYPE___ews__RemoveImGroupResponse
#define SOAP_TYPE___ews__RemoveImGroupResponse (2890)
/* Operation wrapper: */
struct __ews__RemoveImGroupResponse
{
public:
	ews__RemoveImGroupResponseMessageType *ews__RemoveImGroupResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:RemoveImGroupResponseMessageType */
public:
	int soap_type() const { return 2890; } /* = unique type id SOAP_TYPE___ews__RemoveImGroupResponse */
};
#endif

#ifndef SOAP_TYPE___ews__RemoveImGroup
#define SOAP_TYPE___ews__RemoveImGroup (2895)
/* Operation wrapper: */
struct __ews__RemoveImGroup
{
public:
	ews__RemoveImGroupType *ews__RemoveImGroup;	/* optional element of type ews:RemoveImGroupType */
public:
	int soap_type() const { return 2895; } /* = unique type id SOAP_TYPE___ews__RemoveImGroup */
};
#endif

#ifndef SOAP_TYPE___ews__SetImGroupResponse
#define SOAP_TYPE___ews__SetImGroupResponse (2896)
/* Operation wrapper: */
struct __ews__SetImGroupResponse
{
public:
	ews__SetImGroupResponseMessageType *ews__SetImGroupResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:SetImGroupResponseMessageType */
public:
	int soap_type() const { return 2896; } /* = unique type id SOAP_TYPE___ews__SetImGroupResponse */
};
#endif

#ifndef SOAP_TYPE___ews__SetImGroup
#define SOAP_TYPE___ews__SetImGroup (2901)
/* Operation wrapper: */
struct __ews__SetImGroup
{
public:
	ews__SetImGroupType *ews__SetImGroup;	/* optional element of type ews:SetImGroupType */
public:
	int soap_type() const { return 2901; } /* = unique type id SOAP_TYPE___ews__SetImGroup */
};
#endif

#ifndef SOAP_TYPE___ews__SetImListMigrationCompletedResponse
#define SOAP_TYPE___ews__SetImListMigrationCompletedResponse (2902)
/* Operation wrapper: */
struct __ews__SetImListMigrationCompletedResponse
{
public:
	ews__SetImListMigrationCompletedResponseMessageType *ews__SetImListMigrationCompletedResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:SetImListMigrationCompletedResponseMessageType */
public:
	int soap_type() const { return 2902; } /* = unique type id SOAP_TYPE___ews__SetImListMigrationCompletedResponse */
};
#endif

#ifndef SOAP_TYPE___ews__SetImListMigrationCompleted
#define SOAP_TYPE___ews__SetImListMigrationCompleted (2907)
/* Operation wrapper: */
struct __ews__SetImListMigrationCompleted
{
public:
	ews__SetImListMigrationCompletedType *ews__SetImListMigrationCompleted;	/* optional element of type ews:SetImListMigrationCompletedType */
public:
	int soap_type() const { return 2907; } /* = unique type id SOAP_TYPE___ews__SetImListMigrationCompleted */
};
#endif

#ifndef SOAP_TYPE___ews__GetUserRetentionPolicyTagsResponse
#define SOAP_TYPE___ews__GetUserRetentionPolicyTagsResponse (2908)
/* Operation wrapper: */
struct __ews__GetUserRetentionPolicyTagsResponse
{
public:
	ews__GetUserRetentionPolicyTagsResponseMessageType *ews__GetUserRetentionPolicyTagsResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetUserRetentionPolicyTagsResponseMessageType */
public:
	int soap_type() const { return 2908; } /* = unique type id SOAP_TYPE___ews__GetUserRetentionPolicyTagsResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetUserRetentionPolicyTags
#define SOAP_TYPE___ews__GetUserRetentionPolicyTags (2912)
/* Operation wrapper: */
struct __ews__GetUserRetentionPolicyTags
{
public:
	ews__GetUserRetentionPolicyTagsType *ews__GetUserRetentionPolicyTags;	/* optional element of type ews:GetUserRetentionPolicyTagsType */
public:
	int soap_type() const { return 2912; } /* = unique type id SOAP_TYPE___ews__GetUserRetentionPolicyTags */
};
#endif

#ifndef SOAP_TYPE___ews__DisableAppResponse
#define SOAP_TYPE___ews__DisableAppResponse (2913)
/* Operation wrapper: */
struct __ews__DisableAppResponse
{
public:
	ews__DisableAppResponseType *ews__DisableAppResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:DisableAppResponseType */
public:
	int soap_type() const { return 2913; } /* = unique type id SOAP_TYPE___ews__DisableAppResponse */
};
#endif

#ifndef SOAP_TYPE___ews__DisableApp
#define SOAP_TYPE___ews__DisableApp (2918)
/* Operation wrapper: */
struct __ews__DisableApp
{
public:
	ews__DisableAppType *ews__DisableApp;	/* optional element of type ews:DisableAppType */
public:
	int soap_type() const { return 2918; } /* = unique type id SOAP_TYPE___ews__DisableApp */
};
#endif

#ifndef SOAP_TYPE___ews__InstallAppResponse
#define SOAP_TYPE___ews__InstallAppResponse (2919)
/* Operation wrapper: */
struct __ews__InstallAppResponse
{
public:
	ews__InstallAppResponseType *ews__InstallAppResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:InstallAppResponseType */
public:
	int soap_type() const { return 2919; } /* = unique type id SOAP_TYPE___ews__InstallAppResponse */
};
#endif

#ifndef SOAP_TYPE___ews__InstallApp
#define SOAP_TYPE___ews__InstallApp (2924)
/* Operation wrapper: */
struct __ews__InstallApp
{
public:
	ews__InstallAppType *ews__InstallApp;	/* optional element of type ews:InstallAppType */
public:
	int soap_type() const { return 2924; } /* = unique type id SOAP_TYPE___ews__InstallApp */
};
#endif

#ifndef SOAP_TYPE___ews__UninstallAppResponse
#define SOAP_TYPE___ews__UninstallAppResponse (2925)
/* Operation wrapper: */
struct __ews__UninstallAppResponse
{
public:
	ews__UninstallAppResponseType *ews__UninstallAppResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:UninstallAppResponseType */
public:
	int soap_type() const { return 2925; } /* = unique type id SOAP_TYPE___ews__UninstallAppResponse */
};
#endif

#ifndef SOAP_TYPE___ews__UninstallApp
#define SOAP_TYPE___ews__UninstallApp (2930)
/* Operation wrapper: */
struct __ews__UninstallApp
{
public:
	ews__UninstallAppType *ews__UninstallApp;	/* optional element of type ews:UninstallAppType */
public:
	int soap_type() const { return 2930; } /* = unique type id SOAP_TYPE___ews__UninstallApp */
};
#endif

#ifndef SOAP_TYPE___ews__GetAppMarketplaceUrlResponse
#define SOAP_TYPE___ews__GetAppMarketplaceUrlResponse (2931)
/* Operation wrapper: */
struct __ews__GetAppMarketplaceUrlResponse
{
public:
	ews__GetAppMarketplaceUrlResponseMessageType *ews__GetAppMarketplaceUrlResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetAppMarketplaceUrlResponseMessageType */
public:
	int soap_type() const { return 2931; } /* = unique type id SOAP_TYPE___ews__GetAppMarketplaceUrlResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetAppMarketplaceUrl
#define SOAP_TYPE___ews__GetAppMarketplaceUrl (2936)
/* Operation wrapper: */
struct __ews__GetAppMarketplaceUrl
{
public:
	ews__GetAppMarketplaceUrlType *ews__GetAppMarketplaceUrl;	/* optional element of type ews:GetAppMarketplaceUrlType */
public:
	int soap_type() const { return 2936; } /* = unique type id SOAP_TYPE___ews__GetAppMarketplaceUrl */
};
#endif

#ifndef SOAP_TYPE___ews__GetUserPhotoResponse
#define SOAP_TYPE___ews__GetUserPhotoResponse (2937)
/* Operation wrapper: */
struct __ews__GetUserPhotoResponse
{
public:
	ews__GetUserPhotoResponseMessageType *ews__GetUserPhotoResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:GetUserPhotoResponseMessageType */
public:
	int soap_type() const { return 2937; } /* = unique type id SOAP_TYPE___ews__GetUserPhotoResponse */
};
#endif

#ifndef SOAP_TYPE___ews__GetUserPhoto
#define SOAP_TYPE___ews__GetUserPhoto (2941)
/* Operation wrapper: */
struct __ews__GetUserPhoto
{
public:
	ews__GetUserPhotoType *ews__GetUserPhoto;	/* optional element of type ews:GetUserPhotoType */
public:
	int soap_type() const { return 2941; } /* = unique type id SOAP_TYPE___ews__GetUserPhoto */
};
#endif

#ifndef SOAP_TYPE___ews__FindAvailableMeetingTimesResponse
#define SOAP_TYPE___ews__FindAvailableMeetingTimesResponse (2942)
/* Operation wrapper: */
struct __ews__FindAvailableMeetingTimesResponse
{
public:
	ews__FindAvailableMeetingTimesResponseMessageType *ews__FindAvailableMeetingTimesResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:FindAvailableMeetingTimesResponseMessageType */
public:
	int soap_type() const { return 2942; } /* = unique type id SOAP_TYPE___ews__FindAvailableMeetingTimesResponse */
};
#endif

#ifndef SOAP_TYPE___ews__FindAvailableMeetingTimes
#define SOAP_TYPE___ews__FindAvailableMeetingTimes (2947)
/* Operation wrapper: */
struct __ews__FindAvailableMeetingTimes
{
public:
	ews__FindAvailableMeetingTimesType *ews__FindAvailableMeetingTimes;	/* optional element of type ews:FindAvailableMeetingTimesType */
public:
	int soap_type() const { return 2947; } /* = unique type id SOAP_TYPE___ews__FindAvailableMeetingTimes */
};
#endif

#ifndef SOAP_TYPE___ews__SetUserPhotoResponse
#define SOAP_TYPE___ews__SetUserPhotoResponse (2948)
/* Operation wrapper: */
struct __ews__SetUserPhotoResponse
{
public:
	ews__SetUserPhotoResponseMessageType *ews__SetUserPhotoResponse;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ews:SetUserPhotoResponseMessageType */
public:
	int soap_type() const { return 2948; } /* = unique type id SOAP_TYPE___ews__SetUserPhotoResponse */
};
#endif

#ifndef SOAP_TYPE___ews__SetUserPhoto
#define SOAP_TYPE___ews__SetUserPhoto (2953)
/* Operation wrapper: */
struct __ews__SetUserPhoto
{
public:
	ews__SetUserPhotoType *ews__SetUserPhoto;	/* optional element of type ews:SetUserPhotoType */
public:
	int soap_type() const { return 2953; } /* = unique type id SOAP_TYPE___ews__SetUserPhoto */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (2954)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
public:
	int soap_type() const { return 2954; } /* = unique type id SOAP_TYPE_SOAP_ENV__Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (2956)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
public:
	int soap_type() const { return 2956; } /* = unique type id SOAP_TYPE_SOAP_ENV__Detail */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (2959)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 2959; } /* = unique type id SOAP_TYPE_SOAP_ENV__Reason */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (2960)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
public:
	int soap_type() const { return 2960; } /* = unique type id SOAP_TYPE_SOAP_ENV__Fault */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE_xsd__anyURI
#define SOAP_TYPE_xsd__anyURI (18)
typedef std::string xsd__anyURI;
#endif

#ifndef SOAP_TYPE_xsd__date
#define SOAP_TYPE_xsd__date (19)
typedef std::string xsd__date;
#endif

#ifndef SOAP_TYPE_xsd__integer
#define SOAP_TYPE_xsd__integer (20)
typedef std::string xsd__integer;
#endif

#ifndef SOAP_TYPE_xsd__language
#define SOAP_TYPE_xsd__language (21)
typedef std::string xsd__language;
#endif

#ifndef SOAP_TYPE_xsd__nonNegativeInteger
#define SOAP_TYPE_xsd__nonNegativeInteger (22)
typedef std::string xsd__nonNegativeInteger;
#endif

#ifndef SOAP_TYPE_xsd__time
#define SOAP_TYPE_xsd__time (23)
typedef std::string xsd__time;
#endif

#ifndef SOAP_TYPE__xml__lang
#define SOAP_TYPE__xml__lang (24)
typedef std::string _xml__lang;
#endif

#ifndef SOAP_TYPE_ns1__PropertyTagType
#define SOAP_TYPE_ns1__PropertyTagType (1084)
typedef std::string ns1__PropertyTagType;
#endif

#ifndef SOAP_TYPE_ns1__ReminderMinutesBeforeStartType
#define SOAP_TYPE_ns1__ReminderMinutesBeforeStartType (1090)
typedef std::string ns1__ReminderMinutesBeforeStartType;
#endif

#ifndef SOAP_TYPE_ns1__NonEmptyStringType
#define SOAP_TYPE_ns1__NonEmptyStringType (1104)
typedef std::string ns1__NonEmptyStringType;
#endif

#ifndef SOAP_TYPE_ns1__GuidType
#define SOAP_TYPE_ns1__GuidType (1111)
typedef std::string ns1__GuidType;
#endif

#ifndef SOAP_TYPE_ns1__FolderClassType
#define SOAP_TYPE_ns1__FolderClassType (1127)
typedef std::string ns1__FolderClassType;
#endif

#ifndef SOAP_TYPE_ns1__DerivedItemIdType
#define SOAP_TYPE_ns1__DerivedItemIdType (1133)
typedef std::string ns1__DerivedItemIdType;
#endif

#ifndef SOAP_TYPE_ns1__ItemClassType
#define SOAP_TYPE_ns1__ItemClassType (1134)
typedef std::string ns1__ItemClassType;
#endif

#ifndef SOAP_TYPE_ns1__ExcludesAttributeType
#define SOAP_TYPE_ns1__ExcludesAttributeType (1179)
typedef std::string ns1__ExcludesAttributeType;
#endif

#ifndef SOAP_TYPE_ns1__SubscriptionTimeoutType
#define SOAP_TYPE_ns1__SubscriptionTimeoutType (1184)
typedef int ns1__SubscriptionTimeoutType;
#endif

#ifndef SOAP_TYPE_ns1__SubscriptionStatusFrequencyType
#define SOAP_TYPE_ns1__SubscriptionStatusFrequencyType (1185)
typedef int ns1__SubscriptionStatusFrequencyType;
#endif

#ifndef SOAP_TYPE_ns1__StreamingSubscriptionConnectionTimeoutType
#define SOAP_TYPE_ns1__StreamingSubscriptionConnectionTimeoutType (1187)
typedef int ns1__StreamingSubscriptionConnectionTimeoutType;
#endif

#ifndef SOAP_TYPE_ns1__ChannelConnectionTimeoutType
#define SOAP_TYPE_ns1__ChannelConnectionTimeoutType (1189)
typedef int ns1__ChannelConnectionTimeoutType;
#endif

#ifndef SOAP_TYPE_ns1__MaxSyncChangesReturnedType
#define SOAP_TYPE_ns1__MaxSyncChangesReturnedType (1191)
typedef int ns1__MaxSyncChangesReturnedType;
#endif

#ifndef SOAP_TYPE_ns1__ProtectionRuleTrueType
#define SOAP_TYPE_ns1__ProtectionRuleTrueType (1213)
typedef std::string ns1__ProtectionRuleTrueType;
#endif

#ifndef SOAP_TYPE_ns1__ProtectionRuleAllInternalType
#define SOAP_TYPE_ns1__ProtectionRuleAllInternalType (1214)
typedef std::string ns1__ProtectionRuleAllInternalType;
#endif

#ifndef SOAP_TYPE_ns1__ProtectionRuleValueType
#define SOAP_TYPE_ns1__ProtectionRuleValueType (1215)
typedef std::string ns1__ProtectionRuleValueType;
#endif

#ifndef SOAP_TYPE_ns1__WatermarkType
#define SOAP_TYPE_ns1__WatermarkType (1267)
typedef std::string ns1__WatermarkType;
#endif

#ifndef SOAP_TYPE_ns1__SubscriptionIdType
#define SOAP_TYPE_ns1__SubscriptionIdType (1268)
typedef std::string ns1__SubscriptionIdType;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
