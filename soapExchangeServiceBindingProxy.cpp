/* soapExchangeServiceBindingProxy.cpp
   Generated by gSOAP 2.8.23 from services.h

Copyright(C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapExchangeServiceBindingProxy.h"

ExchangeServiceBindingProxy::ExchangeServiceBindingProxy()
{	this->soap = soap_new();
	this->soap_own = true;
	ExchangeServiceBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

ExchangeServiceBindingProxy::ExchangeServiceBindingProxy(struct soap *_soap)
{	this->soap = _soap;
	this->soap_own = false;
	ExchangeServiceBindingProxy_init(_soap->imode, _soap->omode);
}

ExchangeServiceBindingProxy::ExchangeServiceBindingProxy(const char *url)
{	this->soap = soap_new();
	this->soap_own = true;
	ExchangeServiceBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

ExchangeServiceBindingProxy::ExchangeServiceBindingProxy(soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	ExchangeServiceBindingProxy_init(iomode, iomode);
}

ExchangeServiceBindingProxy::ExchangeServiceBindingProxy(const char *url, soap_mode iomode)
{	this->soap = soap_new();
	this->soap_own = true;
	ExchangeServiceBindingProxy_init(iomode, iomode);
	soap_endpoint = url;
}

ExchangeServiceBindingProxy::ExchangeServiceBindingProxy(soap_mode imode, soap_mode omode)
{	this->soap = soap_new();
	this->soap_own = true;
	ExchangeServiceBindingProxy_init(imode, omode);
}

ExchangeServiceBindingProxy::~ExchangeServiceBindingProxy()
{	if (this->soap_own)
		soap_free(this->soap);
}

void ExchangeServiceBindingProxy::ExchangeServiceBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this->soap, imode);
	soap_omode(this->soap, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "http://schemas.microsoft.com/exchange/services/2006/types", NULL, NULL},
	{"ews", "http://schemas.microsoft.com/exchange/services/2006/messages", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this->soap, namespaces);
}

void ExchangeServiceBindingProxy::destroy()
{	soap_destroy(this->soap);
	soap_end(this->soap);
}

void ExchangeServiceBindingProxy::reset()
{	this->destroy();
	soap_done(this->soap);
	soap_initialize(this->soap);
	ExchangeServiceBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void ExchangeServiceBindingProxy::soap_noheader()
{	this->soap->header = NULL;
}

void ExchangeServiceBindingProxy::soap_header(enum ns1__DateTimePrecisionType *ns1__DateTimePrecision, ns1__ExchangeImpersonationType *ns1__ExchangeImpersonation, ns1__MailboxCultureType *ns1__MailboxCulture, ns1__ManagementRoleType *ns1__ManagementRole, _ns1__RequestServerVersion *ns1__RequestServerVersion, _ns1__ServerVersionInfo *ns1__ServerVersionInfo, ns1__TimeZoneContextType *ns1__TimeZoneContext)
{	::soap_header(this->soap);
	this->soap->header->ns1__DateTimePrecision = ns1__DateTimePrecision;
	this->soap->header->ns1__ExchangeImpersonation = ns1__ExchangeImpersonation;
	this->soap->header->ns1__MailboxCulture = ns1__MailboxCulture;
	this->soap->header->ns1__ManagementRole = ns1__ManagementRole;
	this->soap->header->ns1__RequestServerVersion = ns1__RequestServerVersion;
	this->soap->header->ns1__ServerVersionInfo = ns1__ServerVersionInfo;
	this->soap->header->ns1__TimeZoneContext = ns1__TimeZoneContext;
}

const SOAP_ENV__Header *ExchangeServiceBindingProxy::soap_header()
{	return this->soap->header;
}

const SOAP_ENV__Fault *ExchangeServiceBindingProxy::soap_fault()
{	return this->soap->fault;
}

const char *ExchangeServiceBindingProxy::soap_fault_string()
{	return *soap_faultstring(this->soap);
}

const char *ExchangeServiceBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this->soap);
}

int ExchangeServiceBindingProxy::soap_close_socket()
{	return soap_closesock(this->soap);
}

int ExchangeServiceBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this->soap);
}

void ExchangeServiceBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this->soap, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void ExchangeServiceBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this->soap, os);
}
#endif

char *ExchangeServiceBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this->soap, buf, len);
}
#endif

int ExchangeServiceBindingProxy::ResolveNames(const char *endpoint, const char *soap_action, ews__ResolveNamesType *ews__ResolveNames, struct __ews__ResolveNamesResponse &_param_1)
{	struct soap *soap = this->soap;
	struct __ews__ResolveNames soap_tmp___ews__ResolveNames;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/ResolveNames";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__ResolveNames.ews__ResolveNames = ews__ResolveNames;
	soap_serializeheader(soap);
	soap_serialize___ews__ResolveNames(soap, &soap_tmp___ews__ResolveNames);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__ResolveNames(soap, &soap_tmp___ews__ResolveNames, "-ews:ResolveNames", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__ResolveNames(soap, &soap_tmp___ews__ResolveNames, "-ews:ResolveNames", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_1)
		return soap_closesock(soap);
	soap_default___ews__ResolveNamesResponse(soap, &_param_1);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__ResolveNamesResponse(soap, &_param_1, "-ews:ResolveNamesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::ExpandDL(const char *endpoint, const char *soap_action, ews__ExpandDLType *ews__ExpandDL, struct __ews__ExpandDLResponse &_param_2)
{	struct soap *soap = this->soap;
	struct __ews__ExpandDL soap_tmp___ews__ExpandDL;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/ExpandDL";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__ExpandDL.ews__ExpandDL = ews__ExpandDL;
	soap_serializeheader(soap);
	soap_serialize___ews__ExpandDL(soap, &soap_tmp___ews__ExpandDL);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__ExpandDL(soap, &soap_tmp___ews__ExpandDL, "-ews:ExpandDL", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__ExpandDL(soap, &soap_tmp___ews__ExpandDL, "-ews:ExpandDL", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_2)
		return soap_closesock(soap);
	soap_default___ews__ExpandDLResponse(soap, &_param_2);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__ExpandDLResponse(soap, &_param_2, "-ews:ExpandDLResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetServerTimeZones(const char *endpoint, const char *soap_action, ews__GetServerTimeZonesType *ews__GetServerTimeZones, struct __ews__GetServerTimeZonesResponse &_param_3)
{	struct soap *soap = this->soap;
	struct __ews__GetServerTimeZones soap_tmp___ews__GetServerTimeZones;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetServerTimeZones";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetServerTimeZones.ews__GetServerTimeZones = ews__GetServerTimeZones;
	soap_serializeheader(soap);
	soap_serialize___ews__GetServerTimeZones(soap, &soap_tmp___ews__GetServerTimeZones);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetServerTimeZones(soap, &soap_tmp___ews__GetServerTimeZones, "-ews:GetServerTimeZones", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetServerTimeZones(soap, &soap_tmp___ews__GetServerTimeZones, "-ews:GetServerTimeZones", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_3)
		return soap_closesock(soap);
	soap_default___ews__GetServerTimeZonesResponse(soap, &_param_3);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetServerTimeZonesResponse(soap, &_param_3, "-ews:GetServerTimeZonesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::FindFolder(const char *endpoint, const char *soap_action, ews__FindFolderType *ews__FindFolder, struct __ews__FindFolderResponse &_param_4)
{	struct soap *soap = this->soap;
	struct __ews__FindFolder soap_tmp___ews__FindFolder;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/FindFolder";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__FindFolder.ews__FindFolder = ews__FindFolder;
	soap_serializeheader(soap);
	soap_serialize___ews__FindFolder(soap, &soap_tmp___ews__FindFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__FindFolder(soap, &soap_tmp___ews__FindFolder, "-ews:FindFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__FindFolder(soap, &soap_tmp___ews__FindFolder, "-ews:FindFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_4)
		return soap_closesock(soap);
	soap_default___ews__FindFolderResponse(soap, &_param_4);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__FindFolderResponse(soap, &_param_4, "-ews:FindFolderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::FindItem(const char *endpoint, const char *soap_action, ews__FindItemType *ews__FindItem, struct __ews__FindItemResponse &_param_5)
{	struct soap *soap = this->soap;
	struct __ews__FindItem soap_tmp___ews__FindItem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/FindItem";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__FindItem.ews__FindItem = ews__FindItem;
	soap_serializeheader(soap);
	soap_serialize___ews__FindItem(soap, &soap_tmp___ews__FindItem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__FindItem(soap, &soap_tmp___ews__FindItem, "-ews:FindItem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__FindItem(soap, &soap_tmp___ews__FindItem, "-ews:FindItem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_5)
		return soap_closesock(soap);
	soap_default___ews__FindItemResponse(soap, &_param_5);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__FindItemResponse(soap, &_param_5, "-ews:FindItemResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetFolder(const char *endpoint, const char *soap_action, ews__GetFolderType *ews__GetFolder, struct __ews__GetFolderResponse &_param_6)
{	struct soap *soap = this->soap;
	struct __ews__GetFolder soap_tmp___ews__GetFolder;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetFolder";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetFolder.ews__GetFolder = ews__GetFolder;
	soap_serializeheader(soap);
	soap_serialize___ews__GetFolder(soap, &soap_tmp___ews__GetFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetFolder(soap, &soap_tmp___ews__GetFolder, "-ews:GetFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetFolder(soap, &soap_tmp___ews__GetFolder, "-ews:GetFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_6)
		return soap_closesock(soap);
	soap_default___ews__GetFolderResponse(soap, &_param_6);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetFolderResponse(soap, &_param_6, "-ews:GetFolderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::ConvertId(const char *endpoint, const char *soap_action, ews__ConvertIdType *ews__ConvertId, struct __ews__ConvertIdResponse &_param_7)
{	struct soap *soap = this->soap;
	struct __ews__ConvertId soap_tmp___ews__ConvertId;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/ConvertId";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__ConvertId.ews__ConvertId = ews__ConvertId;
	soap_serializeheader(soap);
	soap_serialize___ews__ConvertId(soap, &soap_tmp___ews__ConvertId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__ConvertId(soap, &soap_tmp___ews__ConvertId, "-ews:ConvertId", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__ConvertId(soap, &soap_tmp___ews__ConvertId, "-ews:ConvertId", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_7)
		return soap_closesock(soap);
	soap_default___ews__ConvertIdResponse(soap, &_param_7);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__ConvertIdResponse(soap, &_param_7, "-ews:ConvertIdResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::UploadItems(const char *endpoint, const char *soap_action, ews__UploadItemsType *ews__UploadItems, struct __ews__UploadItemsResponse &_param_8)
{	struct soap *soap = this->soap;
	struct __ews__UploadItems soap_tmp___ews__UploadItems;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/UploadItems";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__UploadItems.ews__UploadItems = ews__UploadItems;
	soap_serializeheader(soap);
	soap_serialize___ews__UploadItems(soap, &soap_tmp___ews__UploadItems);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__UploadItems(soap, &soap_tmp___ews__UploadItems, "-ews:UploadItems", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__UploadItems(soap, &soap_tmp___ews__UploadItems, "-ews:UploadItems", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_8)
		return soap_closesock(soap);
	soap_default___ews__UploadItemsResponse(soap, &_param_8);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__UploadItemsResponse(soap, &_param_8, "-ews:UploadItemsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::ExportItems(const char *endpoint, const char *soap_action, ews__ExportItemsType *ews__ExportItems, struct __ews__ExportItemsResponse &_param_9)
{	struct soap *soap = this->soap;
	struct __ews__ExportItems soap_tmp___ews__ExportItems;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/ExportItems";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__ExportItems.ews__ExportItems = ews__ExportItems;
	soap_serializeheader(soap);
	soap_serialize___ews__ExportItems(soap, &soap_tmp___ews__ExportItems);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__ExportItems(soap, &soap_tmp___ews__ExportItems, "-ews:ExportItems", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__ExportItems(soap, &soap_tmp___ews__ExportItems, "-ews:ExportItems", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_9)
		return soap_closesock(soap);
	soap_default___ews__ExportItemsResponse(soap, &_param_9);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__ExportItemsResponse(soap, &_param_9, "-ews:ExportItemsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::CreateFolderPath(const char *endpoint, const char *soap_action, ews__CreateFolderPathType *ews__CreateFolderPath, struct __ews__CreateFolderPathResponse &_param_10)
{	struct soap *soap = this->soap;
	struct __ews__CreateFolderPath soap_tmp___ews__CreateFolderPath;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/CreateFolderPath";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__CreateFolderPath.ews__CreateFolderPath = ews__CreateFolderPath;
	soap_serializeheader(soap);
	soap_serialize___ews__CreateFolderPath(soap, &soap_tmp___ews__CreateFolderPath);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__CreateFolderPath(soap, &soap_tmp___ews__CreateFolderPath, "-ews:CreateFolderPath", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__CreateFolderPath(soap, &soap_tmp___ews__CreateFolderPath, "-ews:CreateFolderPath", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_10)
		return soap_closesock(soap);
	soap_default___ews__CreateFolderPathResponse(soap, &_param_10);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__CreateFolderPathResponse(soap, &_param_10, "-ews:CreateFolderPathResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::CreateFolder(const char *endpoint, const char *soap_action, ews__CreateFolderType *ews__CreateFolder, struct __ews__CreateFolderResponse &_param_11)
{	struct soap *soap = this->soap;
	struct __ews__CreateFolder soap_tmp___ews__CreateFolder;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/CreateFolder";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__CreateFolder.ews__CreateFolder = ews__CreateFolder;
	soap_serializeheader(soap);
	soap_serialize___ews__CreateFolder(soap, &soap_tmp___ews__CreateFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__CreateFolder(soap, &soap_tmp___ews__CreateFolder, "-ews:CreateFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__CreateFolder(soap, &soap_tmp___ews__CreateFolder, "-ews:CreateFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_11)
		return soap_closesock(soap);
	soap_default___ews__CreateFolderResponse(soap, &_param_11);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__CreateFolderResponse(soap, &_param_11, "-ews:CreateFolderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::DeleteFolder(const char *endpoint, const char *soap_action, ews__DeleteFolderType *ews__DeleteFolder, struct __ews__DeleteFolderResponse &_param_12)
{	struct soap *soap = this->soap;
	struct __ews__DeleteFolder soap_tmp___ews__DeleteFolder;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/DeleteFolder";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__DeleteFolder.ews__DeleteFolder = ews__DeleteFolder;
	soap_serializeheader(soap);
	soap_serialize___ews__DeleteFolder(soap, &soap_tmp___ews__DeleteFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__DeleteFolder(soap, &soap_tmp___ews__DeleteFolder, "-ews:DeleteFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__DeleteFolder(soap, &soap_tmp___ews__DeleteFolder, "-ews:DeleteFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_12)
		return soap_closesock(soap);
	soap_default___ews__DeleteFolderResponse(soap, &_param_12);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__DeleteFolderResponse(soap, &_param_12, "-ews:DeleteFolderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::EmptyFolder(const char *endpoint, const char *soap_action, ews__EmptyFolderType *ews__EmptyFolder, struct __ews__EmptyFolderResponse &_param_13)
{	struct soap *soap = this->soap;
	struct __ews__EmptyFolder soap_tmp___ews__EmptyFolder;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/EmptyFolder";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__EmptyFolder.ews__EmptyFolder = ews__EmptyFolder;
	soap_serializeheader(soap);
	soap_serialize___ews__EmptyFolder(soap, &soap_tmp___ews__EmptyFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__EmptyFolder(soap, &soap_tmp___ews__EmptyFolder, "-ews:EmptyFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__EmptyFolder(soap, &soap_tmp___ews__EmptyFolder, "-ews:EmptyFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_13)
		return soap_closesock(soap);
	soap_default___ews__EmptyFolderResponse(soap, &_param_13);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__EmptyFolderResponse(soap, &_param_13, "-ews:EmptyFolderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::UpdateFolder(const char *endpoint, const char *soap_action, ews__UpdateFolderType *ews__UpdateFolder, struct __ews__UpdateFolderResponse &_param_14)
{	struct soap *soap = this->soap;
	struct __ews__UpdateFolder soap_tmp___ews__UpdateFolder;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/UpdateFolder";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__UpdateFolder.ews__UpdateFolder = ews__UpdateFolder;
	soap_serializeheader(soap);
	soap_serialize___ews__UpdateFolder(soap, &soap_tmp___ews__UpdateFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__UpdateFolder(soap, &soap_tmp___ews__UpdateFolder, "-ews:UpdateFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__UpdateFolder(soap, &soap_tmp___ews__UpdateFolder, "-ews:UpdateFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_14)
		return soap_closesock(soap);
	soap_default___ews__UpdateFolderResponse(soap, &_param_14);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__UpdateFolderResponse(soap, &_param_14, "-ews:UpdateFolderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::MoveFolder(const char *endpoint, const char *soap_action, ews__MoveFolderType *ews__MoveFolder, struct __ews__MoveFolderResponse &_param_15)
{	struct soap *soap = this->soap;
	struct __ews__MoveFolder soap_tmp___ews__MoveFolder;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/MoveFolder";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__MoveFolder.ews__MoveFolder = ews__MoveFolder;
	soap_serializeheader(soap);
	soap_serialize___ews__MoveFolder(soap, &soap_tmp___ews__MoveFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__MoveFolder(soap, &soap_tmp___ews__MoveFolder, "-ews:MoveFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__MoveFolder(soap, &soap_tmp___ews__MoveFolder, "-ews:MoveFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_15)
		return soap_closesock(soap);
	soap_default___ews__MoveFolderResponse(soap, &_param_15);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__MoveFolderResponse(soap, &_param_15, "-ews:MoveFolderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::CopyFolder(const char *endpoint, const char *soap_action, ews__CopyFolderType *ews__CopyFolder, struct __ews__CopyFolderResponse &_param_16)
{	struct soap *soap = this->soap;
	struct __ews__CopyFolder soap_tmp___ews__CopyFolder;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/CopyFolder";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__CopyFolder.ews__CopyFolder = ews__CopyFolder;
	soap_serializeheader(soap);
	soap_serialize___ews__CopyFolder(soap, &soap_tmp___ews__CopyFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__CopyFolder(soap, &soap_tmp___ews__CopyFolder, "-ews:CopyFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__CopyFolder(soap, &soap_tmp___ews__CopyFolder, "-ews:CopyFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_16)
		return soap_closesock(soap);
	soap_default___ews__CopyFolderResponse(soap, &_param_16);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__CopyFolderResponse(soap, &_param_16, "-ews:CopyFolderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::Subscribe(const char *endpoint, const char *soap_action, ews__SubscribeType *ews__Subscribe, struct __ews__SubscribeResponse &_param_17)
{	struct soap *soap = this->soap;
	struct __ews__Subscribe soap_tmp___ews__Subscribe;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/Subscribe";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__Subscribe.ews__Subscribe = ews__Subscribe;
	soap_serializeheader(soap);
	soap_serialize___ews__Subscribe(soap, &soap_tmp___ews__Subscribe);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__Subscribe(soap, &soap_tmp___ews__Subscribe, "-ews:Subscribe", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__Subscribe(soap, &soap_tmp___ews__Subscribe, "-ews:Subscribe", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_17)
		return soap_closesock(soap);
	soap_default___ews__SubscribeResponse(soap, &_param_17);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__SubscribeResponse(soap, &_param_17, "-ews:SubscribeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::Unsubscribe(const char *endpoint, const char *soap_action, ews__UnsubscribeType *ews__Unsubscribe, struct __ews__UnsubscribeResponse &_param_18)
{	struct soap *soap = this->soap;
	struct __ews__Unsubscribe soap_tmp___ews__Unsubscribe;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/Unsubscribe";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__Unsubscribe.ews__Unsubscribe = ews__Unsubscribe;
	soap_serializeheader(soap);
	soap_serialize___ews__Unsubscribe(soap, &soap_tmp___ews__Unsubscribe);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__Unsubscribe(soap, &soap_tmp___ews__Unsubscribe, "-ews:Unsubscribe", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__Unsubscribe(soap, &soap_tmp___ews__Unsubscribe, "-ews:Unsubscribe", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_18)
		return soap_closesock(soap);
	soap_default___ews__UnsubscribeResponse(soap, &_param_18);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__UnsubscribeResponse(soap, &_param_18, "-ews:UnsubscribeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetEvents(const char *endpoint, const char *soap_action, ews__GetEventsType *ews__GetEvents, struct __ews__GetEventsResponse &_param_19)
{	struct soap *soap = this->soap;
	struct __ews__GetEvents soap_tmp___ews__GetEvents;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetEvents";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetEvents.ews__GetEvents = ews__GetEvents;
	soap_serializeheader(soap);
	soap_serialize___ews__GetEvents(soap, &soap_tmp___ews__GetEvents);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetEvents(soap, &soap_tmp___ews__GetEvents, "-ews:GetEvents", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetEvents(soap, &soap_tmp___ews__GetEvents, "-ews:GetEvents", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_19)
		return soap_closesock(soap);
	soap_default___ews__GetEventsResponse(soap, &_param_19);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetEventsResponse(soap, &_param_19, "-ews:GetEventsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetStreamingEvents(const char *endpoint, const char *soap_action, ews__GetStreamingEventsType *ews__GetStreamingEvents, struct __ews__GetStreamingEventsResponse &_param_20)
{	struct soap *soap = this->soap;
	struct __ews__GetStreamingEvents soap_tmp___ews__GetStreamingEvents;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetEvents";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetStreamingEvents.ews__GetStreamingEvents = ews__GetStreamingEvents;
	soap_serializeheader(soap);
	soap_serialize___ews__GetStreamingEvents(soap, &soap_tmp___ews__GetStreamingEvents);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetStreamingEvents(soap, &soap_tmp___ews__GetStreamingEvents, "-ews:GetStreamingEvents", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetStreamingEvents(soap, &soap_tmp___ews__GetStreamingEvents, "-ews:GetStreamingEvents", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_20)
		return soap_closesock(soap);
	soap_default___ews__GetStreamingEventsResponse(soap, &_param_20);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetStreamingEventsResponse(soap, &_param_20, "-ews:GetStreamingEventsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::SyncFolderHierarchy(const char *endpoint, const char *soap_action, ews__SyncFolderHierarchyType *ews__SyncFolderHierarchy, struct __ews__SyncFolderHierarchyResponse &_param_21)
{	struct soap *soap = this->soap;
	struct __ews__SyncFolderHierarchy soap_tmp___ews__SyncFolderHierarchy;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/SyncFolderHierarchy";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__SyncFolderHierarchy.ews__SyncFolderHierarchy = ews__SyncFolderHierarchy;
	soap_serializeheader(soap);
	soap_serialize___ews__SyncFolderHierarchy(soap, &soap_tmp___ews__SyncFolderHierarchy);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__SyncFolderHierarchy(soap, &soap_tmp___ews__SyncFolderHierarchy, "-ews:SyncFolderHierarchy", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__SyncFolderHierarchy(soap, &soap_tmp___ews__SyncFolderHierarchy, "-ews:SyncFolderHierarchy", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_21)
		return soap_closesock(soap);
	soap_default___ews__SyncFolderHierarchyResponse(soap, &_param_21);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__SyncFolderHierarchyResponse(soap, &_param_21, "-ews:SyncFolderHierarchyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::SyncFolderItems(const char *endpoint, const char *soap_action, ews__SyncFolderItemsType *ews__SyncFolderItems, struct __ews__SyncFolderItemsResponse &_param_22)
{	struct soap *soap = this->soap;
	struct __ews__SyncFolderItems soap_tmp___ews__SyncFolderItems;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/SyncFolderItems";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__SyncFolderItems.ews__SyncFolderItems = ews__SyncFolderItems;
	soap_serializeheader(soap);
	soap_serialize___ews__SyncFolderItems(soap, &soap_tmp___ews__SyncFolderItems);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__SyncFolderItems(soap, &soap_tmp___ews__SyncFolderItems, "-ews:SyncFolderItems", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__SyncFolderItems(soap, &soap_tmp___ews__SyncFolderItems, "-ews:SyncFolderItems", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_22)
		return soap_closesock(soap);
	soap_default___ews__SyncFolderItemsResponse(soap, &_param_22);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__SyncFolderItemsResponse(soap, &_param_22, "-ews:SyncFolderItemsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetItem(const char *endpoint, const char *soap_action, ews__GetItemType *ews__GetItem, struct __ews__GetItemResponse &_param_23)
{	struct soap *soap = this->soap;
	struct __ews__GetItem soap_tmp___ews__GetItem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetItem";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetItem.ews__GetItem = ews__GetItem;
	soap_serializeheader(soap);
	soap_serialize___ews__GetItem(soap, &soap_tmp___ews__GetItem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetItem(soap, &soap_tmp___ews__GetItem, "-ews:GetItem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetItem(soap, &soap_tmp___ews__GetItem, "-ews:GetItem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_23)
		return soap_closesock(soap);
	soap_default___ews__GetItemResponse(soap, &_param_23);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetItemResponse(soap, &_param_23, "-ews:GetItemResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::CreateItem(const char *endpoint, const char *soap_action, ews__CreateItemType *ews__CreateItem, struct __ews__CreateItemResponse &_param_24)
{	struct soap *soap = this->soap;
	struct __ews__CreateItem soap_tmp___ews__CreateItem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/CreateItem";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__CreateItem.ews__CreateItem = ews__CreateItem;
	soap_serializeheader(soap);
	soap_serialize___ews__CreateItem(soap, &soap_tmp___ews__CreateItem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__CreateItem(soap, &soap_tmp___ews__CreateItem, "-ews:CreateItem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__CreateItem(soap, &soap_tmp___ews__CreateItem, "-ews:CreateItem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_24)
		return soap_closesock(soap);
	soap_default___ews__CreateItemResponse(soap, &_param_24);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__CreateItemResponse(soap, &_param_24, "-ews:CreateItemResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::DeleteItem(const char *endpoint, const char *soap_action, ews__DeleteItemType *ews__DeleteItem, struct __ews__DeleteItemResponse &_param_25)
{	struct soap *soap = this->soap;
	struct __ews__DeleteItem soap_tmp___ews__DeleteItem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/DeleteItem";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__DeleteItem.ews__DeleteItem = ews__DeleteItem;
	soap_serializeheader(soap);
	soap_serialize___ews__DeleteItem(soap, &soap_tmp___ews__DeleteItem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__DeleteItem(soap, &soap_tmp___ews__DeleteItem, "-ews:DeleteItem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__DeleteItem(soap, &soap_tmp___ews__DeleteItem, "-ews:DeleteItem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_25)
		return soap_closesock(soap);
	soap_default___ews__DeleteItemResponse(soap, &_param_25);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__DeleteItemResponse(soap, &_param_25, "-ews:DeleteItemResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::UpdateItem(const char *endpoint, const char *soap_action, ews__UpdateItemType *ews__UpdateItem, struct __ews__UpdateItemResponse &_param_26)
{	struct soap *soap = this->soap;
	struct __ews__UpdateItem soap_tmp___ews__UpdateItem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/UpdateItem";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__UpdateItem.ews__UpdateItem = ews__UpdateItem;
	soap_serializeheader(soap);
	soap_serialize___ews__UpdateItem(soap, &soap_tmp___ews__UpdateItem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__UpdateItem(soap, &soap_tmp___ews__UpdateItem, "-ews:UpdateItem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__UpdateItem(soap, &soap_tmp___ews__UpdateItem, "-ews:UpdateItem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_26)
		return soap_closesock(soap);
	soap_default___ews__UpdateItemResponse(soap, &_param_26);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__UpdateItemResponse(soap, &_param_26, "-ews:UpdateItemResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::UpdateItemInRecoverableItems(const char *endpoint, const char *soap_action, ews__UpdateItemInRecoverableItemsType *ews__UpdateItemInRecoverableItems, struct __ews__UpdateItemInRecoverableItemsResponse &_param_27)
{	struct soap *soap = this->soap;
	struct __ews__UpdateItemInRecoverableItems soap_tmp___ews__UpdateItemInRecoverableItems;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/UpdateItemInRecoverableItems";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__UpdateItemInRecoverableItems.ews__UpdateItemInRecoverableItems = ews__UpdateItemInRecoverableItems;
	soap_serializeheader(soap);
	soap_serialize___ews__UpdateItemInRecoverableItems(soap, &soap_tmp___ews__UpdateItemInRecoverableItems);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__UpdateItemInRecoverableItems(soap, &soap_tmp___ews__UpdateItemInRecoverableItems, "-ews:UpdateItemInRecoverableItems", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__UpdateItemInRecoverableItems(soap, &soap_tmp___ews__UpdateItemInRecoverableItems, "-ews:UpdateItemInRecoverableItems", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_27)
		return soap_closesock(soap);
	soap_default___ews__UpdateItemInRecoverableItemsResponse(soap, &_param_27);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__UpdateItemInRecoverableItemsResponse(soap, &_param_27, "-ews:UpdateItemInRecoverableItemsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::SendItem(const char *endpoint, const char *soap_action, ews__SendItemType *ews__SendItem, struct __ews__SendItemResponse &_param_28)
{	struct soap *soap = this->soap;
	struct __ews__SendItem soap_tmp___ews__SendItem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/SendItem";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__SendItem.ews__SendItem = ews__SendItem;
	soap_serializeheader(soap);
	soap_serialize___ews__SendItem(soap, &soap_tmp___ews__SendItem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__SendItem(soap, &soap_tmp___ews__SendItem, "-ews:SendItem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__SendItem(soap, &soap_tmp___ews__SendItem, "-ews:SendItem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_28)
		return soap_closesock(soap);
	soap_default___ews__SendItemResponse(soap, &_param_28);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__SendItemResponse(soap, &_param_28, "-ews:SendItemResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::MoveItem(const char *endpoint, const char *soap_action, ews__MoveItemType *ews__MoveItem, struct __ews__MoveItemResponse &_param_29)
{	struct soap *soap = this->soap;
	struct __ews__MoveItem soap_tmp___ews__MoveItem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/MoveItem";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__MoveItem.ews__MoveItem = ews__MoveItem;
	soap_serializeheader(soap);
	soap_serialize___ews__MoveItem(soap, &soap_tmp___ews__MoveItem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__MoveItem(soap, &soap_tmp___ews__MoveItem, "-ews:MoveItem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__MoveItem(soap, &soap_tmp___ews__MoveItem, "-ews:MoveItem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_29)
		return soap_closesock(soap);
	soap_default___ews__MoveItemResponse(soap, &_param_29);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__MoveItemResponse(soap, &_param_29, "-ews:MoveItemResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::CopyItem(const char *endpoint, const char *soap_action, ews__CopyItemType *ews__CopyItem, struct __ews__CopyItemResponse &_param_30)
{	struct soap *soap = this->soap;
	struct __ews__CopyItem soap_tmp___ews__CopyItem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/CopyItem";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__CopyItem.ews__CopyItem = ews__CopyItem;
	soap_serializeheader(soap);
	soap_serialize___ews__CopyItem(soap, &soap_tmp___ews__CopyItem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__CopyItem(soap, &soap_tmp___ews__CopyItem, "-ews:CopyItem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__CopyItem(soap, &soap_tmp___ews__CopyItem, "-ews:CopyItem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_30)
		return soap_closesock(soap);
	soap_default___ews__CopyItemResponse(soap, &_param_30);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__CopyItemResponse(soap, &_param_30, "-ews:CopyItemResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::ArchiveItem(const char *endpoint, const char *soap_action, ews__ArchiveItemType *ews__ArchiveItem, struct __ews__ArchiveItemResponse &_param_31)
{	struct soap *soap = this->soap;
	struct __ews__ArchiveItem soap_tmp___ews__ArchiveItem;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/ArchiveItem";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__ArchiveItem.ews__ArchiveItem = ews__ArchiveItem;
	soap_serializeheader(soap);
	soap_serialize___ews__ArchiveItem(soap, &soap_tmp___ews__ArchiveItem);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__ArchiveItem(soap, &soap_tmp___ews__ArchiveItem, "-ews:ArchiveItem", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__ArchiveItem(soap, &soap_tmp___ews__ArchiveItem, "-ews:ArchiveItem", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_31)
		return soap_closesock(soap);
	soap_default___ews__ArchiveItemResponse(soap, &_param_31);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__ArchiveItemResponse(soap, &_param_31, "-ews:ArchiveItemResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::CreateAttachment(const char *endpoint, const char *soap_action, ews__CreateAttachmentType *ews__CreateAttachment, struct __ews__CreateAttachmentResponse &_param_32)
{	struct soap *soap = this->soap;
	struct __ews__CreateAttachment soap_tmp___ews__CreateAttachment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/CreateAttachment";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__CreateAttachment.ews__CreateAttachment = ews__CreateAttachment;
	soap_serializeheader(soap);
	soap_serialize___ews__CreateAttachment(soap, &soap_tmp___ews__CreateAttachment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__CreateAttachment(soap, &soap_tmp___ews__CreateAttachment, "-ews:CreateAttachment", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__CreateAttachment(soap, &soap_tmp___ews__CreateAttachment, "-ews:CreateAttachment", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_32)
		return soap_closesock(soap);
	soap_default___ews__CreateAttachmentResponse(soap, &_param_32);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__CreateAttachmentResponse(soap, &_param_32, "-ews:CreateAttachmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::DeleteAttachment(const char *endpoint, const char *soap_action, ews__DeleteAttachmentType *ews__DeleteAttachment, struct __ews__DeleteAttachmentResponse &_param_33)
{	struct soap *soap = this->soap;
	struct __ews__DeleteAttachment soap_tmp___ews__DeleteAttachment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/DeleteAttachment";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__DeleteAttachment.ews__DeleteAttachment = ews__DeleteAttachment;
	soap_serializeheader(soap);
	soap_serialize___ews__DeleteAttachment(soap, &soap_tmp___ews__DeleteAttachment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__DeleteAttachment(soap, &soap_tmp___ews__DeleteAttachment, "-ews:DeleteAttachment", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__DeleteAttachment(soap, &soap_tmp___ews__DeleteAttachment, "-ews:DeleteAttachment", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_33)
		return soap_closesock(soap);
	soap_default___ews__DeleteAttachmentResponse(soap, &_param_33);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__DeleteAttachmentResponse(soap, &_param_33, "-ews:DeleteAttachmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetAttachment(const char *endpoint, const char *soap_action, ews__GetAttachmentType *ews__GetAttachment, struct __ews__GetAttachmentResponse &_param_34)
{	struct soap *soap = this->soap;
	struct __ews__GetAttachment soap_tmp___ews__GetAttachment;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetAttachment";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetAttachment.ews__GetAttachment = ews__GetAttachment;
	soap_serializeheader(soap);
	soap_serialize___ews__GetAttachment(soap, &soap_tmp___ews__GetAttachment);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetAttachment(soap, &soap_tmp___ews__GetAttachment, "-ews:GetAttachment", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetAttachment(soap, &soap_tmp___ews__GetAttachment, "-ews:GetAttachment", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_34)
		return soap_closesock(soap);
	soap_default___ews__GetAttachmentResponse(soap, &_param_34);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetAttachmentResponse(soap, &_param_34, "-ews:GetAttachmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetClientAccessToken(const char *endpoint, const char *soap_action, ews__GetClientAccessTokenType *ews__GetClientAccessToken, struct __ews__GetClientAccessTokenResponse &_param_35)
{	struct soap *soap = this->soap;
	struct __ews__GetClientAccessToken soap_tmp___ews__GetClientAccessToken;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetClientAccessToken";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetClientAccessToken.ews__GetClientAccessToken = ews__GetClientAccessToken;
	soap_serializeheader(soap);
	soap_serialize___ews__GetClientAccessToken(soap, &soap_tmp___ews__GetClientAccessToken);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetClientAccessToken(soap, &soap_tmp___ews__GetClientAccessToken, "-ews:GetClientAccessToken", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetClientAccessToken(soap, &soap_tmp___ews__GetClientAccessToken, "-ews:GetClientAccessToken", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_35)
		return soap_closesock(soap);
	soap_default___ews__GetClientAccessTokenResponse(soap, &_param_35);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetClientAccessTokenResponse(soap, &_param_35, "-ews:GetClientAccessTokenResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::CreateManagedFolder(const char *endpoint, const char *soap_action, ews__CreateManagedFolderRequestType *ews__CreateManagedFolder, struct __ews__CreateManagedFolderResponse &_param_36)
{	struct soap *soap = this->soap;
	struct __ews__CreateManagedFolder soap_tmp___ews__CreateManagedFolder;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/CreateManagedFolder";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__CreateManagedFolder.ews__CreateManagedFolder = ews__CreateManagedFolder;
	soap_serializeheader(soap);
	soap_serialize___ews__CreateManagedFolder(soap, &soap_tmp___ews__CreateManagedFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__CreateManagedFolder(soap, &soap_tmp___ews__CreateManagedFolder, "-ews:CreateManagedFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__CreateManagedFolder(soap, &soap_tmp___ews__CreateManagedFolder, "-ews:CreateManagedFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_36)
		return soap_closesock(soap);
	soap_default___ews__CreateManagedFolderResponse(soap, &_param_36);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__CreateManagedFolderResponse(soap, &_param_36, "-ews:CreateManagedFolderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetDelegate(const char *endpoint, const char *soap_action, ews__GetDelegateType *ews__GetDelegate, struct __ews__GetDelegateResponse &_param_37)
{	struct soap *soap = this->soap;
	struct __ews__GetDelegate soap_tmp___ews__GetDelegate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetDelegate";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetDelegate.ews__GetDelegate = ews__GetDelegate;
	soap_serializeheader(soap);
	soap_serialize___ews__GetDelegate(soap, &soap_tmp___ews__GetDelegate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetDelegate(soap, &soap_tmp___ews__GetDelegate, "-ews:GetDelegate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetDelegate(soap, &soap_tmp___ews__GetDelegate, "-ews:GetDelegate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_37)
		return soap_closesock(soap);
	soap_default___ews__GetDelegateResponse(soap, &_param_37);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetDelegateResponse(soap, &_param_37, "-ews:GetDelegateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::AddDelegate(const char *endpoint, const char *soap_action, ews__AddDelegateType *ews__AddDelegate, struct __ews__AddDelegateResponse &_param_38)
{	struct soap *soap = this->soap;
	struct __ews__AddDelegate soap_tmp___ews__AddDelegate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/AddDelegate";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__AddDelegate.ews__AddDelegate = ews__AddDelegate;
	soap_serializeheader(soap);
	soap_serialize___ews__AddDelegate(soap, &soap_tmp___ews__AddDelegate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__AddDelegate(soap, &soap_tmp___ews__AddDelegate, "-ews:AddDelegate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__AddDelegate(soap, &soap_tmp___ews__AddDelegate, "-ews:AddDelegate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_38)
		return soap_closesock(soap);
	soap_default___ews__AddDelegateResponse(soap, &_param_38);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__AddDelegateResponse(soap, &_param_38, "-ews:AddDelegateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::RemoveDelegate(const char *endpoint, const char *soap_action, ews__RemoveDelegateType *ews__RemoveDelegate, struct __ews__RemoveDelegateResponse &_param_39)
{	struct soap *soap = this->soap;
	struct __ews__RemoveDelegate soap_tmp___ews__RemoveDelegate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/RemoveDelegate";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__RemoveDelegate.ews__RemoveDelegate = ews__RemoveDelegate;
	soap_serializeheader(soap);
	soap_serialize___ews__RemoveDelegate(soap, &soap_tmp___ews__RemoveDelegate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__RemoveDelegate(soap, &soap_tmp___ews__RemoveDelegate, "-ews:RemoveDelegate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__RemoveDelegate(soap, &soap_tmp___ews__RemoveDelegate, "-ews:RemoveDelegate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_39)
		return soap_closesock(soap);
	soap_default___ews__RemoveDelegateResponse(soap, &_param_39);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__RemoveDelegateResponse(soap, &_param_39, "-ews:RemoveDelegateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::UpdateDelegate(const char *endpoint, const char *soap_action, ews__UpdateDelegateType *ews__UpdateDelegate, struct __ews__UpdateDelegateResponse &_param_40)
{	struct soap *soap = this->soap;
	struct __ews__UpdateDelegate soap_tmp___ews__UpdateDelegate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/UpdateDelegate";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__UpdateDelegate.ews__UpdateDelegate = ews__UpdateDelegate;
	soap_serializeheader(soap);
	soap_serialize___ews__UpdateDelegate(soap, &soap_tmp___ews__UpdateDelegate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__UpdateDelegate(soap, &soap_tmp___ews__UpdateDelegate, "-ews:UpdateDelegate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__UpdateDelegate(soap, &soap_tmp___ews__UpdateDelegate, "-ews:UpdateDelegate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_40)
		return soap_closesock(soap);
	soap_default___ews__UpdateDelegateResponse(soap, &_param_40);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__UpdateDelegateResponse(soap, &_param_40, "-ews:UpdateDelegateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::CreateUserConfiguration(const char *endpoint, const char *soap_action, ews__CreateUserConfigurationType *ews__CreateUserConfiguration, struct __ews__CreateUserConfigurationResponse &_param_41)
{	struct soap *soap = this->soap;
	struct __ews__CreateUserConfiguration soap_tmp___ews__CreateUserConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/CreateUserConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__CreateUserConfiguration.ews__CreateUserConfiguration = ews__CreateUserConfiguration;
	soap_serializeheader(soap);
	soap_serialize___ews__CreateUserConfiguration(soap, &soap_tmp___ews__CreateUserConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__CreateUserConfiguration(soap, &soap_tmp___ews__CreateUserConfiguration, "-ews:CreateUserConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__CreateUserConfiguration(soap, &soap_tmp___ews__CreateUserConfiguration, "-ews:CreateUserConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_41)
		return soap_closesock(soap);
	soap_default___ews__CreateUserConfigurationResponse(soap, &_param_41);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__CreateUserConfigurationResponse(soap, &_param_41, "-ews:CreateUserConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::DeleteUserConfiguration(const char *endpoint, const char *soap_action, ews__DeleteUserConfigurationType *ews__DeleteUserConfiguration, struct __ews__DeleteUserConfigurationResponse &_param_42)
{	struct soap *soap = this->soap;
	struct __ews__DeleteUserConfiguration soap_tmp___ews__DeleteUserConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/DeleteUserConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__DeleteUserConfiguration.ews__DeleteUserConfiguration = ews__DeleteUserConfiguration;
	soap_serializeheader(soap);
	soap_serialize___ews__DeleteUserConfiguration(soap, &soap_tmp___ews__DeleteUserConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__DeleteUserConfiguration(soap, &soap_tmp___ews__DeleteUserConfiguration, "-ews:DeleteUserConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__DeleteUserConfiguration(soap, &soap_tmp___ews__DeleteUserConfiguration, "-ews:DeleteUserConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_42)
		return soap_closesock(soap);
	soap_default___ews__DeleteUserConfigurationResponse(soap, &_param_42);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__DeleteUserConfigurationResponse(soap, &_param_42, "-ews:DeleteUserConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetUserConfiguration(const char *endpoint, const char *soap_action, ews__GetUserConfigurationType *ews__GetUserConfiguration, struct __ews__GetUserConfigurationResponse &_param_43)
{	struct soap *soap = this->soap;
	struct __ews__GetUserConfiguration soap_tmp___ews__GetUserConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetUserConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetUserConfiguration.ews__GetUserConfiguration = ews__GetUserConfiguration;
	soap_serializeheader(soap);
	soap_serialize___ews__GetUserConfiguration(soap, &soap_tmp___ews__GetUserConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetUserConfiguration(soap, &soap_tmp___ews__GetUserConfiguration, "-ews:GetUserConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetUserConfiguration(soap, &soap_tmp___ews__GetUserConfiguration, "-ews:GetUserConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_43)
		return soap_closesock(soap);
	soap_default___ews__GetUserConfigurationResponse(soap, &_param_43);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetUserConfigurationResponse(soap, &_param_43, "-ews:GetUserConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::UpdateUserConfiguration(const char *endpoint, const char *soap_action, ews__UpdateUserConfigurationType *ews__UpdateUserConfiguration, struct __ews__UpdateUserConfigurationResponse &_param_44)
{	struct soap *soap = this->soap;
	struct __ews__UpdateUserConfiguration soap_tmp___ews__UpdateUserConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/UpdateUserConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__UpdateUserConfiguration.ews__UpdateUserConfiguration = ews__UpdateUserConfiguration;
	soap_serializeheader(soap);
	soap_serialize___ews__UpdateUserConfiguration(soap, &soap_tmp___ews__UpdateUserConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__UpdateUserConfiguration(soap, &soap_tmp___ews__UpdateUserConfiguration, "-ews:UpdateUserConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__UpdateUserConfiguration(soap, &soap_tmp___ews__UpdateUserConfiguration, "-ews:UpdateUserConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_44)
		return soap_closesock(soap);
	soap_default___ews__UpdateUserConfigurationResponse(soap, &_param_44);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__UpdateUserConfigurationResponse(soap, &_param_44, "-ews:UpdateUserConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetUserAvailability(const char *endpoint, const char *soap_action, ews__GetUserAvailabilityRequestType *ews__GetUserAvailabilityRequest, struct __ews__GetUserAvailabilityResponse &_param_45)
{	struct soap *soap = this->soap;
	struct __ews__GetUserAvailability soap_tmp___ews__GetUserAvailability;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetUserAvailability";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetUserAvailability.ews__GetUserAvailabilityRequest = ews__GetUserAvailabilityRequest;
	soap_serializeheader(soap);
	soap_serialize___ews__GetUserAvailability(soap, &soap_tmp___ews__GetUserAvailability);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetUserAvailability(soap, &soap_tmp___ews__GetUserAvailability, "-ews:GetUserAvailability", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetUserAvailability(soap, &soap_tmp___ews__GetUserAvailability, "-ews:GetUserAvailability", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_45)
		return soap_closesock(soap);
	soap_default___ews__GetUserAvailabilityResponse(soap, &_param_45);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetUserAvailabilityResponse(soap, &_param_45, "-ews:GetUserAvailabilityResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetUserOofSettings(const char *endpoint, const char *soap_action, ews__GetUserOofSettingsRequest *ews__GetUserOofSettingsRequest_, struct __ews__GetUserOofSettingsResponse &_param_46)
{	struct soap *soap = this->soap;
	struct __ews__GetUserOofSettings soap_tmp___ews__GetUserOofSettings;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetUserOofSettings";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetUserOofSettings.ews__GetUserOofSettingsRequest_ = ews__GetUserOofSettingsRequest_;
	soap_serializeheader(soap);
	soap_serialize___ews__GetUserOofSettings(soap, &soap_tmp___ews__GetUserOofSettings);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetUserOofSettings(soap, &soap_tmp___ews__GetUserOofSettings, "-ews:GetUserOofSettings", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetUserOofSettings(soap, &soap_tmp___ews__GetUserOofSettings, "-ews:GetUserOofSettings", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_46)
		return soap_closesock(soap);
	soap_default___ews__GetUserOofSettingsResponse(soap, &_param_46);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetUserOofSettingsResponse(soap, &_param_46, "-ews:GetUserOofSettingsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::SetUserOofSettings(const char *endpoint, const char *soap_action, ews__SetUserOofSettingsRequest *ews__SetUserOofSettingsRequest_, struct __ews__SetUserOofSettingsResponse &_param_47)
{	struct soap *soap = this->soap;
	struct __ews__SetUserOofSettings soap_tmp___ews__SetUserOofSettings;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/SetUserOofSettings";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__SetUserOofSettings.ews__SetUserOofSettingsRequest_ = ews__SetUserOofSettingsRequest_;
	soap_serializeheader(soap);
	soap_serialize___ews__SetUserOofSettings(soap, &soap_tmp___ews__SetUserOofSettings);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__SetUserOofSettings(soap, &soap_tmp___ews__SetUserOofSettings, "-ews:SetUserOofSettings", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__SetUserOofSettings(soap, &soap_tmp___ews__SetUserOofSettings, "-ews:SetUserOofSettings", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_47)
		return soap_closesock(soap);
	soap_default___ews__SetUserOofSettingsResponse(soap, &_param_47);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__SetUserOofSettingsResponse(soap, &_param_47, "-ews:SetUserOofSettingsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetServiceConfiguration(const char *endpoint, const char *soap_action, ews__GetServiceConfigurationType *ews__GetServiceConfiguration, struct __ews__GetServiceConfigurationResponse &_param_48)
{	struct soap *soap = this->soap;
	struct __ews__GetServiceConfiguration soap_tmp___ews__GetServiceConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetServiceConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetServiceConfiguration.ews__GetServiceConfiguration = ews__GetServiceConfiguration;
	soap_serializeheader(soap);
	soap_serialize___ews__GetServiceConfiguration(soap, &soap_tmp___ews__GetServiceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetServiceConfiguration(soap, &soap_tmp___ews__GetServiceConfiguration, "-ews:GetServiceConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetServiceConfiguration(soap, &soap_tmp___ews__GetServiceConfiguration, "-ews:GetServiceConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_48)
		return soap_closesock(soap);
	soap_default___ews__GetServiceConfigurationResponse(soap, &_param_48);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetServiceConfigurationResponse(soap, &_param_48, "-ews:GetServiceConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetMailTips(const char *endpoint, const char *soap_action, ews__GetMailTipsType *ews__GetMailTips, struct __ews__GetMailTipsResponse &_param_49)
{	struct soap *soap = this->soap;
	struct __ews__GetMailTips soap_tmp___ews__GetMailTips;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetMailTips";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetMailTips.ews__GetMailTips = ews__GetMailTips;
	soap_serializeheader(soap);
	soap_serialize___ews__GetMailTips(soap, &soap_tmp___ews__GetMailTips);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetMailTips(soap, &soap_tmp___ews__GetMailTips, "-ews:GetMailTips", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetMailTips(soap, &soap_tmp___ews__GetMailTips, "-ews:GetMailTips", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_49)
		return soap_closesock(soap);
	soap_default___ews__GetMailTipsResponse(soap, &_param_49);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetMailTipsResponse(soap, &_param_49, "-ews:GetMailTipsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::PlayOnPhone(const char *endpoint, const char *soap_action, ews__PlayOnPhoneType *ews__PlayOnPhone, struct __ews__PlayOnPhoneResponse &_param_50)
{	struct soap *soap = this->soap;
	struct __ews__PlayOnPhone soap_tmp___ews__PlayOnPhone;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/PlayOnPhone";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__PlayOnPhone.ews__PlayOnPhone = ews__PlayOnPhone;
	soap_serializeheader(soap);
	soap_serialize___ews__PlayOnPhone(soap, &soap_tmp___ews__PlayOnPhone);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__PlayOnPhone(soap, &soap_tmp___ews__PlayOnPhone, "-ews:PlayOnPhone", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__PlayOnPhone(soap, &soap_tmp___ews__PlayOnPhone, "-ews:PlayOnPhone", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_50)
		return soap_closesock(soap);
	soap_default___ews__PlayOnPhoneResponse(soap, &_param_50);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__PlayOnPhoneResponse(soap, &_param_50, "-ews:PlayOnPhoneResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetPhoneCallInformation(const char *endpoint, const char *soap_action, ews__GetPhoneCallInformationType *ews__GetPhoneCallInformation, struct __ews__GetPhoneCallInformationResponse &_param_51)
{	struct soap *soap = this->soap;
	struct __ews__GetPhoneCallInformation soap_tmp___ews__GetPhoneCallInformation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetPhoneCallInformation";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetPhoneCallInformation.ews__GetPhoneCallInformation = ews__GetPhoneCallInformation;
	soap_serializeheader(soap);
	soap_serialize___ews__GetPhoneCallInformation(soap, &soap_tmp___ews__GetPhoneCallInformation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetPhoneCallInformation(soap, &soap_tmp___ews__GetPhoneCallInformation, "-ews:GetPhoneCallInformation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetPhoneCallInformation(soap, &soap_tmp___ews__GetPhoneCallInformation, "-ews:GetPhoneCallInformation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_51)
		return soap_closesock(soap);
	soap_default___ews__GetPhoneCallInformationResponse(soap, &_param_51);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetPhoneCallInformationResponse(soap, &_param_51, "-ews:GetPhoneCallInformationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::DisconnectPhoneCall(const char *endpoint, const char *soap_action, ews__DisconnectPhoneCallType *ews__DisconnectPhoneCall, struct __ews__DisconnectPhoneCallResponse &_param_52)
{	struct soap *soap = this->soap;
	struct __ews__DisconnectPhoneCall soap_tmp___ews__DisconnectPhoneCall;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/DisconnectPhoneCall";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__DisconnectPhoneCall.ews__DisconnectPhoneCall = ews__DisconnectPhoneCall;
	soap_serializeheader(soap);
	soap_serialize___ews__DisconnectPhoneCall(soap, &soap_tmp___ews__DisconnectPhoneCall);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__DisconnectPhoneCall(soap, &soap_tmp___ews__DisconnectPhoneCall, "-ews:DisconnectPhoneCall", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__DisconnectPhoneCall(soap, &soap_tmp___ews__DisconnectPhoneCall, "-ews:DisconnectPhoneCall", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_52)
		return soap_closesock(soap);
	soap_default___ews__DisconnectPhoneCallResponse(soap, &_param_52);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__DisconnectPhoneCallResponse(soap, &_param_52, "-ews:DisconnectPhoneCallResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetSharingMetadata(const char *endpoint, const char *soap_action, ews__GetSharingMetadataType *ews__GetSharingMetadata, struct __ews__GetSharingMetadataResponse &_param_53)
{	struct soap *soap = this->soap;
	struct __ews__GetSharingMetadata soap_tmp___ews__GetSharingMetadata;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetSharingMetadata";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetSharingMetadata.ews__GetSharingMetadata = ews__GetSharingMetadata;
	soap_serializeheader(soap);
	soap_serialize___ews__GetSharingMetadata(soap, &soap_tmp___ews__GetSharingMetadata);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetSharingMetadata(soap, &soap_tmp___ews__GetSharingMetadata, "-ews:GetSharingMetadata", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetSharingMetadata(soap, &soap_tmp___ews__GetSharingMetadata, "-ews:GetSharingMetadata", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_53)
		return soap_closesock(soap);
	soap_default___ews__GetSharingMetadataResponse(soap, &_param_53);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetSharingMetadataResponse(soap, &_param_53, "-ews:GetSharingMetadataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::RefreshSharingFolder(const char *endpoint, const char *soap_action, ews__RefreshSharingFolderType *ews__RefreshSharingFolder, struct __ews__RefreshSharingFolderResponse &_param_54)
{	struct soap *soap = this->soap;
	struct __ews__RefreshSharingFolder soap_tmp___ews__RefreshSharingFolder;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/RefreshSharingFolder";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__RefreshSharingFolder.ews__RefreshSharingFolder = ews__RefreshSharingFolder;
	soap_serializeheader(soap);
	soap_serialize___ews__RefreshSharingFolder(soap, &soap_tmp___ews__RefreshSharingFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__RefreshSharingFolder(soap, &soap_tmp___ews__RefreshSharingFolder, "-ews:RefreshSharingFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__RefreshSharingFolder(soap, &soap_tmp___ews__RefreshSharingFolder, "-ews:RefreshSharingFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_54)
		return soap_closesock(soap);
	soap_default___ews__RefreshSharingFolderResponse(soap, &_param_54);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__RefreshSharingFolderResponse(soap, &_param_54, "-ews:RefreshSharingFolderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetSharingFolder(const char *endpoint, const char *soap_action, ews__GetSharingFolderType *ews__GetSharingFolder, struct __ews__GetSharingFolderResponse &_param_55)
{	struct soap *soap = this->soap;
	struct __ews__GetSharingFolder soap_tmp___ews__GetSharingFolder;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetSharingFolder";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetSharingFolder.ews__GetSharingFolder = ews__GetSharingFolder;
	soap_serializeheader(soap);
	soap_serialize___ews__GetSharingFolder(soap, &soap_tmp___ews__GetSharingFolder);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetSharingFolder(soap, &soap_tmp___ews__GetSharingFolder, "-ews:GetSharingFolder", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetSharingFolder(soap, &soap_tmp___ews__GetSharingFolder, "-ews:GetSharingFolder", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_55)
		return soap_closesock(soap);
	soap_default___ews__GetSharingFolderResponse(soap, &_param_55);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetSharingFolderResponse(soap, &_param_55, "-ews:GetSharingFolderResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::SetTeamMailbox(const char *endpoint, const char *soap_action, ews__SetTeamMailboxRequestType *ews__SetTeamMailbox, struct __ews__SetTeamMailboxResponse &_param_56)
{	struct soap *soap = this->soap;
	struct __ews__SetTeamMailbox soap_tmp___ews__SetTeamMailbox;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/SetTeamMailbox";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__SetTeamMailbox.ews__SetTeamMailbox = ews__SetTeamMailbox;
	soap_serializeheader(soap);
	soap_serialize___ews__SetTeamMailbox(soap, &soap_tmp___ews__SetTeamMailbox);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__SetTeamMailbox(soap, &soap_tmp___ews__SetTeamMailbox, "-ews:SetTeamMailbox", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__SetTeamMailbox(soap, &soap_tmp___ews__SetTeamMailbox, "-ews:SetTeamMailbox", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_56)
		return soap_closesock(soap);
	soap_default___ews__SetTeamMailboxResponse(soap, &_param_56);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__SetTeamMailboxResponse(soap, &_param_56, "-ews:SetTeamMailboxResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::UnpinTeamMailbox(const char *endpoint, const char *soap_action, ews__UnpinTeamMailboxRequestType *ews__UnpinTeamMailbox, struct __ews__UnpinTeamMailboxResponse &_param_57)
{	struct soap *soap = this->soap;
	struct __ews__UnpinTeamMailbox soap_tmp___ews__UnpinTeamMailbox;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/UnpinTeamMailbox";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__UnpinTeamMailbox.ews__UnpinTeamMailbox = ews__UnpinTeamMailbox;
	soap_serializeheader(soap);
	soap_serialize___ews__UnpinTeamMailbox(soap, &soap_tmp___ews__UnpinTeamMailbox);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__UnpinTeamMailbox(soap, &soap_tmp___ews__UnpinTeamMailbox, "-ews:UnpinTeamMailbox", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__UnpinTeamMailbox(soap, &soap_tmp___ews__UnpinTeamMailbox, "-ews:UnpinTeamMailbox", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_57)
		return soap_closesock(soap);
	soap_default___ews__UnpinTeamMailboxResponse(soap, &_param_57);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__UnpinTeamMailboxResponse(soap, &_param_57, "-ews:UnpinTeamMailboxResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetRoomLists(const char *endpoint, const char *soap_action, ews__GetRoomListsType *ews__GetRoomLists, struct __ews__GetRoomListsResponse &_param_58)
{	struct soap *soap = this->soap;
	struct __ews__GetRoomLists soap_tmp___ews__GetRoomLists;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetRoomLists";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetRoomLists.ews__GetRoomLists = ews__GetRoomLists;
	soap_serializeheader(soap);
	soap_serialize___ews__GetRoomLists(soap, &soap_tmp___ews__GetRoomLists);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetRoomLists(soap, &soap_tmp___ews__GetRoomLists, "-ews:GetRoomLists", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetRoomLists(soap, &soap_tmp___ews__GetRoomLists, "-ews:GetRoomLists", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_58)
		return soap_closesock(soap);
	soap_default___ews__GetRoomListsResponse(soap, &_param_58);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetRoomListsResponse(soap, &_param_58, "-ews:GetRoomListsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetRooms(const char *endpoint, const char *soap_action, ews__GetRoomsType *ews__GetRooms, struct __ews__GetRoomsResponse &_param_59)
{	struct soap *soap = this->soap;
	struct __ews__GetRooms soap_tmp___ews__GetRooms;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetRooms";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetRooms.ews__GetRooms = ews__GetRooms;
	soap_serializeheader(soap);
	soap_serialize___ews__GetRooms(soap, &soap_tmp___ews__GetRooms);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetRooms(soap, &soap_tmp___ews__GetRooms, "-ews:GetRooms", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetRooms(soap, &soap_tmp___ews__GetRooms, "-ews:GetRooms", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_59)
		return soap_closesock(soap);
	soap_default___ews__GetRoomsResponse(soap, &_param_59);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetRoomsResponse(soap, &_param_59, "-ews:GetRoomsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::FindMessageTrackingReport(const char *endpoint, const char *soap_action, ews__FindMessageTrackingReportRequestType *ews__FindMessageTrackingReport, struct __ews__FindMessageTrackingReportResponse &_param_60)
{	struct soap *soap = this->soap;
	struct __ews__FindMessageTrackingReport soap_tmp___ews__FindMessageTrackingReport;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/FindMessageTrackingReport";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__FindMessageTrackingReport.ews__FindMessageTrackingReport = ews__FindMessageTrackingReport;
	soap_serializeheader(soap);
	soap_serialize___ews__FindMessageTrackingReport(soap, &soap_tmp___ews__FindMessageTrackingReport);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__FindMessageTrackingReport(soap, &soap_tmp___ews__FindMessageTrackingReport, "-ews:FindMessageTrackingReport", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__FindMessageTrackingReport(soap, &soap_tmp___ews__FindMessageTrackingReport, "-ews:FindMessageTrackingReport", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_60)
		return soap_closesock(soap);
	soap_default___ews__FindMessageTrackingReportResponse(soap, &_param_60);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__FindMessageTrackingReportResponse(soap, &_param_60, "-ews:FindMessageTrackingReportResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetMessageTrackingReport(const char *endpoint, const char *soap_action, ews__GetMessageTrackingReportRequestType *ews__GetMessageTrackingReport, struct __ews__GetMessageTrackingReportResponse &_param_61)
{	struct soap *soap = this->soap;
	struct __ews__GetMessageTrackingReport soap_tmp___ews__GetMessageTrackingReport;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetMessageTrackingReport";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetMessageTrackingReport.ews__GetMessageTrackingReport = ews__GetMessageTrackingReport;
	soap_serializeheader(soap);
	soap_serialize___ews__GetMessageTrackingReport(soap, &soap_tmp___ews__GetMessageTrackingReport);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetMessageTrackingReport(soap, &soap_tmp___ews__GetMessageTrackingReport, "-ews:GetMessageTrackingReport", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetMessageTrackingReport(soap, &soap_tmp___ews__GetMessageTrackingReport, "-ews:GetMessageTrackingReport", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_61)
		return soap_closesock(soap);
	soap_default___ews__GetMessageTrackingReportResponse(soap, &_param_61);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetMessageTrackingReportResponse(soap, &_param_61, "-ews:GetMessageTrackingReportResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::FindConversation(const char *endpoint, const char *soap_action, ews__FindConversationType *ews__FindConversation, struct __ews__FindConversationResponse &_param_62)
{	struct soap *soap = this->soap;
	struct __ews__FindConversation soap_tmp___ews__FindConversation;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/FindConversation";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__FindConversation.ews__FindConversation = ews__FindConversation;
	soap_serializeheader(soap);
	soap_serialize___ews__FindConversation(soap, &soap_tmp___ews__FindConversation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__FindConversation(soap, &soap_tmp___ews__FindConversation, "-ews:FindConversation", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__FindConversation(soap, &soap_tmp___ews__FindConversation, "-ews:FindConversation", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_62)
		return soap_closesock(soap);
	soap_default___ews__FindConversationResponse(soap, &_param_62);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__FindConversationResponse(soap, &_param_62, "-ews:FindConversationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::ApplyConversationAction(const char *endpoint, const char *soap_action, ews__ApplyConversationActionType *ews__ApplyConversationAction, struct __ews__ApplyConversationActionResponse &_param_63)
{	struct soap *soap = this->soap;
	struct __ews__ApplyConversationAction soap_tmp___ews__ApplyConversationAction;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/ApplyConversationAction";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__ApplyConversationAction.ews__ApplyConversationAction = ews__ApplyConversationAction;
	soap_serializeheader(soap);
	soap_serialize___ews__ApplyConversationAction(soap, &soap_tmp___ews__ApplyConversationAction);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__ApplyConversationAction(soap, &soap_tmp___ews__ApplyConversationAction, "-ews:ApplyConversationAction", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__ApplyConversationAction(soap, &soap_tmp___ews__ApplyConversationAction, "-ews:ApplyConversationAction", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_63)
		return soap_closesock(soap);
	soap_default___ews__ApplyConversationActionResponse(soap, &_param_63);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__ApplyConversationActionResponse(soap, &_param_63, "-ews:ApplyConversationActionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetConversationItems(const char *endpoint, const char *soap_action, ews__GetConversationItemsType *ews__GetConversationItems, struct __ews__GetConversationItemsResponse &_param_64)
{	struct soap *soap = this->soap;
	struct __ews__GetConversationItems soap_tmp___ews__GetConversationItems;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetConversationItems";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetConversationItems.ews__GetConversationItems = ews__GetConversationItems;
	soap_serializeheader(soap);
	soap_serialize___ews__GetConversationItems(soap, &soap_tmp___ews__GetConversationItems);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetConversationItems(soap, &soap_tmp___ews__GetConversationItems, "-ews:GetConversationItems", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetConversationItems(soap, &soap_tmp___ews__GetConversationItems, "-ews:GetConversationItems", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_64)
		return soap_closesock(soap);
	soap_default___ews__GetConversationItemsResponse(soap, &_param_64);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetConversationItemsResponse(soap, &_param_64, "-ews:GetConversationItemsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::FindPeople(const char *endpoint, const char *soap_action, ews__FindPeopleType *ews__FindPeople, struct __ews__FindPeopleResponse &_param_65)
{	struct soap *soap = this->soap;
	struct __ews__FindPeople soap_tmp___ews__FindPeople;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/FindPeople";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__FindPeople.ews__FindPeople = ews__FindPeople;
	soap_serializeheader(soap);
	soap_serialize___ews__FindPeople(soap, &soap_tmp___ews__FindPeople);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__FindPeople(soap, &soap_tmp___ews__FindPeople, "-ews:FindPeople", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__FindPeople(soap, &soap_tmp___ews__FindPeople, "-ews:FindPeople", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_65)
		return soap_closesock(soap);
	soap_default___ews__FindPeopleResponse(soap, &_param_65);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__FindPeopleResponse(soap, &_param_65, "-ews:FindPeopleResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetPersona(const char *endpoint, const char *soap_action, ews__GetPersonaType *ews__GetPersona, struct __ews__GetPersonaResponse &_param_66)
{	struct soap *soap = this->soap;
	struct __ews__GetPersona soap_tmp___ews__GetPersona;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetPersona";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetPersona.ews__GetPersona = ews__GetPersona;
	soap_serializeheader(soap);
	soap_serialize___ews__GetPersona(soap, &soap_tmp___ews__GetPersona);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetPersona(soap, &soap_tmp___ews__GetPersona, "-ews:GetPersona", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetPersona(soap, &soap_tmp___ews__GetPersona, "-ews:GetPersona", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_66)
		return soap_closesock(soap);
	soap_default___ews__GetPersonaResponse(soap, &_param_66);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetPersonaResponse(soap, &_param_66, "-ews:GetPersonaResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetInboxRules(const char *endpoint, const char *soap_action, ews__GetInboxRulesRequestType *ews__GetInboxRules, struct __ews__GetInboxRulesResponse &_param_67)
{	struct soap *soap = this->soap;
	struct __ews__GetInboxRules soap_tmp___ews__GetInboxRules;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetInboxRules";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetInboxRules.ews__GetInboxRules = ews__GetInboxRules;
	soap_serializeheader(soap);
	soap_serialize___ews__GetInboxRules(soap, &soap_tmp___ews__GetInboxRules);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetInboxRules(soap, &soap_tmp___ews__GetInboxRules, "-ews:GetInboxRules", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetInboxRules(soap, &soap_tmp___ews__GetInboxRules, "-ews:GetInboxRules", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_67)
		return soap_closesock(soap);
	soap_default___ews__GetInboxRulesResponse(soap, &_param_67);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetInboxRulesResponse(soap, &_param_67, "-ews:GetInboxRulesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::UpdateInboxRules(const char *endpoint, const char *soap_action, ews__UpdateInboxRulesRequestType *ews__UpdateInboxRules, struct __ews__UpdateInboxRulesResponse &_param_68)
{	struct soap *soap = this->soap;
	struct __ews__UpdateInboxRules soap_tmp___ews__UpdateInboxRules;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/UpdateInboxRules";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__UpdateInboxRules.ews__UpdateInboxRules = ews__UpdateInboxRules;
	soap_serializeheader(soap);
	soap_serialize___ews__UpdateInboxRules(soap, &soap_tmp___ews__UpdateInboxRules);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__UpdateInboxRules(soap, &soap_tmp___ews__UpdateInboxRules, "-ews:UpdateInboxRules", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__UpdateInboxRules(soap, &soap_tmp___ews__UpdateInboxRules, "-ews:UpdateInboxRules", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_68)
		return soap_closesock(soap);
	soap_default___ews__UpdateInboxRulesResponse(soap, &_param_68);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__UpdateInboxRulesResponse(soap, &_param_68, "-ews:UpdateInboxRulesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetPasswordExpirationDate(const char *endpoint, const char *soap_action, ews__GetPasswordExpirationDateType *ews__GetPasswordExpirationDate, struct __ews__GetPasswordExpirationDateResponse &_param_69)
{	struct soap *soap = this->soap;
	struct __ews__GetPasswordExpirationDate soap_tmp___ews__GetPasswordExpirationDate;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetPasswordExpirationDate";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetPasswordExpirationDate.ews__GetPasswordExpirationDate = ews__GetPasswordExpirationDate;
	soap_serializeheader(soap);
	soap_serialize___ews__GetPasswordExpirationDate(soap, &soap_tmp___ews__GetPasswordExpirationDate);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetPasswordExpirationDate(soap, &soap_tmp___ews__GetPasswordExpirationDate, "-ews:GetPasswordExpirationDate", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetPasswordExpirationDate(soap, &soap_tmp___ews__GetPasswordExpirationDate, "-ews:GetPasswordExpirationDate", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_69)
		return soap_closesock(soap);
	soap_default___ews__GetPasswordExpirationDateResponse(soap, &_param_69);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetPasswordExpirationDateResponse(soap, &_param_69, "-ews:GetPasswordExpirationDateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetDiscoverySearchConfiguration(const char *endpoint, const char *soap_action, ews__GetDiscoverySearchConfigurationType *ews__GetDiscoverySearchConfiguration, struct __ews__GetDiscoverySearchConfigurationResponse &_param_70)
{	struct soap *soap = this->soap;
	struct __ews__GetDiscoverySearchConfiguration soap_tmp___ews__GetDiscoverySearchConfiguration;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetDiscoverySearchConfiguration";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetDiscoverySearchConfiguration.ews__GetDiscoverySearchConfiguration = ews__GetDiscoverySearchConfiguration;
	soap_serializeheader(soap);
	soap_serialize___ews__GetDiscoverySearchConfiguration(soap, &soap_tmp___ews__GetDiscoverySearchConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetDiscoverySearchConfiguration(soap, &soap_tmp___ews__GetDiscoverySearchConfiguration, "-ews:GetDiscoverySearchConfiguration", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetDiscoverySearchConfiguration(soap, &soap_tmp___ews__GetDiscoverySearchConfiguration, "-ews:GetDiscoverySearchConfiguration", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_70)
		return soap_closesock(soap);
	soap_default___ews__GetDiscoverySearchConfigurationResponse(soap, &_param_70);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetDiscoverySearchConfigurationResponse(soap, &_param_70, "-ews:GetDiscoverySearchConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetSearchableMailboxes(const char *endpoint, const char *soap_action, ews__GetSearchableMailboxesType *ews__GetSearchableMailboxes, struct __ews__GetSearchableMailboxesResponse &_param_71)
{	struct soap *soap = this->soap;
	struct __ews__GetSearchableMailboxes soap_tmp___ews__GetSearchableMailboxes;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetSearchableMailboxes";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetSearchableMailboxes.ews__GetSearchableMailboxes = ews__GetSearchableMailboxes;
	soap_serializeheader(soap);
	soap_serialize___ews__GetSearchableMailboxes(soap, &soap_tmp___ews__GetSearchableMailboxes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetSearchableMailboxes(soap, &soap_tmp___ews__GetSearchableMailboxes, "-ews:GetSearchableMailboxes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetSearchableMailboxes(soap, &soap_tmp___ews__GetSearchableMailboxes, "-ews:GetSearchableMailboxes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_71)
		return soap_closesock(soap);
	soap_default___ews__GetSearchableMailboxesResponse(soap, &_param_71);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetSearchableMailboxesResponse(soap, &_param_71, "-ews:GetSearchableMailboxesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::SearchMailboxes(const char *endpoint, const char *soap_action, ews__SearchMailboxesType *ews__SearchMailboxes, struct __ews__SearchMailboxesResponse &_param_72)
{	struct soap *soap = this->soap;
	struct __ews__SearchMailboxes soap_tmp___ews__SearchMailboxes;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/SearchMailboxes";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__SearchMailboxes.ews__SearchMailboxes = ews__SearchMailboxes;
	soap_serializeheader(soap);
	soap_serialize___ews__SearchMailboxes(soap, &soap_tmp___ews__SearchMailboxes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__SearchMailboxes(soap, &soap_tmp___ews__SearchMailboxes, "-ews:SearchMailboxes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__SearchMailboxes(soap, &soap_tmp___ews__SearchMailboxes, "-ews:SearchMailboxes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_72)
		return soap_closesock(soap);
	soap_default___ews__SearchMailboxesResponse(soap, &_param_72);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__SearchMailboxesResponse(soap, &_param_72, "-ews:SearchMailboxesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetHoldOnMailboxes(const char *endpoint, const char *soap_action, ews__GetHoldOnMailboxesType *ews__GetHoldOnMailboxes, struct __ews__GetHoldOnMailboxesResponse &_param_73)
{	struct soap *soap = this->soap;
	struct __ews__GetHoldOnMailboxes soap_tmp___ews__GetHoldOnMailboxes;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetHoldOnMailboxes";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetHoldOnMailboxes.ews__GetHoldOnMailboxes = ews__GetHoldOnMailboxes;
	soap_serializeheader(soap);
	soap_serialize___ews__GetHoldOnMailboxes(soap, &soap_tmp___ews__GetHoldOnMailboxes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetHoldOnMailboxes(soap, &soap_tmp___ews__GetHoldOnMailboxes, "-ews:GetHoldOnMailboxes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetHoldOnMailboxes(soap, &soap_tmp___ews__GetHoldOnMailboxes, "-ews:GetHoldOnMailboxes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_73)
		return soap_closesock(soap);
	soap_default___ews__GetHoldOnMailboxesResponse(soap, &_param_73);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetHoldOnMailboxesResponse(soap, &_param_73, "-ews:GetHoldOnMailboxesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::SetHoldOnMailboxes(const char *endpoint, const char *soap_action, ews__SetHoldOnMailboxesType *ews__SetHoldOnMailboxes, struct __ews__SetHoldOnMailboxesResponse &_param_74)
{	struct soap *soap = this->soap;
	struct __ews__SetHoldOnMailboxes soap_tmp___ews__SetHoldOnMailboxes;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/SetHoldOnMailboxes";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__SetHoldOnMailboxes.ews__SetHoldOnMailboxes = ews__SetHoldOnMailboxes;
	soap_serializeheader(soap);
	soap_serialize___ews__SetHoldOnMailboxes(soap, &soap_tmp___ews__SetHoldOnMailboxes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__SetHoldOnMailboxes(soap, &soap_tmp___ews__SetHoldOnMailboxes, "-ews:SetHoldOnMailboxes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__SetHoldOnMailboxes(soap, &soap_tmp___ews__SetHoldOnMailboxes, "-ews:SetHoldOnMailboxes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_74)
		return soap_closesock(soap);
	soap_default___ews__SetHoldOnMailboxesResponse(soap, &_param_74);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__SetHoldOnMailboxesResponse(soap, &_param_74, "-ews:SetHoldOnMailboxesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetNonIndexableItemStatistics(const char *endpoint, const char *soap_action, ews__GetNonIndexableItemStatisticsType *ews__GetNonIndexableItemStatistics, struct __ews__GetNonIndexableItemStatisticsResponse &_param_75)
{	struct soap *soap = this->soap;
	struct __ews__GetNonIndexableItemStatistics soap_tmp___ews__GetNonIndexableItemStatistics;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetNonIndexableItemStatistics";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetNonIndexableItemStatistics.ews__GetNonIndexableItemStatistics = ews__GetNonIndexableItemStatistics;
	soap_serializeheader(soap);
	soap_serialize___ews__GetNonIndexableItemStatistics(soap, &soap_tmp___ews__GetNonIndexableItemStatistics);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetNonIndexableItemStatistics(soap, &soap_tmp___ews__GetNonIndexableItemStatistics, "-ews:GetNonIndexableItemStatistics", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetNonIndexableItemStatistics(soap, &soap_tmp___ews__GetNonIndexableItemStatistics, "-ews:GetNonIndexableItemStatistics", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_75)
		return soap_closesock(soap);
	soap_default___ews__GetNonIndexableItemStatisticsResponse(soap, &_param_75);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetNonIndexableItemStatisticsResponse(soap, &_param_75, "-ews:GetNonIndexableItemStatisticsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetNonIndexableItemDetails(const char *endpoint, const char *soap_action, ews__GetNonIndexableItemDetailsType *ews__GetNonIndexableItemDetails, struct __ews__GetNonIndexableItemDetailsResponse &_param_76)
{	struct soap *soap = this->soap;
	struct __ews__GetNonIndexableItemDetails soap_tmp___ews__GetNonIndexableItemDetails;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetNonIndexableItemDetails";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetNonIndexableItemDetails.ews__GetNonIndexableItemDetails = ews__GetNonIndexableItemDetails;
	soap_serializeheader(soap);
	soap_serialize___ews__GetNonIndexableItemDetails(soap, &soap_tmp___ews__GetNonIndexableItemDetails);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetNonIndexableItemDetails(soap, &soap_tmp___ews__GetNonIndexableItemDetails, "-ews:GetNonIndexableItemDetails", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetNonIndexableItemDetails(soap, &soap_tmp___ews__GetNonIndexableItemDetails, "-ews:GetNonIndexableItemDetails", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_76)
		return soap_closesock(soap);
	soap_default___ews__GetNonIndexableItemDetailsResponse(soap, &_param_76);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetNonIndexableItemDetailsResponse(soap, &_param_76, "-ews:GetNonIndexableItemDetailsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::MarkAllItemsAsRead(const char *endpoint, const char *soap_action, ews__MarkAllItemsAsReadType *ews__MarkAllItemsAsRead, struct __ews__MarkAllItemsAsReadResponse &_param_77)
{	struct soap *soap = this->soap;
	struct __ews__MarkAllItemsAsRead soap_tmp___ews__MarkAllItemsAsRead;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/MarkAllItemsAsRead";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__MarkAllItemsAsRead.ews__MarkAllItemsAsRead = ews__MarkAllItemsAsRead;
	soap_serializeheader(soap);
	soap_serialize___ews__MarkAllItemsAsRead(soap, &soap_tmp___ews__MarkAllItemsAsRead);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__MarkAllItemsAsRead(soap, &soap_tmp___ews__MarkAllItemsAsRead, "-ews:MarkAllItemsAsRead", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__MarkAllItemsAsRead(soap, &soap_tmp___ews__MarkAllItemsAsRead, "-ews:MarkAllItemsAsRead", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_77)
		return soap_closesock(soap);
	soap_default___ews__MarkAllItemsAsReadResponse(soap, &_param_77);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__MarkAllItemsAsReadResponse(soap, &_param_77, "-ews:MarkAllItemsAsReadResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::MarkAsJunk(const char *endpoint, const char *soap_action, ews__MarkAsJunkType *ews__MarkAsJunk, struct __ews__MarkAsJunkResponse &_param_78)
{	struct soap *soap = this->soap;
	struct __ews__MarkAsJunk soap_tmp___ews__MarkAsJunk;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/MarkAsJunk";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__MarkAsJunk.ews__MarkAsJunk = ews__MarkAsJunk;
	soap_serializeheader(soap);
	soap_serialize___ews__MarkAsJunk(soap, &soap_tmp___ews__MarkAsJunk);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__MarkAsJunk(soap, &soap_tmp___ews__MarkAsJunk, "-ews:MarkAsJunk", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__MarkAsJunk(soap, &soap_tmp___ews__MarkAsJunk, "-ews:MarkAsJunk", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_78)
		return soap_closesock(soap);
	soap_default___ews__MarkAsJunkResponse(soap, &_param_78);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__MarkAsJunkResponse(soap, &_param_78, "-ews:MarkAsJunkResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetAppManifests(const char *endpoint, const char *soap_action, ews__GetAppManifestsType *ews__GetAppManifests, struct __ews__GetAppManifestsResponse &_param_79)
{	struct soap *soap = this->soap;
	struct __ews__GetAppManifests soap_tmp___ews__GetAppManifests;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetAppManifests";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetAppManifests.ews__GetAppManifests = ews__GetAppManifests;
	soap_serializeheader(soap);
	soap_serialize___ews__GetAppManifests(soap, &soap_tmp___ews__GetAppManifests);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetAppManifests(soap, &soap_tmp___ews__GetAppManifests, "-ews:GetAppManifests", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetAppManifests(soap, &soap_tmp___ews__GetAppManifests, "-ews:GetAppManifests", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_79)
		return soap_closesock(soap);
	soap_default___ews__GetAppManifestsResponse(soap, &_param_79);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetAppManifestsResponse(soap, &_param_79, "-ews:GetAppManifestsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::AddNewImContactToGroup(const char *endpoint, const char *soap_action, ews__AddNewImContactToGroupType *ews__AddNewImContactToGroup, struct __ews__AddNewImContactToGroupResponse &_param_80)
{	struct soap *soap = this->soap;
	struct __ews__AddNewImContactToGroup soap_tmp___ews__AddNewImContactToGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/AddNewImContactToGroup";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__AddNewImContactToGroup.ews__AddNewImContactToGroup = ews__AddNewImContactToGroup;
	soap_serializeheader(soap);
	soap_serialize___ews__AddNewImContactToGroup(soap, &soap_tmp___ews__AddNewImContactToGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__AddNewImContactToGroup(soap, &soap_tmp___ews__AddNewImContactToGroup, "-ews:AddNewImContactToGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__AddNewImContactToGroup(soap, &soap_tmp___ews__AddNewImContactToGroup, "-ews:AddNewImContactToGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_80)
		return soap_closesock(soap);
	soap_default___ews__AddNewImContactToGroupResponse(soap, &_param_80);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__AddNewImContactToGroupResponse(soap, &_param_80, "-ews:AddNewImContactToGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::AddNewTelUriContactToGroup(const char *endpoint, const char *soap_action, ews__AddNewTelUriContactToGroupType *ews__AddNewTelUriContactToGroup, struct __ews__AddNewTelUriContactToGroupResponse &_param_81)
{	struct soap *soap = this->soap;
	struct __ews__AddNewTelUriContactToGroup soap_tmp___ews__AddNewTelUriContactToGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/AddNewTelUriContactToGroup";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__AddNewTelUriContactToGroup.ews__AddNewTelUriContactToGroup = ews__AddNewTelUriContactToGroup;
	soap_serializeheader(soap);
	soap_serialize___ews__AddNewTelUriContactToGroup(soap, &soap_tmp___ews__AddNewTelUriContactToGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__AddNewTelUriContactToGroup(soap, &soap_tmp___ews__AddNewTelUriContactToGroup, "-ews:AddNewTelUriContactToGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__AddNewTelUriContactToGroup(soap, &soap_tmp___ews__AddNewTelUriContactToGroup, "-ews:AddNewTelUriContactToGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_81)
		return soap_closesock(soap);
	soap_default___ews__AddNewTelUriContactToGroupResponse(soap, &_param_81);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__AddNewTelUriContactToGroupResponse(soap, &_param_81, "-ews:AddNewTelUriContactToGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::AddImContactToGroup(const char *endpoint, const char *soap_action, ews__AddImContactToGroupType *ews__AddImContactToGroup, struct __ews__AddImContactToGroupResponse &_param_82)
{	struct soap *soap = this->soap;
	struct __ews__AddImContactToGroup soap_tmp___ews__AddImContactToGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/AddImContactToGroup";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__AddImContactToGroup.ews__AddImContactToGroup = ews__AddImContactToGroup;
	soap_serializeheader(soap);
	soap_serialize___ews__AddImContactToGroup(soap, &soap_tmp___ews__AddImContactToGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__AddImContactToGroup(soap, &soap_tmp___ews__AddImContactToGroup, "-ews:AddImContactToGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__AddImContactToGroup(soap, &soap_tmp___ews__AddImContactToGroup, "-ews:AddImContactToGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_82)
		return soap_closesock(soap);
	soap_default___ews__AddImContactToGroupResponse(soap, &_param_82);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__AddImContactToGroupResponse(soap, &_param_82, "-ews:AddImContactToGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::RemoveImContactFromGroup(const char *endpoint, const char *soap_action, ews__RemoveImContactFromGroupType *ews__RemoveImContactFromGroup, struct __ews__RemoveImContactFromGroupResponse &_param_83)
{	struct soap *soap = this->soap;
	struct __ews__RemoveImContactFromGroup soap_tmp___ews__RemoveImContactFromGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/RemoveImContactFromGroup";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__RemoveImContactFromGroup.ews__RemoveImContactFromGroup = ews__RemoveImContactFromGroup;
	soap_serializeheader(soap);
	soap_serialize___ews__RemoveImContactFromGroup(soap, &soap_tmp___ews__RemoveImContactFromGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__RemoveImContactFromGroup(soap, &soap_tmp___ews__RemoveImContactFromGroup, "-ews:RemoveImContactFromGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__RemoveImContactFromGroup(soap, &soap_tmp___ews__RemoveImContactFromGroup, "-ews:RemoveImContactFromGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_83)
		return soap_closesock(soap);
	soap_default___ews__RemoveImContactFromGroupResponse(soap, &_param_83);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__RemoveImContactFromGroupResponse(soap, &_param_83, "-ews:RemoveImContactFromGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::AddImGroup(const char *endpoint, const char *soap_action, ews__AddImGroupType *ews__AddImGroup, struct __ews__AddImGroupResponse &_param_84)
{	struct soap *soap = this->soap;
	struct __ews__AddImGroup soap_tmp___ews__AddImGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/AddImGroup";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__AddImGroup.ews__AddImGroup = ews__AddImGroup;
	soap_serializeheader(soap);
	soap_serialize___ews__AddImGroup(soap, &soap_tmp___ews__AddImGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__AddImGroup(soap, &soap_tmp___ews__AddImGroup, "-ews:AddImGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__AddImGroup(soap, &soap_tmp___ews__AddImGroup, "-ews:AddImGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_84)
		return soap_closesock(soap);
	soap_default___ews__AddImGroupResponse(soap, &_param_84);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__AddImGroupResponse(soap, &_param_84, "-ews:AddImGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::AddDistributionGroupToImList(const char *endpoint, const char *soap_action, ews__AddDistributionGroupToImListType *ews__AddDistributionGroupToImList, struct __ews__AddDistributionGroupToImListResponse &_param_85)
{	struct soap *soap = this->soap;
	struct __ews__AddDistributionGroupToImList soap_tmp___ews__AddDistributionGroupToImList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/AddDistributionGroupToImList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__AddDistributionGroupToImList.ews__AddDistributionGroupToImList = ews__AddDistributionGroupToImList;
	soap_serializeheader(soap);
	soap_serialize___ews__AddDistributionGroupToImList(soap, &soap_tmp___ews__AddDistributionGroupToImList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__AddDistributionGroupToImList(soap, &soap_tmp___ews__AddDistributionGroupToImList, "-ews:AddDistributionGroupToImList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__AddDistributionGroupToImList(soap, &soap_tmp___ews__AddDistributionGroupToImList, "-ews:AddDistributionGroupToImList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_85)
		return soap_closesock(soap);
	soap_default___ews__AddDistributionGroupToImListResponse(soap, &_param_85);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__AddDistributionGroupToImListResponse(soap, &_param_85, "-ews:AddDistributionGroupToImListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetImItemList(const char *endpoint, const char *soap_action, ews__GetImItemListType *ews__GetImItemList, struct __ews__GetImItemListResponse &_param_86)
{	struct soap *soap = this->soap;
	struct __ews__GetImItemList soap_tmp___ews__GetImItemList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetImItemList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetImItemList.ews__GetImItemList = ews__GetImItemList;
	soap_serializeheader(soap);
	soap_serialize___ews__GetImItemList(soap, &soap_tmp___ews__GetImItemList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetImItemList(soap, &soap_tmp___ews__GetImItemList, "-ews:GetImItemList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetImItemList(soap, &soap_tmp___ews__GetImItemList, "-ews:GetImItemList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_86)
		return soap_closesock(soap);
	soap_default___ews__GetImItemListResponse(soap, &_param_86);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetImItemListResponse(soap, &_param_86, "-ews:GetImItemListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetImItems(const char *endpoint, const char *soap_action, ews__GetImItemsType *ews__GetImItems, struct __ews__GetImItemsResponse &_param_87)
{	struct soap *soap = this->soap;
	struct __ews__GetImItems soap_tmp___ews__GetImItems;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetImItems";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetImItems.ews__GetImItems = ews__GetImItems;
	soap_serializeheader(soap);
	soap_serialize___ews__GetImItems(soap, &soap_tmp___ews__GetImItems);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetImItems(soap, &soap_tmp___ews__GetImItems, "-ews:GetImItems", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetImItems(soap, &soap_tmp___ews__GetImItems, "-ews:GetImItems", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_87)
		return soap_closesock(soap);
	soap_default___ews__GetImItemsResponse(soap, &_param_87);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetImItemsResponse(soap, &_param_87, "-ews:GetImItemsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::RemoveContactFromImList(const char *endpoint, const char *soap_action, ews__RemoveContactFromImListType *ews__RemoveContactFromImList, struct __ews__RemoveContactFromImListResponse &_param_88)
{	struct soap *soap = this->soap;
	struct __ews__RemoveContactFromImList soap_tmp___ews__RemoveContactFromImList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/RemoveContactFromImList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__RemoveContactFromImList.ews__RemoveContactFromImList = ews__RemoveContactFromImList;
	soap_serializeheader(soap);
	soap_serialize___ews__RemoveContactFromImList(soap, &soap_tmp___ews__RemoveContactFromImList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__RemoveContactFromImList(soap, &soap_tmp___ews__RemoveContactFromImList, "-ews:RemoveContactFromImList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__RemoveContactFromImList(soap, &soap_tmp___ews__RemoveContactFromImList, "-ews:RemoveContactFromImList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_88)
		return soap_closesock(soap);
	soap_default___ews__RemoveContactFromImListResponse(soap, &_param_88);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__RemoveContactFromImListResponse(soap, &_param_88, "-ews:RemoveContactFromImListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::RemoveDistributionGroupFromImList(const char *endpoint, const char *soap_action, ews__RemoveDistributionGroupFromImListType *ews__RemoveDistributionGroupFromImList, struct __ews__RemoveDistributionGroupFromImListResponse &_param_89)
{	struct soap *soap = this->soap;
	struct __ews__RemoveDistributionGroupFromImList soap_tmp___ews__RemoveDistributionGroupFromImList;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/RemoveDistributionGroupFromImList";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__RemoveDistributionGroupFromImList.ews__RemoveDistributionGroupFromImList = ews__RemoveDistributionGroupFromImList;
	soap_serializeheader(soap);
	soap_serialize___ews__RemoveDistributionGroupFromImList(soap, &soap_tmp___ews__RemoveDistributionGroupFromImList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__RemoveDistributionGroupFromImList(soap, &soap_tmp___ews__RemoveDistributionGroupFromImList, "-ews:RemoveDistributionGroupFromImList", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__RemoveDistributionGroupFromImList(soap, &soap_tmp___ews__RemoveDistributionGroupFromImList, "-ews:RemoveDistributionGroupFromImList", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_89)
		return soap_closesock(soap);
	soap_default___ews__RemoveDistributionGroupFromImListResponse(soap, &_param_89);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__RemoveDistributionGroupFromImListResponse(soap, &_param_89, "-ews:RemoveDistributionGroupFromImListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::RemoveImGroup(const char *endpoint, const char *soap_action, ews__RemoveImGroupType *ews__RemoveImGroup, struct __ews__RemoveImGroupResponse &_param_90)
{	struct soap *soap = this->soap;
	struct __ews__RemoveImGroup soap_tmp___ews__RemoveImGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/RemoveImGroup";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__RemoveImGroup.ews__RemoveImGroup = ews__RemoveImGroup;
	soap_serializeheader(soap);
	soap_serialize___ews__RemoveImGroup(soap, &soap_tmp___ews__RemoveImGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__RemoveImGroup(soap, &soap_tmp___ews__RemoveImGroup, "-ews:RemoveImGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__RemoveImGroup(soap, &soap_tmp___ews__RemoveImGroup, "-ews:RemoveImGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_90)
		return soap_closesock(soap);
	soap_default___ews__RemoveImGroupResponse(soap, &_param_90);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__RemoveImGroupResponse(soap, &_param_90, "-ews:RemoveImGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::SetImGroup(const char *endpoint, const char *soap_action, ews__SetImGroupType *ews__SetImGroup, struct __ews__SetImGroupResponse &_param_91)
{	struct soap *soap = this->soap;
	struct __ews__SetImGroup soap_tmp___ews__SetImGroup;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/SetImGroup";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__SetImGroup.ews__SetImGroup = ews__SetImGroup;
	soap_serializeheader(soap);
	soap_serialize___ews__SetImGroup(soap, &soap_tmp___ews__SetImGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__SetImGroup(soap, &soap_tmp___ews__SetImGroup, "-ews:SetImGroup", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__SetImGroup(soap, &soap_tmp___ews__SetImGroup, "-ews:SetImGroup", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_91)
		return soap_closesock(soap);
	soap_default___ews__SetImGroupResponse(soap, &_param_91);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__SetImGroupResponse(soap, &_param_91, "-ews:SetImGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::SetImListMigrationCompleted(const char *endpoint, const char *soap_action, ews__SetImListMigrationCompletedType *ews__SetImListMigrationCompleted, struct __ews__SetImListMigrationCompletedResponse &_param_92)
{	struct soap *soap = this->soap;
	struct __ews__SetImListMigrationCompleted soap_tmp___ews__SetImListMigrationCompleted;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/SetImListMigrationCompleted";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__SetImListMigrationCompleted.ews__SetImListMigrationCompleted = ews__SetImListMigrationCompleted;
	soap_serializeheader(soap);
	soap_serialize___ews__SetImListMigrationCompleted(soap, &soap_tmp___ews__SetImListMigrationCompleted);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__SetImListMigrationCompleted(soap, &soap_tmp___ews__SetImListMigrationCompleted, "-ews:SetImListMigrationCompleted", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__SetImListMigrationCompleted(soap, &soap_tmp___ews__SetImListMigrationCompleted, "-ews:SetImListMigrationCompleted", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_92)
		return soap_closesock(soap);
	soap_default___ews__SetImListMigrationCompletedResponse(soap, &_param_92);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__SetImListMigrationCompletedResponse(soap, &_param_92, "-ews:SetImListMigrationCompletedResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetUserRetentionPolicyTags(const char *endpoint, const char *soap_action, ews__GetUserRetentionPolicyTagsType *ews__GetUserRetentionPolicyTags, struct __ews__GetUserRetentionPolicyTagsResponse &_param_93)
{	struct soap *soap = this->soap;
	struct __ews__GetUserRetentionPolicyTags soap_tmp___ews__GetUserRetentionPolicyTags;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetUserRetentionPolicyTags";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetUserRetentionPolicyTags.ews__GetUserRetentionPolicyTags = ews__GetUserRetentionPolicyTags;
	soap_serializeheader(soap);
	soap_serialize___ews__GetUserRetentionPolicyTags(soap, &soap_tmp___ews__GetUserRetentionPolicyTags);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetUserRetentionPolicyTags(soap, &soap_tmp___ews__GetUserRetentionPolicyTags, "-ews:GetUserRetentionPolicyTags", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetUserRetentionPolicyTags(soap, &soap_tmp___ews__GetUserRetentionPolicyTags, "-ews:GetUserRetentionPolicyTags", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_93)
		return soap_closesock(soap);
	soap_default___ews__GetUserRetentionPolicyTagsResponse(soap, &_param_93);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetUserRetentionPolicyTagsResponse(soap, &_param_93, "-ews:GetUserRetentionPolicyTagsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::DisableApp(const char *endpoint, const char *soap_action, ews__DisableAppType *ews__DisableApp, struct __ews__DisableAppResponse &_param_94)
{	struct soap *soap = this->soap;
	struct __ews__DisableApp soap_tmp___ews__DisableApp;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/DisableApp";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__DisableApp.ews__DisableApp = ews__DisableApp;
	soap_serializeheader(soap);
	soap_serialize___ews__DisableApp(soap, &soap_tmp___ews__DisableApp);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__DisableApp(soap, &soap_tmp___ews__DisableApp, "-ews:DisableApp", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__DisableApp(soap, &soap_tmp___ews__DisableApp, "-ews:DisableApp", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_94)
		return soap_closesock(soap);
	soap_default___ews__DisableAppResponse(soap, &_param_94);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__DisableAppResponse(soap, &_param_94, "-ews:DisableAppResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::InstallApp(const char *endpoint, const char *soap_action, ews__InstallAppType *ews__InstallApp, struct __ews__InstallAppResponse &_param_95)
{	struct soap *soap = this->soap;
	struct __ews__InstallApp soap_tmp___ews__InstallApp;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/InstallApp";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__InstallApp.ews__InstallApp = ews__InstallApp;
	soap_serializeheader(soap);
	soap_serialize___ews__InstallApp(soap, &soap_tmp___ews__InstallApp);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__InstallApp(soap, &soap_tmp___ews__InstallApp, "-ews:InstallApp", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__InstallApp(soap, &soap_tmp___ews__InstallApp, "-ews:InstallApp", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_95)
		return soap_closesock(soap);
	soap_default___ews__InstallAppResponse(soap, &_param_95);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__InstallAppResponse(soap, &_param_95, "-ews:InstallAppResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::UninstallApp(const char *endpoint, const char *soap_action, ews__UninstallAppType *ews__UninstallApp, struct __ews__UninstallAppResponse &_param_96)
{	struct soap *soap = this->soap;
	struct __ews__UninstallApp soap_tmp___ews__UninstallApp;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/UninstallApp";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__UninstallApp.ews__UninstallApp = ews__UninstallApp;
	soap_serializeheader(soap);
	soap_serialize___ews__UninstallApp(soap, &soap_tmp___ews__UninstallApp);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__UninstallApp(soap, &soap_tmp___ews__UninstallApp, "-ews:UninstallApp", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__UninstallApp(soap, &soap_tmp___ews__UninstallApp, "-ews:UninstallApp", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_96)
		return soap_closesock(soap);
	soap_default___ews__UninstallAppResponse(soap, &_param_96);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__UninstallAppResponse(soap, &_param_96, "-ews:UninstallAppResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetAppMarketplaceUrl(const char *endpoint, const char *soap_action, ews__GetAppMarketplaceUrlType *ews__GetAppMarketplaceUrl, struct __ews__GetAppMarketplaceUrlResponse &_param_97)
{	struct soap *soap = this->soap;
	struct __ews__GetAppMarketplaceUrl soap_tmp___ews__GetAppMarketplaceUrl;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetAppMarketplaceUrl";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetAppMarketplaceUrl.ews__GetAppMarketplaceUrl = ews__GetAppMarketplaceUrl;
	soap_serializeheader(soap);
	soap_serialize___ews__GetAppMarketplaceUrl(soap, &soap_tmp___ews__GetAppMarketplaceUrl);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetAppMarketplaceUrl(soap, &soap_tmp___ews__GetAppMarketplaceUrl, "-ews:GetAppMarketplaceUrl", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetAppMarketplaceUrl(soap, &soap_tmp___ews__GetAppMarketplaceUrl, "-ews:GetAppMarketplaceUrl", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_97)
		return soap_closesock(soap);
	soap_default___ews__GetAppMarketplaceUrlResponse(soap, &_param_97);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetAppMarketplaceUrlResponse(soap, &_param_97, "-ews:GetAppMarketplaceUrlResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::GetUserPhoto(const char *endpoint, const char *soap_action, ews__GetUserPhotoType *ews__GetUserPhoto, struct __ews__GetUserPhotoResponse &_param_98)
{	struct soap *soap = this->soap;
	struct __ews__GetUserPhoto soap_tmp___ews__GetUserPhoto;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/GetUserPhoto";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__GetUserPhoto.ews__GetUserPhoto = ews__GetUserPhoto;
	soap_serializeheader(soap);
	soap_serialize___ews__GetUserPhoto(soap, &soap_tmp___ews__GetUserPhoto);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__GetUserPhoto(soap, &soap_tmp___ews__GetUserPhoto, "-ews:GetUserPhoto", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__GetUserPhoto(soap, &soap_tmp___ews__GetUserPhoto, "-ews:GetUserPhoto", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_98)
		return soap_closesock(soap);
	soap_default___ews__GetUserPhotoResponse(soap, &_param_98);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__GetUserPhotoResponse(soap, &_param_98, "-ews:GetUserPhotoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::FindAvailableMeetingTimes(const char *endpoint, const char *soap_action, ews__FindAvailableMeetingTimesType *ews__FindAvailableMeetingTimes, struct __ews__FindAvailableMeetingTimesResponse &_param_99)
{	struct soap *soap = this->soap;
	struct __ews__FindAvailableMeetingTimes soap_tmp___ews__FindAvailableMeetingTimes;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/FindAvailableMeetingTimes";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__FindAvailableMeetingTimes.ews__FindAvailableMeetingTimes = ews__FindAvailableMeetingTimes;
	soap_serializeheader(soap);
	soap_serialize___ews__FindAvailableMeetingTimes(soap, &soap_tmp___ews__FindAvailableMeetingTimes);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__FindAvailableMeetingTimes(soap, &soap_tmp___ews__FindAvailableMeetingTimes, "-ews:FindAvailableMeetingTimes", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__FindAvailableMeetingTimes(soap, &soap_tmp___ews__FindAvailableMeetingTimes, "-ews:FindAvailableMeetingTimes", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_99)
		return soap_closesock(soap);
	soap_default___ews__FindAvailableMeetingTimesResponse(soap, &_param_99);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__FindAvailableMeetingTimesResponse(soap, &_param_99, "-ews:FindAvailableMeetingTimesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int ExchangeServiceBindingProxy::SetUserPhoto(const char *endpoint, const char *soap_action, ews__SetUserPhotoType *ews__SetUserPhoto, struct __ews__SetUserPhotoResponse &_param_100)
{	struct soap *soap = this->soap;
	struct __ews__SetUserPhoto soap_tmp___ews__SetUserPhoto;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_action == NULL)
		soap_action = "http://schemas.microsoft.com/exchange/services/2006/messages/SetUserPhoto";
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_tmp___ews__SetUserPhoto.ews__SetUserPhoto = ews__SetUserPhoto;
	soap_serializeheader(soap);
	soap_serialize___ews__SetUserPhoto(soap, &soap_tmp___ews__SetUserPhoto);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ews__SetUserPhoto(soap, &soap_tmp___ews__SetUserPhoto, "-ews:SetUserPhoto", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ews__SetUserPhoto(soap, &soap_tmp___ews__SetUserPhoto, "-ews:SetUserPhoto", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&_param_100)
		return soap_closesock(soap);
	soap_default___ews__SetUserPhotoResponse(soap, &_param_100);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___ews__SetUserPhotoResponse(soap, &_param_100, "-ews:SetUserPhotoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
